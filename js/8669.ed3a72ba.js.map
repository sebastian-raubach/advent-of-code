{"version":3,"file":"js/8669.ed3a72ba.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACrMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GAEA,6BAEA,WAWA,OAVAQ,EAAAA,MAAAA,IAAAA,SAAAA,IAEA,KACAC,EAAAA,KAEAA,EAAAA,GAAAA,CACA,IAGAA,EAAAA,SAAAA,EAAAA,MAAAA,IACA,KAEA,oBACA,mBACA,EACAC,aAAAA,WAEA,QACA,IACA,+BAEAC,GAAAA,OAAAA,OAAAA,GAAAA,QAAAA,GAAAA,IAAAA,IAAAA,OAAAA,EAAAA,EAAAA,EACAC,GAAAA,OAAAA,OAAAA,GAAAA,QAAAA,GAAAA,IAAAA,IAAAA,OAAAA,EAAAA,EAAAA,CAAAA,IAGA,0BACA,EACAC,aAAAA,WAEA,2CAEA,8CAEA,yFAGA,qDAGA,YADA,kCAGA,CAEA,EAOAC,eAAAA,SAAAA,EAAAA,GACA,WACA,2BACA,aACAC,EAAAA,KAAAA,EAAAA,IAGA,QACA,ICpF4P,I,UCOxPC,GAAY,OACd,EACA1B,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAee,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2018/Day2.vue?2da3","webpack://advent-of-code/src/components/2018/Day2.vue","webpack://advent-of-code/./src/components/2018/Day2.vue?c134","webpack://advent-of-code/./src/components/2018/Day2.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":2,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"2\" :year=\"2018\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Map each row to the count of each letter\n      this.letterCounts = input.map(i => {\n        // Keep track of the letter counts\n        const counts = {}\n        i.split('').forEach(l => {\n          // Increase or initialize the count\n          if (counts[l]) {\n            counts[l]++\n          } else {\n            counts[l] = 1\n          }\n        })\n        // Keep the original\n        counts.original = i.split('')\n        return counts\n      })\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      // Get the number of words that have a 2-repeat and a 3-repeat\n      let twoCount = 0\n      let threeCount = 0\n      this.letterCounts.forEach(lc => {\n        // Filter to the characters with 2 or 3 letters\n        twoCount += Object.values(lc).filter(c => c === 2).length > 0 ? 1 : 0\n        threeCount += Object.values(lc).filter(c => c === 3).length > 0 ? 1 : 0\n      })\n      // Sum them together\n      this.solutions.partOne = twoCount * threeCount\n    },\n    solvePartTwo: function () {\n      // For each word\n      for (let one = 0; one < this.letterCounts.length; one++) {\n        // Check each subsequent word\n        for (let two = one + 1; two < this.letterCounts.length; two++) {\n          // Get the matching characters\n          const same = this.sameCharacters(this.letterCounts[one].original, this.letterCounts[two].original)\n\n          // If there's only one that doesn't match\n          if (same.length === this.letterCounts[one].original.length - 1) {\n            // Get the solution by joining the matches\n            this.solutions.partTwo = same.join('')\n            return\n          }\n        }\n      }\n    },\n    /**\n     * Gets the characters in the two words that match at each index\n     * @param one The first word\n     * @param two The second word\n     * @returns An array containing the matching letters between the two words\n     */\n    sameCharacters: function (one, two) {\n      const same = []\n      for (let i = 0; i < one.length; i++) {\n        if (one[i] === two[i]) {\n          same.push(one[i])\n        }\n      }\n      return same\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day2.vue?vue&type=template&id=50cf09d5\"\nimport script from \"./Day2.vue?vue&type=script&lang=js\"\nexport * from \"./Day2.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","i","counts","solvePartOne","twoCount","threeCount","solvePartTwo","sameCharacters","same","component"],"sourceRoot":""}