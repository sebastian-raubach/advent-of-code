"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[8160],{10546:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day18)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day18.vue?vue&type=template&id=56322162\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":18,\"year\":2020,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(86889);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day18.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day18vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      numbers: []\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Remove all spaces, then split into bits\n      this.lines = input.map(i => i.replace(/\\s*/g, '').split(''));\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    evaluate: function (line, part) {\n      // Keep track of what's going on\n      const stack = [];\n\n      // Go through the line\n      for (let i = 0; i < line.length; i++) {\n        // Get the current one\n        const el = line[i];\n        let res = el;\n\n        // If it's a number, parse it\n        if (!isNaN(+el)) {\n          res = +el;\n        }\n        if (el === '(') {\n          // Opening brackets mean we use recursion to solve the inner bit\n          const sub = this.evaluate(line.slice(i + 1), part);\n          // Remember the result\n          res = sub.value;\n          // Adjust the index by effectively skipping the sub part\n          i += sub.length + 1;\n        } else if (el === ')') {\n          // Closing brackets mean we can evaluate the current stack\n          const sub = part === 1 ? this.evaluateBitsPartOne(stack) : this.evaluateBitsPartTwo(stack);\n          // Return the result\n          return {\n            value: sub,\n            length: i\n          };\n        }\n\n        // Push the current part\n        stack.push(res);\n      }\n\n      // Finally, evaluate the whole stack\n      const value = part === 1 ? this.evaluateBitsPartOne(stack) : this.evaluateBitsPartTwo(stack);\n      // Return the result\n      return {\n        value: value,\n        length: line.length\n      };\n    },\n    evaluateBitsPartOne: function (stack) {\n      // Process them in the order they're defined in\n      for (let i = 0; i < stack.length; i++) {\n        if (stack[i] === '+') {\n          // If it's a plus, get previous and next, sum them up and put them back. Asjust the index.\n          stack.splice(i - 1, 3, stack[i - 1] + stack[i + 1]);\n          i -= 1;\n        }\n        if (stack[i] === '*') {\n          // If it's a star, get previous and next, multiply them up and put them back. Asjust the index.\n          stack.splice(i - 1, 3, stack[i - 1] * stack[i + 1]);\n          i -= 1;\n        }\n      }\n      return stack[0];\n    },\n    evaluateBitsPartTwo: function (stack) {\n      // Additions first\n      for (let i = 0; i < stack.length; i++) {\n        if (stack[i] === '+') {\n          // If it's a plus, get previous and next, sum them up and put them back. Asjust the index.\n          stack.splice(i - 1, 3, stack[i - 1] + stack[i + 1]);\n          i -= 1;\n        }\n      }\n\n      // Then multiplications\n      for (let j = 0; j < stack.length; j++) {\n        if (stack[j] === '*') {\n          // If it's a star, get previous and next, multiply them up and put them back. Asjust the index.\n          stack.splice(j - 1, 3, stack[j - 1] * stack[j + 1]);\n          j -= 1;\n        }\n      }\n      return stack[0];\n    },\n    solvePartOne: function () {\n      this.solutions.partOne = this.lines.map(l => this.evaluate(l, 1).value).reduce((a, b) => a + b);\n    },\n    solvePartTwo: function () {\n      this.solutions.partTwo = this.lines.map(l => this.evaluate(l, 2).value).reduce((a, b) => a + b);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2020/Day18.vue?vue&type=script&lang=js\n /* harmony default export */ const _2020_Day18vue_type_script_lang_js = (Day18vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2020/Day18.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2020_Day18vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day18 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10546\n")}}]);