"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[1591],{95478:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Day2)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day2.vue?vue&type=template&id=2376a742\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'Day\',{attrs:{"day":2,"year":2020,"solutions":_vm.solutions},on:{"input-changed":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(86889);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day2.vue?vue&type=script&lang=js\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day2vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      parsedInput: []\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.parseInput(input);\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    parseInput: function (input) {\n      this.parsedInput = input.map(i => {\n        // First, split on ": " to separate the requirement and the password\n        const parts = i.split(\': \');\n        // Split the requirement on " " to separate the range and the letter\n        const passwordReq = parts[0].split(\' \');\n        // Split the password into its individual letters\n        const letters = parts[1].split(\'\');\n\n        // Construct the result\n        const result = {\n          password: letters,\n          requirement: {\n            letter: passwordReq[1],\n            range: passwordReq[0].split(\'-\')\n          },\n          letterCount: null\n        };\n\n        // Password letter counts\n        const letterMap = {};\n        // For each letter in the password\n        letters.forEach(l => {\n          // Either increase its count or create it\n          if (letterMap[l]) {\n            letterMap[l]++;\n          } else {\n            letterMap[l] = 1;\n          }\n        });\n        result.letterCount = letterMap;\n        return result;\n      });\n    },\n    solvePartOne: function () {\n      // Map each input row to a boolean value representing if it matches the requirement\n      this.solutions.partOne = this.parsedInput.map(i => {\n        // Get the letter to count mapping\n        const letters = i.letterCount;\n        // Get the password requirement letter\n        const letter = i.requirement.letter;\n        // And the letter count range\n        const range = i.requirement.range;\n\n        // Check if the letter exists in the password and if its count is in range\n        return letters[letter] && letters[letter] >= range[0] && letters[letter] <= range[1];\n      }).filter(p => p).length;\n    },\n    solvePartTwo: function () {\n      // Map each input row to a boolean value representing if it matches the requirement\n      this.solutions.partTwo = this.parsedInput.map(i => {\n        // Get the original password\n        const letters = i.password;\n        // Get the password requirement letter\n        const letter = i.requirement.letter;\n        // Get the indices that should match that letter\n        const firstIndex = i.requirement.range[0] - 1;\n        const lastIndex = i.requirement.range[1] - 1;\n\n        // Check if EXACTLY ONE of the positions matches the letter\n        return letters[firstIndex] === letter && letters[lastIndex] !== letter || letters[firstIndex] !== letter && letters[lastIndex] === letter;\n      }).filter(p => p).length;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2020/Day2.vue?vue&type=script&lang=js\n /* harmony default export */ const _2020_Day2vue_type_script_lang_js = (Day2vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2020/Day2.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2020_Day2vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day2 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTU0NzguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMEJBQTBCLGFBQWEsMEJBQTBCLHdCQUF3QixpQkFBaUIsT0FBTyw4Q0FBOEMsS0FBSyxvQ0FBb0M7QUFDeE07Ozs7Ozs7Ozs7O0FDSUE7QUFFQSxrRUFBZTtFQUNmQTtJQUNBQyxHQUFBQSxFQUFBQSxrQkFBQUE7RUFDQTtFQUNBQztJQUNBO01BQ0FDO1FBQ0FDO1FBQ0FDO01BQ0E7TUFDQUM7SUFDQTtFQUNBO0VBQ0FDO0lBQ0FDO01BQ0E7TUFFQTtNQUNBO0lBQ0E7SUFDQUM7TUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBO1VBQ0FDO1VBQ0FDO1lBQ0FDO1lBQ0FDO1VBQ0E7VUFDQUM7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQUM7VUFDQTtVQUNBO1lBQ0FDO1VBQ0E7WUFDQUE7VUFDQTtRQUNBO1FBQ0FDO1FBRUE7TUFDQTtJQUNBO0lBQ0FDO01BQ0E7TUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBO01BQ0E7SUFDQTtJQUNBQztNQUNBO01BQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBO01BQ0E7SUFDQTtFQUNBO0FBQ0EsQ0FBQyxFOztBQzVGMFAsQ0FBQyx3RUFBZSwyQkFBRyxFQUFDLEM7Ozs7QUNBN0w7QUFDM0I7QUFDTDs7O0FBR2xEO0FBQ0EsQ0FBc0c7QUFDdEcsZ0JBQWdCLHNDQUFVO0FBQzFCLEVBQUUsaUNBQU07QUFDUixFQUFFLE1BQU07QUFDUixFQUFFLGVBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJDQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9zcmMvY29tcG9uZW50cy8yMDIwL0RheTIudnVlPzVjODEiLCJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvc3JjL2NvbXBvbmVudHMvMjAyMC9EYXkyLnZ1ZT8xYjkxIiwid2VicGFjazovL2FkdmVudC1vZi1jb2RlLy4vc3JjL2NvbXBvbmVudHMvMjAyMC9EYXkyLnZ1ZT9mY2ZiIiwid2VicGFjazovL2FkdmVudC1vZi1jb2RlLy4vc3JjL2NvbXBvbmVudHMvMjAyMC9EYXkyLnZ1ZT9iMWZjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdEYXknLHthdHRyczp7XCJkYXlcIjoyLFwieWVhclwiOjIwMjAsXCJzb2x1dGlvbnNcIjpfdm0uc29sdXRpb25zfSxvbjp7XCJpbnB1dC1jaGFuZ2VkXCI6X3ZtLm9uSW5wdXRDaGFuZ2VkfX0pfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XG4gIDxEYXkgOmRheT1cIjJcIiA6eWVhcj1cIjIwMjBcIiA6c29sdXRpb25zPVwic29sdXRpb25zXCIgQGlucHV0LWNoYW5nZWQ9XCJvbklucHV0Q2hhbmdlZFwiIC8+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IERheSBmcm9tICdAL2NvbXBvbmVudHMvRGF5J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBEYXlcbiAgfSxcbiAgZGF0YTogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzb2x1dGlvbnM6IHtcbiAgICAgICAgcGFydE9uZTogbnVsbCxcbiAgICAgICAgcGFydFR3bzogbnVsbFxuICAgICAgfSxcbiAgICAgIHBhcnNlZElucHV0OiBbXVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9uSW5wdXRDaGFuZ2VkOiBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICAgIHRoaXMucGFyc2VJbnB1dChpbnB1dClcblxuICAgICAgdGhpcy5zb2x2ZVBhcnRPbmUoKVxuICAgICAgdGhpcy5zb2x2ZVBhcnRUd28oKVxuICAgIH0sXG4gICAgcGFyc2VJbnB1dDogZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICB0aGlzLnBhcnNlZElucHV0ID0gaW5wdXQubWFwKGkgPT4ge1xuICAgICAgICAvLyBGaXJzdCwgc3BsaXQgb24gXCI6IFwiIHRvIHNlcGFyYXRlIHRoZSByZXF1aXJlbWVudCBhbmQgdGhlIHBhc3N3b3JkXG4gICAgICAgIGNvbnN0IHBhcnRzID0gaS5zcGxpdCgnOiAnKVxuICAgICAgICAvLyBTcGxpdCB0aGUgcmVxdWlyZW1lbnQgb24gXCIgXCIgdG8gc2VwYXJhdGUgdGhlIHJhbmdlIGFuZCB0aGUgbGV0dGVyXG4gICAgICAgIGNvbnN0IHBhc3N3b3JkUmVxID0gcGFydHNbMF0uc3BsaXQoJyAnKVxuICAgICAgICAvLyBTcGxpdCB0aGUgcGFzc3dvcmQgaW50byBpdHMgaW5kaXZpZHVhbCBsZXR0ZXJzXG4gICAgICAgIGNvbnN0IGxldHRlcnMgPSBwYXJ0c1sxXS5zcGxpdCgnJylcblxuICAgICAgICAvLyBDb25zdHJ1Y3QgdGhlIHJlc3VsdFxuICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgcGFzc3dvcmQ6IGxldHRlcnMsXG4gICAgICAgICAgcmVxdWlyZW1lbnQ6IHtcbiAgICAgICAgICAgIGxldHRlcjogcGFzc3dvcmRSZXFbMV0sXG4gICAgICAgICAgICByYW5nZTogcGFzc3dvcmRSZXFbMF0uc3BsaXQoJy0nKVxuICAgICAgICAgIH0sXG4gICAgICAgICAgbGV0dGVyQ291bnQ6IG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFBhc3N3b3JkIGxldHRlciBjb3VudHNcbiAgICAgICAgY29uc3QgbGV0dGVyTWFwID0ge31cbiAgICAgICAgLy8gRm9yIGVhY2ggbGV0dGVyIGluIHRoZSBwYXNzd29yZFxuICAgICAgICBsZXR0ZXJzLmZvckVhY2gobCA9PiB7XG4gICAgICAgICAgLy8gRWl0aGVyIGluY3JlYXNlIGl0cyBjb3VudCBvciBjcmVhdGUgaXRcbiAgICAgICAgICBpZiAobGV0dGVyTWFwW2xdKSB7XG4gICAgICAgICAgICBsZXR0ZXJNYXBbbF0rK1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXR0ZXJNYXBbbF0gPSAxXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXN1bHQubGV0dGVyQ291bnQgPSBsZXR0ZXJNYXBcblxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICB9KVxuICAgIH0sXG4gICAgc29sdmVQYXJ0T25lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBNYXAgZWFjaCBpbnB1dCByb3cgdG8gYSBib29sZWFuIHZhbHVlIHJlcHJlc2VudGluZyBpZiBpdCBtYXRjaGVzIHRoZSByZXF1aXJlbWVudFxuICAgICAgdGhpcy5zb2x1dGlvbnMucGFydE9uZSA9IHRoaXMucGFyc2VkSW5wdXQubWFwKGkgPT4ge1xuICAgICAgICAvLyBHZXQgdGhlIGxldHRlciB0byBjb3VudCBtYXBwaW5nXG4gICAgICAgIGNvbnN0IGxldHRlcnMgPSBpLmxldHRlckNvdW50XG4gICAgICAgIC8vIEdldCB0aGUgcGFzc3dvcmQgcmVxdWlyZW1lbnQgbGV0dGVyXG4gICAgICAgIGNvbnN0IGxldHRlciA9IGkucmVxdWlyZW1lbnQubGV0dGVyXG4gICAgICAgIC8vIEFuZCB0aGUgbGV0dGVyIGNvdW50IHJhbmdlXG4gICAgICAgIGNvbnN0IHJhbmdlID0gaS5yZXF1aXJlbWVudC5yYW5nZVxuXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBsZXR0ZXIgZXhpc3RzIGluIHRoZSBwYXNzd29yZCBhbmQgaWYgaXRzIGNvdW50IGlzIGluIHJhbmdlXG4gICAgICAgIHJldHVybiBsZXR0ZXJzW2xldHRlcl0gJiYgbGV0dGVyc1tsZXR0ZXJdID49IHJhbmdlWzBdICYmIGxldHRlcnNbbGV0dGVyXSA8PSByYW5nZVsxXVxuICAgICAgfSkuZmlsdGVyKHAgPT4gcCkubGVuZ3RoXG4gICAgfSxcbiAgICBzb2x2ZVBhcnRUd286IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIE1hcCBlYWNoIGlucHV0IHJvdyB0byBhIGJvb2xlYW4gdmFsdWUgcmVwcmVzZW50aW5nIGlmIGl0IG1hdGNoZXMgdGhlIHJlcXVpcmVtZW50XG4gICAgICB0aGlzLnNvbHV0aW9ucy5wYXJ0VHdvID0gdGhpcy5wYXJzZWRJbnB1dC5tYXAoaSA9PiB7XG4gICAgICAgIC8vIEdldCB0aGUgb3JpZ2luYWwgcGFzc3dvcmRcbiAgICAgICAgY29uc3QgbGV0dGVycyA9IGkucGFzc3dvcmRcbiAgICAgICAgLy8gR2V0IHRoZSBwYXNzd29yZCByZXF1aXJlbWVudCBsZXR0ZXJcbiAgICAgICAgY29uc3QgbGV0dGVyID0gaS5yZXF1aXJlbWVudC5sZXR0ZXJcbiAgICAgICAgLy8gR2V0IHRoZSBpbmRpY2VzIHRoYXQgc2hvdWxkIG1hdGNoIHRoYXQgbGV0dGVyXG4gICAgICAgIGNvbnN0IGZpcnN0SW5kZXggPSBpLnJlcXVpcmVtZW50LnJhbmdlWzBdIC0gMVxuICAgICAgICBjb25zdCBsYXN0SW5kZXggPSBpLnJlcXVpcmVtZW50LnJhbmdlWzFdIC0gMVxuXG4gICAgICAgIC8vIENoZWNrIGlmIEVYQUNUTFkgT05FIG9mIHRoZSBwb3NpdGlvbnMgbWF0Y2hlcyB0aGUgbGV0dGVyXG4gICAgICAgIHJldHVybiAobGV0dGVyc1tmaXJzdEluZGV4XSA9PT0gbGV0dGVyICYmIGxldHRlcnNbbGFzdEluZGV4XSAhPT0gbGV0dGVyKSB8fCAobGV0dGVyc1tmaXJzdEluZGV4XSAhPT0gbGV0dGVyICYmIGxldHRlcnNbbGFzdEluZGV4XSA9PT0gbGV0dGVyKVxuICAgICAgfSkuZmlsdGVyKHAgPT4gcCkubGVuZ3RoXG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXG48L3N0eWxlPlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC00MC51c2VbMV0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B2dWUvdnVlLWxvYWRlci12MTUvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9EYXkyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy90aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTQwLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvQHZ1ZS92dWUtbG9hZGVyLXYxNS9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0RheTIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0RheTIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTIzNzZhNzQyXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vRGF5Mi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vRGF5Mi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B2dWUvdnVlLWxvYWRlci12MTUvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sIm5hbWVzIjpbImNvbXBvbmVudHMiLCJEYXkiLCJkYXRhIiwic29sdXRpb25zIiwicGFydE9uZSIsInBhcnRUd28iLCJwYXJzZWRJbnB1dCIsIm1ldGhvZHMiLCJvbklucHV0Q2hhbmdlZCIsInBhcnNlSW5wdXQiLCJwYXNzd29yZCIsInJlcXVpcmVtZW50IiwibGV0dGVyIiwicmFuZ2UiLCJsZXR0ZXJDb3VudCIsImxldHRlcnMiLCJsZXR0ZXJNYXAiLCJyZXN1bHQiLCJzb2x2ZVBhcnRPbmUiLCJzb2x2ZVBhcnRUd28iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///95478\n')}}]);