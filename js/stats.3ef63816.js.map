{"version":3,"file":"js/stats.3ef63816.js","mappings":"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","sources":["webpack://advent-of-code/./src/views/JsonStats.vue?9360","webpack://advent-of-code/src/views/JsonStats.vue","webpack://advent-of-code/./src/views/JsonStats.vue?0683","webpack://advent-of-code/./src/views/JsonStats.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Statistics\")]),_c('h2',[_vm._v(\"Input\")]),_c('p',[_vm._v(\"Paste your private leaderboard API JSON into this text area to see some stats.\")]),_c('b-form',{on:{\"submit\":function($event){$event.preventDefault();}}},[_c('b-form-group',{attrs:{\"label\":\"JSON API input\",\"label-for\":\"json\",\"description\":\"The JSON API output of a leaderboard.\"}},[_c('b-form-textarea',{attrs:{\"rows\":\"5\",\"id\":\"json\"},model:{value:(_vm.input),callback:function ($$v) {_vm.input=$$v},expression:\"input\"}})],1)],1),(_vm.userTraces)?[_c('h2',[_vm._v(\"Points over time\")]),_c('div',{staticClass:\"my-3\",attrs:{\"id\":\"timeline-chart\"}})]:_vm._e(),(_vm.userTraces)?[_c('h2',[_vm._v(\"Points per day\")]),_c('div',{staticClass:\"my-3\",attrs:{\"id\":\"per-day-chart\"}})]:_vm._e(),(_vm.userRankingPerDay)?[_c('h2',[_vm._v(\"Ranking over time\")]),_c('div',{staticClass:\"my-3\",attrs:{\"id\":\"ranking-chart\"}})]:_vm._e(),(_vm.json)?[_c('h2',[_vm._v(\"Stats overview\")]),_c('p',[_vm._v(\"Hover over the stars to see the timestamps for part 1 and part 2 as well as the user's ranking for the day.\")]),_c('b-table',{attrs:{\"table-class\":\"star-table mt-3\",\"items\":_vm.json,\"fields\":_vm.fields,\"stacked\":\"sm\",\"sort-by\":\"local_score\",\"sort-desc\":true},scopedSlots:_vm._u([{key:\"cell(days)\",fn:function(data){return [_vm._l((_vm.tasks),function(day){return [(data.item.completion_day_level[day] && data.item.completion_day_level[day][2])?_c('span',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.body.html\",value:(_vm.getTooltip(day, data.item.completion_day_level[day])),expression:\"getTooltip(day, data.item.completion_day_level[day])\",modifiers:{\"body\":true,\"html\":true}}],key:((data.id) + \"-\" + day),staticClass:\"star star-gold\"},[_vm._v(\"★\")]):(data.item.completion_day_level[day] && data.item.completion_day_level[day][1])?_c('span',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.body.html\",value:(_vm.getTooltip(day, data.item.completion_day_level[day])),expression:\"getTooltip(day, data.item.completion_day_level[day])\",modifiers:{\"body\":true,\"html\":true}}],key:((data.id) + \"-\" + day),staticClass:\"star star-silver\"},[_vm._v(\"★\")]):_c('span',{key:((data.id) + \"-\" + day),staticClass:\"star star-none\"},[_vm._v(\"☆\")])]})]}}],null,false,2878569974)})]:_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <h1>Statistics</h1>\n    <h2>Input</h2>\n    <p>Paste your private leaderboard API JSON into this text area to see some stats.</p>\n    <b-form @submit.prevent>\n      <b-form-group label=\"JSON API input\" label-for=\"json\" description=\"The JSON API output of a leaderboard.\">\n        <b-form-textarea v-model=\"input\" rows=5 id=\"json\" />\n      </b-form-group>\n    </b-form>\n\n    <template v-if=\"userTraces\">\n      <h2>Points over time</h2>\n      <div id=\"timeline-chart\" class=\"my-3\" />\n    </template>\n    <template v-if=\"userTraces\">\n      <h2>Points per day</h2>\n      <div id=\"per-day-chart\" class=\"my-3\" />\n    </template>\n    <template v-if=\"userRankingPerDay\">\n      <h2>Ranking over time</h2>\n      <div id=\"ranking-chart\" class=\"my-3\" />\n    </template>\n\n    <template v-if=\"json\">\n      <h2>Stats overview</h2>\n      <p>Hover over the stars to see the timestamps for part 1 and part 2 as well as the user's ranking for the day.</p>\n      <b-table table-class=\"star-table mt-3\" :items=\"json\" :fields=\"fields\" stacked=\"sm\" sort-by=\"local_score\" :sort-desc=\"true\">\n        <template #cell(days)=\"data\">\n          <template v-for=\"day in tasks\" >\n            <span :key=\"`${data.id}-${day}`\" v-b-tooltip.body.html=\"getTooltip(day, data.item.completion_day_level[day])\" class=\"star star-gold\" v-if=\"data.item.completion_day_level[day] && data.item.completion_day_level[day][2]\">★</span>\n            <span :key=\"`${data.id}-${day}`\" v-b-tooltip.body.html=\"getTooltip(day, data.item.completion_day_level[day])\" class=\"star star-silver\" v-else-if=\"data.item.completion_day_level[day] && data.item.completion_day_level[day][1]\">★</span>\n            <span :key=\"`${data.id}-${day}`\" class=\"star star-none\" v-else>☆</span>\n          </template>\n        </template>\n      </b-table>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  data: function () {\n    return {\n      input: null,\n      tasks: Array.from(Array(25).keys()).map(i => i + 1),\n      fields: [{\n        key: 'name',\n        label: 'Name',\n        sortable: true\n      }, {\n        key: 'local_score',\n        label: 'Score',\n        sortable: true\n      }, {\n        key: 'stars',\n        label: 'Stars',\n        sortable: true\n      }, {\n        key: 'days',\n        label: 'Days',\n        class: 'stars'\n      }]\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'storeDarkMode'\n    ]),\n    json: function () {\n      if (this.input) {\n        try {\n          const parsed = JSON.parse(this.input)\n\n          return Object.keys(parsed.members).map(m => parsed.members[m]).sort((a, b) => a.local_score - b.local_score)\n        } catch (err) {\n          return null\n        }\n      } else {\n        return null\n      }\n    },\n    userRankingPerDay: function () {\n      if (this.json) {\n        const pointsPerDay = this.tasks.map(d => {\n          const dayPoints = this.json.map((u, i) => (this.userTraces[i] && this.userTraces[i][d - 1]) ? (this.userTraces[i][d - 1].cumulative || 0) : 0)\n          dayPoints.sort((a, b) => a - b)\n          return dayPoints\n        })\n        return this.json.map((u, i) => {\n          return this.tasks.map(d => {\n            const points = (this.userTraces[i] && this.userTraces[i][d - 1]) ? this.userTraces[i][d - 1].cumulative : null\n            if (points !== undefined && points !== null) {\n              return pointsPerDay[d - 1].lastIndexOf(points)\n            } else {\n              return null\n            }\n          })\n        })\n      } else {\n        return null\n      }\n    },\n    userTraces: function () {\n      if (this.json) {\n        return this.json.map(user => {\n          let cumulative = 0\n          const values = []\n          for (let day = 0; day < this.tasks.length; day++) {\n            if (user.completion_day_level[day + 1]) {\n              const partOneTimestamp = user.completion_day_level[day + 1][1] ? +user.completion_day_level[day + 1][1].get_star_ts : null\n              const partTwoTimestamp = user.completion_day_level[day + 1][2] ? +user.completion_day_level[day + 1][2].get_star_ts : null\n\n              let points = 0\n              if (partOneTimestamp) {\n                const partOneIndex = this.sortedUsersPerDay[day].partOne.indexOf(partOneTimestamp)\n                points += this.json.length - partOneIndex\n              }\n              if (partTwoTimestamp) {\n                const partTwoIndex = this.sortedUsersPerDay[day].partTwo.indexOf(partTwoTimestamp)\n                points += this.json.length - partTwoIndex\n              }\n\n              cumulative += points\n\n              if (partOneTimestamp || partTwoTimestamp) {\n                values.push({\n                  cumulative: cumulative,\n                  individual: points\n                })\n              }\n            } else {\n              values.push(null)\n            }\n          }\n\n          return values\n        })\n      } else {\n        return null\n      }\n    },\n    sortedUsersPerDay: function () {\n      if (this.json) {\n        return this.tasks.map(d => {\n          const dailyTimesOne = this.json.map(p => {\n            if (p.completion_day_level[d] && p.completion_day_level[d][1]) {\n              return +p.completion_day_level[d][1].get_star_ts\n            } else {\n              return null\n            }\n          })\n          const dailyTimesTwo = this.json.map(p => {\n            if (p.completion_day_level[d] && p.completion_day_level[d][2]) {\n              return +p.completion_day_level[d][2].get_star_ts\n            } else {\n              return null\n            }\n          })\n\n          dailyTimesOne.sort()\n          dailyTimesTwo.sort()\n\n          return {\n            partOne: dailyTimesOne,\n            partTwo: dailyTimesTwo\n          }\n        })\n      } else {\n        return null\n      }\n    }\n  },\n  watch: {\n    storeDarkMode: function () {\n      this.$nextTick(() => {\n        this.updatePointChart()\n        this.updatePointPerDayChart()\n        this.updateRankingChart()\n      })\n    },\n    userTraces: function () {\n      this.$nextTick(() => {\n        this.updatePointChart()\n        this.updatePointPerDayChart()\n      })\n    },\n    userRankingPerDay: function () {\n      this.$nextTick(() => this.updateRankingChart())\n    }\n  },\n  methods: {\n    updateRankingChart: function () {\n      this.$plotly.purge('ranking-chart')\n\n      const traces = this.userRankingPerDay.map((ut, ui) => {\n        return {\n          x: ut.map((v, i) => i + 1),\n          y: ut,\n          name: this.json[ui].name,\n          mode: 'lines+markers',\n          marker: {\n            size: 10\n          },\n          line: {\n            width: 3\n          }\n        }\n      })\n\n      this.$plotly.newPlot('ranking-chart', traces, {\n        hovermode: 'x',\n        height: Math.max(250, this.userTraces.length * 30 + 50),\n        margin: { t: 10, b: 20, l: 50, r: 0 },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          title: { text: 'Ranking', font: { color: this.storeDarkMode ? 'white' : 'black' } },\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee',\n          tickmode: 'array',\n          tickvals: Array.from(Array(this.json.length).keys()),\n          ticktext: Array.from(Array(this.json.length).keys()).map(i => this.json.length - i)\n        },\n        legend: {\n          bgcolor: 'rgba(0,0,0,0)',\n          orientation: 'h',\n          traceorder: 'reversed',\n          font: { color: this.storeDarkMode ? 'white' : 'black' }\n        }\n      }, {\n        responsive: true,\n        displaylogo: false\n      })\n    },\n    updatePointChart: function () {\n      this.$plotly.purge('timeline-chart')\n\n      const traces = this.userTraces.map((ut, ui) => {\n        return {\n          x: ut.map((v, i) => i + 1),\n          y: ut.map(i => i ? i.cumulative : null),\n          name: this.json[ui].name,\n          mode: 'lines+markers'\n        }\n      })\n\n      this.$plotly.newPlot('timeline-chart', traces, {\n        hovermode: 'x',\n        height: Math.max(250, this.userTraces.length * 15 + 50),\n        margin: { t: 10, b: 20, l: 50, r: 0 },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          title: { text: 'Points', font: { color: this.storeDarkMode ? 'white' : 'black' } },\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        legend: {\n          bgcolor: 'rgba(0,0,0,0)',\n          orientation: 'h',\n          traceorder: 'reversed',\n          font: { color: this.storeDarkMode ? 'white' : 'black' }\n        }\n      }, {\n        responsive: true,\n        displaylogo: false\n      })\n    },\n    updatePointPerDayChart: function () {\n      this.$plotly.purge('per-day-chart')\n\n      const traces = this.userTraces.map((ut, ui) => {\n        return {\n          x: ut.map((v, i) => i + 1),\n          y: ut.map(i => i ? i.individual : null),\n          name: this.json[ui].name,\n          mode: 'lines+markers'\n          // type: 'bar'\n        }\n      })\n\n      this.$plotly.newPlot('per-day-chart', traces, {\n        hovermode: 'x',\n        height: Math.max(250, this.userTraces.length * 10 + 50),\n        margin: { t: 10, b: 20, l: 50, r: 0 },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          title: { text: 'Points', font: { color: this.storeDarkMode ? 'white' : 'black' } },\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        legend: {\n          bgcolor: 'rgba(0,0,0,0)',\n          orientation: 'h',\n          traceorder: 'reversed',\n          font: { color: this.storeDarkMode ? 'white' : 'black' }\n        }\n        // barmode: 'relative'\n      }, {\n        responsive: true,\n        displaylogo: false\n      })\n    },\n    getTooltip: function (day, data) {\n      let result = `<p>Day ${day}</p>`\n      if (data[1] && data[1].get_star_ts) {\n        result += `<p>Part 1: ${new Date(+data[1].get_star_ts * 1000).toLocaleString()} Position: ${this.sortedUsersPerDay[day - 1].partOne.indexOf(+data[1].get_star_ts) + 1}</p>`\n      }\n      if (data[2] && data[2].get_star_ts) {\n        result += `<p>Part 2: ${new Date(+data[2].get_star_ts * 1000).toLocaleString()} Position: ${this.sortedUsersPerDay[day - 1].partTwo.indexOf(+data[2].get_star_ts) + 1}</p>`\n      }\n      return result\n    }\n  }\n}\n</script>\n\n<style>\n.star-table td.stars div {\n  word-break: break-all;\n  cursor: default;\n}\n.star {\n  font-size: 1.3em;\n}\n.star-gold {\n  color: #fbc531;\n}\n.star-silver {\n  color: #7f8fa6;\n}\n.star-none {\n  color: #dcdde1;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./JsonStats.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./JsonStats.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./JsonStats.vue?vue&type=template&id=f6eddc08\"\nimport script from \"./JsonStats.vue?vue&type=script&lang=js\"\nexport * from \"./JsonStats.vue?vue&type=script&lang=js\"\nimport style0 from \"./JsonStats.vue?vue&type=style&index=0&id=f6eddc08&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","on","$event","preventDefault","attrs","model","value","callback","$$v","input","expression","staticClass","_e","json","fields","scopedSlots","_u","key","fn","data","_l","day","item","completion_day_level","directives","name","rawName","getTooltip","modifiers","staticRenderFns","tasks","label","sortable","class","computed","userRankingPerDay","dayPoints","userTraces","points","cumulative","values","individual","sortedUsersPerDay","dailyTimesOne","dailyTimesTwo","partOne","partTwo","watch","storeDarkMode","methods","updateRankingChart","x","y","mode","marker","size","line","width","hovermode","height","margin","t","b","l","r","paper_bgcolor","plot_bgcolor","xaxis","tickfont","color","gridcolor","yaxis","title","text","font","tickmode","tickvals","ticktext","legend","bgcolor","orientation","traceorder","responsive","displaylogo","updatePointChart","updatePointPerDayChart","result","component"],"sourceRoot":""}