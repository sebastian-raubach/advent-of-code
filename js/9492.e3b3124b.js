"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[9492],{70531:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day22)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day22.vue?vue&type=template&id=286c6400&scoped=true\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":22,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(86889);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day22.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day22vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const onCount = new Set();\n      const cubes = [];\n      input.forEach(i => {\n        const [onOff, rule] = i.split(' ');\n        const coords = rule.split(',').map(d => d.split('=')[1].split('..').map(c => +c));\n\n        // Let's do part one naively\n        if (coords[0][1] < -50 || coords[0][0] > 50 || coords[1][1] < -50 || coords[1][0] > 50 || coords[2][1] < -50 || coords[2][0] > 50) {\n          // Skip rules that are completely outside the inner box\n        } else {\n          // Then iterate over all coordinates in the inner box\n          for (let x = coords[0][0]; x <= coords[0][1]; x++) {\n            for (let y = coords[1][0]; y <= coords[1][1]; y++) {\n              for (let z = coords[2][0]; z <= coords[2][1]; z++) {\n                // Ignore coordinates in valid rules, but outside of the  inner box\n                if (x >= -50 && x <= 50 && y >= -50 && y <= 50 && z >= -50 && z <= 50) {\n                  // Get coords\n                  const dot = `${x},${y},${z}`;\n\n                  // Flip on/off\n                  if (onOff === 'on' && !onCount.has(dot)) {\n                    onCount.add(dot);\n                  } else if (onOff === 'off' && onCount.has(dot)) {\n                    onCount.delete(dot);\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Remember the cube for part two\n        cubes.push({\n          on: onOff === 'on',\n          xMin: coords[0][0],\n          xMax: coords[0][1],\n          yMin: coords[1][0],\n          yMax: coords[1][1],\n          zMin: coords[2][0],\n          zMax: coords[2][1]\n        });\n      });\n\n      // Part one is the number of coordinates still in the set (on)\n      this.solutions.partOne = onCount.size;\n\n      // Part two, remember all cubes and their on/off status\n      let resultingCubes = [];\n      // For each of the input cubes\n      cubes.forEach(c => {\n        // Keep track of any sub-cubes that we see due to intersection\n        const newCubes = [];\n\n        // If this one is on, remember it straight away\n        if (c.on) {\n          newCubes.push(c);\n        }\n\n        // Then for each one that we remembered before\n        resultingCubes.forEach(oc => {\n          // Get the intersection (flip on/off)\n          const intersection = this.intersect(c, oc, !oc.on);\n          if (intersection) {\n            // Remember the intersection\n            newCubes.push(intersection);\n          }\n        });\n\n        // Remember the new cubes\n        resultingCubes = resultingCubes.concat(newCubes);\n      });\n\n      // The solution is the sum of all the volumes (depending on their on/off status)\n      this.solutions.partTwo = resultingCubes.reduce((a, b) => a + this.volume(b) * (b.on ? 1 : -1), 0);\n    },\n    volume: function (c) {\n      // Get the volume (remember the inclusivity of the edges (+1))\n      return (c.xMax - c.xMin + 1) * (c.yMax - c.yMin + 1) * (c.zMax - c.zMin + 1);\n    },\n    intersect: function (a, b, on) {\n      // If they don't overlap in any dimension, return null\n      if (a.xMin > b.xMax || a.xMax < b.xMin || a.yMin > b.yMax || a.yMax < b.yMin || a.zMin > b.zMax || a.zMax < b.zMin) {\n        return null;\n      }\n      // Else return the intersection\n      return {\n        on: on,\n        xMin: Math.max(a.xMin, b.xMin),\n        xMax: Math.min(a.xMax, b.xMax),\n        yMin: Math.max(a.yMin, b.yMin),\n        yMax: Math.min(a.yMax, b.yMax),\n        zMin: Math.max(a.zMin, b.zMin),\n        zMax: Math.min(a.zMax, b.zMax)\n      };\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2021/Day22.vue?vue&type=script&lang=js\n /* harmony default export */ const _2021_Day22vue_type_script_lang_js = (Day22vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2021/Day22.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2021_Day22vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"286c6400\",\n  null\n  \n)\n\n/* harmony default export */ const Day22 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///70531\n")}}]);