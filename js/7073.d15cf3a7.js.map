{"version":3,"file":"js/7073.d15cf3a7.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAEAC,QAAAA,GAEA,EACAC,QAAAA,CACAR,eAAAA,SAAAA,GACA,0CACA,oBACA,mBACA,EACAS,aAAAA,WACA,oDACA,EACAC,aAAAA,WACA,mDACA,EACAC,MAAAA,SAAAA,EAAAA,GAEA,gBACAC,EAAAA,SAAAA,CAAAA,EAAAA,KACAC,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAIA,oBAGA,8BAEA,UAEA,WAEAC,OAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAEAD,EAAAA,IAAAA,EAAAA,EACA,CAGA,QACA,ICzD6P,I,UCOzPE,GAAY,OACd,EACAzB,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAec,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2020/Day15.vue?2e10","webpack://advent-of-code/src/components/2020/Day15.vue","webpack://advent-of-code/./src/components/2020/Day15.vue?aa34","webpack://advent-of-code/./src/components/2020/Day15.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":15,\"year\":2020,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"15\" :year=\"2020\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      numbers: []\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.numbers = input[0].split(',').map(i => +i)\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      this.solutions.partOne = this.solve(this.numbers, 2020)\n    },\n    solvePartTwo: function () {\n      this.solutions.partTwo = this.solve(this.numbers, 30000000)\n    },\n    solve: function (input, target) {\n      // Initialize the memory\n      const memory = new Map()\n      input.forEach((t, i) => {\n        memory.set(t, i + 1)\n      })\n\n      // The previous number is the last input\n      let prev = input[input.length - 1]\n\n      // Iterate until we have reached the loop counter goal\n      for (let i = input.length + 1; i < target; i++) {\n        // The current one is the previous\n        const current = prev\n        // Get the previous index\n        const prevIndex = memory.get(current)\n        // The previous one is either 0 or the diff between the last two sightings\n        prev = prevIndex !== undefined ? i - prevIndex : 0\n        // Save the current index\n        memory.set(current, i)\n      }\n\n      // The previously seen number is our goal\n      return prev\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day15.vue?vue&type=template&id=5c705399\"\nimport script from \"./Day15.vue?vue&type=script&lang=js\"\nexport * from \"./Day15.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","numbers","methods","solvePartOne","solvePartTwo","solve","input","memory","prev","component"],"sourceRoot":""}