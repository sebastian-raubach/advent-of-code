{"version":3,"file":"js/8592.32780a44.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GACA,qDACA,qBAEAQ,EAAAA,EAAAA,KAAAA,IAAAA,EAAAA,MAAAA,uBAAAA,KACA,oBACA,EACAC,aAAAA,SAAAA,GACA,kCACA,aAEA,wCAEA,qCACA,EACAC,QAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAEA,mCACA,8BAGA,SAEA,OADA,6BACA,MAGA,SAEA,OADA,6BACA,MAGA,YAGA,qBACA,qBACA,qBACA,UAEA,mCAEA,8BAEAC,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GACA,MAEA,mCAEA,8BAEAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GACA,CAOA,OADA,yBACA,CACA,EACAC,aAAAA,SAAAA,GAGA,sBAEA,GACAC,IAAAA,EACAC,KAAAA,GAGA,QACA,SAOA,GALA,aAEAN,EAAAA,GAAAA,KAAAA,OAAAA,EAAAA,GAAAA,EAAAA,KAAAA,IACAO,EAAAA,IAAAA,EAAAA,GACAC,GAAAA,EACA,UACA,MASA,GALA,aAEAR,EAAAA,GAAAA,KAAAA,OAAAA,EAAAA,GAAAA,EAAAA,KAAAA,IACAO,EAAAA,IAAAA,EAAAA,GACAC,GAAAA,EACA,UACA,KAEA,CAEA,4CACA,EACAC,OAAAA,SAAAA,EAAAA,GACA,eACA,EACAH,KAAAA,SAAAA,GACAD,EAAAA,KAAAA,EAAAA,IACAA,EAAAA,IAAAA,KAAAA,OAAAA,EAAAA,IAAAA,EAAAA,KACAA,EAAAA,MAAAA,EAAAA,IACAA,EAAAA,IAAAA,KAAAA,OAAAA,EAAAA,IAAAA,EAAAA,KACAA,EAAAA,MAAAA,EAAAA,IACAA,EAAAA,IAAAA,KAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IACA,IC9H6P,I,UCOzPK,GAAY,OACd,EACA5B,EACAW,GACA,EACA,KACA,WACA,MAIF,EAAeiB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2021/Day21.vue?0166","webpack://advent-of-code/src/components/2021/Day21.vue","webpack://advent-of-code/./src/components/2021/Day21.vue?381d","webpack://advent-of-code/./src/components/2021/Day21.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":21,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"21\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      let positions = input.map(r => +r.split('starting position: ')[1])\n      this.solvePartOne(positions)\n\n      positions = input.map(r => +r.split('starting position: ')[1])\n      this.solvePartTwo(positions)\n    },\n    solvePartTwo: function (positions) {\n      this.board = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n      this.memo = []\n\n      const wins = this.recurse(0, positions[0], 0, positions[1], 0, 0)\n\n      this.solutions.partTwo = (Math.max(...wins))\n    },\n    recurse: function (scoreOne, posOne, scoreTwo, posTwo, pIndex) {\n      // Check memory\n      if (this.memo[[scoreOne, posOne, scoreTwo, posTwo, pIndex]] !== undefined) {\n        return this.memo[[scoreOne, posOne, scoreTwo, posTwo, pIndex]]\n      }\n      // Player 1 wins\n      if (scoreOne >= 21) {\n        this.memo[[scoreOne, posOne, scoreTwo, posTwo, pIndex]] = [1, 0]\n        return [1, 0]\n      }\n      // Player two wins\n      if (scoreTwo >= 21) {\n        this.memo[[scoreOne, posOne, scoreTwo, posTwo, pIndex]] = [0, 1]\n        return [0, 1]\n      }\n\n      let totalWins = [0, 0]\n\n      // For each dice rolls\n      for (let i = 1; i <= 3; i++) {\n        for (let j = 1; j <= 3; j++) {\n          for (let k = 1; k <= 3; k++) {\n            if (pIndex === 0) {\n              // Adjust position\n              const newPos = this.board[(posOne + i + j + k - 1) % 10]\n              // Calculate the winner\n              const currWin = this.recurse(scoreOne + newPos, newPos, scoreTwo, posTwo, 1 - pIndex)\n              // Adjust total wins\n              totalWins = [totalWins[0] + currWin[0], totalWins[1] + currWin[1]]\n            } else {\n              // Adjust position\n              const newPos = this.board[(posTwo + i + j + k - 1) % 10]\n              // Calculate the winner\n              const currWin = this.recurse(scoreOne, posOne, scoreTwo + newPos, newPos, 1 - pIndex)\n              // Adjust total wins\n              totalWins = [totalWins[0] + currWin[0], totalWins[1] + currWin[1]]\n            }\n          }\n        }\n      }\n\n      // Store in memory\n      this.memo[[scoreOne, posOne, scoreTwo, posTwo, pIndex]] = totalWins\n      return totalWins\n    },\n    solvePartOne: function (positions) {\n      // Let's do part one the naive way\n      // Keep track of the points\n      const points = positions.map(_ => 0)\n      // Current die roll\n      const dieroll = {\n        die: 1,\n        roll: 0\n      }\n\n      let counter = 0\n      while (true) {\n        // Roll the die\n        this.roll(dieroll)\n        // Adjust player one\n        positions[0] = this.modulo(positions[0] + dieroll.roll, 10)\n        points[0] += positions[0]\n        counter += 3\n        if (points[0] >= 1000) {\n          break\n        }\n\n        // Roll the die\n        this.roll(dieroll)\n        // Adjust player two\n        positions[1] = this.modulo(positions[1] + dieroll.roll, 10)\n        points[1] += positions[1]\n        counter += 3\n        if (points[1] >= 1000) {\n          break\n        }\n      }\n\n      this.solutions.partOne = Math.min(points[0], points[1]) * counter\n    },\n    modulo: function (a, b) {\n      return ((a - 1) % b) + 1\n    },\n    roll: function (die) {\n      die.roll = die.die\n      die.die = this.modulo(die.die + 1, 100)\n      die.roll += die.die\n      die.die = this.modulo(die.die + 1, 100)\n      die.roll += die.die\n      die.die = this.modulo(die.die + 1, 100)\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day21.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day21.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day21.vue?vue&type=template&id=9daf9d42&scoped=true\"\nimport script from \"./Day21.vue?vue&type=script&lang=js\"\nexport * from \"./Day21.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9daf9d42\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","positions","solvePartTwo","recurse","totalWins","solvePartOne","die","roll","points","counter","modulo","component"],"sourceRoot":""}