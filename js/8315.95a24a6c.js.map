{"version":3,"file":"js/8315.95a24a6c.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACrMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GAEA,sCAEA,oBACA,mBACA,EACAQ,aAAAA,WACA,6DACA,EACAC,aAAAA,WACA,4BAEAC,EAAAA,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,MAAAA,IAAAA,OAAAA,KAAAA,QACA,yCACA,EACAC,WAAAA,SAAAA,GACA,qBAEA,gBAIA,OAHAC,EAAAA,SAAAA,GAAAA,EAAAA,IAAAA,KAGA,qBACA,MACA,IC9C4P,I,UCOxPC,GAAY,OACd,EACAvB,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAeY,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2017/Day4.vue?7544","webpack://advent-of-code/src/components/2017/Day4.vue","webpack://advent-of-code/./src/components/2017/Day4.vue?e533","webpack://advent-of-code/./src/components/2017/Day4.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":4,\"year\":2017,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"4\" :year=\"2017\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Split each row on tab and then map the values to the individual words\n      this.phrases = input.map(i => i.split(' '))\n\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      this.solutions.partOne = this.validCount(this.phrases.concat())\n    },\n    solvePartTwo: function () {\n      let phrases = this.phrases.concat()\n      // Sort each word in the phrase, then do the same as part one.\n      phrases = phrases.map(w => w.map(c => c.split('').sort().join('')))\n      this.solutions.partTwo = this.validCount(phrases)\n    },\n    validCount: function (phrases) {\n      return phrases.filter(p => {\n        // Get the unique ones\n        const set = new Set()\n        p.forEach(w => set.add(w))\n\n        // Unique count same as original count? Then keep it as valid.\n        return set.size === p.length\n      }).length\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day4.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day4.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day4.vue?vue&type=template&id=7acf748b\"\nimport script from \"./Day4.vue?vue&type=script&lang=js\"\nexport * from \"./Day4.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","solvePartOne","solvePartTwo","phrases","validCount","p","component"],"sourceRoot":""}