{"version":3,"sources":["webpack:///./src/components/2017/Day18.vue?b894","webpack:///src/components/2017/Day18.vue","webpack:///./src/components/2017/Day18.vue?223b","webpack:///./src/components/2017/Day18.vue","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","instructions","snd","set","add","mul","mod","rcv","jgz","methods","resolve","isNaN","a","registers","inst","parts","reg","value","length","i","result","index","component","$","$map","map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","undefined"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,mBACrLC,EAAkB,G,4CCMtB,GACEC,WAAY,CACVC,IAAJ,cAEEC,KAAM,WAAR,WACI,MAAO,CACLN,UAAW,CACTO,QAAS,KACTC,QAAS,MAEXC,aAAc,CACZC,IAAK,SAAb,+BACQC,IAAK,SAAb,4BACQC,IAAK,SAAb,6BACQC,IAAK,SAAb,6BACQC,IAAK,SAAb,6BACQC,IAAK,SAAb,+CACQC,IAAK,SAAb,oDAIEC,QAAS,CACPC,QAAS,SAAb,KACM,OAAIC,MAAMC,GACJA,KAAKC,EACAA,EAAUD,IAEjBC,EAAUD,GAAK,EACR,IAGDA,GAGZlB,eAAgB,SAApB,GAEM,IAAN,qBACQ,IAAR,eACQ,MAAO,CACLoB,KAAMC,EAAM,GACZC,IAAKD,EAAM,GACXE,MAAOF,EAAMG,OAAS,EAAIH,EAAM,GAAK,SAK/C,IAEA,KACM,MAAO,EAAM,CACX,IAAR,OAEcI,EAAEH,OAAOH,IACbA,EAAUM,EAAEH,KAAO,GAIrB,IAAR,6CAGQ,GAAe,QAAXG,EAAEL,MAA6B,OAAXM,EAEtB,YADAlC,KAAKM,UAAUO,QAAUqB,GAIZ,QAAXD,EAAEL,MAA6B,IAAXM,EAEtBC,GAASD,EAGTC,QC7EoV,I,YCO1VC,EAAY,eACd,EACAtC,EACAW,GACA,EACA,KACA,WACA,MAIa,aAAA2B,E,2CCjBf,IAAIC,EAAI,EAAQ,QACZC,EAAO,EAAQ,QAAgCC,IAC/CC,EAA+B,EAAQ,QACvCC,EAA0B,EAAQ,QAElCC,EAAsBF,EAA6B,OAEnDG,EAAiBF,EAAwB,OAK7CJ,EAAE,CAAEO,OAAQ,QAASC,OAAO,EAAMC,QAASJ,IAAwBC,GAAkB,CACnFJ,IAAK,SAAaQ,GAChB,OAAOT,EAAKtC,KAAM+C,EAAYC,UAAUhB,OAAS,EAAIgB,UAAU,QAAKC","file":"js/chunk-03cac076.dfe8bb61.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":18,\"year\":2017,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"18\" :year=\"2017\" :solutions=\"solutions\" @input-changed=\"onInputChanged\" />\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      instructions: {\n        snd: (registers, x, _) => { registers.sound = this.resolve(registers, x) },\n        set: (registers, x, y) => { registers[x] = this.resolve(registers, y) },\n        add: (registers, x, y) => { registers[x] += this.resolve(registers, y) },\n        mul: (registers, x, y) => { registers[x] *= this.resolve(registers, y) },\n        mod: (registers, x, y) => { registers[x] %= this.resolve(registers, y) },\n        rcv: (registers, x, _) => this.resolve(registers, x) !== 0 ? registers.sound : null,\n        jgz: (registers, x, y) => this.resolve(registers, x) > 0 ? this.resolve(registers, y) : 0\n      }\n    }\n  },\n  methods: {\n    resolve: function (registers, a) {\n      if (isNaN(a)) {\n        if (a in registers) {\n          return registers[a]\n        } else {\n          registers[a] = 0\n          return 0\n        }\n      } else {\n        return +a\n      }\n    },\n    onInputChanged: function (input) {\n      // Parse the input\n      const inst = input.map(i => {\n        const parts = i.split(' ')\n        return {\n          inst: parts[0],\n          reg: parts[1],\n          value: parts.length > 2 ? parts[2] : null\n        }\n      })\n\n      // Keep track of the index\n      let index = 0\n      // Keep track of the registers\n      const registers = {}\n      while (true) {\n        const i = inst[index]\n        // Ensure the register exists\n        if (!(i.reg in registers)) {\n          registers[i.reg] = 0\n        }\n\n        // Follow the instruction\n        const result = this.instructions[i.inst](registers, i.reg, i.value)\n\n        // If we received a value, set it as the result\n        if (i.inst === 'rcv' && result !== null) {\n          this.solutions.partOne = result\n          return\n        }\n\n        if (i.inst === 'jgz' && result !== 0) {\n          // If we need to jump, do it\n          index += result\n        } else {\n          // Otherwise increment\n          index++\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day18.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day18.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day18.vue?vue&type=template&id=0eb3c1c2&scoped=true&\"\nimport script from \"./Day18.vue?vue&type=script&lang=js&\"\nexport * from \"./Day18.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0eb3c1c2\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}