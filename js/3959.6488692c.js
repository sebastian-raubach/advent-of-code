"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[3959],{5427:function(t,n,e){e.r(n),e.d(n,{default:function(){return h}});var o=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("Day",{attrs:{day:13,year:2015,solutions:t.solutions},on:{"input-changed":t.onInputChanged}})},a=[],s=e(86889),c={components:{Day:s.Z},data:function(){return{solutions:{partOne:null,partTwo:null}}},methods:{onInputChanged:function(t){const n=/(?<who>[a-zA-Z]+) would (?<type>[a-zA-Z]+) (?<change>\d+) happiness units by sitting next to (?<other>[a-zA-Z]+)./,e=new Set,o=new Map;t.forEach((t=>{const a=t.match(n).groups;e.add(a.who),e.add(a.other),o.set(`${a.who},${a.other}`,"gain"===a.type?+a.change:-+a.change)}));const a=Array.from(e);this.solutions.partOne=this.solveFor(o,a.concat(),[]),a.push("me"),this.solutions.partTwo=this.solveFor(o,a.concat(),[])},solveFor:function(t,n,e){if(n.length<1)return this.calculateHappiness(t,e);{let o=0;return n.forEach((a=>{const s=n.concat().filter((t=>a!==t)),c=e.concat(),r=a;c.push(r),o=Math.max(o,this.solveFor(t,s,c))})),o}},calculateHappiness:function(t,n){let e=0;return n.forEach(((o,a)=>{const s=n.at(a-1),c=n.at((a+1)%n.length),r=t.get(`${o},${s}`),u=t.get(`${o},${c}`);r&&(e+=r),u&&(e+=u)})),e}}},r=c,u=e(1001),l=(0,u.Z)(r,o,a,!1,null,null,null),h=l.exports}}]);
//# sourceMappingURL=3959.6488692c.js.map