"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[4233],{49746:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day4)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day4.vue?vue&type=template&id=67eca79a\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":4,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day4.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day4vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.parsed = input.map(i => {\n        // Split into timestamp and event\n        const parts = i.split('] ');\n        return {\n          // Parse the date\n          date: new Date(parts[0].substring(1, parts[0].length)),\n          // And store the event\n          event: parts[1]\n        };\n      }).sort((a, b) => a.date - b.date);\n\n      // Keep track of the guard data\n      this.guards = {};\n      let guardId;\n      let sleepStart;\n      let sleepEnd;\n      // Go through all lines\n      for (let i = 0; i < this.parsed.length; i++) {\n        const line = this.parsed[i];\n        if (line.event.indexOf('Guard ') !== -1) {\n          // Parse the guard id\n          guardId = +line.event.replace(/\\D/g, '');\n          if (!this.guards[guardId]) {\n            // Then initialize the guard data if it doesn't exist yet\n            this.guards[guardId] = {\n              total: 0,\n              asleep: Array.from(Array(60).keys()).map(i => 0)\n            };\n          }\n        } else if (line.event === 'falls asleep') {\n          // Keep track of the start of the asleep interval\n          sleepStart = line.date.getMinutes();\n        } else if (line.event === 'wakes up') {\n          // Stop the asleep interval\n          sleepEnd = line.date.getMinutes();\n\n          // Increase all counters for this interval\n          for (let min = sleepStart; min < sleepEnd; min++) {\n            this.guards[guardId].total++;\n            this.guards[guardId].asleep[min]++;\n          }\n        }\n      }\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    solvePartOne: function () {\n      // Find the guard with the most asleep minutes\n      const maxGuard = +Object.keys(this.guards).sort((a, b) => this.guards[b].total - this.guards[a].total)[0];\n      let maxMinute = 0;\n      let maxAmount = 0;\n      // Then find the minute that this guard spends most asleep\n      for (let minute = 0; minute < this.guards[maxGuard].asleep.length; minute++) {\n        if (this.guards[maxGuard].asleep[minute] > maxAmount) {\n          maxAmount = this.guards[maxGuard].asleep[minute];\n          maxMinute = minute;\n        }\n      }\n\n      // The result is the guard id times the minute\n      this.solutions.partOne = maxGuard * maxMinute;\n    },\n    solvePartTwo: function () {\n      // For each guard\n      Object.keys(this.guards).forEach(g => {\n        // Find the maximum amount they spend asleep in any minute\n        this.guards[g].maxValue = Math.max(...this.guards[g].asleep);\n        // Then find the minute which they spend most asleep\n        this.guards[g].maxMinute = this.guards[g].asleep.indexOf(this.guards[g].maxValue);\n      });\n\n      // Find the guard that has the highest asleep value at any minute\n      const maxGuard = +Object.keys(this.guards).sort((a, b) => this.guards[b].maxValue - this.guards[a].maxValue)[0];\n\n      // Then times their id by that minute\n      this.solutions.partTwo = maxGuard * this.guards[maxGuard].maxMinute;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2018/Day4.vue?vue&type=script&lang=js\n /* harmony default export */ const _2018_Day4vue_type_script_lang_js = (Day4vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2018/Day4.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2018_Day4vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day4 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///49746\n")}}]);