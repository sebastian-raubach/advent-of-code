"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[3952],{64369:function(t,e,n){n.r(e),n.d(e,{default:function(){return c}});var o=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("Day",{attrs:{day:8,year:2023,solutions:t.solutions},on:{"input-changed":t.onInputChanged},scopedSlots:t._u([{key:"partOne",fn:function(){return[n("p",{staticClass:"text-info"},[t._v("The output below can be saved as a text file each and loaded into "),n("a",{attrs:{href:"https://helium.hutton.ac.uk"}},[t._v("Helium")]),t._v(" to visualize the graph structure as well as the importance of each node.")]),n("pre",{staticClass:"year-2023-day-8-code border"},[n("code",{domProps:{innerHTML:t._s(t.pedigreeFile)}}),t._v("\n      ")]),n("pre",{staticClass:"year-2023-day-8-code border"},[n("code",{domProps:{innerHTML:t._s(t.traitFile)}}),t._v("\n      ")])]},proxy:!0}])})},s=[],i=n(86889),r={components:{Day:i.Z},data:function(){return{solutions:{partOne:null,partTwo:null},pedigreeFile:null,traitFile:null}},methods:{onInputChanged:function(t){const e=t[0].split("").map((t=>"L"===t?0:1)),n={};let o="Line\tParent\n";const s=/(?<from>[A-Z]+) = \((?<left>[A-Z]+), (?<right>[A-Z]+)\)/;for(let u=2;u<t.length;u++){const e=t[u].match(s).groups;n[e.from]=[e.left,e.right],o+=`${e.left}\t${e.from}\n`,o+=`${e.right}\t${e.from}\n`}this.pedigreeFile=o;const i=this.solve("AAA",e,n,["ZZZ"]);this.solutions.partOne=i.counter,this.traitFile=this.getTraitFile(i.visitCounts);const r=Object.keys(n).filter((t=>t.endsWith("A"))),l=Object.keys(n).filter((t=>t.endsWith("Z"))),a=r.map((t=>this.solve(t,e,n,l).counter));this.solutions.partTwo=this.lcm(a)},lcm:function(t){const e=(t,n)=>0===n?t:e(n,t%n),n=(t,n)=>t/e(t,n)*n,o=t=>t.reduce(n,1);return o(t)},solve:function(t,e,n,o){let s=t,i=0;const r={};while(!o.includes(s))r[s]=(r[s]||0)+1,s=n[s][e[i%e.length]],i++;return r[s]=(r[s]||0)+1,{visitCounts:r,counter:i}},getTraitFile:function(t){let e="#heliumInput = PHENOTYPE\nLineName\tVisitCount\tNodeType\n";return Object.keys(t).forEach((n=>{e+=`${n}\t${t[n]}\t${"AAA"===n?"start":"ZZZ"===n?"end":""}\n`})),e}}},l=r,a=n(1001),u=(0,a.Z)(l,o,s,!1,null,null,null),c=u.exports}}]);
//# sourceMappingURL=3952.91554c35.js.map