"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[5114],{62235:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day22)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day22.vue?vue&type=template&id=8e26cc12&scoped=true\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":22,\"year\":2017,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{staticClass:\"canvas-holder\"},[_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"partOne\",\"width\":\"800\",\"height\":\"500\"}})])]},proxy:true},{key:\"partTwo\",fn:function(){return [_c('div',{staticClass:\"canvas-holder\"},[_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"partTwo\",\"width\":\"800\",\"height\":\"500\"}})])]},proxy:true}])})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(86889);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day22.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day22vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      turn: {\n        up: (curr, cell) => {\n          // Turn according to instructions\n          if (cell === '#') {\n            curr.dir = 'right';\n          } else if (cell === '.') {\n            curr.dir = 'left';\n          } else if (cell === 'F') {\n            curr.dir = 'down';\n          }\n        },\n        right: (curr, cell) => {\n          // Turn according to instructions\n          if (cell === '#') {\n            curr.dir = 'down';\n          } else if (cell === '.') {\n            curr.dir = 'up';\n          } else if (cell === 'F') {\n            curr.dir = 'left';\n          }\n        },\n        down: (curr, cell) => {\n          // Turn according to instruction\n          if (cell === '#') {\n            curr.dir = 'left';\n          } else if (cell === '.') {\n            curr.dir = 'right';\n          } else if (cell === 'F') {\n            curr.dir = 'up';\n          }\n        },\n        left: (curr, cell) => {\n          // Turn according to instructions\n          if (cell === '#') {\n            curr.dir = 'up';\n          } else if (cell === '.') {\n            curr.dir = 'down';\n          } else if (cell === 'F') {\n            curr.dir = 'right';\n          }\n        }\n      },\n      move: {\n        up: curr => curr.y--,\n        left: curr => curr.x--,\n        down: curr => curr.y++,\n        right: curr => curr.x++\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.solutions = {\n        partOne: 0,\n        partTwo: 0\n      };\n      this.$nextTick(() => {\n        // Generate two copies of the original grid\n        const gridOne = new Map();\n        const gridTwo = new Map();\n        input.forEach((r, y) => {\n          r.split('').forEach((c, x) => {\n            if (c === '#') {\n              gridOne.set(`${x},${y}`, '#');\n              gridTwo.set(`${x},${y}`, '#');\n            }\n          });\n        });\n        this.solutions.partOne = this.solvePartOne(gridOne, input.length);\n        this.solutions.partTwo = this.solvePartTwo(gridTwo, input.length);\n      });\n    },\n    solvePartOne: function (grid, size) {\n      // Starting position\n      const current = {\n        x: Math.floor(size / 2),\n        y: Math.floor(size / 2),\n        dir: 'up'\n      };\n      const bb = {\n        minX: current.x,\n        minY: current.y,\n        maxX: current.x,\n        maxY: current.y\n      };\n      let counter = 0;\n      // Bursts\n      for (let i = 0; i < 10_000; i++) {\n        // Get current position coordinates\n        const pos = `${current.x},${current.y}`;\n        // Get grid cell\n        const cell = grid.get(pos) || '.';\n\n        // Turn according to rules\n        this.turn[current.dir](current, cell);\n        // Adjust current cell\n        if (cell === '.') {\n          // Count infections\n          counter++;\n          grid.set(pos, '#');\n        } else {\n          grid.delete(pos);\n        }\n        // Then move\n        this.move[current.dir](current);\n        bb.minX = Math.min(bb.minX, current.x);\n        bb.minY = Math.min(bb.minY, current.y);\n        bb.maxX = Math.max(bb.maxX, current.x);\n        bb.maxY = Math.max(bb.maxY, current.y);\n      }\n\n      // Initialise the canvas\n      const canvas = document.getElementById('partOne');\n      const ctx = canvas.getContext('2d');\n      // Set the canvas size and translate the origin\n      const factor = 2;\n      canvas.width = (Math.abs(bb.minX) + Math.abs(bb.maxX)) * factor;\n      canvas.height = (Math.abs(bb.minY) + Math.abs(bb.maxY)) * factor;\n      ctx.scale(factor, factor);\n      ctx.translate(Math.abs(bb.minX), Math.abs(bb.minY));\n\n      // Draw the canvas\n      grid.forEach((cell, coords) => {\n        const xy = coords.split(',').map(i => +i);\n        ctx.fillStyle = '#EA2027';\n        ctx.fillRect(xy[0], xy[1], 1, 1);\n      });\n      return counter;\n    },\n    solvePartTwo: function (grid, size) {\n      // Starting position\n      const current = {\n        x: Math.floor(size / 2),\n        y: Math.floor(size / 2),\n        dir: 'up'\n      };\n      const bb = {\n        minX: current.x,\n        minY: current.y,\n        maxX: current.x,\n        maxY: current.y\n      };\n      let counter = 0;\n      // Bursts\n      for (let i = 0; i < 10_000_000; i++) {\n        // Get current position coordinates\n        const pos = `${current.x},${current.y}`;\n        // Get grid cell\n        const cell = grid.get(pos) || '.';\n\n        // Turn according to rules\n        this.turn[current.dir](current, cell);\n        if (cell === '.') {\n          grid.set(pos, 'W');\n        } else if (cell === 'W') {\n          // Count infections\n          counter++;\n          grid.set(pos, '#');\n        } else if (cell === '#') {\n          grid.set(pos, 'F');\n        } else {\n          grid.delete(pos);\n        }\n        // Then move\n        this.move[current.dir](current);\n        bb.minX = Math.min(bb.minX, current.x);\n        bb.minY = Math.min(bb.minY, current.y);\n        bb.maxX = Math.max(bb.maxX, current.x);\n        bb.maxY = Math.max(bb.maxY, current.y);\n      }\n\n      // Initialise the canvas\n      const canvas = document.getElementById('partTwo');\n      const ctx = canvas.getContext('2d');\n      // Set the canvas size and translate the origin\n      const factor = 2;\n      canvas.width = (Math.abs(bb.minX) + Math.abs(bb.maxX)) * factor;\n      canvas.height = (Math.abs(bb.minY) + Math.abs(bb.maxY)) * factor;\n      ctx.scale(factor, factor);\n      ctx.translate(Math.abs(bb.minX), Math.abs(bb.minY));\n\n      // Draw the canvas\n      grid.forEach((cell, coords) => {\n        const xy = coords.split(',').map(i => +i);\n        if (cell === '#') {\n          ctx.fillStyle = '#EA2027';\n        } else if (cell === 'F') {\n          ctx.fillStyle = '#1289A7';\n        } else if (cell === 'W') {\n          ctx.fillStyle = '#F79F1F';\n        }\n        ctx.fillRect(xy[0], xy[1], 1, 1);\n      });\n      return counter;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2017/Day22.vue?vue&type=script&lang=js\n /* harmony default export */ const _2017_Day22vue_type_script_lang_js = (Day22vue_type_script_lang_js); \n;// CONCATENATED MODULE: ./node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day22.vue?vue&type=style&index=0&id=8e26cc12&prod&scoped=true&lang=css\n// extracted by mini-css-extract-plugin\n\n;// CONCATENATED MODULE: ./src/components/2017/Day22.vue?vue&type=style&index=0&id=8e26cc12&prod&scoped=true&lang=css\n\n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2017/Day22.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2017_Day22vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8e26cc12\",\n  null\n  \n)\n\n/* harmony default export */ const Day22 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///62235\n")}}]);