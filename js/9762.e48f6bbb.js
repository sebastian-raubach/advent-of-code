"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[9762],{32002:function(t,s,n){n.r(s),n.d(s,{default:function(){return l}});var e=function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("Day",{attrs:{day:3,year:2020,solutions:t.solutions},on:{"input-changed":t.onInputChanged},scopedSlots:t._u([{key:"partOne",fn:function(){return[n("pre",{staticClass:"day-3-code border"},[n("code",{domProps:{innerHTML:t._s(t.gridOne)}}),t._v("\n      ")])]},proxy:!0},{key:"partTwo",fn:function(){return[n("pre",{staticClass:"day-3-code border"},[n("code",{domProps:{innerHTML:t._s(t.gridTwo)}}),t._v("\n      ")])]},proxy:!0}])})},r=[],a=n(86889);class h{constructor(t,s){this.$input=t,this.$paths=s}getPathGrid(){let t="";const s=this.$paths.map((t=>Math.ceil(t[t.length-1].x/this.$input[0].length))).reduce(((t,s)=>Math.max(t,s))),n={};this.$paths.forEach((t=>{t.forEach((t=>{n[`${t.x}-${t.y}`]=t.hit}))}));for(let e=0;e<this.$input.length;e++){for(let r=0;r<s;r++)for(let s=0;s<this.$input[e].length;s++){const a=this.$input[e][s]?"#":".",h=this.$input[e].length*r+s,i=n[`${h}-${e}`];t+=!0===i?'<span class="day-3-path-hit">X</span>':!1===i?'<span class="day-3-path-miss">O</span>':a}t+="<br/>"}return t}}var i={components:{Day:a.Z},data:function(){return{solutions:{partOne:null,partTwo:null},parsedInput:[],paths:{1:[],2:[]},gridOne:null,gridTwo:null}},methods:{onInputChanged:function(t){this.parsedInput=t.map((t=>t.split("").map((t=>"#"===t)))),this.paths={1:[],2:[]},this.gridOne=null,this.gridTwo=null,this.solvePartOne(),this.solvePartTwo()},solvePartOne:function(){const t=this.checkSlope(3,1);this.paths[1].push(t.path),this.solutions.partOne=t.trees,this.gridOne=new h(this.parsedInput,this.paths[1]).getPathGrid()},solvePartTwo:function(){const t=[[1,1],[3,1],[5,1],[7,1],[1,2]];this.solutions.partTwo=t.map((t=>{const s=this.checkSlope(t[0],t[1]);return this.paths[2].push(s.path),s.trees})).reduce(((t,s)=>t*s),1),this.gridTwo=new h(this.parsedInput,this.paths[2]).getPathGrid()},checkSlope:function(t,s){let n=0,e=0,r=0;const a=[];for(let h=s;h<this.parsedInput.length;h+=s)r+=t,e=(e+t)%this.parsedInput[h].length,this.parsedInput[h][e]?(n++,a.push({x:r,y:h,hit:!0})):a.push({x:r,y:h,hit:!1});return{path:a,trees:n}}}},o=i,p=n(1001),u=(0,p.Z)(o,e,r,!1,null,null,null),l=u.exports}}]);
//# sourceMappingURL=9762.e48f6bbb.js.map