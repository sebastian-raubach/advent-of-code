"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[5159],{84493:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day21)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day21.vue?vue&type=template&id=0ed45e38\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":21,\"year\":2020,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day21.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day21vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Get all ingredients\n      this.ingredients = new Set();\n      // Keep track of all foods\n      this.foods = input.map(i => {\n        const parts = i.split(' (contains ');\n        const ingredients = parts[0].split(' ');\n        const allergens = parts[1].replace(/\\)/g, '').split(', ');\n        ingredients.forEach(i => this.ingredients.add(i));\n        return {\n          ingredients: new Set(ingredients),\n          allergens: new Set(allergens)\n        };\n      });\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    intersect: function (one, two) {\n      return new Set([...one].filter(x => two.has(x)));\n    },\n    union: function (one, two) {\n      return new Set([...one, ...two]);\n    },\n    solvePartOne: function () {\n      // Map allergens to the ingredients that may cause them\n      this.allergenToIngredient = {};\n      // Iterate over all foods\n      this.foods.forEach(f => {\n        // Then iterate the allergens\n        f.allergens.forEach(a => {\n          // If we have no mapping yet\n          if (!this.allergenToIngredient[a]) {\n            // Keep the current ingredients\n            this.allergenToIngredient[a] = new Set(f.ingredients);\n          } else {\n            // Else use the intersection between current ones and new ones\n            this.allergenToIngredient[a] = this.intersect(this.allergenToIngredient[a], f.ingredients);\n          }\n        });\n      });\n\n      // Unsafe ingredients are those contained in the mapping\n      const unsafeIngredients = new Set(Object.values(this.allergenToIngredient).reduce((a, b) => this.union(a, b)));\n      // Safe ingredients are those that aren't unsafe (duh)\n      const safeIngredients = [...this.ingredients].filter(i => !unsafeIngredients.has(i));\n\n      //  Solution for part one is the sum over all individual safe ingredient occurance counts\n      this.solutions.partOne = safeIngredients.map(s => this.foods.filter(f => f.ingredients.has(s)).length).reduce((a, b) => a + b);\n    },\n    solvePartTwo: function () {\n      // Remember the mapped allergens\n      const mappedAllergens = [];\n      // Remember which ingredient causes which allergen\n      const allergenMapping = {};\n      // The number of total allergens\n      const nrOfAllergens = Object.keys(this.allergenToIngredient).length;\n      while (mappedAllergens.length < nrOfAllergens) {\n        // Get those that haven't been mapped yet and that have a unique mapping\n        const allergensWithOne = Object.keys(this.allergenToIngredient).filter(a => mappedAllergens.indexOf(a) === -1 && this.allergenToIngredient[a].size === 1);\n\n        // For each unique mapping\n        allergensWithOne.forEach(a => {\n          // Remember that we've mapped this\n          mappedAllergens.push(a);\n          // Get the ingredient that causes it\n          const ingredient = this.allergenToIngredient[a].values().next().value;\n          allergenMapping[a] = ingredient;\n\n          // Remove the ingredient from all other allergen mappings\n          Object.keys(this.allergenToIngredient).forEach(otherA => this.allergenToIngredient[otherA].delete(ingredient));\n        });\n      }\n\n      // Sort the allergens, then map them to the ingredient that causes them, then join with \",\"\n      this.solutions.partTwo = Object.keys(allergenMapping).sort((a, b) => a.localeCompare(b)).map(a => allergenMapping[a]).join(',');\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2020/Day21.vue?vue&type=script&lang=js\n /* harmony default export */ const _2020_Day21vue_type_script_lang_js = (Day21vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2020/Day21.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2020_Day21vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day21 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84493\n")}}]);