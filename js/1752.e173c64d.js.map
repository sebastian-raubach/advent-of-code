{"version":3,"file":"js/1752.e173c64d.js","mappings":"0JAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,mBACxKC,EAAkB,G,+BCOtB,SACEC,WAAY,CACVC,IAAJA,EAAAA,YAEEC,KAAM,WACJ,MAAO,CACLN,UAAW,CACTO,QAAS,KACTC,QAAS,MAEXC,SAAU,KAGdC,QAAS,CACPR,eAAgB,SAApBA,GAEMS,EAAQA,EAAMC,KAAI,SAAxBD,GAAA,YAEMjB,KAAKe,SAAWE,EAAME,MAAM,EAAG,IAG/BnB,KAAKoB,aAAaH,EAAME,MAAM,GAAIF,EAAMI,SAExCrB,KAAKsB,aAAaL,IAOpBM,YAAa,SAAjBA,GAEM,IAAK,IAAX,+BAEQ,IAAK,IAAb,iCACU,GAAIvB,KAAKe,SAASS,GAAKxB,KAAKe,SAASU,KAAOC,EAC1C,OAAO,EAKb,OAAO,GAETN,aAAc,SAAlBA,GAEM,IAAK,IAAX,oBACQ,IAAR,OAGA,sBAGQ,IAAoB,IAAhBG,EAEF,YADAvB,KAAKM,UAAUO,QAAUa,GAK3B1B,KAAKe,SAASY,KAAKD,GACnB1B,KAAKe,SAASa,UAGlBN,aAAc,SAAlBA,GAEM,IAAK,IAAX,oBAEQ,IAAR,OACA,IACA,IAEQO,EAAO,IAAK,IAApBA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAMU,GAJAC,GAAOC,EAAQC,GACfC,EAAMC,KAAKD,IAAIA,EAAKF,EAAQC,IAC5BG,EAAMD,KAAKC,IAAIA,EAAKJ,EAAQC,IAExBF,IAAQ9B,KAAKM,UAAUO,QAEzBb,KAAKM,UAAUQ,QAAUmB,EAAME,OAC3C,4BAEY,MAAMN,MCzFuP,I,cCOrQO,GAAY,OACd,EACAtC,EACAW,GACA,EACA,KACA,KACA,MAIF,QAAe2B,EAAiB,S,gBCjBhC,IAAIC,EAAI,EAAQ,OACZC,EAAO,aACPC,EAA+B,EAAQ,OACvCC,EAA0B,EAAQ,OAElCC,EAAsBF,EAA6B,OAEnDG,EAAiBF,EAAwB,OAK7CH,EAAE,CAAEM,OAAQ,QAASC,OAAO,EAAMC,QAASJ,IAAwBC,GAAkB,CACnFxB,IAAK,SAAa4B,GAChB,OAAOR,EAAKtC,KAAM8C,EAAYC,UAAU1B,OAAS,EAAI0B,UAAU,QAAKC","sources":["webpack://advent-of-code/./src/components/2020/Day9.vue?2b10","webpack://advent-of-code/src/components/2020/Day9.vue","webpack://advent-of-code/./src/components/2020/Day9.vue?254d","webpack://advent-of-code/./src/components/2020/Day9.vue","webpack://advent-of-code/./node_modules/core-js/modules/es.array.map.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":9,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"9\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      preamble: []\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Convert input to numbers\n      input = input.map(i => +i)\n      // Extrac the preamble\n      this.preamble = input.slice(0, 25)\n\n      // Solve part one with the remaining numbers\n      this.solvePartOne(input.slice(25, input.length))\n      // Solve part two with the whole input\n      this.solvePartTwo(input)\n    },\n    /**\n     * Checks if two numbers in the preamble added together result in the given number\n     * @param number The number to get as a result\n     * @returns `true` if a combination of numbers was found, `false` otherwise\n     */\n    hasSumOfTwo: function (number) {\n      // Iterate through\n      for (let i = 0; i < this.preamble.length; i++) {\n        // Start second loop only from i\n        for (let j = i + 1; j < this.preamble.length; j++) {\n          if (this.preamble[i] + this.preamble[j] === number) {\n            return true\n          }\n        }\n      }\n\n      return false\n    },\n    solvePartOne: function (numbers) {\n      // For each number\n      for (let n = 0; n < numbers.length; n++) {\n        const number = numbers[n]\n\n        // Check if there are two other numbers that add up to it\n        const hasSumOfTwo = this.hasSumOfTwo(number)\n\n        // If not, we have our result\n        if (hasSumOfTwo === false) {\n          this.solutions.partOne = number\n          return\n        }\n\n        // Otherwise, push the number to the preamble and remove the first value\n        this.preamble.push(number)\n        this.preamble.shift()\n      }\n    },\n    solvePartTwo: function (numbers) {\n      // Move the first pointer from the start of the numbers\n      for (let start = 0; start < numbers.length; start++) {\n        // Keep track of the min, max and sum\n        let sum = numbers[start]\n        let min = sum\n        let max = sum\n        // Move the second pointer from the next position onwards\n        inner: for (let end = start + 1; end < numbers.length; end++) {\n          // Adjust the values\n          sum += numbers[end]\n          min = Math.min(min, numbers[end])\n          max = Math.max(max, numbers[end])\n\n          if (sum === this.solutions.partOne) {\n            // If it's the result, add up the min and max\n            this.solutions.partTwo = min + max\n          } else if (sum > this.solutions.partOne) {\n            // If the sum is larger than the number we're looking for, there's no point in going on. Break to the outer loop.\n            break inner\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day9.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day9.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day9.vue?vue&type=template&id=43e2b1b2&\"\nimport script from \"./Day9.vue?vue&type=script&lang=js&\"\nexport * from \"./Day9.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","preamble","methods","input","map","slice","solvePartOne","length","solvePartTwo","hasSumOfTwo","i","j","number","push","shift","inner","sum","numbers","end","min","Math","max","component","$","$map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","undefined"],"sourceRoot":""}