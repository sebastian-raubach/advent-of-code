{"version":3,"file":"js/984.207147a8.js","mappings":"wKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAEAC,OAAAA,CACA,iCACA,kCAGA,EACAC,QAAAA,CACAR,eAAAA,SAAAA,GACA,WACA,KAEA,SAEA,sCACA,+DAEAS,EAAAA,SAAAA,IACA,UAKA,KACAC,EAAAA,KAAAA,KAAAA,MAAAA,EAAAA,QAAAA,IAAAA,MAAAA,WAAAA,IAAAA,MAAAA,WAAAA,IAAAA,MAAAA,QAAAA,IAAAA,WACA,CACA,0BACA,qBAEA,GACAC,KAAAA,EAAAA,KACAC,MAAAA,GACAC,OAAAA,MAGAC,EAAAA,SAAAA,IACA,oBACA,0BAEAC,EAAAA,MAAAA,KAAAA,CACAC,SAAAA,EAAAA,SACAC,MAAAA,EAAAA,MACAC,OAAAA,EAAAA,MACAL,OAAAA,EAAAA,QAEA,MACAE,EAAAA,OAAAA,CACA,IAGAI,EAAAA,EAAAA,MAAAA,CACA,MAhCAC,GAAAA,CAgCA,IAGA,kCACA,WAEA,wBACA,aACA,SAEA,iCACA,gDACAC,EAAAA,EAAAA,MAAAA,GAAAA,OACAC,GAAAA,EACA,KACA,CAGA,IACAD,EAAAA,EAAAA,OAEA,CAEA,yDACA,qBAEA,SAAAE,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,MACA,wDACA,oDACA,oBACA,EACAC,UAAAA,SAAAA,EAAAA,EAAAA,GACA,WACA,SACA,WACA,sCACA,CACA,aAEA,KAEA,kCACA,mBAEA,kBACA,sCACAC,EAAAA,EAAAA,UAAAA,GAAAA,EAAAA,MAAAA,EACAC,EAAAA,QAAAA,KAAAA,UAAAA,EAAAA,EAAAA,OAAAA,IACAC,EAAAA,EAAAA,UAAAA,GAAAA,EAAAA,KACA,MACA,sCACAF,EAAAA,EAAAA,UAAAA,GAAAA,EAAAA,MAAAA,EACAC,EAAAA,QAAAA,KAAAA,UAAAA,EAAAA,EAAAA,OAAAA,IACAC,EAAAA,EAAAA,UAAAA,GAAAA,EAAAA,KACA,CACA,CAIA,OAFAD,EAAAA,QAAAA,KAAAA,UAAAA,EAAAA,EAAAA,OAAAA,KAAAA,MAAAA,KAAAA,UAAAA,MAEA,CACA,CACA,ICjI6P,I,UCOzPE,GAAY,OACd,EACAzC,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAe8B,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2023/Day19.vue?cdf4","webpack://advent-of-code/src/components/2023/Day19.vue","webpack://advent-of-code/./src/components/2023/Day19.vue?0f6d","webpack://advent-of-code/./src/components/2023/Day19.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":19,\"year\":2023,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"19\" :year=\"2023\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      checks: {\n        '<': (rule, rating) => rating[rule.variable] < rule.value,\n        '>': (rule, rating) => rating[rule.variable] > rule.value\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const workflows = {}\n      const ratings = []\n\n      let isRating = false\n\n      const workflowPattern = /(?<name>.+)\\{(?<rules>.+)\\}/\n      const rulePattern = /(?<variable>.{1})(?<check>.{1})(?<value>\\d+):(?<target>.+)/\n\n      input.forEach(i => {\n        if (i === '') {\n          isRating = true\n          return\n        }\n\n        if (isRating) {\n          ratings.push(JSON.parse(i.replace('{', '{\"').replaceAll(',', ',\"').replaceAll('=', '\":').replace('}', '}')))\n        } else {\n          const res = i.match(workflowPattern).groups\n          const parts = res.rules.split(',')\n\n          const workflow = {\n            name: res.name,\n            rules: [],\n            target: null\n          }\n\n          parts.forEach(p => {\n            if (p.includes(':')) {\n              const rule = p.match(rulePattern).groups\n\n              workflow.rules.push({\n                variable: rule.variable,\n                check: rule.check,\n                value: +rule.value,\n                target: rule.target\n              })\n            } else {\n              workflow.target = p\n            }\n          })\n\n          workflows[workflow.name] = workflow\n        }\n      })\n\n      this.solutions.partOne = ratings.map(r => {\n        let current = 'in'\n\n        while (current !== 'A' && current !== 'R') {\n          const workflow = workflows[current]\n          let found = false\n\n          for (let j = 0; j < workflow.rules.length; j++) {\n            if (this.checks[workflow.rules[j].check](workflow.rules[j], r)) {\n              current = workflow.rules[j].target\n              found = true\n              break\n            }\n          }\n\n          if (!found) {\n            current = workflow.target\n          }\n        }\n\n        return current === 'A' ? Object.values(r).reduce((a, b) => a + b) : 0\n      }).reduce((a, b) => a + b)\n\n      const range = { x: [1, 4000], m: [1, 4000], a: [1, 4000], s: [1, 4000] }\n      this.solutions.partTwo = this.getRanges(workflows, 'in', range).map(range => {\n        return Object.values(range).reduce((acc, [min, max]) => acc * (max - min + 1), 1)\n      }).reduce((a, b) => a + b)\n    },\n    getRanges: function (workflows, workflowName, range) {\n      if (workflowName === 'R') {\n        return []\n      } if (workflowName === 'A') {\n        return [JSON.parse(JSON.stringify(range))]\n      } else {\n        const workflow = workflows[workflowName]\n\n        const ranges = []\n\n        for (let j = 0; j < workflow.rules.length; j++) {\n          const r = workflow.rules[j]\n\n          if (r.check === '<') {\n            const newRange = JSON.parse(JSON.stringify(range))\n            newRange[r.variable][1] = r.value - 1\n            ranges.push(...this.getRanges(workflows, r.target, newRange))\n            range[r.variable][0] = r.value\n          } else {\n            const newRange = JSON.parse(JSON.stringify(range))\n            newRange[r.variable][0] = r.value + 1\n            ranges.push(...this.getRanges(workflows, r.target, newRange))\n            range[r.variable][1] = r.value\n          }\n        }\n\n        ranges.push(...this.getRanges(workflows, workflow.target, JSON.parse(JSON.stringify(range))))\n\n        return ranges\n      }\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day19.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day19.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day19.vue?vue&type=template&id=4228a119\"\nimport script from \"./Day19.vue?vue&type=script&lang=js\"\nexport * from \"./Day19.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","checks","methods","input","ratings","name","rules","target","parts","workflow","variable","check","value","workflows","isRating","current","found","x","m","a","s","getRanges","newRange","ranges","range","component"],"sourceRoot":""}