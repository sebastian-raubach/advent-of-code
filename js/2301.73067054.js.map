{"version":3,"file":"js/2301.73067054.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GAEA,0GAEA,yBACA,uCACA,EACAQ,SAAAA,SAAAA,GACA,QACA,yBAEAC,EAAAA,SAAAA,IACAC,GAAAA,KAAAA,SAAAA,EAAAA,IAEA,GACA,qBAEA,wCAIAC,OAAAA,KAAAA,GAAAA,SAAAA,IACAD,GAAAA,KAAAA,SAAAA,EAAAA,GAAAA,IAGA,GACA,SAKA,EAHA,CAKA,ICtD6P,I,UCOzPE,GAAY,OACd,EACAtB,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAeW,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2015/Day12.vue?d220","webpack://advent-of-code/src/components/2015/Day12.vue","webpack://advent-of-code/./src/components/2015/Day12.vue?de72","webpack://advent-of-code/./src/components/2015/Day12.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":12,\"year\":2015,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"12\" :year=\"2015\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Split on any multiple non-numeric characters, filter out empty bits, then convert to number and sum up\n      this.solutions.partOne = input[0].split(/[^0-9.-]+/g).filter(s => s.length > 0).map(s => +s).reduce((a, b) => a + b)\n\n      const json = JSON.parse(input[0])\n      this.solutions.partTwo = this.traverse(json)\n    },\n    traverse: function (json) {\n      let sum = 0\n      if (Array.isArray(json)) {\n        // If dealing with an array, sum up the individual bits\n        json.forEach(j => {\n          sum += this.traverse(j)\n        })\n        return sum\n      } else if (typeof json === 'object') {\n        // If it's an object, check if any property value is 'red'\n        if (Object.keys(json).some(k => json[k] === 'red')) {\n          // Ignore\n        } else {\n          // If not, sum up the individual bits\n          Object.keys(json).forEach(k => {\n            sum += this.traverse(json[k])\n          })\n        }\n        return sum\n      } else if (!isNaN(json)) {\n        // If it's a number, return it\n        return json\n      } else {\n        // Otherwise, it's a string, return 0\n        return 0\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day12.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day12.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day12.vue?vue&type=template&id=b651bf1e\"\nimport script from \"./Day12.vue?vue&type=script&lang=js\"\nexport * from \"./Day12.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","traverse","json","sum","Object","component"],"sourceRoot":""}