{"version":3,"sources":["webpack:///./src/assets/input/Day-19.txt","webpack:///./node_modules/core-js/modules/es.string.match.js","webpack:///./node_modules/core-js/modules/es.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/components/Day19.vue?0d16","webpack:///src/components/Day19.vue","webpack:///./src/components/Day19.vue?f5cc","webpack:///./src/components/Day19.vue"],"names":["fixRegExpWellKnownSymbolLogic","anObject","toLength","requireObjectCoercible","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","regexp","O","this","matcher","undefined","call","RegExp","String","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr","DESCRIPTORS","isForced","inheritIfRequired","defineProperty","f","getOwnPropertyNames","isRegExp","getFlags","stickyHelpers","redefine","fails","setInternalState","set","setSpecies","wellKnownSymbol","NativeRegExp","RegExpPrototype","prototype","re1","re2","CORRECT_NEW","UNSUPPORTED_Y","FORCED","RegExpWrapper","pattern","flags","sticky","thisIsRegExp","patternIsRegExp","flagsAreUndefined","constructor","source","indexOf","replace","proxy","key","configurable","get","it","keys","index","length","toObject","toInteger","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","REPLACE","nativeReplace","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","functionalReplace","results","push","accumulatedResult","nextSourcePosition","i","matched","position","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","$","isArray","isObject","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","SPECIES_SUPPORT","isConcatSpreadable","spreadable","target","proto","forced","arg","k","len","E","arguments","TypeError","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","join","ES3_STRINGS","Object","STRICT_METHOD","separator","$map","map","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","callbackfn","render","_vm","_h","$createElement","_c","_self","attrs","solutions","taskInput","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","rules","input","forEach","part","solvePartOne","solvePartTwo","expandOne","current","isNaN","p","expandTwo","prevKey","eight","eleven","filter","component"],"mappings":"kHAAA,OAAe,mre,oCCCf,IAAIA,EAAgC,EAAQ,QACxCC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAyB,EAAQ,QACjCC,EAAqB,EAAQ,QAC7BC,EAAa,EAAQ,QAGzBL,EAA8B,QAAS,GAAG,SAAUM,EAAOC,EAAaC,GACtE,MAAO,CAGL,SAAeC,GACb,IAAIC,EAAIP,EAAuBQ,MAC3BC,OAAoBC,GAAVJ,OAAsBI,EAAYJ,EAAOH,GACvD,YAAmBO,IAAZD,EAAwBA,EAAQE,KAAKL,EAAQC,GAAK,IAAIK,OAAON,GAAQH,GAAOU,OAAON,KAI5F,SAAUD,GACR,IAAIQ,EAAMT,EAAgBD,EAAaE,EAAQE,MAC/C,GAAIM,EAAIC,KAAM,OAAOD,EAAIE,MAEzB,IAAIC,EAAKnB,EAASQ,GACdY,EAAIL,OAAOL,MAEf,IAAKS,EAAGE,OAAQ,OAAOjB,EAAWe,EAAIC,GAEtC,IAAIE,EAAcH,EAAGI,QACrBJ,EAAGK,UAAY,EACf,IAEIC,EAFAC,EAAI,GACJC,EAAI,EAER,MAAwC,QAAhCF,EAASrB,EAAWe,EAAIC,IAAc,CAC5C,IAAIQ,EAAWb,OAAOU,EAAO,IAC7BC,EAAEC,GAAKC,EACU,KAAbA,IAAiBT,EAAGK,UAAYrB,EAAmBiB,EAAGnB,EAASkB,EAAGK,WAAYF,IAClFK,IAEF,OAAa,IAANA,EAAU,KAAOD,Q,uBCxC9B,IAAIG,EAAc,EAAQ,QACtBR,EAAS,EAAQ,QACjBS,EAAW,EAAQ,QACnBC,EAAoB,EAAQ,QAC5BC,EAAiB,EAAQ,QAAuCC,EAChEC,EAAsB,EAAQ,QAA8CD,EAC5EE,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAgB,EAAQ,QACxBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAmB,EAAQ,QAA+BC,IAC1DC,EAAa,EAAQ,QACrBC,EAAkB,EAAQ,QAE1BtC,EAAQsC,EAAgB,SACxBC,EAAevB,EAAOP,OACtB+B,EAAkBD,EAAaE,UAC/BC,EAAM,KACNC,EAAM,KAGNC,EAAc,IAAIL,EAAaG,KAASA,EAExCG,EAAgBb,EAAca,cAE9BC,EAAStB,GAAeC,EAAS,UAAYmB,GAAeC,GAAiBX,GAAM,WAGrF,OAFAS,EAAI3C,IAAS,EAENuC,EAAaG,IAAQA,GAAOH,EAAaI,IAAQA,GAAiC,QAA1BJ,EAAaG,EAAK,SAKnF,GAAII,EAAQ,CACV,IAAIC,EAAgB,SAAgBC,EAASC,GAC3C,IAGIC,EAHAC,EAAe9C,gBAAgB0C,EAC/BK,EAAkBtB,EAASkB,GAC3BK,OAA8B9C,IAAV0C,EAGxB,IAAKE,GAAgBC,GAAmBJ,EAAQM,cAAgBP,GAAiBM,EAC/E,OAAOL,EAGLJ,EACEQ,IAAoBC,IAAmBL,EAAUA,EAAQO,QACpDP,aAAmBD,IACxBM,IAAmBJ,EAAQlB,EAASvB,KAAKwC,IAC7CA,EAAUA,EAAQO,QAGhBV,IACFK,IAAWD,GAASA,EAAMO,QAAQ,MAAQ,EACtCN,IAAQD,EAAQA,EAAMQ,QAAQ,KAAM,MAG1C,IAAIrC,EAASM,EACXkB,EAAc,IAAIL,EAAaS,EAASC,GAASV,EAAaS,EAASC,GACvEE,EAAe9C,KAAOmC,EACtBO,GAKF,OAFIF,GAAiBK,GAAQf,EAAiBf,EAAQ,CAAE8B,OAAQA,IAEzD9B,GAELsC,EAAQ,SAAUC,GACpBA,KAAOZ,GAAiBpB,EAAeoB,EAAeY,EAAK,CACzDC,cAAc,EACdC,IAAK,WAAc,OAAOtB,EAAaoB,IACvCvB,IAAK,SAAU0B,GAAMvB,EAAaoB,GAAOG,MAGzCC,EAAOlC,EAAoBU,GAC3ByB,EAAQ,EACZ,MAAOD,EAAKE,OAASD,EAAON,EAAMK,EAAKC,MACvCxB,EAAgBc,YAAcP,EAC9BA,EAAcN,UAAYD,EAC1BP,EAASjB,EAAQ,SAAU+B,GAI7BV,EAAW,W,kCClFX,IAAI3C,EAAgC,EAAQ,QACxCC,EAAW,EAAQ,QACnBuE,EAAW,EAAQ,QACnBtE,EAAW,EAAQ,QACnBuE,EAAY,EAAQ,QACpBtE,EAAyB,EAAQ,QACjCC,EAAqB,EAAQ,QAC7BC,EAAa,EAAQ,QAErBqE,EAAMC,KAAKD,IACXE,EAAMD,KAAKC,IACXC,EAAQF,KAAKE,MACbC,EAAuB,4BACvBC,EAAgC,oBAEhCC,EAAgB,SAAUZ,GAC5B,YAAcvD,IAAPuD,EAAmBA,EAAKpD,OAAOoD,IAIxCpE,EAA8B,UAAW,GAAG,SAAUiF,EAASC,EAAe1E,EAAiB2E,GAC7F,IAAIC,EAA+CD,EAAOC,6CACtDC,EAAmBF,EAAOE,iBAC1BC,EAAoBF,EAA+C,IAAM,KAE7E,MAAO,CAGL,SAAiBG,EAAaC,GAC5B,IAAI9E,EAAIP,EAAuBQ,MAC3B8E,OAA0B5E,GAAf0E,OAA2B1E,EAAY0E,EAAYN,GAClE,YAAoBpE,IAAb4E,EACHA,EAAS3E,KAAKyE,EAAa7E,EAAG8E,GAC9BN,EAAcpE,KAAKE,OAAON,GAAI6E,EAAaC,IAIjD,SAAU/E,EAAQ+E,GAChB,IACIJ,GAAgDC,GACzB,kBAAjBG,IAA0E,IAA7CA,EAAa1B,QAAQwB,GAC1D,CACA,IAAIrE,EAAMT,EAAgB0E,EAAezE,EAAQE,KAAM6E,GACvD,GAAIvE,EAAIC,KAAM,OAAOD,EAAIE,MAG3B,IAAIC,EAAKnB,EAASQ,GACdY,EAAIL,OAAOL,MAEX+E,EAA4C,oBAAjBF,EAC1BE,IAAmBF,EAAexE,OAAOwE,IAE9C,IAAIlE,EAASF,EAAGE,OAChB,GAAIA,EAAQ,CACV,IAAIC,EAAcH,EAAGI,QACrBJ,EAAGK,UAAY,EAEjB,IAAIkE,EAAU,GACd,MAAO,EAAM,CACX,IAAIjE,EAASrB,EAAWe,EAAIC,GAC5B,GAAe,OAAXK,EAAiB,MAGrB,GADAiE,EAAQC,KAAKlE,IACRJ,EAAQ,MAEb,IAAIO,EAAWb,OAAOU,EAAO,IACZ,KAAbG,IAAiBT,EAAGK,UAAYrB,EAAmBiB,EAAGnB,EAASkB,EAAGK,WAAYF,IAKpF,IAFA,IAAIsE,EAAoB,GACpBC,EAAqB,EAChBC,EAAI,EAAGA,EAAIJ,EAAQpB,OAAQwB,IAAK,CACvCrE,EAASiE,EAAQI,GAUjB,IARA,IAAIC,EAAUhF,OAAOU,EAAO,IACxBuE,EAAWvB,EAAIE,EAAIH,EAAU/C,EAAO4C,OAAQjD,EAAEkD,QAAS,GACvD2B,EAAW,GAMNC,EAAI,EAAGA,EAAIzE,EAAO6C,OAAQ4B,IAAKD,EAASN,KAAKZ,EAActD,EAAOyE,KAC3E,IAAIC,EAAgB1E,EAAO2E,OAC3B,GAAIX,EAAmB,CACrB,IAAIY,EAAe,CAACN,GAASO,OAAOL,EAAUD,EAAU5E,QAClCR,IAAlBuF,GAA6BE,EAAaV,KAAKQ,GACnD,IAAII,EAAcxF,OAAOwE,EAAaiB,WAAM5F,EAAWyF,SAEvDE,EAAcE,EAAgBV,EAAS3E,EAAG4E,EAAUC,EAAUE,EAAeZ,GAE3ES,GAAYH,IACdD,GAAqBxE,EAAEsF,MAAMb,EAAoBG,GAAYO,EAC7DV,EAAqBG,EAAWD,EAAQzB,QAG5C,OAAOsB,EAAoBxE,EAAEsF,MAAMb,KAKvC,SAASY,EAAgBV,EAASY,EAAKX,EAAUC,EAAUE,EAAeI,GACxE,IAAIK,EAAUZ,EAAWD,EAAQzB,OAC7BuC,EAAIZ,EAAS3B,OACbwC,EAAUhC,EAKd,YAJsBlE,IAAlBuF,IACFA,EAAgB5B,EAAS4B,GACzBW,EAAUjC,GAELI,EAAcpE,KAAK0F,EAAaO,GAAS,SAAUC,EAAOC,GAC/D,IAAIC,EACJ,OAAQD,EAAGE,OAAO,IAChB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,OAAOnB,EACjB,IAAK,IAAK,OAAOY,EAAID,MAAM,EAAGV,GAC9B,IAAK,IAAK,OAAOW,EAAID,MAAME,GAC3B,IAAK,IACHK,EAAUd,EAAca,EAAGN,MAAM,GAAI,IACrC,MACF,QACE,IAAI/E,GAAKqF,EACT,GAAU,IAANrF,EAAS,OAAOoF,EACpB,GAAIpF,EAAIkF,EAAG,CACT,IAAI5E,EAAI2C,EAAMjD,EAAI,IAClB,OAAU,IAANM,EAAgB8E,EAChB9E,GAAK4E,OAA8BjG,IAApBqF,EAAShE,EAAI,GAAmB+E,EAAGE,OAAO,GAAKjB,EAAShE,EAAI,GAAK+E,EAAGE,OAAO,GACvFH,EAETE,EAAUhB,EAAStE,EAAI,GAE3B,YAAmBf,IAAZqG,EAAwB,GAAKA,U,oCClI1C,IAAIE,EAAI,EAAQ,QACZ5E,EAAQ,EAAQ,QAChB6E,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnB9C,EAAW,EAAQ,QACnBtE,EAAW,EAAQ,QACnBqH,EAAiB,EAAQ,QACzBC,EAAqB,EAAQ,QAC7BC,EAA+B,EAAQ,QACvC7E,EAAkB,EAAQ,QAC1B8E,EAAa,EAAQ,QAErBC,EAAuB/E,EAAgB,sBACvCgF,EAAmB,iBACnBC,EAAiC,iCAKjCC,EAA+BJ,GAAc,KAAOlF,GAAM,WAC5D,IAAIuF,EAAQ,GAEZ,OADAA,EAAMJ,IAAwB,EACvBI,EAAMxB,SAAS,KAAOwB,KAG3BC,EAAkBP,EAA6B,UAE/CQ,EAAqB,SAAUvH,GACjC,IAAK4G,EAAS5G,GAAI,OAAO,EACzB,IAAIwH,EAAaxH,EAAEiH,GACnB,YAAsB9G,IAAfqH,IAA6BA,EAAab,EAAQ3G,IAGvD0C,GAAU0E,IAAiCE,EAK/CZ,EAAE,CAAEe,OAAQ,QAASC,OAAO,EAAMC,OAAQjF,GAAU,CAClDmD,OAAQ,SAAgB+B,GACtB,IAGIvC,EAAGwC,EAAGhE,EAAQiE,EAAKC,EAHnB/H,EAAI8D,EAAS7D,MACbgB,EAAI6F,EAAmB9G,EAAG,GAC1BkB,EAAI,EAER,IAAKmE,GAAK,EAAGxB,EAASmE,UAAUnE,OAAQwB,EAAIxB,EAAQwB,IAElD,GADA0C,GAAW,IAAP1C,EAAWrF,EAAIgI,UAAU3C,GACzBkC,EAAmBQ,GAAI,CAEzB,GADAD,EAAMtI,EAASuI,EAAElE,QACb3C,EAAI4G,EAAMZ,EAAkB,MAAMe,UAAUd,GAChD,IAAKU,EAAI,EAAGA,EAAIC,EAAKD,IAAK3G,IAAS2G,KAAKE,GAAGlB,EAAe5F,EAAGC,EAAG6G,EAAEF,QAC7D,CACL,GAAI3G,GAAKgG,EAAkB,MAAMe,UAAUd,GAC3CN,EAAe5F,EAAGC,IAAK6G,GAI3B,OADA9G,EAAE4C,OAAS3C,EACJD,M,kCCxDX,IAAIyF,EAAI,EAAQ,QACZwB,EAAgB,EAAQ,QACxBC,EAAkB,EAAQ,QAC1BC,EAAsB,EAAQ,QAE9BC,EAAa,GAAGC,KAEhBC,EAAcL,GAAiBM,OAC/BC,EAAgBL,EAAoB,OAAQ,KAIhD1B,EAAE,CAAEe,OAAQ,QAASC,OAAO,EAAMC,OAAQY,IAAgBE,GAAiB,CACzEH,KAAM,SAAcI,GAClB,OAAOL,EAAWjI,KAAK+H,EAAgBlI,WAAqBE,IAAduI,EAA0B,IAAMA,O,kCCdlF,IAAIhC,EAAI,EAAQ,QACZiC,EAAO,EAAQ,QAAgCC,IAC/C7B,EAA+B,EAAQ,QACvC8B,EAA0B,EAAQ,QAElCC,EAAsB/B,EAA6B,OAEnDgC,EAAiBF,EAAwB,OAK7CnC,EAAE,CAAEe,OAAQ,QAASC,OAAO,EAAMC,QAASmB,IAAwBC,GAAkB,CACnFH,IAAK,SAAaI,GAChB,OAAOL,EAAK1I,KAAM+I,EAAYhB,UAAUnE,OAAS,EAAImE,UAAU,QAAK7H,O,yCCfxE,IAAI8I,EAAS,WAAa,IAAIC,EAAIjJ,KAASkJ,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,UAAYL,EAAIM,UAAU,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,mBACnMC,EAAkB,G,sICOtB,GACEC,WAAY,CACVC,IAAJ,cAEEC,KAAM,WACJ,MAAO,CACLN,UAAW,EAAjB,gBACMD,UAAW,CACTQ,QAAS,KACTC,QAAS,QAIfC,QAAS,CACPP,eAAgB,SAApB,cACM1J,KAAKkK,MAAQ,GACblK,KAAKmK,MAAQ,GAEb,IAAN,IAEMA,EAAMC,SAAQ,SAApB,GAEQ,GAAU,KAANhF,EAKJ,GAAa,IAATiF,EAAY,CAEd,IAAV,8DAEU,EAAV,uBAGU,EAAV,mBAXUA,OAeJrK,KAAKsK,eACLtK,KAAKuK,gBAEPC,UAAW,SAAf,cAEM,GAAuB,IAAnBC,EAAQ7G,QAAgB8G,OAAOD,GACjC,OAAOA,EAIT,IAAN,gCACQ,MAAU,MAANE,EAEK,IAGA,EAAjB,0BAEA,SAGM,MAAO,IAAb,eAEIC,UAAW,SAAf,oBAEM,GAAgB,IAAZC,IAEFC,IAIIA,GAAS,GACX,MAAO,IAAjB,kDAIM,GAAgB,KAAZD,IAEFE,IAIIA,GAAU,GACZ,MAAO,IAAjB,gGAKM,GAAuB,IAAnBN,EAAQ7G,QAAgB8G,OAAOD,GACjC,OAAOA,EAGT,IAAN,gCACQ,MAAU,MAANE,EACK,IAEA,EAAjB,iCAEA,SAEM,MAAO,IAAb,eAEIL,aAAc,WACZ,IAAN,yDAEMtK,KAAKuJ,UAAUQ,QAAU/J,KAAKmK,MAAMa,QAAO,SAAjD,gCAEIT,aAAc,WAEZvK,KAAKkK,MAAM,GAAK,YAChBlK,KAAKkK,MAAM,IAAM,mBAGjB,IAAN,+DAEMlK,KAAKuJ,UAAUS,QAAUhK,KAAKmK,MAAMa,QAAO,SAAjD,kCCzH+U,I,YCO3UC,EAAY,eACd,EACAjC,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAsB,E","file":"js/chunk-361631c2.6a23f2c8.js","sourcesContent":["export default \"62: 110 112 | 92 68\\n85: 38 92 | 102 110\\n63: 92 6 | 110 23\\n82: 110 | 92\\n99: 110 122 | 92 54\\n33: 110 61 | 92 103\\n24: 110 92 | 110 110\\n76: 3 92\\n109: 26 92 | 81 110\\n94: 92 78 | 110 28\\n17: 110 115\\n61: 92 110 | 110 82\\n25: 9 110 | 61 92\\n114: 47 110 | 63 92\\n21: 30 82\\n103: 82 82\\n69: 5 110 | 43 92\\n73: 110 116 | 92 69\\n52: 92 81 | 110 103\\n22: 119 92 | 50 110\\n108: 37 92 | 35 110\\n2: 71 92 | 20 110\\n119: 103 110 | 88 92\\n102: 101 92 | 49 110\\n92: \\\"b\\\"\\n91: 92 54 | 110 3\\n64: 92 115 | 110 24\\n68: 92 30 | 110 81\\n89: 115 110 | 26 92\\n80: 61 110 | 81 92\\n19: 110 73 | 92 1\\n16: 115 92 | 103 110\\n15: 123 110 | 58 92\\n115: 110 110 | 92 110\\n70: 92 30 | 110 9\\n40: 110 96 | 92 99\\n50: 88 110 | 115 92\\n18: 26 92 | 48 110\\n81: 92 110\\n107: 110 30 | 92 115\\n38: 84 110 | 12 92\\n44: 40 92 | 66 110\\n27: 125 92 | 2 110\\n41: 92 128 | 110 118\\n56: 81 92 | 30 110\\n88: 110 92\\n13: 75 92\\n55: 75 110 | 26 92\\n12: 13 92 | 52 110\\n28: 122 92\\n121: 75 92 | 24 110\\n113: 92 81 | 110 54\\n98: 103 110 | 3 92\\n6: 92 62 | 110 126\\n96: 75 92 | 9 110\\n9: 82 92 | 92 110\\n0: 8 11\\n32: 104 92 | 91 110\\n116: 110 32 | 92 67\\n104: 92 81 | 110 30\\n5: 110 109 | 92 105\\n117: 110 22 | 92 59\\n128: 92 24 | 110 9\\n66: 92 98 | 110 21\\n46: 76 92 | 89 110\\n36: 92 90 | 110 127\\n20: 110 115 | 92 3\\n4: 48 110 | 30 92\\n26: 92 82 | 110 110\\n39: 30 110 | 115 92\\n127: 61 110 | 9 92\\n84: 110 104 | 92 78\\n100: 97 92 | 68 110\\n106: 110 7 | 92 18\\n123: 110 64 | 92 68\\n111: 110 74 | 92 46\\n42: 114 110 | 19 92\\n58: 28 92 | 16 110\\n47: 110 15 | 92 124\\n54: 92 92 | 110 92\\n51: 110 117 | 92 111\\n130: 92 41 | 110 106\\n30: 92 92 | 110 110\\n72: 17 110 | 109 92\\n129: 130 92 | 108 110\\n14: 85 110 | 51 92\\n53: 87 92 | 44 110\\n112: 92 30 | 110 122\\n45: 61 82\\n105: 75 92 | 61 110\\n90: 110 122 | 92 9\\n122: 110 92 | 92 110\\n83: 110 33 | 92 56\\n118: 110 61 | 92 75\\n74: 120 92 | 78 110\\n29: 110 65 | 92 60\\n31: 14 92 | 10 110\\n110: \\\"a\\\"\\n87: 36 110 | 94 92\\n57: 92 48 | 110 81\\n78: 92 115 | 110 54\\n97: 92 48 | 110 122\\n1: 110 27 | 92 34\\n95: 92 107 | 110 86\\n79: 110 55 | 92 77\\n37: 92 109 | 110 25\\n126: 4 110 | 39 92\\n101: 45 92 | 80 110\\n59: 110 70 | 92 105\\n7: 61 92 | 48 110\\n48: 92 92\\n35: 104 92 | 57 110\\n120: 48 92 | 48 110\\n34: 29 110 | 79 92\\n93: 54 92 | 26 110\\n71: 115 110 | 61 92\\n125: 121 110 | 45 92\\n60: 122 92 | 54 110\\n86: 54 110 | 9 92\\n49: 97 110 | 91 92\\n3: 110 110\\n23: 110 95 | 92 72\\n65: 92 103 | 110 115\\n10: 129 110 | 53 92\\n8: 42\\n11: 42 31\\n77: 103 92 | 81 110\\n67: 93 92 | 112 110\\n75: 92 110 | 92 92\\n124: 83 110 | 100 92\\n43: 92 113 | 110 56\\n\\nabbabbbbaaabbbbabbbababaaabaabaabbaabbba\\nbabaaaabbaaabbbbbbbbbaba\\nbbbbaaaabaaabbabaababbbabaaaaaababaabaaaaabbabbb\\nbaabbbbbbbaababaababbbabbababbbbaaaabbbbbabaabbabaaababb\\naabbaabbbbbaabbbbaaabaab\\nbbaaabbaaaabababbbbaabaa\\nabbbbbababbaabaabaaaabbbaaaabaab\\nabaabbbbabaaabaabbbbaabbabaabaaabbaaabbbabbaabbbaabbbabb\\nbaabbbbbaabbaaabbabbabaa\\nbabbabbbabaabaaaaabbababaaaabaaaabbababbabababbaaababaaa\\naaababaabababbbbabaaaaab\\nbbabaabaabbaabaabbbbbbab\\nbbbbaaaabaaabbabbbbbbaababaabbaabaabbaab\\naaabbabbbabababbaabbabba\\nabbbbbbabbababbbbabbabbabbabaabbaaabbaab\\nbbbbabaaabbaabbabaaabbbababababbabaabbaabbabbbaa\\naabaaaaabaabaaabaaabbaababbbaaababbbbbbabbbbabababbbabbaabaaabaa\\nbaaaababbaaaaaabaabbbabbaaabaaab\\nabbabbbaaabaaabbaaaaabbb\\nababaaaababaaaaaaababbaa\\nbabbabbabbababababbaaabb\\nbbabbaabaaabbabbababaaababababaaaaababaabbaababb\\nbbababbbbbabaaabaaabaaaa\\nabbaaabaaaabaabbbbbaaaba\\naaaabababbbbabaabaabaaabbabbabbabaaababaaabaabbaabaaabbabbaaaabababbbaab\\naabaababaaaaaabbaabaaabbbabbbaaabaabaaaaabbaaaba\\nbababaaaabbaabbbaaaabbab\\nabababaabbbbbaababbaaaabbabaabbbabbbbaaaabaaabbbabbbbaba\\nababababababbbaaababbbba\\nababbabbabaabbbaabaaaabbaaaaaaaaaaabaaaabbbababb\\naaabbabbbaaabaaaabaabaaa\\nabbbbabbabbbbaaabbbbabbbbabaaaababbbabaababbaabbabaaabba\\nbbbababaaaaabaaabaabaaabbaababba\\naaaabbbbbbabababbbaaabab\\naabaababbbbbaabaabaaabaaabababbbbababbabbbbabbaa\\nbabbabbaabababaaabbbabaa\\nbaaaaaaabbabababbbaabaaa\\naaababaaaaabaaaaabaaabbaabaaaaab\\nabaaabaabaaabaabaaabaaaabbaabaaabbbbbbab\\naaabbbabaababbbbbaabaaba\\nbababbbaabababaabababaab\\nbababbbaaaabaaaabbbaaabbabbaaabb\\nababaaabbababaaabbabbbbabaabaabaabaababb\\nbbabbaabbabaabbbabbabbbaaabbaabaaaaaaaababbbbaaaabbaabab\\naaababababaaaabbaaaaabba\\nbabaababbbbabababaabaaaaababbabaabaaabba\\naaaabaaaabababaaaaabbaaa\\naabaaaaababbbaaaabbbabababbabbaa\\nbbbbaababaabbbabbbbabbaa\\nbaaaaaabaabaaaaaabbaabbaabbabbbbbbbabbabbbbbabbbabaabbab\\nababababbaaaaaabaabaabbb\\nabbbababababbbaababbaabb\\naabbaaabaabbaabbaaaaaabbbbaaabbaabbbaaaa\\nbbabbbbaaababaababbbbbbaabbbbbabbabbabbb\\nbabbbabaabaabbbabaabbaab\\nbbabbbabababbbabaababbbaaabaaaababbbbaba\\nbabbaaaabbbabbbbabbaaaba\\nbbbbababbbababbbbbabbbabbbaabbbbaaabbaaa\\nababbbaababbbabaaaaaaabaabaaaaaabbabaabbaaaaaabababaaabaaaaaababbbbabbbbaababbaabbbbaaab\\naabbbabbaabbaabbbaaabababaaabaabbbabbaba\\nbbbabaabbbabbaabbaabaaaababbababababbbba\\nabaabbbabaaaaabbabaaabbb\\nbababbabaabaabaaaabbbbaabbababba\\naabbaaabaabbbabbaababaaa\\nbaababbbbbabaabaaaaabbab\\nbbbbabbaabbbbbbbabbbaaaaaaabaabababaaaaaabababbbbaababab\\nbaaaabbabbaaaaaababaaaaaabaabbbbababbbbb\\nbaababbbabbbbaaabbaabaaa\\nbbbabbabbbbbabbbbaaaaaaaaaabbabaabaababb\\nbbbbbbaabaabbbaaabbbaaba\\nbbbababaaabbbbbbbbbbababaabaabaababbbbba\\nabbaabbaabbaaaababaaaaababaabaaaaabbbaabaabaaaabaabbabbbbabaabba\\nbaaaabbbaaabbaabaabbbabababbaaab\\nabaaabaaabababaababbbbbb\\nbbbbaaaabbabaabaabaaabaabaabbaaa\\nbbaaabbbbaaaaaaabaabbbbbbbbaabbbaaaaabbb\\nabbaabbabaaabbabaaabbbbabbababba\\nbaabaaaaaabbabaaaabaabbbbaabbaab\\nbabbbababaaababaabaabbaa\\naabbbbaaababbbaaabaaaaab\\nbbaaabbbaabaaabaabbbabba\\nbabbbaaabababaaababbbaab\\naaaaaaaaabbbababaaabbaab\\nbbaabaabbabbbaaababbbaaabbbbbaabbbababba\\nababababbaaabbabbababbbbbbbbabba\\nabbaabbababbbabaabbabbbabbaaaaababbbabababaabbaa\\naabbbabaaaabbbbbababbbbbbabbaaabbabaababaabbabab\\nbabbbaaababaabbbbbbabbaa\\nababaabaaabbaaababaabbbb\\naabaabaaaabbbbaaaabbabaa\\nbaaaabbbbbbababbaabaababaabbabaaababbbbabaaabbbbbbbaaabbabbbbbbaaaaaaabaaaaaabbbbbbaaaba\\nbaaabbabbabbbabaaaabaaba\\nbaaaabbbbbbbbaababbbbbbb\\nbaaaabbaaabbbbbbaababaaa\\naabaababbaaaababaabbabba\\naabbbbaaaabbaaaabaababba\\nbbaaabaaaaaabbbabbabaabababbabbaaababbababaabbab\\nabbabbbaaabaaabbabbabbaa\\naaaaabbbbbbbbbbbabaababbababbbbabbbabbbaabaababb\\nbbbbababbbabaabababbbabaaabaabababaaaabbabaabbabbbaabbab\\nbabbbabbbababbbbabbaabbbabaaaabbbbabbaabaabbabaaabbbbaab\\nbaabaabbaaababbaaababbbbbbaaabbbabaaaaabbbbbaaabbbbaaaaa\\nabaaababaaaabababbaabbab\\nabababaaaaaabaaababbabba\\nabbbaaabbaabbbbbbaaababb\\nbaabbbbbbbbbabbbbbaabbba\\nabaaabaaabbbbbabbbbabbba\\nbabbbabbaabaabaaabaaaaaa\\naaabbabbabaaababbbbabbabbabaaaabaabbababbbbbabba\\naabaaaaaababaaaabababaaaabbbbbbababbaabaabbbaaaa\\nabaaaabbbbbabaaaaabbbbababaabaaa\\naaabbbabaaaabaaaabbabbab\\nbbbbaabbbabbbabbbaaabbbabaabaabbbabbabbbabaaabbaabbababb\\nbabaabbbbbbbababbbaabaababbaaabb\\nabbbbabbbbbbbbbababbaabb\\nabaaaabbaabbbbaabaabbbbbbabbabbababbbbbbabbabbaabababaab\\naaabbabbaaaabbbaabbbabaa\\nbabbbabaabababaaababbaba\\nabbaabbababaaaaaaababaaa\\naabbbabbabababbbabbbbbaa\\naababbbbbaaaaabbbaabbaab\\naabbaabaaabaabaaaabbbaab\\nabaabbbabababaaaaabababb\\nabbbbbbaabaaabaababbabbb\\nbaabaaaaaaabbabaaabbaabbaabbaaab\\nbaababbaababbaabbbbabbaa\\nababababbabaaaabbaaabaab\\nabbabbbbabbbababaabababb\\nbbabbabbbbabaaabaabbbbba\\naaaaaabbbaaaaabbabbababb\\nbaaabaaababbbabaaababbbbbbaabbab\\nbbbbbbbababaababaababbaa\\nbaaaaaaaabaabbbaababbabbbaaaaaabbaabaaaaababbbbaaabaabaa\\naaabbbabbaaaabbbbabbbabababaaabababaabba\\nbbbabbabababbabbbabaaabb\\nbbaaabaaaaaaaaaababaaabb\\naabaabbaaabbbaabbaaabaaaababbaab\\nabbbbaaabbabbbbbbbbbbbaabbabbabbbabbbbab\\naaababaabaababaabbbaabab\\nbaabaabbbbabbbabababbaaa\\nabbbaaabaabaababbbbbababababbaabbabaaaaaabbbbbaa\\naabbbbbbbbbabbbbabaabaab\\nbababaaabbbabbbbababbaba\\nbbabaabbbababaaabaaaaabb\\nbbbbbbaababaababababbbbb\\nbababbbbabbbbbabbaabaaba\\naabaababbbbbbbbabaabbbabbbabbbabbbabbaabaabaaabbababbaba\\nababbbabbaaabbabababbbbbababaabaaabaabaabbbaaaaaaaaabbaabbbababbaaabbabbbbaabbaa\\nbbabbbabaaabbabaabaabaaa\\nbbabbaabbbaaaaabababbbbb\\nbbbbbbaaababbabbaababbaa\\nbbbbbbaabbabababaaaabaab\\nabbaaabbabbababbabababbaaabbbbababbaabbbabbbbbab\\nbbbbababbabbbabbbbaabaaa\\nbbaabaabbababbaaaabbaaaabaaaaaba\\nabbaabaaababbabbabbbabaaaaaabaab\\nbaaaababbbabbabbbbbbaabbabbaaaaabaabbbaaaaabbaaaabaaaaab\\nbbbbbbbabaabaaabbbabbbbaaabbbbababbaaabb\\nbbaaabaaabbaaaaaaaabbaaa\\nbabaabbbabbabbbbbaaabbbbababaabb\\nbbbbabbbbababbbabbabbbaa\\nbaaaaaababbaaaabbbbaabba\\nabbbaaabbbbbababaabbbbbb\\naabbaaaaaababaabbabaabbbbabbaabaaaaaaaaaaababbab\\naaabbabbbbbabababbbbbbab\\nbabaabaabbbabaaaaaabbababaababba\\nabaabbbaabbbbbababaaaaab\\naaabbabbaabababbaabbbbba\\naabaaabaaaaabbbaabbbaabaababbbbbbbbbaabbbbbbaabbbaabbaaa\\nabbaabbbbaaaabbbabbbaabb\\nbbaaabbaaaababaabbbabaababaaaabaaabbbaabbbaababbbaababba\\nbabaababbabaaaaaaaaaabaabbbbbaababbabbaa\\nbbaaabbabbabbbabaaaaabbb\\naaaabababbababbbaabbbbababbaaaaabaaaaaba\\nbbabaabbbbbbbbbaabaaaaab\\nbbabaaababaaababbaaaabaa\\naabbaaabaabbbabaabbbabaa\\nbababaaabbbbbbbabababaaaabaaaaab\\nabaaaabbaaaaababaaaaaaba\\nbaaaabbaaaababababaabaabbaaaaabbbaababba\\nbbababbbbbaaaaabaabababb\\nbbbabbbbbbbbaababbbbaabaabbbbbaa\\nbbbabbbbabaabaaaababbbbaababaabb\\nbbbbababbabbbabbbabbabaa\\nbaaabababaabbbaabbabaabababbabbaabbaabab\\naaababbabaaaaaaabbbaaaba\\nbaaaaaabaabaaabaaabaabba\\nbabbaabababababbaaabbaaa\\nbbbababaaaaaaaabbbbaaaab\\nbababbaabbbabaabbaaaaaba\\nabababbbbbbbabababbabbaa\\naaabbbabbaaabbabaabababa\\naaaabbbababaabbbabbaaaaaabaababbbabbabab\\nbbaaaaababaaabaababaaaabbabaabbbaaaabbaa\\nabbabaabaabbaaabbababbbabaaabaab\\nabbbababaaabbabbaaabbaab\\nabbabbbbabaaababaaabbbaa\\naababaababbaabbbaababbaa\\nbabaabaaaaabaaabbbbbaaab\\naababbbbbaababbbbaabbabb\\nbbbbaaaaabaaaaabbbbaabaabbababbabaaabbaabbbaabab\\nababababbaaaabbbbbbaabbbabbbbbaa\\nbbabbbbbbbababbbbabbabab\\nbbbbbbbbbbabbaabbabbbaaaaabbbabaaabbbbba\\nbbabbbabaabbaaabbbbabbba\\naabaabbbbbaababbaabababa\\nbbaabaabbbbbababbbbbbaaa\\nbababbaaaaaaaabbabbbbaaabbbabaababbbbababbabbbaaabbbaabb\\naabbbbbbbbbbabaabbbbbaaa\\nababbbaabbbaabbbbaaaaaabababaaababbbababbbabababbbaabbbb\\naabbbbbbbaabbbabbbabbaaa\\nbababbababaaaabbabaabbab\\naababbbbababababaaabbaaa\\nbbbbababbbabbbabbaababaa\\nabbbbaaabbaaabbbbaaaaabbaaaaabba\\nabbaabbabbaabaabbabbaabb\\nbaaaabbbaaabbbbabaaabaab\\nbaaabaaabbaababaaaabbaab\\nbaabbbabbbbbbaabbabaabbbbaababab\\nbbabababaaabbbababaababa\\naabaabaabbabbbbababbaaababbbabbbaabbabaabbbbabbabbbbbbbb\\nabaaaababbbbababaabababb\\nabbabbbbaaaabbbbabbabbbbababaabb\\naababaabaaaaabaababaaaba\\nabbbbaaabbaaaaabaaabbaaa\\naabaaabaaabbaaaaaaaabaab\\nbbaaabbbbbbababaaabababa\\nbbbabbabbaaaababbabaabbbaabbbbbbabbaaaaabbababba\\nbbbbababbaaaaabbabbbbbabbaabbabb\\nbbabaabbbbbbaabbbaabbbabaabaaaaabaabbaaa\\nabbaaaabbbbbabbbabaabaaa\\naaabbbbaaaababbabaaaaaba\\nbababbaabaaaabbaaaabbaaa\\nababababaaaabaaaababbaab\\naabaaababbabaabaabaabbbb\\nabbaabbbbbbbabbbbbbbbaabbbababbbaaabbaaabbababaa\\nabbabbbbaaaabaaababbbabaabbbabaaaabbabaa\\naababbbbbaabaabbbbbabaabaababbbbbbbbaaabbbabbaaa\\nbabaaaabbbabbaabbaababba\\nbbabbbabbbbbabaabaaaabaa\\naaaaaabbaabbbababaaabaab\\nabaaaababbbbbbaaabaabaab\\nabaabbbabaaaaabaaaaabbaaaaaababbabbbaabb\\nbbbbaaaaabbaabbabbbbabbbbbabaabaaaabaaab\\nbbabaaabaababbbabbababbbababbaaa\\nbbbbbbbbbbabaaabbaabbabb\\nbbbabbbbabbaabbbbaababbbabbababb\\nbbaaabbabaabbbaabaababab\\nbbabaabaabbbababbaaabbabbbbbaaab\\nabbbbaaaababababbabaabbbabbbbbbb\\nbabaaaaaaabaaabababaababbabbaabbbbaabaaa\\nbaaaabbabbaababaabbababb\\naaaaaaabbaaaabbbbbbaaaaa\\naabaaaaabbbabaabbaababaa\\nabbabaabbbabbbbbbaabaaaaaaaabbaaaaabbaab\\nbaaaabababbbbaaabaababaa\\nbabaaaaabaaabbbbaaabaaaa\\naaabbababaaaaaaaabbbabaa\\nbbabaaabbaaaababaaabaaaa\\nbbaaabbbbabbbbbaaabbbbbaaabbbbbabbabaabababbbbbaabbabbaabbbabbbaaaaaaaababbbbababaabaabb\\naabaaaaaaabababababbabaaaaabbaaa\\nbbbabaaabbaaaaaabbbaaaab\\nabaaaaaabbabaaaabbbaabbabbababaa\\nbbaaabbaaabbbabaababbbbb\\nbbabaaabbababbbababaaaabbabaaaba\\nabbabbbabaaabbbaaabaaaab\\nbaaabbbbbabbbaaabbbaaabb\\nbbaaabbaababbbababaaabba\\naaaaabaaaabbbbabaabbbbaaaababbbbbabaabbbbbabbbaa\\nbbaaaaaaabababbbbabbbbaa\\nababbabbaabaaaaaaaababbb\\nbabbabbabaabaaabbabaababbbbaabbbbbababababaababb\\nabbaaaaabababbbbaaaabababbaaaaabaabaabbb\\nbbaaabbbbaaaabbbaaabbaaa\\nbbabaaabbaaaaaaabbabbaba\\nbbabaabaaabaaabbbaaabababaaaabaa\\nbbbbababbbbabaaababbbaaaababababbaabbbaaabaabbaaaaabbbbb\\nbbaaaaabbbaaabaabaababab\\naaaabaaabaaabbbaaababbab\\naabbaababbabbbbbabbababa\\nbaaaaaaaaabbaabaaabbbbabbaaaaaababaababb\\naabbaaabababababaaaaabbb\\naabaaaaabbbbaabaaaaabaab\\nbbaaaaabbbbabaaaabbbabba\\nbabaaaababbabbbbbbbaaaaa\\nbbbbaabaaaabbbbababbaabaabbbababaabaaaabbaababba\\nbababbbbbabbbaaabbabbaba\\nabbaaaabbabbbaaabaabbabb\\naabbbababaaaababbabbbbab\\nabaaabaabbbbabababbbaaababbabaaababaabba\\nbbbabbabaaabbabbabbabbbabaaababbaaaababababbbbabbabbabaaabaaabaaaaaabaaababbaabb\\nabbbaaabbabaaaaabababbbabababbbbabaabbaa\\naabaaaaabaababbbbaaaaaba\\naaaaaaabbabaaaababbbbaab\\naabaaababbaaabbabaaabaaaaabbaaaababaababbbbbbbbbabaaaaab\\nbbbbbbbbbbaabababbbbbbbbaabbabbb\\nabbbbbbaaabbbbbbaaaaabaabbbbababbabbabab\\nbaaababaabbbaaabababbbbb\\nbababbbabbabaaabbbabababbbbbabbaabbbabbb\\nbaaabbbabaabbabbbbabbaba\\nababbbbabbaaaabbbaababbbaaabbbbbbbabbbabaabaabaabbaabbaabbbaabbaaabaabba\\nbababbbaababbabbaabaabaabbbbaaab\\naaabaabaaabaabbabbaabbaaabbbaaab\\nabaaababbbbbbaabbaabbaab\\naaabbabbaaaaaabbaaabaabb\\nbbbabbabbbbabaabbbabbbabbabbaabbabbaaabb\\nbbaababaabbaabaaaabbbbba\\nababaaaabaabbbaaaaaababb\\nbabaabababaaabaabbbabbbbbbbbbbbbbabaabbbabbbbbaaabbaababbaaabaababbbbaba\\nababbabbbaababababbababbbbabaabaababbabbaabbbbaa\\nbaaaabababbaababaaabaaaaaaabbbaabbababbabaaaaaabbaaabbaaaabaaaaababbbbababbabaab\\naaabbbbaabbabbbbbababaaabababbbbabaabaabaabbbaaaabbbbaab\\naabbbbbbabbaaaabaaabaabb\\nbbbaabbbaaaaaaabbbaabaabbababbbaabababbaabbaaabb\\nbbbbaaaababbbabababaaabb\\nbbaaabbbbababbbababbbaab\\nbbabbabbaabbbbabaaaabababaababaa\\nabaaabaaabaaababbaababaa\\naabaaabbbaabaaaabbbbbbab\\nbaabaaabbabaabababbbabaa\\nababbabbbaabbbbbbabbabaa\\nabbbbaaabbbabbbbbababaaa\\nbbbbbbaabababaaaabaababa\\naabbaabaabaaaabbbaabbaba\\nbbbbbbaaaabbaaaaaabbaabaaaaaabbb\\naaaabbbbaaaaabaabaaaaaabaaabaabb\\nabaaababbaaaababaaaaaaaaabaabbabababbaab\\nbabababbabbabaabaabaabbb\\nbabaaaabbbabbabbbaababab\\naaabbababbbbbbbaabbbbabbbbbbaabbaaabbabbaaaabababaaabbaaababbaab\\nabaabbbabaaaabbbabbbababbaaaabbbbabbabaa\\naabbbbaababbaababbbaabaa\\nbbaabababbaababaaaabbbaa\\nbabaababbbbbabaaaabaaabaabbabbbbaaaaaabbbbaababbabaabaaaaabbbaaababbbbbb\\nbaababbbbaaaaaaabbabbaab\\naaaabbbaababababbbbbbabb\\nbbaaaaaaababbbaaaabbabbabbabaaababbbbbbabbbaaaaabbaababbbaababaa\\naaaaaaabbbaaabaabbbabaabbbabaababbaaabaabbaababb\\nbabaaaabaabbbbaabaaaaaabbaaaaaba\\naabbbaabababbbabbabaaabababbbbbabaababbaaabbaabaaabbaaaabaabbbbbbaaaababbbaabaab\\nbabaaaaaababbbabaabababb\\nbabbabbbabbaababbabbbaab\\nbaabbbabbabbbabbabbbbaaaaaaaaaaaaabaabbaaaababbbabbbaabb\\nbbbaabbbbababbabbbbaaabb\\nbabaabbbbaabaaabaaabababbbaabbbbbbbabbba\\nbababbabbaaabbbabbbbbabb\\nbbabbbabbbabbbbbbbbaaaab\\nbaabaaaaabbaaaabababaaaaaaabbaaa\\nababbbaabbabbabbbaabbbba\\nabbaabbbaaaabbbbaaaaabba\\nbbaababbbbababaaabbaababbabbabaababbbbab\\nbbbabbbbaaaaaabbbbaabaaababaaabbaaaababb\\nbaaaaaabbbbbbabbbbaabbaaababbbbb\\nabbbbbbbababbaaaababaabababbabbaabaaabaababaaaaaabababab\\nababababbbaaaaaabababbbbabaaabbb\\nbaaabbabbbabbbbbbbaaaaabaabababa\\nbaaababaabbaaaaaabababaababbaababaaaabbbbbbbbaaaabaabbaa\\nabbbbbbaababbaabbababaaaaabbbbbaaababbbbaaabbbbb\\naaababaaabaaabaaabaaabbb\\nbaabaaaabbbbbbaabbaabbba\\nababbbabbbbbabbababbabab\\nbbbababaababbbaaaaaaaaaaaaaabababaababab\\naababbbbbabababbbbaaaabb\\nbbaaaaaabbabaabaababbbba\\nbbabaabaabbabaabbaabbabb\\nabbbabaabbbbbbabaaaaabaababaabab\\nbaabbbaabbbababaaaaabbab\\nbabaabababbaabbbabaabbbb\\naabaaaaaababbabbabaabbbb\";","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative(nativeMatch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":19,\"solutions\":_vm.solutions,\"taskInput\":_vm.taskInput},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"19\" :solutions=\"solutions\" :taskInput=\"taskInput\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      taskInput: require('@/assets/input/Day-19.txt').default,\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.rules = {}\n      this.input = []\n\n      let part = 0\n      // For each input\n      input.forEach(i => {\n        // If it's empty, we've reached the second part\n        if (i === '') {\n          part++\n          return\n        }\n\n        if (part === 0) {\n          // If we're still in the first half of the input, split on the colon and replace quotes\n          const split = i.split(': ').map(p => p.replace(/\"/g, ''))\n          // Then save the result in a map/object\n          this.rules[+split[0]] = split[1]\n        } else {\n          // If we're in the second half of the input, just keep the input\n          this.input.push(i)\n        }\n      })\n\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    expandOne: function (current) {\n      // If we've reached a letter, simply return\n      if (current.length === 1 && isNaN(+current)) {\n        return current\n      }\n\n      // Split into parts and then map them recursively\n      const result = current.split(' ').map(p => {\n        if (p === '|') {\n          // ORs are simply kept\n          return '|'\n        } else {\n          // Everything else is resolved recursively\n          return this.expandOne(this.rules[+p])\n        }\n      }).join('')\n\n      // Return the result joined back together\n      return `(${result})`\n    },\n    expandTwo: function (current, prevKey, eleven, eight) {\n      // If we've come from rule 8\n      if (prevKey === 8) {\n        // Increase the counter\n        eight++\n\n        // Some test runs have shown that 5 is the limit we need\n        // If we have reached 5 repetitions, ignore the recursive part and just return the rule without it\n        if (eight >= 5) {\n          return `(${this.expandTwo(this.rules[42], 42, eleven, eight)})`\n        }\n      }\n      // If we've come from rule 11\n      if (prevKey === 11) {\n        // Increase the counter\n        eleven++\n\n        // Some test runs have shown that 5 is the limit we need\n        // If we have reached 5 repetitions, ignore the recursive part and just return the rule without it\n        if (eleven >= 5) {\n          return `(${this.expandTwo(this.rules[42], 42, eleven, eight)}${this.expandTwo(this.rules[31], 31, eleven, eight)})`\n        }\n      }\n\n      // The rest is identical to part 1\n      if (current.length === 1 && isNaN(+current)) {\n        return current\n      }\n\n      const result = current.split(' ').map(p => {\n        if (p === '|') {\n          return '|'\n        } else {\n          return this.expandTwo(this.rules[+p], +p, eleven, eight)\n        }\n      }).join('')\n\n      return `(${result})`\n    },\n    solvePartOne: function () {\n      const overallRule = new RegExp('^' + this.expandOne(this.rules[0]) + '$', 'gm')\n\n      this.solutions.partOne = this.input.filter(m => m.match(overallRule)).length\n    },\n    solvePartTwo: function () {\n      // Replace the rules\n      this.rules[8] = '42 | 42 8'\n      this.rules[11] = '42 31 | 42 11 31'\n\n      // Generate the regex\n      const overallRule = new RegExp('^' + this.expandTwo(this.rules[0], 0, 0, 0) + '$', 'gm')\n\n      this.solutions.partTwo = this.input.filter(m => m.match(overallRule)).length\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day19.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day19.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day19.vue?vue&type=template&id=a670248c&\"\nimport script from \"./Day19.vue?vue&type=script&lang=js&\"\nexport * from \"./Day19.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}