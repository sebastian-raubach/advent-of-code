{"version":3,"sources":["webpack:///./src/components/2021/Day3.vue?c189","webpack:///src/components/2021/Day3.vue","webpack:///./src/components/2021/Day3.vue?b60b","webpack:///./src/components/2021/Day3.vue","webpack:///./node_modules/core-js/internals/array-fill.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.fill.js","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","solvePartOne","bits","solvePartTwo","gamma","epsilon","oxygen","length","filter","mcb","i","co2","lcb","parseInt","join","arr","forEach","o","comp","toDelete","push","index","pop","getBitCount","arrs","reduce","component","toObject","toAbsoluteIndex","lengthOfArrayLike","module","exports","value","O","argumentsLength","arguments","undefined","end","endPos","$","uncurryThis","IndexedObject","toIndexedObject","arrayMethodIsStrict","un$Join","ES3_STRINGS","Object","STRICT_METHOD","target","proto","forced","separator","fill","addToUnscopables","$map","map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","callbackfn"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,mBACpLC,EAAkB,G,wGCOtB,GACEC,WAAY,CACVC,IAAJ,cAEEC,KAAM,WACJ,MAAO,CACLN,UAAW,CACTO,QAAS,KACTC,QAAS,QAIfC,QAAS,CACPP,eAAgB,SAApB,GACM,IAAN,wEAEMR,KAAKgB,aAAaC,GAClBjB,KAAKkB,aAAaD,IAEpBD,aAAc,SAAlB,GAEM,IAAN,sBAEA,+EACA,iFAGMhB,KAAKM,UAAUO,QAAUM,EAAQC,GAEnCF,aAAc,SAAlB,GAMM,IAJA,IAAN,aACA,aAGA,uBACQ,GAAIG,EAAOC,OAAS,EAAG,CAErB,IAAV,sBAEA,gCAEUD,EAASrB,KAAKuB,OAAOF,EAAQG,EAAKC,GAEpC,GAAIC,EAAIJ,OAAS,EAAG,CAElB,IAAV,sBAEA,kCAEUI,EAAM1B,KAAKuB,OAAOG,EAAKC,EAAKF,IAIhCzB,KAAKM,UAAUQ,QAAUc,SAASP,EAAO,GAAGQ,KAAK,IAAK,GAAKD,SAASF,EAAI,GAAGG,KAAK,IAAK,IAEvFN,OAAQ,SAAZ,OAEM,IAAN,KAYM,OAXAO,EAAIC,SAAQ,SAAlB,KAEYC,EAAEP,KAAOQ,GACXC,EAASC,KAAKC,MAIdF,EAASZ,SAAWQ,EAAIR,QAC1BY,EAASG,MAGJP,EAAIP,QAAO,SAAxB,iCAEIe,YAAa,SAAjB,GAEM,OAAOC,EAAKC,QAAO,SAAzB,uFClF6V,I,YCOzVC,EAAY,eACd,EACA3C,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAgC,E,6CCjBf,IAAIC,EAAW,EAAQ,QACnBC,EAAkB,EAAQ,QAC1BC,EAAoB,EAAQ,QAIhCC,EAAOC,QAAU,SAAcC,GAC7B,IAAIC,EAAIN,EAAS1C,MACbsB,EAASsB,EAAkBI,GAC3BC,EAAkBC,UAAU5B,OAC5Bc,EAAQO,EAAgBM,EAAkB,EAAIC,UAAU,QAAKC,EAAW7B,GACxE8B,EAAMH,EAAkB,EAAIC,UAAU,QAAKC,EAC3CE,OAAiBF,IAARC,EAAoB9B,EAASqB,EAAgBS,EAAK9B,GAC/D,MAAO+B,EAASjB,EAAOY,EAAEZ,KAAWW,EACpC,OAAOC,I,kCCdT,IAAIM,EAAI,EAAQ,QACZC,EAAc,EAAQ,QACtBC,EAAgB,EAAQ,QACxBC,EAAkB,EAAQ,QAC1BC,EAAsB,EAAQ,QAE9BC,EAAUJ,EAAY,GAAG1B,MAEzB+B,EAAcJ,GAAiBK,OAC/BC,EAAgBJ,EAAoB,OAAQ,KAIhDJ,EAAE,CAAES,OAAQ,QAASC,OAAO,EAAMC,OAAQL,IAAgBE,GAAiB,CACzEjC,KAAM,SAAcqC,GAClB,OAAOP,EAAQF,EAAgBzD,WAAqBmD,IAAde,EAA0B,IAAMA,O,qBChB1E,IAAIZ,EAAI,EAAQ,QACZa,EAAO,EAAQ,QACfC,EAAmB,EAAQ,QAI/Bd,EAAE,CAAES,OAAQ,QAASC,OAAO,GAAQ,CAClCG,KAAMA,IAIRC,EAAiB,S,kCCVjB,IAAId,EAAI,EAAQ,QACZe,EAAO,EAAQ,QAAgCC,IAC/CC,EAA+B,EAAQ,QAEvCC,EAAsBD,EAA6B,OAKvDjB,EAAE,CAAES,OAAQ,QAASC,OAAO,EAAMC,QAASO,GAAuB,CAChEF,IAAK,SAAaG,GAChB,OAAOJ,EAAKrE,KAAMyE,EAAYvB,UAAU5B,OAAS,EAAI4B,UAAU,QAAKC","file":"js/chunk-71d6fef1.f57fdcac.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":3,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"3\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const bits = input.map(i => i.split('').map(b => +b))\n\n      this.solvePartOne(bits)\n      this.solvePartTwo(bits)\n    },\n    solvePartOne: function (bits) {\n      // Get the bit count per position\n      const bitCount = this.getBitCount(bits)\n      // Calculate gamma and epsilon\n      const gamma = parseInt(bitCount.map(b => Math.floor(b / (bits.length / 2))).join(''), 2)\n      const epsilon = parseInt(bitCount.map(b => 1 - Math.floor(b / (bits.length / 2))).join(''), 2)\n\n      // Get the product for solution part one\n      this.solutions.partOne = gamma * epsilon\n    },\n    solvePartTwo: function (bits) {\n      // Take a copy of the array for each\n      let oxygen = bits.concat()\n      let co2 = bits.concat()\n\n      // Iterate over all positions\n      for (let i = 0; i < bits[0].length; i++) {\n        if (oxygen.length > 1) {\n          // Calculate the bit count for oxygen\n          const oxBc = this.getBitCount(oxygen)\n          // Calculate the most common bit at this position\n          const mcb = Math.floor(oxBc[i] / (oxygen.length / 2))\n          // Filter so we only keep the ones we want\n          oxygen = this.filter(oxygen, mcb, i)\n        }\n        if (co2.length > 1) {\n          // Calculate the bit count for co2\n          const coBc = this.getBitCount(co2)\n          // Calculate the least common bit at this position\n          const lcb = 1 - Math.floor(coBc[i] / (co2.length / 2))\n          // Filter so we only keep the ones we want\n          co2 = this.filter(co2, lcb, i)\n        }\n      }\n\n      this.solutions.partTwo = parseInt(oxygen[0].join(''), 2) * parseInt(co2[0].join(''), 2)\n    },\n    filter: function (arr, comp, i) {\n      // Remember the indices to delete\n      const toDelete = []\n      arr.forEach((o, index) => {\n        // Remove it if it's not the bit we want\n        if (o[i] !== comp) {\n          toDelete.push(index)\n        }\n      })\n      // If we are about to delete them all, remove the last one so we keep at least one\n      if (toDelete.length === arr.length) {\n        toDelete.pop()\n      }\n      // Filter out the ones we no longer want\n      return arr.filter((o, index) => toDelete.indexOf(index) === -1)\n    },\n    getBitCount: function (arrs) {\n      // Reduce the arrays to a single array with the count of 1 bits per dimension\n      return arrs.reduce((a, b) => a.map((v, i) => v + b[i]), new Array(arrs[0].length).fill(0))\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day3.vue?vue&type=template&id=2f7130a9&\"\nimport script from \"./Day3.vue?vue&type=script&lang=js&\"\nexport * from \"./Day3.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = lengthOfArrayLike(O);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar un$Join = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}