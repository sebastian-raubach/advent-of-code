"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[7505],{44196:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day13)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day13.vue?vue&type=template&id=1d1384a8\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":13,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day13.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day13vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      // What to do on which grid cell symbol\n      gridCells: {\n        '|': cart => {},\n        '-': cart => {},\n        '+': cart => {\n          // Adjust the orientation based on the next turn direction\n          cart.or = this.directions[cart.or][cart.nextTurn];\n          // Adjust the next turn based on the next index in the turns array\n          cart.nextTurn = this.turns[(this.turns.indexOf(cart.nextTurn) + 1) % this.turns.length];\n        },\n        '/': cart => {\n          switch (cart.or) {\n            case '^':\n              cart.or = '>';\n              break;\n            case '>':\n              cart.or = '^';\n              break;\n            case 'v':\n              cart.or = '<';\n              break;\n            case '<':\n              cart.or = 'v';\n              break;\n          }\n        },\n        '\\\\': cart => {\n          switch (cart.or) {\n            case '^':\n              cart.or = '<';\n              break;\n            case '>':\n              cart.or = 'v';\n              break;\n            case 'v':\n              cart.or = '>';\n              break;\n            case '<':\n              cart.or = '^';\n              break;\n          }\n        }\n      },\n      // Directions to handle turns and movements\n      directions: {\n        '^': {\n          left: '<',\n          right: '>',\n          straight: '^',\n          move: cart => cart.y--\n        },\n        '>': {\n          left: '^',\n          right: 'v',\n          straight: '>',\n          move: cart => cart.x++\n        },\n        v: {\n          left: '>',\n          right: '<',\n          straight: 'v',\n          move: cart => cart.y++\n        },\n        '<': {\n          left: 'v',\n          right: '^',\n          straight: '<',\n          move: cart => cart.x--\n        }\n      },\n      turns: ['left', 'straight', 'right']\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.solutions.partOne = null;\n      this.solutions.partTwo = null;\n      // Valid cart markers\n      const cartsMarkers = ['^', '>', 'v', '<'];\n\n      // Parse the grid\n      this.grid = input.map(i => i.split(''));\n      // Parse the carts\n      this.carts = [];\n\n      // Go through the grid\n      for (let y = 0; y < this.grid.length; y++) {\n        for (let x = 0; x < this.grid[y].length; x++) {\n          // Check if it's a cart\n          const cartIndex = cartsMarkers.indexOf(this.grid[y][x]);\n          if (cartIndex !== -1) {\n            // Push it to the array with its position, orientation and next turn direction\n            this.carts.push({\n              x: x,\n              y: y,\n              or: this.grid[y][x],\n              nextTurn: 'left'\n            });\n\n            // Replace the symbol on the grid with a rail\n            if (this.grid[y][x] === '<' || this.grid[y][x] === '>') {\n              this.grid[y][x] = '-';\n            } else {\n              this.grid[y][x] = '|';\n            }\n          }\n        }\n      }\n      this.solve();\n    },\n    /**\n     * Sorts the given carts based on their action order, first on y then on x\n     */\n    getCartsInOrder: function (carts) {\n      return carts.concat().sort((a, b) => {\n        if (a.y !== b.y) {\n          return a.y - b.y;\n        } else {\n          return a.x - b.x;\n        }\n      });\n    },\n    solve: function () {\n      let lCarts = this.carts.concat();\n      const locs = new Set();\n      lCarts.forEach(c => locs.add(`${c.x},${c.y}`));\n      while (true) {\n        lCarts = this.getCartsInOrder(lCarts);\n        let pos = 0;\n        while (pos < lCarts.length) {\n          // for (let c = 0; c < lCarts.length; c++) {\n          const cart = lCarts[pos];\n          // Remove the current cart location from the list\n          const oldLoc = `${cart.x},${cart.y}`;\n          locs.delete(oldLoc);\n\n          // Move the cart\n          this.directions[cart.or].move(cart);\n          // Get the grid cell at that location\n          const cell = this.grid[cart.y][cart.x];\n          // Turn the cart if necessary\n          this.gridCells[cell](cart);\n\n          // Check if it collides with any of the others\n          const newLoc = `${cart.x},${cart.y}`;\n\n          // If this was the last cart, we stop here before going any further\n          if (lCarts.length === 1) {\n            this.solutions.partTwo = `${lCarts[0].x},${lCarts[0].y}`;\n            return;\n          }\n\n          // Otherwise, check if this location is occupied\n          if (locs.has(newLoc)) {\n            // If it is, store solution part one if it's the first collision\n            if (!this.solutions.partOne) {\n              this.solutions.partOne = newLoc;\n            }\n\n            // We need to adjust the position, because we are removing items\n            let decrement = 1;\n            lCarts.forEach((c, i) => {\n              // Only count those with the same coordinates but a smaller index\n              if (c.x === cart.x && c.y === cart.y && i < pos) {\n                decrement++;\n              }\n            });\n            // Now actually remove the items\n            lCarts = lCarts.filter(c => !(c.x === cart.x && c.y === cart.y));\n            // Delete the location, cause there's nothing there anymore\n            locs.delete(newLoc);\n            // Decrement the position\n            pos -= decrement;\n          } else {\n            locs.add(newLoc);\n          }\n          pos++;\n        }\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2018/Day13.vue?vue&type=script&lang=js\n /* harmony default export */ const _2018_Day13vue_type_script_lang_js = (Day13vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2018/Day13.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2018_Day13vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day13 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///44196\n")}}]);