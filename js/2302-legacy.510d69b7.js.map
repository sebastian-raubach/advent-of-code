{"version":3,"file":"js/2302-legacy.510d69b7.js","mappings":"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","sources":["webpack://advent-of-code/./src/components/2020/Day14.vue?35fe","webpack://advent-of-code/src/components/2020/Day14.vue","webpack://advent-of-code/./src/components/2020/Day14.vue?b414","webpack://advent-of-code/./src/components/2020/Day14.vue","webpack://advent-of-code/./node_modules/core-js/internals/get-substitution.js","webpack://advent-of-code/./node_modules/core-js/modules/es.array.join.js","webpack://advent-of-code/./node_modules/core-js/modules/es.array.map.js","webpack://advent-of-code/./node_modules/core-js/modules/es.string.replace.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":14,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"14\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      memory: {},\n      input: [],\n      masks: []\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Initialize everything\n      this.memory = {}\n      this.input = []\n      this.masks = []\n      // Loop through input\n      input.forEach(i => {\n        if (i.indexOf('mask') !== -1) {\n          // If it's a mask, parse it\n          this.masks.push(i.replace('mask = ', '').split(''))\n        } else {\n          // Otherwise, split on the equals\n          const parts = i.split(' = ')\n          // Get the memory index\n          const index = +parts[0].replace(/\\D/g, '')\n          // And get the binary representation of the value\n          const value = this.decimalToBinary(+parts[1], 36)\n          // Then push the configuration to an array\n          this.input.push({\n            index: index,\n            mask: this.masks[this.masks.length - 1],\n            value: value\n          })\n        }\n      })\n\n      this.solvePartOne()\n\n      // Reset the memory\n      this.memory = {}\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      this.input.forEach(i => {\n        // Set the memory at the given index to the corrected input\n        this.memory[i.index] = parseInt(this.overwriteBits(i.value, i.mask), 2)\n      })\n\n      // Sum over all set memory addresses\n      this.solutions.partOne = Object.keys(this.memory).map(k => this.memory[k]).reduce((a, b) => a + b)\n    },\n    solvePartTwo: function () {\n      // Loop over the input\n      this.input.forEach(i => {\n        // Convert the index to binary representation\n        const addressBits = this.decimalToBinary(i.index, 36).split('')\n        const mask = i.mask\n\n        // First replace all mask 1's\n        for (let x = 0; x < mask.length; x++) {\n          if (mask[x] === '1') {\n            addressBits[x] = '1'\n          }\n        }\n\n        // Keep track of all final addresses\n        const finalAddresses = []\n        // Get the number of Xs in the mask\n        const numberOfXs = mask.filter(x => x === 'X').length\n\n        // Loop through all 2^#Xs combinations\n        for (let x = 0; x < Math.pow(2, numberOfXs); x++) {\n          // Convert the number to a binary\n          // This gives for #X = 2\n          // 00, 01, 10, 11\n          // For #X = 3 this results in\n          // 000, 001, 010, 011, 100, 101, 110, 111\n          // We then use these bits from right to left to fill the Xs in the address\n          const bin = this.decimalToBinary(x, numberOfXs)\n\n          // Copy the current address\n          const copy = JSON.parse(JSON.stringify(addressBits))\n\n          // Walk through the current address from the right, replacing the positions where the mask has an X with the binary representation of the current loop\n          let position = 0\n          for (let y = addressBits.length - 1; y >= 0; y--) {\n            if (mask[y] === 'X') {\n              copy[y] = bin[bin.length - 1 - position]\n              position++\n            }\n          }\n\n          // Push the address index\n          finalAddresses.push(parseInt(copy.join(''), 2))\n        }\n\n        // Replace all memory indices with the value\n        finalAddresses.forEach(f => {\n          this.memory[f] = parseInt(i.value, 2)\n        })\n      })\n\n      // Sum over all set memory addresses\n      this.solutions.partTwo = Object.keys(this.memory).map(k => this.memory[k]).reduce((a, b) => a + b)\n    },\n    /**\n     * Converts the given decimal to its binary reprentation enforcing a length of at least `length`\n     * @param dec The decimal number to convert\n     * @param length The minimal length of the binary string representation\n     * @returns The binary string representation of the decimal input with at least the specified length\n     */\n    decimalToBinary: function (dec, length) {\n      let result = (dec >>> 0).toString(2)\n      while (result.length < length) {\n        result = '0' + result\n      }\n\n      return result\n    },\n    /**\n     * Overwrites the positions in the input with the mask bits skipping `X` positions\n     * @param input The input to replace on\n     * @param mask The mask to replace with\n     * @returns The replaced input\n     */\n    overwriteBits: function (input, mask) {\n      return input.split('').map((bit, index) => mask[index] === 'X' ? bit : mask[index]).join('')\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day14.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day14.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day14.vue?vue&type=template&id=e3107d18&\"\nimport script from \"./Day14.vue?vue&type=script&lang=js&\"\nexport * from \"./Day14.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n});\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","memory","input","masks","methods","forEach","i","indexOf","index","mask","value","solvePartOne","solvePartTwo","Object","keys","map","x","addressBits","y","copy","bin","length","position","finalAddresses","push","parseInt","join","decimalToBinary","result","overwriteBits","split","component","toObject","floor","Math","replace","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","captures","namedCaptures","replacement","tailPos","m","symbols","undefined","call","match","ch","capture","charAt","slice","n","f","$","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","ES3_STRINGS","STRICT_METHOD","target","proto","forced","separator","$map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","callbackfn","arguments","fixRegExpWellKnownSymbolLogic","anObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","getSubstitution","regExpExec","max","min","maybeToString","it","String","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","regexp","res","done","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","matchStr","accumulatedResult","nextSourcePosition","j","groups","replacerArgs","concat","apply"],"sourceRoot":""}