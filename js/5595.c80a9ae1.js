"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[5595],{80520:function(t,n,e){e.r(n),e.d(n,{default:function(){return h}});var s=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("Day",{attrs:{day:12,year:2021,solutions:t.solutions},on:{"input-changed":t.onInputChanged}})},r=[],i=e(86889),o={components:{Day:i.Z},data:function(){return{solutions:{partOne:null,partTwo:null}}},methods:{onInputChanged:function(t){const n=new Map;t.forEach((t=>{const[e,s]=t.split("-");let r=n.get(e),i=n.get(s);r||(r=[]),i||(i=[]),-1===r.indexOf(s)&&r.push(s),-1===i.indexOf(e)&&i.push(e),n.set(e,r),n.set(s,i)}));const e=this.findAllPaths(n);this.solutions.partOne=e.size;const s=this.findAllPathsWithMultiples(n);this.solutions.partTwo=s.size,this.$nextTick((()=>this.drawGraph(n,this.$refs.partOne,e))),this.$nextTick((()=>this.drawGraph(n,this.$refs.partTwo,s)))},drawGraph:function(t,n,e){},findAllPaths:function(t){const n="start",e=new Set;return this.recurse(n,t,null,[],[],e),e},findAllPathsWithMultiples:function(t){const n="start",e=new Set;return Array.from(t.keys()).filter((t=>"start"!==t&&"end"!==t&&t.toLowerCase()===t)).forEach((s=>this.recurse(n,t,s,[],[],e))),e},recurse:function(t,n,e,s,r,i){if(s.push(t),r.push(t),"end"===t)return void i.add(r.join(","));const o=r.filter((t=>t===e)).length;n.get(t).filter((t=>"start"!==t&&(t===e&&o<2||t===t.toUpperCase()||-1===s.indexOf(t)))).forEach((t=>this.recurse(t,n,e,s.concat(),r.concat(),i)))}}},a=o,u=e(1001),c=(0,u.Z)(a,s,r,!1,null,"36abffa0",null),h=c.exports}}]);
//# sourceMappingURL=5595.c80a9ae1.js.map