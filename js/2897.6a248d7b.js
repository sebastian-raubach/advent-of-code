"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[2897],{80342:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day9)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day9.vue?vue&type=template&id=33527fa9\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":9,\"year\":2017,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day9.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day9vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const tokens = input[0].split('');\n\n      // Create the tree\n      const root = this.parseGroup(tokens, 1);\n\n      // Calculate the score starting from the root\n      this.solutions.partOne = this.calculateScores(root, 0);\n      // Calculate the length of garbage starting from the root\n      this.solutions.partTwo = this.calculateGarbage(root);\n    },\n    calculateGarbage: function (group) {\n      // Start by counting the garbage of this group\n      let total = group.garbage.length;\n      group.children.forEach(c => {\n        // Then add the garbage of all children recursively\n        total += this.calculateGarbage(c);\n      });\n      return total;\n    },\n    calculateScores: function (group, parentScore) {\n      // Increase the score based on the parent score\n      group.score = parentScore + 1;\n      let totalScore = group.score;\n      group.children.forEach(c => {\n        // Then sum together all the child scores recursively\n        const childScore = this.calculateScores(c, group.score);\n        totalScore += childScore;\n      });\n      return totalScore;\n    },\n    parseGroup: function (tokens, startIndex) {\n      // Keep track of the index\n      let index = startIndex;\n      // Keep track of whether we are looking at garbage or noe\n      let isGarbage = false;\n      // Keep track of the current group\n      const group = {\n        startIndex: startIndex,\n        endIndex: null,\n        score: 0,\n        children: [],\n        garbage: ''\n      };\n      while (true) {\n        // Get the next character\n        const token = tokens[index];\n        if (isGarbage) {\n          // If it's garbage\n          if (token === '!') {\n            // Skip the next token if we observe a \"!\"\n            index++;\n          } else if (token === '>') {\n            // This is the end of the garbage\n            isGarbage = false;\n          } else {\n            // Keep track of any garbage tokens that aren't skipped or the starting and ending bracket\n            group.garbage += token;\n          }\n        } else {\n          if (token === '{') {\n            // Parse the child group\n            const childGroup = this.parseGroup(tokens, index + 1);\n            group.children.push(childGroup);\n            // Adjust the index to start again from the end of the last child group\n            index = childGroup.endIndex;\n          } else if (token === '<') {\n            // We have observed the start of garbage\n            isGarbage = true;\n          } else if (token === '}') {\n            // Update the end of this group\n            group.endIndex = index;\n            return group;\n          }\n        }\n\n        // Go to the next token\n        index++;\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2017/Day9.vue?vue&type=script&lang=js\n /* harmony default export */ const _2017_Day9vue_type_script_lang_js = (Day9vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2017/Day9.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2017_Day9vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day9 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAzNDIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMEJBQTBCLGFBQWEsMEJBQTBCLHdCQUF3QixpQkFBaUIsT0FBTyw4Q0FBOEMsS0FBSyxvQ0FBb0M7QUFDeE07Ozs7Ozs7Ozs7OztBQ0tBO0FBRUEsa0VBQWU7RUFDZkE7SUFDQUMsR0FBQUEsRUFBQUEsa0JBQUFBO0VBQ0E7RUFDQUM7SUFDQTtNQUNBQztRQUNBQztRQUNBQztNQUNBO0lBQ0E7RUFDQTtFQUNBQztJQUNBQztNQUNBOztNQUVBO01BQ0E7O01BRUE7TUFDQTtNQUNBO01BQ0E7SUFDQTtJQUNBQztNQUNBO01BQ0E7TUFFQUM7UUFDQTtRQUNBQztNQUNBO01BRUE7SUFDQTtJQUNBQztNQUNBO01BQ0FGO01BRUE7TUFDQUE7UUFDQTtRQUNBO1FBQ0FHO01BQ0E7TUFFQTtJQUNBO0lBQ0FDO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO01BQ0E7TUFDQTtRQUNBO1FBQ0E7UUFFQTtVQUNBO1VBQ0E7WUFDQTtZQUNBQztVQUNBO1lBQ0E7WUFDQUM7VUFDQTtZQUNBO1lBQ0FYO1VBQ0E7UUFDQTtVQUNBO1lBQ0E7WUFDQTtZQUNBQTtZQUNBO1lBQ0FVO1VBQ0E7WUFDQTtZQUNBQztVQUNBO1lBQ0E7WUFDQVg7WUFDQTtVQUNBO1FBQ0E7O1FBRUE7UUFDQVU7TUFDQTtJQUNBO0VBQ0E7QUFDQSxDQUFDLEU7O0FDM0cwUCxDQUFDLHdFQUFlLDJCQUFHLEVBQUMsQzs7OztBQ0E3TDtBQUMzQjtBQUNMOzs7QUFHbEQ7QUFDQSxDQUFzRztBQUN0RyxnQkFBZ0Isc0NBQVU7QUFDMUIsRUFBRSxpQ0FBTTtBQUNSLEVBQUUsTUFBTTtBQUNSLEVBQUUsZUFBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMkNBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZHZlbnQtb2YtY29kZS8uL3NyYy9jb21wb25lbnRzLzIwMTcvRGF5OS52dWU/MGMzNyIsIndlYnBhY2s6Ly9hZHZlbnQtb2YtY29kZS9zcmMvY29tcG9uZW50cy8yMDE3L0RheTkudnVlP2Y2NTEiLCJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9zcmMvY29tcG9uZW50cy8yMDE3L0RheTkudnVlP2Q4ZGUiLCJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9zcmMvY29tcG9uZW50cy8yMDE3L0RheTkudnVlPzRlOGUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0RheScse2F0dHJzOntcImRheVwiOjksXCJ5ZWFyXCI6MjAxNyxcInNvbHV0aW9uc1wiOl92bS5zb2x1dGlvbnN9LG9uOntcImlucHV0LWNoYW5nZWRcIjpfdm0ub25JbnB1dENoYW5nZWR9fSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cbiAgPERheSA6ZGF5PVwiOVwiIDp5ZWFyPVwiMjAxN1wiIDpzb2x1dGlvbnM9XCJzb2x1dGlvbnNcIiBAaW5wdXQtY2hhbmdlZD1cIm9uSW5wdXRDaGFuZ2VkXCI+XG4gIDwvRGF5PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBEYXkgZnJvbSAnQC9jb21wb25lbnRzL0RheSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjb21wb25lbnRzOiB7XG4gICAgRGF5XG4gIH0sXG4gIGRhdGE6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc29sdXRpb25zOiB7XG4gICAgICAgIHBhcnRPbmU6IG51bGwsXG4gICAgICAgIHBhcnRUd286IG51bGxcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvbklucHV0Q2hhbmdlZDogZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICBjb25zdCB0b2tlbnMgPSBpbnB1dFswXS5zcGxpdCgnJylcblxuICAgICAgLy8gQ3JlYXRlIHRoZSB0cmVlXG4gICAgICBjb25zdCByb290ID0gdGhpcy5wYXJzZUdyb3VwKHRva2VucywgMSlcblxuICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBzY29yZSBzdGFydGluZyBmcm9tIHRoZSByb290XG4gICAgICB0aGlzLnNvbHV0aW9ucy5wYXJ0T25lID0gdGhpcy5jYWxjdWxhdGVTY29yZXMocm9vdCwgMClcbiAgICAgIC8vIENhbGN1bGF0ZSB0aGUgbGVuZ3RoIG9mIGdhcmJhZ2Ugc3RhcnRpbmcgZnJvbSB0aGUgcm9vdFxuICAgICAgdGhpcy5zb2x1dGlvbnMucGFydFR3byA9IHRoaXMuY2FsY3VsYXRlR2FyYmFnZShyb290KVxuICAgIH0sXG4gICAgY2FsY3VsYXRlR2FyYmFnZTogZnVuY3Rpb24gKGdyb3VwKSB7XG4gICAgICAvLyBTdGFydCBieSBjb3VudGluZyB0aGUgZ2FyYmFnZSBvZiB0aGlzIGdyb3VwXG4gICAgICBsZXQgdG90YWwgPSBncm91cC5nYXJiYWdlLmxlbmd0aFxuXG4gICAgICBncm91cC5jaGlsZHJlbi5mb3JFYWNoKGMgPT4ge1xuICAgICAgICAvLyBUaGVuIGFkZCB0aGUgZ2FyYmFnZSBvZiBhbGwgY2hpbGRyZW4gcmVjdXJzaXZlbHlcbiAgICAgICAgdG90YWwgKz0gdGhpcy5jYWxjdWxhdGVHYXJiYWdlKGMpXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gdG90YWxcbiAgICB9LFxuICAgIGNhbGN1bGF0ZVNjb3JlczogZnVuY3Rpb24gKGdyb3VwLCBwYXJlbnRTY29yZSkge1xuICAgICAgLy8gSW5jcmVhc2UgdGhlIHNjb3JlIGJhc2VkIG9uIHRoZSBwYXJlbnQgc2NvcmVcbiAgICAgIGdyb3VwLnNjb3JlID0gcGFyZW50U2NvcmUgKyAxXG5cbiAgICAgIGxldCB0b3RhbFNjb3JlID0gZ3JvdXAuc2NvcmVcbiAgICAgIGdyb3VwLmNoaWxkcmVuLmZvckVhY2goYyA9PiB7XG4gICAgICAgIC8vIFRoZW4gc3VtIHRvZ2V0aGVyIGFsbCB0aGUgY2hpbGQgc2NvcmVzIHJlY3Vyc2l2ZWx5XG4gICAgICAgIGNvbnN0IGNoaWxkU2NvcmUgPSB0aGlzLmNhbGN1bGF0ZVNjb3JlcyhjLCBncm91cC5zY29yZSlcbiAgICAgICAgdG90YWxTY29yZSArPSBjaGlsZFNjb3JlXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gdG90YWxTY29yZVxuICAgIH0sXG4gICAgcGFyc2VHcm91cDogZnVuY3Rpb24gKHRva2Vucywgc3RhcnRJbmRleCkge1xuICAgICAgLy8gS2VlcCB0cmFjayBvZiB0aGUgaW5kZXhcbiAgICAgIGxldCBpbmRleCA9IHN0YXJ0SW5kZXhcbiAgICAgIC8vIEtlZXAgdHJhY2sgb2Ygd2hldGhlciB3ZSBhcmUgbG9va2luZyBhdCBnYXJiYWdlIG9yIG5vZVxuICAgICAgbGV0IGlzR2FyYmFnZSA9IGZhbHNlXG4gICAgICAvLyBLZWVwIHRyYWNrIG9mIHRoZSBjdXJyZW50IGdyb3VwXG4gICAgICBjb25zdCBncm91cCA9IHtcbiAgICAgICAgc3RhcnRJbmRleDogc3RhcnRJbmRleCxcbiAgICAgICAgZW5kSW5kZXg6IG51bGwsXG4gICAgICAgIHNjb3JlOiAwLFxuICAgICAgICBjaGlsZHJlbjogW10sXG4gICAgICAgIGdhcmJhZ2U6ICcnXG4gICAgICB9XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAvLyBHZXQgdGhlIG5leHQgY2hhcmFjdGVyXG4gICAgICAgIGNvbnN0IHRva2VuID0gdG9rZW5zW2luZGV4XVxuXG4gICAgICAgIGlmIChpc0dhcmJhZ2UpIHtcbiAgICAgICAgICAvLyBJZiBpdCdzIGdhcmJhZ2VcbiAgICAgICAgICBpZiAodG9rZW4gPT09ICchJykge1xuICAgICAgICAgICAgLy8gU2tpcCB0aGUgbmV4dCB0b2tlbiBpZiB3ZSBvYnNlcnZlIGEgXCIhXCJcbiAgICAgICAgICAgIGluZGV4KytcbiAgICAgICAgICB9IGVsc2UgaWYgKHRva2VuID09PSAnPicpIHtcbiAgICAgICAgICAgIC8vIFRoaXMgaXMgdGhlIGVuZCBvZiB0aGUgZ2FyYmFnZVxuICAgICAgICAgICAgaXNHYXJiYWdlID0gZmFsc2VcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gS2VlcCB0cmFjayBvZiBhbnkgZ2FyYmFnZSB0b2tlbnMgdGhhdCBhcmVuJ3Qgc2tpcHBlZCBvciB0aGUgc3RhcnRpbmcgYW5kIGVuZGluZyBicmFja2V0XG4gICAgICAgICAgICBncm91cC5nYXJiYWdlICs9IHRva2VuXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICh0b2tlbiA9PT0gJ3snKSB7XG4gICAgICAgICAgICAvLyBQYXJzZSB0aGUgY2hpbGQgZ3JvdXBcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkR3JvdXAgPSB0aGlzLnBhcnNlR3JvdXAodG9rZW5zLCBpbmRleCArIDEpXG4gICAgICAgICAgICBncm91cC5jaGlsZHJlbi5wdXNoKGNoaWxkR3JvdXApXG4gICAgICAgICAgICAvLyBBZGp1c3QgdGhlIGluZGV4IHRvIHN0YXJ0IGFnYWluIGZyb20gdGhlIGVuZCBvZiB0aGUgbGFzdCBjaGlsZCBncm91cFxuICAgICAgICAgICAgaW5kZXggPSBjaGlsZEdyb3VwLmVuZEluZGV4XG4gICAgICAgICAgfSBlbHNlIGlmICh0b2tlbiA9PT0gJzwnKSB7XG4gICAgICAgICAgICAvLyBXZSBoYXZlIG9ic2VydmVkIHRoZSBzdGFydCBvZiBnYXJiYWdlXG4gICAgICAgICAgICBpc0dhcmJhZ2UgPSB0cnVlXG4gICAgICAgICAgfSBlbHNlIGlmICh0b2tlbiA9PT0gJ30nKSB7XG4gICAgICAgICAgICAvLyBVcGRhdGUgdGhlIGVuZCBvZiB0aGlzIGdyb3VwXG4gICAgICAgICAgICBncm91cC5lbmRJbmRleCA9IGluZGV4XG4gICAgICAgICAgICByZXR1cm4gZ3JvdXBcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBHbyB0byB0aGUgbmV4dCB0b2tlblxuICAgICAgICBpbmRleCsrXG4gICAgICB9XG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXG48L3N0eWxlPlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC00MC51c2VbMV0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B2dWUvdnVlLWxvYWRlci12MTUvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9EYXk5LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy90aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTQwLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvQHZ1ZS92dWUtbG9hZGVyLXYxNS9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0RheTkudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0RheTkudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTMzNTI3ZmE5XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vRGF5OS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vRGF5OS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B2dWUvdnVlLWxvYWRlci12MTUvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sIm5hbWVzIjpbImNvbXBvbmVudHMiLCJEYXkiLCJkYXRhIiwic29sdXRpb25zIiwicGFydE9uZSIsInBhcnRUd28iLCJtZXRob2RzIiwib25JbnB1dENoYW5nZWQiLCJjYWxjdWxhdGVHYXJiYWdlIiwiZ3JvdXAiLCJ0b3RhbCIsImNhbGN1bGF0ZVNjb3JlcyIsInRvdGFsU2NvcmUiLCJwYXJzZUdyb3VwIiwic3RhcnRJbmRleCIsImVuZEluZGV4Iiwic2NvcmUiLCJjaGlsZHJlbiIsImdhcmJhZ2UiLCJpbmRleCIsImlzR2FyYmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///80342\n")}}]);