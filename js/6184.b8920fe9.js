"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[6184],{45002:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day21)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day21.vue?vue&type=template&id=b1846c86&scoped=true\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":21,\"year\":2017,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day21.vue?vue&type=script&lang=js\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day21vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const rules = new Map();\n      input.forEach(i => {\n        const parts = i.split(' => ');\n        rules.set(parts[0], parts[1]);\n      });\n\n      // const grid = [['.', '#', '.'], ['.', '.', '#'], ['#', '#', '#']]\n      let grid = '.#./..#/###';\n      for (let it = 0; it < 2; it++) {\n        const split = this.splitGrid(grid);\n        const replaced = split.map(s => this.toArray(rules.get(this.findRule(rules, this.alterations(this.toString(s))))));\n        grid = this.joinGrid(replaced);\n        console.log(grid);\n      }\n\n      // const string = this.toString(grid)\n      // const alterations = this.alterations(string)\n      // const matches = this.findRule(rules, alterations)\n\n      // console.log(matches)\n\n      // console.log(this.splitGrid('##.##./#..#../....../##.##./#..#../......'))\n    },\n\n    countBits: input => input.split('').filter(i => i === '#').length,\n    toArray: input => input.split('/').map(r => r.split('')),\n    toString: input => input.map(r => r.join('')).join('/'),\n    flipH: input => input.split('/').map(r => r.split('').reverse().join('')).join('/'),\n    flipV: input => input.split('/').reverse().join('/'),\n    findRule: (rules, alterations) => alterations.filter(a => rules.has(a))[0],\n    joinGrid: function (parts) {\n      const l = parts[0].length;\n      const result = Array.from(Array(l)).map(_ => Array.from(Array(l)));\n      parts.forEach((p, i) => {\n        const yGrid = i / l;\n        const xGrid = i % l;\n        for (let y = 0; y < p.length; y++) {\n          for (let x = 0; x < p.length; x++) {\n            result[yGrid * l + y][xGrid * l + x] = p[y][x];\n          }\n        }\n      });\n      return result;\n    },\n    splitGrid: function (grid) {\n      const arr = this.toArray(grid);\n      const size = arr.length;\n      const l = size % 2 === 0 ? 2 : 3;\n      const results = [];\n      for (let yGrid = 0; yGrid < size / l; yGrid++) {\n        for (let xGrid = 0; xGrid < size / l; xGrid++) {\n          // Now parse the individual grid\n          const sub = [];\n          for (let y = 0; y < l; y++) {\n            const row = [];\n            for (let x = 0; x < l; x++) {\n              row.push(arr[yGrid * l + y][xGrid * l + x]);\n            }\n            sub.push(row);\n          }\n          results.push(sub);\n        }\n      }\n      return results;\n    },\n    alterations: function (input) {\n      let rotations = [];\n      const arr = this.toArray(input);\n      rotations.push(arr);\n      for (let i = 0; i < 3; i++) {\n        rotations.push(this.rotate90(rotations[i]));\n      }\n      rotations = rotations.map(r => this.toString(r));\n\n      // For each rotation, add the flips\n      rotations.forEach(r => {\n        rotations.push(this.flipH(r));\n        rotations.push(this.flipV(r));\n      });\n      return rotations;\n    },\n    rotate90: function (arr) {\n      // Take a copy for the dimensions\n      const res = JSON.parse(JSON.stringify(arr));\n      for (let y = 0; y < arr.length; y++) {\n        for (let x = 0; x < arr[y].length; x++) {\n          res[y][x] = arr[arr.length - x - 1][y];\n        }\n      }\n      return res;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2017/Day21.vue?vue&type=script&lang=js\n /* harmony default export */ const _2017_Day21vue_type_script_lang_js = (Day21vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2017/Day21.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2017_Day21vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b1846c86\",\n  null\n  \n)\n\n/* harmony default export */ const Day21 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///45002\n")}}]);