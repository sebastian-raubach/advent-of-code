"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[2846],{42113:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day4)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2022/Day4.vue?vue&type=template&id=0cced326\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":4,\"year\":2022,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{ref:\"partOne\",attrs:{\"id\":\"partOne\"}})]},proxy:true}])})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(20629);\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2022/Day4.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nlet mapped = null;\n/* harmony default export */ const Day4vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  computed: {\n    ...(0,vuex_esm/* mapGetters */.Se)(['storeDarkMode'])\n  },\n  watch: {\n    storeDarkMode: function () {\n      this.plot();\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const pattern = /(?<ls>\\d+)-(?<le>\\d+),(?<rs>\\d+)-(?<re>\\d+)/;\n      mapped = input.map(i => {\n        const matched = i.match(pattern).groups;\n        return {\n          ls: +matched.ls,\n          le: +matched.le,\n          rs: +matched.rs,\n          re: +matched.re\n        };\n      });\n\n      // Part one is the count of rows where one is contained in the other\n      this.solutions.partOne = mapped.filter(m => m.ls >= m.rs && m.le <= m.re || m.rs >= m.ls && m.re <= m.le).length;\n      // Part two is the count of rows where one is contained in the other or where they overlap\n      this.solutions.partTwo = mapped.filter(m => m.ls >= m.rs && m.le <= m.re || m.rs >= m.ls && m.re <= m.le || m.ls <= m.rs && m.le >= m.rs || m.ls <= m.re && m.le >= m.re).length;\n      this.$nextTick(() => this.plot());\n    },\n    plot: function () {\n      this.$plotly.purge(this.$refs.partOne);\n      const traces = [];\n      let y = 0;\n      mapped.forEach(m => {\n        const lDist = m.le - m.ls;\n        const rDist = m.re - m.rs;\n        if (lDist < rDist) {\n          traces.push({\n            x: [m.rs, m.re],\n            y: [y, y],\n            mode: 'lines+markers',\n            type: 'scatter',\n            line: {\n              color: '#3498db'\n            },\n            marker: {\n              color: '#3498db'\n            }\n          });\n          traces.push({\n            x: [m.ls, m.le],\n            y: [y, y],\n            mode: 'lines+markers',\n            type: 'scatter',\n            line: {\n              color: '#e74c3c'\n            },\n            marker: {\n              color: '#e74c3c'\n            }\n          });\n        } else {\n          traces.push({\n            x: [m.ls, m.le],\n            y: [y, y],\n            mode: 'lines+markers',\n            type: 'scatter',\n            line: {\n              color: '#e74c3c'\n            },\n            marker: {\n              color: '#e74c3c'\n            }\n          });\n          traces.push({\n            x: [m.rs, m.re],\n            y: [y, y],\n            mode: 'lines+markers',\n            type: 'scatter',\n            line: {\n              color: '#3498db'\n            },\n            marker: {\n              color: '#3498db'\n            }\n          });\n        }\n        y += 2;\n      });\n      this.$plotly.newPlot(this.$refs.partOne, traces, {\n        height: traces.length * 4,\n        autosize: true,\n        automargin: false,\n        hovermode: 'closest',\n        showlegend: false,\n        margin: {\n          t: 10,\n          b: 40,\n          l: 50,\n          r: 0\n        },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          title: {\n            text: 'Section',\n            font: {\n              color: this.storeDarkMode ? 'white' : 'black'\n            }\n          },\n          tickfont: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          showgrid: false,\n          showzeroline: false,\n          showticklabels: false\n        }\n      }, {\n        responsive: true,\n        displaylogo: false\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2022/Day4.vue?vue&type=script&lang=js\n /* harmony default export */ const _2022_Day4vue_type_script_lang_js = (Day4vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2022/Day4.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2022_Day4vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day4 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42113\n")}}]);