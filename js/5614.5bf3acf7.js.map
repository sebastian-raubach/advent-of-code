{"version":3,"file":"js/5614.5bf3acf7.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACrMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GAEA,6CACA,yCAEA,oBACA,mBACA,EACAQ,cAAAA,WAEA,gCACA,0BAGA,QACA,oBAEAC,GAAAA,KAAAA,gBAIA,oBACAA,GAAAA,KAAAA,WAAAA,QAGA,QACA,EACAC,cAAAA,WAEA,gCACA,0BAGA,QACA,QAEA,WACA,oBACAC,EAAAA,KAAAA,KAAAA,iBAGA,WACA,oBACAC,EAAAA,KAAAA,KAAAA,WAAAA,SAIAA,EAAAA,SAAAA,IACA,YACA,mBACAH,GAAAA,EAAAA,GACA,GAEA,MAEA,oBACAA,GAAAA,KAAAA,WAAAA,QAIA,QACA,EACAI,aAAAA,WACA,2CACA,EACAC,aAAAA,WACA,2CACA,ICxF4P,I,UCOxPC,GAAY,OACd,EACAzB,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAec,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2018/Day8.vue?fe9f","webpack://advent-of-code/src/components/2018/Day8.vue","webpack://advent-of-code/./src/components/2018/Day8.vue?23f3","webpack://advent-of-code/./src/components/2018/Day8.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":8,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"8\" :year=\"2018\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Split into numbers and parse\n      this.numbersOne = input[0].split(' ').map(c => +c)\n      this.numbersTwo = this.numbersOne.concat()\n\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    parseNodesOne: function () {\n      // Get child and meta count\n      const childCount = this.numbersOne.shift()\n      const metaCount = this.numbersOne.shift()\n\n      // Sum over all children\n      let sum = 0\n      for (let child = 0; child < childCount; child++) {\n        // Get their sums\n        sum += this.parseNodesOne()\n      }\n\n      // Add the meta entries for this node\n      for (let meta = 0; meta < metaCount; meta++) {\n        sum += this.numbersOne.shift()\n      }\n\n      return sum\n    },\n    parseNodesTwo: function () {\n      // Get child and meta count\n      const childCount = this.numbersTwo.shift()\n      const metaCount = this.numbersTwo.shift()\n\n      // Sum up\n      let sum = 0\n      if (childCount > 0) {\n        // If there are children, get their sums\n        const children = []\n        for (let child = 0; child < childCount; child++) {\n          children.push(this.parseNodesTwo())\n        }\n        // Get the meta numbers\n        const meta = []\n        for (let i = 0; i < metaCount; i++) {\n          meta.push(this.numbersTwo.shift())\n        }\n\n        // Use the numbers as indices and sum the values up\n        meta.forEach(c => {\n          const index = c - 1\n          if (index >= 0 && index < children.length) {\n            sum += children[index]\n          }\n        })\n      } else {\n        // Otherwise, just sum up the meta entries\n        for (let m = 0; m < metaCount; m++) {\n          sum += this.numbersTwo.shift()\n        }\n      }\n\n      return sum\n    },\n    solvePartOne: function () {\n      this.solutions.partOne = this.parseNodesOne()\n    },\n    solvePartTwo: function () {\n      this.solutions.partTwo = this.parseNodesTwo()\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day8.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day8.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day8.vue?vue&type=template&id=96241608\"\nimport script from \"./Day8.vue?vue&type=script&lang=js\"\nexport * from \"./Day8.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","parseNodesOne","sum","parseNodesTwo","children","meta","solvePartOne","solvePartTwo","component"],"sourceRoot":""}