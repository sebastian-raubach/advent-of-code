{"version":3,"file":"js/5031.c66b3682.js","mappings":"0JAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,mBACpLC,EAAkB,G,4ECOtB,SACEC,WAAY,CACVC,IAAJA,EAAAA,YAEEC,KAAM,WACJ,MAAO,CACLN,UAAW,CACTO,QAAS,KACTC,QAAS,QAIfC,QAAS,CACPP,eAAgB,SAApBA,GACMR,KAAKM,UAAY,CACfO,QAAS,KACTC,QAAS,MAQX,IANA,IAAN,+CAEA,KACA,KAGA,mBACYE,EAAMC,GAAGC,OAAS,GACpBC,EAAMC,KAAKC,GACXA,EAAU,IAEVA,EAAQD,KAAKJ,EAAMC,GAAGK,OAAOC,MAAM,OAAOC,KAAI,SAAxDH,GACY,MAAO,CACLI,GAAIA,EACJC,GAAG,OAMXP,EAAMC,KAAKC,GAKX,IAFA,IAAN,iCAEA,oBAEQ,IAAR,0BAEA,oCAEQ,GAAIM,EAAYT,OAAS,IAAMlB,KAAKM,UAAUO,QAE5Cb,KAAKM,UAAUO,QAAUc,EAAY,GAAKC,EAAQ,GAElDC,EAAcC,EAASC,QAAQJ,EAAY,MAAO,MAC5D,CAKU,IAHA,IAAV,KAEA,KACA,mBAEYK,QAA+BC,IAAhBH,EAASI,IAEnBL,EAAcK,IAAMJ,EAASI,KAEhCC,EAAYD,EAEZL,EAAcK,IAAK,GAKvB,GAAIF,EAAa,CACfhC,KAAKM,UAAUQ,QAAUgB,EAASK,GAAaP,EAAQ,GACvD,UAKRQ,WAAY,SAAhBA,EAAAA,GAAA,WACM,OAAOjB,EAAMK,KAAI,SAAvB,GAQQ,OAPAU,EAAEG,SAAQ,SAAlBH,GACUI,EAAED,SAAQ,SAApBC,GAEYb,EAAEC,GAAKD,EAAEA,IAAMc,QAIZ,EAAf,kBAGIC,WAAY,SAAhBA,GAEM,IAAN,iGACA,yGAEM,OAAIC,GAAeC,EAEVC,EAAKC,QAAO,SAA3B,mGAEQ,KC5GiQ,I,cCOrQC,GAAY,OACd,EACA/C,EACAW,GACA,EACA,KACA,KACA,MAIF,QAAeoC,EAAiB,S,gBClBhC,IAAIC,EAAQ,EAAQ,OAChBC,EAAc,EAAQ,OAEtBC,EAAM,MAIVC,EAAOC,QAAU,SAAUC,GACzB,OAAOL,GAAM,WACX,QAASC,EAAYI,MAAkBH,EAAIG,MAAkBH,GAAOD,EAAYI,GAAaC,OAASD,O,6BCR1G,IAAIE,EAAI,EAAQ,OACZC,EAAO,aACPC,EAA+B,EAAQ,OACvCC,EAA0B,EAAQ,OAElCC,EAAsBF,EAA6B,OAEnDG,EAAiBF,EAAwB,OAK7CH,EAAE,CAAEM,OAAQ,QAASC,OAAO,EAAMC,QAASJ,IAAwBC,GAAkB,CACnFlC,IAAK,SAAasC,GAChB,OAAOR,EAAKtD,KAAM8D,EAAYC,UAAU7C,OAAS,EAAI6C,UAAU,QAAK9B,O,6BCdxE,IAAIoB,EAAI,EAAQ,OACZW,EAAQ,cACRC,EAAyB,EAAQ,OAIrCZ,EAAE,CAAEM,OAAQ,SAAUC,OAAO,EAAMC,OAAQI,EAAuB,SAAW,CAC3E3C,KAAM,WACJ,OAAO0C,EAAMhE","sources":["webpack://advent-of-code/./src/components/2021/Day4.vue?d2be","webpack://advent-of-code/src/components/2021/Day4.vue","webpack://advent-of-code/./src/components/2021/Day4.vue?aae7","webpack://advent-of-code/./src/components/2021/Day4.vue","webpack://advent-of-code/./node_modules/core-js/internals/string-trim-forced.js","webpack://advent-of-code/./node_modules/core-js/modules/es.array.map.js","webpack://advent-of-code/./node_modules/core-js/modules/es.string.trim.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":4,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"4\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.solutions = {\n        partOne: null,\n        partTwo: null\n      }\n      const numbers = input[0].split(',').map(i => +i)\n\n      const grids = []\n      let current = []\n\n      // Parse the grids\n      for (let i = 2; i < input.length; i++) {\n        if (input[i].length < 1) {\n          grids.push(current)\n          current = []\n        } else {\n          current.push(input[i].trim().split(/\\s+/).map(n => {\n            return {\n              n: +n,\n              m: false\n            }\n          }))\n        }\n      }\n\n      grids.push(current)\n\n      // Remember which grids are complete\n      const gridsComplete = grids.map(_ => false)\n\n      for (let i = 0; i < numbers.length; i++) {\n        // Mark the numbers and get back the sum of non-marked values or `undefined` if not complete\n        const complete = this.markNumber(grids, numbers[i])\n        // Check if any of them are actually complete\n        const anyComplete = complete.filter(g => g)\n\n        if (anyComplete.length > 0 && !this.solutions.partOne) {\n          // If at least one is complete and we've not found solution 1 yet, this is it\n          this.solutions.partOne = anyComplete[0] * numbers[i]\n          // Mark as complete\n          gridsComplete[complete.indexOf(anyComplete[0])] = true\n        } else {\n          // Otherwise, check if all are now complete\n          let allComplete = true\n          // Get the index of the last one\n          let lastIndex = -1\n          for (let g = 0; g < grids.length; g++) {\n            // Check if this one is also complete\n            allComplete &= complete[g] !== undefined\n            // If it wasn't complete before, but it is now\n            if (!gridsComplete[g] && complete[g]) {\n              // Remember the index\n              lastIndex = g\n              // Mark as complete\n              gridsComplete[g] = true\n            }\n          }\n\n          // If all are complete after this iteration, we found our solution 2\n          if (allComplete) {\n            this.solutions.partTwo = complete[lastIndex] * numbers[i]\n            break\n          }\n        }\n      }\n    },\n    markNumber: function (grids, number) {\n      return grids.map(g => {\n        g.forEach(r => {\n          r.forEach(n => {\n            // Change the marked state\n            n.m |= n.n === number\n          })\n        })\n\n        return this.isComplete(g)\n      })\n    },\n    isComplete: function (grid) {\n      // Check if any row or column is complete\n      const rowComplete = grid.filter(r => r.filter(r => r.m).length === r.length).length > 0\n      const colComplete = grid[0].filter((c, index) => grid.filter(r => r[index].m).length === grid.length).length > 0\n\n      if (rowComplete || colComplete) {\n        // Calculate the sum of all non-marked items\n        return grid.reduce((prev, row) => prev + row.map(c => c.m ? 0 : c.n).reduce((a, b) => a + b), 0)\n      } else {\n        return undefined\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day4.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day4.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day4.vue?vue&type=template&id=3f226825&\"\nimport script from \"./Day4.vue?vue&type=script&lang=js&\"\nexport * from \"./Day4.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","input","i","length","grids","push","current","trim","split","map","n","m","anyComplete","numbers","gridsComplete","complete","indexOf","allComplete","undefined","g","lastIndex","markNumber","forEach","r","number","isComplete","rowComplete","colComplete","grid","reduce","component","fails","whitespaces","non","module","exports","METHOD_NAME","name","$","$map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","$trim","forcedStringTrimMethod"],"sourceRoot":""}