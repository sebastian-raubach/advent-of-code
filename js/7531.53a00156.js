"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[7531],{71259:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Day5)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day5.vue?vue&type=template&id=624ec195&scoped=true\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'Day\',{attrs:{"day":5,"year":2021,"solutions":_vm.solutions},on:{"input-changed":_vm.onInputChanged},scopedSlots:_vm._u([{key:"partOne",fn:function(){return [_c(\'div\',{staticClass:"canvas-holder"},[_c(\'canvas\',{staticClass:"canvas",attrs:{"id":"partOne","width":"800","height":"500"}})])]},proxy:true},{key:"partTwo",fn:function(){return [_c(\'div\',{staticClass:"canvas-holder"},[_c(\'canvas\',{staticClass:"canvas",attrs:{"id":"partTwo","width":"800","height":"500"}})])]},proxy:true}])})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(86889);\n// EXTERNAL MODULE: ./src/util/color.js\nvar color = __webpack_require__(47695);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day5.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ const Day5vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const points = [];\n      input.forEach(r => {\n        const coords = r.split(\' -> \').map(c => c.split(\',\').map(i => +i));\n        if (coords[0][0] === coords[1][0]) {\n          // Same x\n          coords.sort((a, b) => a[1] - b[1]);\n          for (let i = 0; i <= coords[1][1] - coords[0][1]; i++) {\n            points.push({\n              x: coords[0][0],\n              y: coords[0][1] + i,\n              diag: false\n            });\n          }\n        } else if (coords[0][1] === coords[1][1]) {\n          // Same y\n          coords.sort((a, b) => a[0] - b[0]);\n          for (let i = 0; i <= coords[1][0] - coords[0][0]; i++) {\n            points.push({\n              x: coords[0][0] + i,\n              y: coords[0][1],\n              diag: false\n            });\n          }\n        } else {\n          // Diagonal\n          // Sort by x\n          coords.sort((a, b) => a[0] - b[0]);\n          // Then determine delta x and y\n          const deltaX = Math.sign(coords[1][0] - coords[0][0]);\n          const deltaY = Math.sign(coords[1][1] - coords[0][1]);\n          for (let i = 0; i <= coords[1][0] - coords[0][0]; i++) {\n            points.push({\n              x: coords[0][0] + deltaX * i,\n              y: coords[0][1] + deltaY * i,\n              diag: true\n            });\n          }\n        }\n      });\n      const map = new Map();\n      // Only use points that aren\'t diagonal\n      this.solutions.partOne = points.filter(p => !p.diag).map(p => this.addToMap(p, map)).filter(p => p > 0).length;\n      this.$nextTick(() => this.draw(map, \'partOne\'));\n      const map2 = new Map();\n      // Use all points this time\n      this.solutions.partTwo = points.map(p => this.addToMap(p, map2)).filter(p => p > 0).length;\n      this.$nextTick(() => this.draw(map2, \'partTwo\'));\n    },\n    addToMap: function (p, map) {\n      const c = `${p.x},${p.y}`;\n      if (map.has(c)) {\n        // Increase the counter\n        const oldValue = map.get(c);\n        map.set(c, oldValue + 1);\n\n        // Count how many have 2 or more\n        if (oldValue === 1) {\n          return 1;\n        } else {\n          return 0;\n        }\n      } else {\n        map.set(c, 1);\n        return 0;\n      }\n    },\n    draw: function (map, id) {\n      let minX = Number.MAX_SAFE_INTEGER;\n      let maxX = -Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n      let maxY = -Number.MAX_SAFE_INTEGER;\n      let maxV = 0;\n      map.forEach((value, key) => {\n        const coords = key.split(\',\').map(c => +c);\n        minX = Math.min(minX, coords[0]);\n        minY = Math.min(minY, coords[1]);\n        maxX = Math.max(maxX, coords[0]);\n        maxY = Math.max(maxY, coords[1]);\n        maxV = Math.max(maxV, value);\n      });\n      const gradient = (0,color/* createColorGradient */.wH)(\'#C4E538\', \'#006266\', maxV);\n\n      // Initialise the canvas\n      const canvas = document.getElementById(id);\n      const ctx = canvas.getContext(\'2d\');\n      // Set the canvas size\n      canvas.width = minX + maxX;\n      canvas.height = minY + maxY;\n      map.forEach((value, key) => {\n        const coords = key.split(\',\').map(c => +c);\n        ctx.fillStyle = gradient[value - 1];\n        ctx.fillRect(coords[0], coords[1], 1, 1);\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2021/Day5.vue?vue&type=script&lang=js\n /* harmony default export */ const _2021_Day5vue_type_script_lang_js = (Day5vue_type_script_lang_js); \n;// CONCATENATED MODULE: ./node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day5.vue?vue&type=style&index=0&id=624ec195&prod&scoped=true&lang=css\n// extracted by mini-css-extract-plugin\n\n;// CONCATENATED MODULE: ./src/components/2021/Day5.vue?vue&type=style&index=0&id=624ec195&prod&scoped=true&lang=css\n\n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2021/Day5.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2021_Day5vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "624ec195",\n  null\n  \n)\n\n/* harmony default export */ const Day5 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///71259\n')},47695:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dZ: () => (/* binding */ VIRIDIS),\n/* harmony export */   fb: () => (/* binding */ createMultiColorGradient),\n/* harmony export */   wH: () => (/* binding */ createColorGradient)\n/* harmony export */ });\n/* unused harmony exports hexToRgb, rgbToHex */\nconst VIRIDIS = ['#440154', '#48186a', '#472d7b', '#424086', '#3b528b', '#33638d', '#2c728e', '#26828e', '#21918c', '#1fa088', '#28ae80', '#3fbc73', '#5ec962', '#84d44b', '#addc30', '#d8e219', '#fde725'];\n\n/**\n * Converts a HEX value into an RGB object\n * @param {String} hex The hex color\n */\nconst hexToRgb = hex => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\n/**\n * Converts the given R, G, B values into a HEX color\n * @param {Number} r The red color component\n * @param {Number} g The green color component\n * @param {Number} b The blue color component\n */\nconst rgbToHex = (r, g, b) => {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n};\n\n/**\n * Creates a linear gradient between the two given colors with the given number of steps\n * @param {String} one The first color in HEX\n * @param {String} two The second color in HEX\n * @param {Number} steps The number of steps between the two colors\n */\nconst createColorGradient = (one, two, steps) => {\n  const oneRgb = hexToRgb(one);\n  const twoRgb = hexToRgb(two);\n  if (steps < 2) {\n    return [one];\n  }\n  const result = [];\n  for (let i = 0; i < steps; i++) {\n    const iNorm = i / (steps - 1);\n    result.push(rgbToHex(Math.floor(oneRgb.r + iNorm * (twoRgb.r - oneRgb.r)), Math.floor(oneRgb.g + iNorm * (twoRgb.g - oneRgb.g)), Math.floor(oneRgb.b + iNorm * (twoRgb.b - oneRgb.b))));\n  }\n  return result;\n};\nconst createMultiColorGradient = (colors, steps) => {\n  if (colors.length > steps) {\n    return colors.slice(0, steps);\n  }\n  const sections = colors.length - 1;\n  let result = [];\n  for (let i = 0; i < sections - 1; i++) {\n    result = result.concat(createColorGradient(colors[i], colors[i + 1], Math.max(1, Math.floor(steps / sections))));\n  }\n  while (result.length < steps) {\n    result.push(colors[colors.length - 1]);\n  }\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFFSSxLQUFLLENBQUM7RUFDL0I7RUFFQSxNQUFNVyxRQUFRLEdBQUdGLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLENBQUM7RUFFbEMsSUFBSXRCLE1BQU0sR0FBRyxFQUFFO0VBRWYsS0FBSyxJQUFJZSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdRLFFBQVEsR0FBRyxDQUFDLEVBQUVSLENBQUMsRUFBRSxFQUFFO0lBQ3JDZixNQUFNLEdBQUdBLE1BQU0sQ0FBQ3dCLE1BQU0sQ0FBQ2YsbUJBQW1CLENBQUNZLE1BQU0sQ0FBQ04sQ0FBQyxDQUFDLEVBQUVNLE1BQU0sQ0FBQ04sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFRyxJQUFJLENBQUNPLEdBQUcsQ0FBQyxDQUFDLEVBQUVQLElBQUksQ0FBQ0MsS0FBSyxDQUFDUCxLQUFLLEdBQUdXLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNsSDtFQUVBLE9BQU92QixNQUFNLENBQUNzQixNQUFNLEdBQUdWLEtBQUssRUFBRTtJQUM1QlosTUFBTSxDQUFDaUIsSUFBSSxDQUFDSSxNQUFNLENBQUNBLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBQ3hDO0VBRUEsT0FBT3RCLE1BQU07QUFDZixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9zcmMvdXRpbC9jb2xvci5qcz8zODVhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFZJUklESVMgPSBbJyM0NDAxNTQnLCAnIzQ4MTg2YScsICcjNDcyZDdiJywgJyM0MjQwODYnLCAnIzNiNTI4YicsICcjMzM2MzhkJywgJyMyYzcyOGUnLCAnIzI2ODI4ZScsICcjMjE5MThjJywgJyMxZmEwODgnLCAnIzI4YWU4MCcsICcjM2ZiYzczJywgJyM1ZWM5NjInLCAnIzg0ZDQ0YicsICcjYWRkYzMwJywgJyNkOGUyMTknLCAnI2ZkZTcyNSddXG5cbi8qKlxuICogQ29udmVydHMgYSBIRVggdmFsdWUgaW50byBhbiBSR0Igb2JqZWN0XG4gKiBAcGFyYW0ge1N0cmluZ30gaGV4IFRoZSBoZXggY29sb3JcbiAqL1xuY29uc3QgaGV4VG9SZ2IgPSAoaGV4KSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IC9eIz8oW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkkL2kuZXhlYyhoZXgpXG4gIHJldHVybiByZXN1bHRcbiAgICA/IHtcbiAgICAgIHI6IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpLFxuICAgICAgZzogcGFyc2VJbnQocmVzdWx0WzJdLCAxNiksXG4gICAgICBiOiBwYXJzZUludChyZXN1bHRbM10sIDE2KVxuICAgIH1cbiAgICA6IG51bGxcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyB0aGUgZ2l2ZW4gUiwgRywgQiB2YWx1ZXMgaW50byBhIEhFWCBjb2xvclxuICogQHBhcmFtIHtOdW1iZXJ9IHIgVGhlIHJlZCBjb2xvciBjb21wb25lbnRcbiAqIEBwYXJhbSB7TnVtYmVyfSBnIFRoZSBncmVlbiBjb2xvciBjb21wb25lbnRcbiAqIEBwYXJhbSB7TnVtYmVyfSBiIFRoZSBibHVlIGNvbG9yIGNvbXBvbmVudFxuICovXG5jb25zdCByZ2JUb0hleCA9IChyLCBnLCBiKSA9PiB7XG4gIHJldHVybiAnIycgKyAoKDEgPDwgMjQpICsgKHIgPDwgMTYpICsgKGcgPDwgOCkgKyBiKS50b1N0cmluZygxNikuc2xpY2UoMSlcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgbGluZWFyIGdyYWRpZW50IGJldHdlZW4gdGhlIHR3byBnaXZlbiBjb2xvcnMgd2l0aCB0aGUgZ2l2ZW4gbnVtYmVyIG9mIHN0ZXBzXG4gKiBAcGFyYW0ge1N0cmluZ30gb25lIFRoZSBmaXJzdCBjb2xvciBpbiBIRVhcbiAqIEBwYXJhbSB7U3RyaW5nfSB0d28gVGhlIHNlY29uZCBjb2xvciBpbiBIRVhcbiAqIEBwYXJhbSB7TnVtYmVyfSBzdGVwcyBUaGUgbnVtYmVyIG9mIHN0ZXBzIGJldHdlZW4gdGhlIHR3byBjb2xvcnNcbiAqL1xuY29uc3QgY3JlYXRlQ29sb3JHcmFkaWVudCA9IChvbmUsIHR3bywgc3RlcHMpID0+IHtcbiAgY29uc3Qgb25lUmdiID0gaGV4VG9SZ2Iob25lKVxuICBjb25zdCB0d29SZ2IgPSBoZXhUb1JnYih0d28pXG5cbiAgaWYgKHN0ZXBzIDwgMikge1xuICAgIHJldHVybiBbb25lXVxuICB9XG5cbiAgY29uc3QgcmVzdWx0ID0gW11cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGVwczsgaSsrKSB7XG4gICAgY29uc3QgaU5vcm0gPSAoaSAvIChzdGVwcyAtIDEpKVxuICAgIHJlc3VsdC5wdXNoKHJnYlRvSGV4KFxuICAgICAgTWF0aC5mbG9vcihvbmVSZ2IuciArIGlOb3JtICogKHR3b1JnYi5yIC0gb25lUmdiLnIpKSxcbiAgICAgIE1hdGguZmxvb3Iob25lUmdiLmcgKyBpTm9ybSAqICh0d29SZ2IuZyAtIG9uZVJnYi5nKSksXG4gICAgICBNYXRoLmZsb29yKG9uZVJnYi5iICsgaU5vcm0gKiAodHdvUmdiLmIgLSBvbmVSZ2IuYikpXG4gICAgKSlcbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG5cbmNvbnN0IGNyZWF0ZU11bHRpQ29sb3JHcmFkaWVudCA9IChjb2xvcnMsIHN0ZXBzKSA9PiB7XG4gIGlmIChjb2xvcnMubGVuZ3RoID4gc3RlcHMpIHtcbiAgICByZXR1cm4gY29sb3JzLnNsaWNlKDAsIHN0ZXBzKVxuICB9XG5cbiAgY29uc3Qgc2VjdGlvbnMgPSBjb2xvcnMubGVuZ3RoIC0gMVxuXG4gIGxldCByZXN1bHQgPSBbXVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2VjdGlvbnMgLSAxOyBpKyspIHtcbiAgICByZXN1bHQgPSByZXN1bHQuY29uY2F0KGNyZWF0ZUNvbG9yR3JhZGllbnQoY29sb3JzW2ldLCBjb2xvcnNbaSArIDFdLCBNYXRoLm1heCgxLCBNYXRoLmZsb29yKHN0ZXBzIC8gc2VjdGlvbnMpKSkpXG4gIH1cblxuICB3aGlsZSAocmVzdWx0Lmxlbmd0aCA8IHN0ZXBzKSB7XG4gICAgcmVzdWx0LnB1c2goY29sb3JzW2NvbG9ycy5sZW5ndGggLSAxXSlcbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0IHtcbiAgaGV4VG9SZ2IsXG4gIHJnYlRvSGV4LFxuICBjcmVhdGVDb2xvckdyYWRpZW50LFxuICBjcmVhdGVNdWx0aUNvbG9yR3JhZGllbnQsXG4gIFZJUklESVNcbn1cbiJdLCJuYW1lcyI6WyJWSVJJRElTIiwiaGV4VG9SZ2IiLCJoZXgiLCJyZXN1bHQiLCJleGVjIiwiciIsInBhcnNlSW50IiwiZyIsImIiLCJyZ2JUb0hleCIsInRvU3RyaW5nIiwic2xpY2UiLCJjcmVhdGVDb2xvckdyYWRpZW50Iiwib25lIiwidHdvIiwic3RlcHMiLCJvbmVSZ2IiLCJ0d29SZ2IiLCJpIiwiaU5vcm0iLCJwdXNoIiwiTWF0aCIsImZsb29yIiwiY3JlYXRlTXVsdGlDb2xvckdyYWRpZW50IiwiY29sb3JzIiwibGVuZ3RoIiwic2VjdGlvbnMiLCJjb25jYXQiLCJtYXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///47695\n")}}]);