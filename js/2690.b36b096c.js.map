{"version":3,"file":"js/2690.b36b096c.js","mappings":"yKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,gBAAgBC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACT,EAAG,UAAU,CAACE,MAAM,CAAC,cAAc,OAAO,MAAQN,EAAIc,OAAO,WAAW,GAAG,eAAed,EAAIe,eAAeX,EAAG,eAAe,CAACE,MAAM,CAAC,aAAaN,EAAIc,OAAOE,OAAO,WAAW,IAAIC,MAAM,CAACC,MAAOlB,EAAe,YAAEmB,SAAS,SAAUC,GAAMpB,EAAIe,YAAYK,CAAG,EAAEC,WAAW,iBAAiB,EAAEC,OAAM,MAAS,EAC5iBC,EAAkB,G,WCYtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAnB,UAAAA,CACAoB,QAAAA,KACAC,QAAAA,MAEAb,YAAAA,EACAD,OAAAA,GAEA,EACAe,QAAAA,CACApB,eAAAA,SAAAA,GACA,qBACA,wBACAqB,EAAAA,SAAAA,IAEA,kDACA,2BACA,iCAOA,GAJA,uBACA,uBAGA,oBAEA,CACA,4BACAC,EAAAA,KAAAA,GACA,qBACA,MALA,uBAKA,IAGA,oBACA,mBACA,EACAC,aAAAA,WACA,iCAGA,kDAGA,KAGA,gBAEA,sGAGAC,EAAAA,SAAAA,KACA,kBACAC,EAAAA,KAAAA,EACA,IAGAA,EAAAA,OAGA,kBAEAC,EAAAA,KAAAA,GACAC,EAAAA,OAAAA,EACA,CAEA,iCACA,EACAC,aAAAA,WACA,eACA,iCAGA,kDACA,KAGA,6CAEA,IACA,EADA,IAGA,uCAkBA,GAhBAC,EAAAA,SAAAA,CAAAA,EAAAA,KACA,yBACAH,EAAAA,KAAAA,EAAAA,QACAG,EAAAA,GAAAA,KACA,IAIAC,EAAAA,GACAD,EAAAA,SAAAA,CAAAA,EAAAA,KACA,UACAC,EAAAA,KAAAA,EACA,IAIA,YAEA,sGAGAN,EAAAA,SAAAA,KACA,kBACAC,EAAAA,KAAAA,EACA,IAGAA,EAAAA,OAGAK,EAAAA,SAAAA,IAEA,kBAEA,IAEAH,EAAAA,OAAAA,GAGAE,EAAAA,GAAAA,CACAE,OAAAA,EACAC,OAAAA,EAAAA,EAAAA,WAAAA,GAAAA,GAEA,GAEA,CAGA,kBACAA,OAAAA,EACAC,QAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,IACAC,QAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,IACAC,QAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,IACAC,QAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,IACAC,QAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,IACAC,KAAAA,EAAAA,KAAAA,MAIAN,GACA,CAEA,0BACA,ICrK4P,I,UCOxPO,GAAY,OACd,EACAjD,EACAwB,GACA,EACA,KACA,KACA,MAIF,EAAeyB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2018/Day7.vue?d2a9","webpack://advent-of-code/src/components/2018/Day7.vue","webpack://advent-of-code/./src/components/2018/Day7.vue?4e72","webpack://advent-of-code/./src/components/2018/Day7.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":7,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partTwo\",fn:function(){return [_c('b-table',{attrs:{\"table-class\":\"mt-3\",\"items\":_vm.output,\"per-page\":10,\"current-page\":_vm.currentPage}}),_c('b-pagination',{attrs:{\"total-rows\":_vm.output.length,\"per-page\":10},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"7\" :year=\"2018\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partTwo>\n      <!-- Table with pagination to visualize part two -->\n      <b-table table-class=\"mt-3\" :items=\"output\" :per-page=\"10\" :current-page=\"currentPage\"/>\n      <b-pagination v-model=\"currentPage\" :total-rows=\"output.length\" :per-page=\"10\" />\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      currentPage: 0,\n      output: []\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.mapping = new Map()\n      this.allLetters = new Set()\n      input.forEach(i => {\n        // Parse the individual parts\n        const parts = i.split(' must be finished before step ')\n        const from = parts[0].replace('Step ', '')\n        const to = parts[1].replace(' can begin.', '')\n\n        // Add them to the set of all letters\n        this.allLetters.add(from)\n        this.allLetters.add(to)\n\n        // Store them in reverse order, so each step knows its predecessors\n        if (!this.mapping.has(to)) {\n          this.mapping.set(to, [from])\n        } else {\n          const temp = this.mapping.get(to)\n          temp.push(from)\n          this.mapping.set(to, temp)\n        }\n      })\n\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      const letters = new Set(this.allLetters)\n\n      // Get the initially available steps\n      const start = [...letters].filter(l => !this.mapping.has(l)).sort()\n\n      // Keep track of the completed steps\n      const seen = []\n\n      // While there are steps to complete\n      while (letters.size > 0) {\n        // Get the ones that can run next\n        const next = [...letters].filter(l => this.mapping.has(l) && this.mapping.get(l).every(t => seen.includes(t))).sort()\n\n        // Add them all to the array\n        next.forEach(n => {\n          if (start.indexOf(n) === -1) {\n            start.push(n)\n          }\n        })\n        // Sort it\n        start.sort()\n\n        // Get the one with the lowest character\n        const current = start.shift()\n        // Mark it as complete\n        seen.push(current)\n        letters.delete(current)\n      }\n\n      this.solutions.partOne = seen.join('')\n    },\n    solvePartTwo: function () {\n      this.output = []\n      const letters = new Set(this.allLetters)\n\n      // Get the initially available steps\n      const start = [...letters].filter(l => !this.mapping.has(l)).sort()\n      const seen = []\n\n      // Keep track of what workers are doing\n      const workers = Array.from(Array(5).keys()).map(i => null)\n\n      let second = 0\n      let freeWorkers\n\n      while (letters.size > 0 || workers.some(w => w !== null)) {\n        // Add all finished steps to the seen array and free the worker\n        workers.forEach((w, i) => {\n          if (w !== null && w.second === second) {\n            seen.push(w.letter)\n            workers[i] = null\n          }\n        })\n\n        // Get the indices of the free workers\n        freeWorkers = []\n        workers.forEach((w, i) => {\n          if (w === null) {\n            freeWorkers.push(i)\n          }\n        })\n\n        // If any are free\n        if (freeWorkers.length > 0) {\n          // Determine the steps that can run next\n          const next = [...letters].filter(l => this.mapping.has(l) && this.mapping.get(l).every(t => seen.includes(t))).sort()\n\n          // Add each to the currently available array\n          next.forEach(n => {\n            if (start.indexOf(n) === -1) {\n              start.push(n)\n            }\n          })\n          // Sort it\n          start.sort()\n\n          // For each free worker\n          freeWorkers.forEach(i => {\n            // Check if there's a job to run\n            const current = start.shift()\n\n            if (current) {\n              // If so, delete it from the step list\n              letters.delete(current)\n\n              // And add the worker\n              workers[i] = {\n                letter: current,\n                second: second + current.charCodeAt(0) - 4\n              }\n            }\n          })\n        }\n\n        // Add the current state to the output for visualization\n        this.output.push({\n          second: second,\n          worker1: workers[0] ? workers[0].letter : '.',\n          worker2: workers[1] ? workers[1].letter : '.',\n          worker3: workers[2] ? workers[2].letter : '.',\n          worker4: workers[3] ? workers[3].letter : '.',\n          worker5: workers[4] ? workers[4].letter : '.',\n          done: seen.join('')\n        })\n\n        // Increment time\n        second++\n      }\n\n      this.solutions.partTwo = second - 1\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day7.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day7.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day7.vue?vue&type=template&id=4173a07a\"\nimport script from \"./Day7.vue?vue&type=script&lang=js\"\nexport * from \"./Day7.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","output","currentPage","length","model","value","callback","$$v","expression","proxy","staticRenderFns","components","Day","data","partOne","partTwo","methods","input","temp","solvePartOne","next","start","seen","letters","solvePartTwo","workers","freeWorkers","letter","second","worker1","worker2","worker3","worker4","worker5","done","component"],"sourceRoot":""}