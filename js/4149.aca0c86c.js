"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[4149],{4284:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day17)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day17.vue?vue&type=template&id=0aa112c2\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":17,\"year\":2020,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(86889);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day17.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day17vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      neighborsThree: [[-1, -1, -1], [-1, -1, 0], [-1, -1, 1], [-1, 0, -1], [-1, 0, 0], [-1, 0, 1], [-1, 1, -1], [-1, 1, 0], [-1, 1, 1], [0, -1, -1], [0, -1, 0], [0, -1, 1], [0, 0, -1], [0, 0, 1], [0, 1, -1], [0, 1, 0], [0, 1, 1], [1, -1, -1], [1, -1, 0], [1, -1, 1], [1, 0, -1], [1, 0, 0], [1, 0, 1], [1, 1, -1], [1, 1, 0], [1, 1, 1]],\n      neighborsFour: [[-1, -1, -1, -1], [-1, -1, -1, 0], [-1, -1, -1, 1], [-1, -1, 0, -1], [-1, -1, 0, 0], [-1, -1, 0, 1], [-1, -1, 1, -1], [-1, -1, 1, 0], [-1, -1, 1, 1], [-1, 0, -1, -1], [-1, 0, -1, 0], [-1, 0, -1, 1], [-1, 0, 0, -1], [-1, 0, 0, 0], [-1, 0, 0, 1], [-1, 0, 1, -1], [-1, 0, 1, 0], [-1, 0, 1, 1], [-1, 1, -1, -1], [-1, 1, -1, 0], [-1, 1, -1, 1], [-1, 1, 0, -1], [-1, 1, 0, 0], [-1, 1, 0, 1], [-1, 1, 1, -1], [-1, 1, 1, 0], [-1, 1, 1, 1], [0, -1, -1, -1], [0, -1, -1, 0], [0, -1, -1, 1], [0, -1, 0, -1], [0, -1, 0, 0], [0, -1, 0, 1], [0, -1, 1, -1], [0, -1, 1, 0], [0, -1, 1, 1], [0, 0, -1, -1], [0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, -1], [0, 0, 0, 1], [0, 0, 1, -1], [0, 0, 1, 0], [0, 0, 1, 1], [0, 1, -1, -1], [0, 1, -1, 0], [0, 1, -1, 1], [0, 1, 0, -1], [0, 1, 0, 0], [0, 1, 0, 1], [0, 1, 1, -1], [0, 1, 1, 0], [0, 1, 1, 1], [1, -1, -1, -1], [1, -1, -1, 0], [1, -1, -1, 1], [1, -1, 0, -1], [1, -1, 0, 0], [1, -1, 0, 1], [1, -1, 1, -1], [1, -1, 1, 0], [1, -1, 1, 1], [1, 0, -1, -1], [1, 0, -1, 0], [1, 0, -1, 1], [1, 0, 0, -1], [1, 0, 0, 0], [1, 0, 0, 1], [1, 0, 1, -1], [1, 0, 1, 0], [1, 0, 1, 1], [1, 1, -1, -1], [1, 1, -1, 0], [1, 1, -1, 1], [1, 1, 0, -1], [1, 1, 0, 0], [1, 1, 0, 1], [1, 1, 1, -1], [1, 1, 1, 0], [1, 1, 1, 1]]\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.input = input.map(i => i.split('').map(c => c === '#'));\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    iterate: function (map, neighbors) {\n      const tempMap = new Map(map);\n\n      // Iterate over all currently observed cells\n      map.forEach((alive, position) => {\n        let activeNeighbors = 0;\n        neighbors.forEach(n => {\n          // Get the neighbors actual position within the 'grid'\n          const np = position.split(',').map((v, i) => +v + n[i]);\n          // Construct its new key\n          const nk = np.join(',');\n\n          // Check if the neighbor is alive\n          const neighborAlive = map.get(nk);\n          if (neighborAlive === true) {\n            // If so, increase the counter\n            activeNeighbors++;\n          } else if (neighborAlive === undefined) {\n            // Add all neighbors that don't exist to the map\n            tempMap.set(nk, false);\n          }\n        });\n\n        // Apply the life-or-death rules\n        if (alive) {\n          tempMap.set(position, activeNeighbors === 2 || activeNeighbors === 3);\n        } else {\n          tempMap.set(position, activeNeighbors === 3);\n        }\n      });\n      return tempMap;\n    },\n    expand: function (map, neighbors) {\n      const tempMap = new Map(map);\n\n      // Iterate over all currently observed cells\n      map.forEach((alive, position) => {\n        // Consider all neighboring positions\n        neighbors.forEach(n => {\n          // Get the neighbors actual position within the 'grid'\n          const np = position.split(',').map((v, i) => +v + n[i]);\n          // Construct its new key\n          const nk = np.join(',');\n\n          // If it doesn't exist yet, add it as dead\n          if (!tempMap.has(nk)) {\n            tempMap.set(nk, false);\n          }\n        });\n      });\n      return tempMap;\n    },\n    run: function (neighbors, mapper) {\n      let map = new Map();\n      // Convert the input to a map between position and alive status\n      this.input.forEach((row, y) => {\n        row.forEach((cell, x) => {\n          // Map to the given mapping (pads dimensions)\n          const mapKey = mapper(x, y);\n          map.set(mapKey, cell);\n        });\n      });\n\n      // Initially expand the 'grid' to include the immediate dead neighbors\n      map = this.expand(map, neighbors);\n\n      // Do 6 rounds\n      for (let round = 0; round < 6; round++) {\n        map = this.iterate(map, neighbors);\n      }\n\n      // Count the ones that are alive\n      let counter = 0;\n      map.forEach(value => {\n        if (value) {\n          counter++;\n        }\n      });\n      return counter;\n    },\n    solvePartOne: function () {\n      this.solutions.partOne = this.run(this.neighborsThree, (x, y) => `0,${y},${x}`);\n    },\n    solvePartTwo: function () {\n      this.solutions.partTwo = this.run(this.neighborsFour, (x, y) => `0,0,${y},${x}`);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2020/Day17.vue?vue&type=script&lang=js\n /* harmony default export */ const _2020_Day17vue_type_script_lang_js = (Day17vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2020/Day17.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2020_Day17vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day17 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4284\n")}}]);