{"version":3,"file":"js/622.6917296a.js","mappings":"yKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACrMC,EAAkB,G,WCOtB,MAAMC,EAAW,IACXC,EAAW,IACXC,EAAa,IACbC,EAAY,IACZC,EAAY,IACZC,EAAW,IACXC,EAAY,IAElB,OACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAb,UAAAA,CACAc,QAAAA,KACAC,QAAAA,MAEAC,SAAAA,CAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KACAC,SAAAA,CAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAEA,EACAC,QAAAA,CACAhB,eAAAA,SAAAA,GACA,yEACA,wEACA,EACAiB,MAAAA,SAAAA,EAAAA,EAAAA,GACA,mBAEA,2DAGA,wCAGA,OAEA,OAEAC,KAAAA,EAAAA,EAAAA,KAAAA,IACAC,IAAAA,EACAC,SAAAA,EAAAA,KAAAA,IACA,IAOA,OAHAC,EAAAA,MAAAA,CAAAA,EAAAA,IAAAA,EAAAA,KAAAA,cAAAA,EAAAA,QAGA,kDACA,EACAC,iBAAAA,SAAAA,GAEA,WACAJ,EAAAA,SAAAA,IACAK,EAAAA,IAAAA,EAAAA,IAAAA,GAAAA,CAAAA,IAGA,yBAGA,0BACA,EACA,mBACA,EACA,uCACA,EACA,mBACA,EACA,gCACA,EACA,mBACA,EAEA,CAEA,EACAC,iBAAAA,SAAAA,GAEA,sCACA,gDAEA,UAwCA,SAvCA,qBAEA,SACA,UAEA,SAEA,SACA,SAEA,QAEA,oBAEA,SACA,SASA,kBACA,MACA,EACA,MACA,EACA,MACA,EAGA,EAGA,EAnBA,SACA,SACA,SACA,SACA,SACA,QAeA,CAIA,ICrI4P,I,UCOxPC,GAAY,OACd,EACAnC,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAewB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2023/Day7.vue?601a","webpack://advent-of-code/src/components/2023/Day7.vue","webpack://advent-of-code/./src/components/2023/Day7.vue?346c","webpack://advent-of-code/./src/components/2023/Day7.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":7,\"year\":2023,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"7\" :year=\"2023\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nconst FIVE_OAK = '6'\nconst FOUR_OAK = '5'\nconst FULL_HOUSE = '4'\nconst THREE_OAK = '3'\nconst TWO_PAIRS = '2'\nconst ONE_PAIR = '1'\nconst HIGH_CARD = '0'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      orderOne: ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A'],\n      orderTwo: ['J', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'Q', 'K', 'A']\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.solutions.partOne = this.solve(input, this.orderOne, this.determineTypeOne)\n      this.solutions.partTwo = this.solve(input, this.orderTwo, this.determineTypeTwo)\n    },\n    solve: function (input, order, df) {\n      const result = input.map(i => {\n        // Split input\n        const [cards, bid] = i.split(' ').map((p, j) => j === 0 ? p.split('') : +p)\n\n        // Map cards to HEX value based on their index in the value array\n        const mapped = cards.map(p => order.indexOf(p).toString(16))\n\n        // Determine the type of the hand (e.g. four of a kind, full house etc, result will be HEX value)\n        const type = df(mapped)\n\n        return {\n          // Concatenate the hand type then the HEX version of the hand\n          hand: type + mapped.join(''),\n          bid: bid,\n          original: cards.join('')\n        }\n      })\n\n      // Sort them asc which will have the weakest hand first, strongest last\n      result.sort((a, b) => a.hand.localeCompare(b.hand))\n\n      // Then sum each hand bid multiplied by its position\n      return result.map((h, i) => (i + 1) * h.bid).reduce((a, b) => a + b, 0)\n    },\n    determineTypeOne: function (hand) {\n      // Count the number of each card\n      const map = {}\n      hand.forEach(c => {\n        map[c] = (map[c] || 0) + 1\n      })\n\n      const v = Object.values(map)\n\n      // Compare how many there are of each type to determine the hand type\n      if (v.some(k => k === 5)) {\n        return FIVE_OAK\n      } else if (v.some(k => k === 4)) {\n        return FOUR_OAK\n      } else if (v.some(k => k === 3) && v.some(k => k === 2)) {\n        return FULL_HOUSE\n      } else if (v.some(k => k === 3)) {\n        return THREE_OAK\n      } else if (v.filter(k => k === 2).length === 2) {\n        return TWO_PAIRS\n      } else if (v.some(k => k === 2)) {\n        return ONE_PAIR\n      } else {\n        return HIGH_CARD\n      }\n    },\n    determineTypeTwo: function (hand) {\n      // See what we could get without jokers (0s after mapping)\n      const jokerCount = hand.filter(k => k === '0').length\n      const noJoker = this.determineTypeOne(hand.filter(k => k !== '0'))\n\n      if (jokerCount > 0) {\n        if ((noJoker === FOUR_OAK && jokerCount > 0) || jokerCount === 5) {\n          // Four of a kind and some joker => five of a kind\n          return FIVE_OAK\n        } else if (noJoker === THREE_OAK) {\n          // Three of a kind\n          if (jokerCount === 2) {\n            // And two jokers => five of a kind\n            return FIVE_OAK\n          } else if (jokerCount === 1) {\n            // And one joker => four of a kind\n            return FOUR_OAK\n          }\n        } else if (noJoker === TWO_PAIRS && jokerCount > 0) {\n          // Two pairs and some joker => full house\n          return FULL_HOUSE\n        } else if (noJoker === ONE_PAIR) {\n          // One pair\n          if (jokerCount === 3) {\n            return FIVE_OAK\n          } else if (jokerCount === 2) {\n            return FOUR_OAK\n          } else if (jokerCount === 1) {\n            return THREE_OAK\n          }\n        } else if (noJoker === HIGH_CARD && jokerCount > 0) {\n          if (jokerCount === 4) {\n            return FIVE_OAK\n          } else if (jokerCount === 3) {\n            return FOUR_OAK\n          } else if (jokerCount === 2) {\n            return THREE_OAK\n          } else {\n            // If one high card => pair\n            return ONE_PAIR\n          }\n        } else {\n          return noJoker\n        }\n      } else {\n        return noJoker\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day7.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day7.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day7.vue?vue&type=template&id=5abe433b\"\nimport script from \"./Day7.vue?vue&type=script&lang=js\"\nexport * from \"./Day7.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","FIVE_OAK","FOUR_OAK","FULL_HOUSE","THREE_OAK","TWO_PAIRS","ONE_PAIR","HIGH_CARD","components","Day","data","partOne","partTwo","orderOne","orderTwo","methods","solve","hand","bid","original","result","determineTypeOne","map","determineTypeTwo","component"],"sourceRoot":""}