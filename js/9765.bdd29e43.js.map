{"version":3,"file":"js/9765.bdd29e43.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAEAC,IAAAA,CACA,iBACA,iBACA,iBACA,kBAGA,EACAC,QAAAA,CACAR,eAAAA,SAAAA,GAEA,gBAEA,mDAEA,iBACA,yBAEA,aAEA,mBACA,CACAS,OAAAA,CAAAA,EAAAA,OAAAA,EAAAA,EAAAA,OAAAA,GACAC,QAAAA,EAAAA,OAAAA,GACAC,OAAAA,IAGAC,EAAAA,IAAAA,GAAAA,GACA,KACA,IACA,sBAGA,iBAEAC,EAAAA,EAAAA,QAAAA,IAEA,yBACA,SAKA,SAEA,SAGA,MARA,IAaA,gCAGAD,EAAAA,IAAAA,EAAAA,OAAAA,KAAAA,IAAAA,EAAAA,SAAAA,KAEA,EAIA,IAIA,oCACA,ICrF6P,I,UCOzPE,GAAY,OACd,EACAxB,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAea,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2022/Day21.vue?bfea","webpack://advent-of-code/src/components/2022/Day21.vue","webpack://advent-of-code/./src/components/2022/Day21.vue?af05","webpack://advent-of-code/./src/components/2022/Day21.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":21,\"year\":2022,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"21\" :year=\"2022\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      ops: {\n        '+': i => i[0] + i[1],\n        '-': i => i[0] - i[1],\n        '*': i => i[0] * i[1],\n        '/': i => i[0] / i[1]\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Create a mapping that remembers all the resolved inputs and their values\n      const mapping = new Map()\n\n      const pattern = /(?<l>[a-z]{4}) (?<op>[+/*-]{1}) (?<r>[a-z]{4})/\n\n      let parsed = input.map(i => {\n        const [left, right] = i.split(': ')\n\n        const matched = right.match(pattern)\n\n        if (matched && matched.groups) {\n          return {\n            inputs: [matched.groups.l, matched.groups.r],\n            operand: matched.groups.op,\n            output: left\n          }\n        } else {\n          mapping.set(left, +right)\n          return null\n        }\n      }).filter(i => i !== null)\n\n      // As long as there are unsolved wires left\n      while (parsed.length > 0) {\n        // Filter them (to only keep track of the unsolved ones)\n        parsed = parsed.filter(p => {\n          // Map the sources to resolved values (if possible)\n          const inputs = p.inputs.map(s => {\n            if (!isNaN(s)) {\n              // If the source is a number, just use it\n              return +s\n            } else {\n              // Else, check the resolved wires\n              if (mapping.has(s)) {\n                // If it's there, use its value\n                return mapping.get(s)\n              } else {\n                // Otherwise, we cannot proceed for now\n                return null\n              }\n            }\n          })\n\n          if (inputs.every(i => i !== null)) {\n            // If all inputs have a resolved value, compute the new value for the output.\n            // Remember we're working on 16 bit integers, so reduce it accordingly\n            mapping.set(p.output, this.ops[p.operand](inputs))\n            // Don't keep it in the list of unresolved wires\n            return false\n          } else {\n            // We cannot resolve this just now, so keep it in the list\n            return true\n          }\n        })\n      }\n\n      this.solutions.partOne = mapping.get('root')\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day21.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day21.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day21.vue?vue&type=template&id=45e90ff0\"\nimport script from \"./Day21.vue?vue&type=script&lang=js\"\nexport * from \"./Day21.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","ops","methods","inputs","operand","output","mapping","parsed","component"],"sourceRoot":""}