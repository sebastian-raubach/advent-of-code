{"version":3,"file":"js/1850.9b45bb69.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACrMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GAEA,4BACA,oBACA,mBACA,EACAQ,aAAAA,WAEA,8BAGA,yCACA,EACAC,aAAAA,WAEA,+CAGA,uBACAC,EAAAA,SAAAA,IAEA,sEAGA,qBAGAC,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,IAGA,wBACA,EAMAC,WAAAA,SAAAA,GAEA,iBAGA,UAEA,4BAEAC,EAAAA,OAAAA,EAAAA,EAAAA,GAEAC,KAGAA,IAIA,eACA,EAOAC,SAAAA,SAAAA,EAAAA,GAEA,0BACA,SAEA,4BACA,sBAEA,wDACA,EAMAC,YAAAA,SAAAA,GACA,0BACA,ICrG4P,I,UCOxPC,GAAY,OACd,EACA3B,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAegB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2018/Day5.vue?8828","webpack://advent-of-code/src/components/2018/Day5.vue","webpack://advent-of-code/./src/components/2018/Day5.vue?79b8","webpack://advent-of-code/./src/components/2018/Day5.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":5,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"5\" :year=\"2018\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Split into characters\n      this.letters = input[0].split('')\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      // Create a copy of the input\n      const copy = this.letters.concat()\n\n      // Then get the solution\n      this.solutions.partOne = this.doReaction(copy)\n    },\n    solvePartTwo: function () {\n      // Get all characters\n      const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\n\n      // Keep track of the minimum\n      let min = Number.MAX_VALUE\n      alphabet.forEach(a => {\n        // For each letter, remove it from the input\n        const copy = this.letters.concat().filter(l => l !== a && l !== a.toUpperCase())\n\n        // Then run the reaction\n        const length = this.doReaction(copy)\n\n        // And store the minimum\n        min = Math.min(min, length)\n      })\n\n      this.solutions.partTwo = min\n    },\n    /**\n     * Runs the reaction for the given input. Returns the length of the remaining sequence\n     * @param letters The input sequence\n     * @returns The length of the remaining reaction\n     */\n    doReaction: function (letters) {\n      // Current position\n      let position = letters.length - 1\n\n      // While we haven't reached the start\n      while (position > 0) {\n        // If this one and its neighbor can react\n        if (this.canReact(letters[position], letters[position - 1])) {\n          // Remove them\n          letters.splice(position - 1, 2)\n          // Adjust the position\n          position--\n        } else {\n          // Otherwise move backwards\n          position--\n        }\n      }\n\n      return letters.length\n    },\n    /**\n     * Checks whether the two letters can react.\n     * @param one The first letter\n     * @param two The second letter\n     * @returns `true` if they can react, `false` otherwise\n     */\n    canReact: function (one, two) {\n      // If either is undefined, return false\n      if (one === undefined || two === undefined) {\n        return false\n      }\n      const oneUC = this.isUpperCase(one)\n      const twoUC = this.isUpperCase(two)\n      // If they are the same letter and one is upper and the other lower case, return true\n      return one.toLowerCase() === two.toLowerCase() && ((oneUC && !twoUC) || (!oneUC && twoUC))\n    },\n    /**\n     * Checks whether a letter is upper case.\n     * @param letter The letter to check\n     * @returns `true` if it is upper case, `false` otherwise\n     */\n    isUpperCase: function (letter) {\n      return letter === letter.toUpperCase()\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day5.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day5.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day5.vue?vue&type=template&id=2f04c447\"\nimport script from \"./Day5.vue?vue&type=script&lang=js\"\nexport * from \"./Day5.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","solvePartOne","solvePartTwo","alphabet","min","doReaction","letters","position","canReact","isUpperCase","component"],"sourceRoot":""}