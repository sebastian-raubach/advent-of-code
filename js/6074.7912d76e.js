"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[6074],{26679:function(t,e,n){n.r(e),n.d(e,{default:function(){return u}});var i=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("Day",{attrs:{day:15,year:2018,solutions:t.solutions},on:{"input-changed":t.onInputChanged}})},s=[],l=n(86889),r={components:{Day:l.Z},data:function(){return{solutions:{partOne:null,partTwo:null},directions:[[0,-1],[-1,0],[1,0],[0,1]]}},methods:{onInputChanged:function(t){this.grid=t.map((t=>t.split(""))),this.players=[];for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++)"G"!==this.grid[e][t]&&"E"!==this.grid[e][t]||this.players.push({attack:3,health:200,type:this.grid[e][t],x:t,y:e});this.solvePartOne(),this.solvePartTwo()},findEnemy:function(t,e,n){return e.filter((e=>e.type!==t.type&&e.health>0)).filter((e=>Math.abs(t.x-e.x)+Math.abs(t.y-e.y)===1)).reduce(((t,e)=>null===t||t.health>e.health?e:t),null)},findNextMovement:function(t,e,n){const i={};e.filter((e=>e.type!==t.type&&e.health>0)).map((t=>this.getAdjacents({x:t.x,y:t.y}).filter((t=>"."===n[t.y][t.x])))).reduce(((t,e)=>t.concat(...e)),[]).forEach((t=>{i[`${t.x},${t.y}`]=t}));const s=new Set;s.add(`${t.x},${t.y}`);let l=[[{x:t.x,y:t.y}]];while(1){const t=[];let e=[];if(l.forEach((l=>{this.getAdjacents(l[l.length-1]).forEach((r=>{const h=`${r.x},${r.y}`;i[h]?e.push([...l,r,i[h]]):s.has(h)||"."!==n[r.y][r.x]||t.push([...l,r]),s.add(h)}))})),e.length>0)return e=e.sort(((t,e)=>{const n=t[t.length-1],i=e[e.length-1];return n.y===i.y?n.x-i.x:n.y-i.y})),e[0][1];if(l=t,l.length<1)return null}},getAdjacents:function(t){return this.directions.map((e=>({x:t.x+e[0],y:t.y+e[1]})))},solve:function(t,e,n){e.filter((t=>"E"===t.type)).forEach((t=>{t.attack=n}));let i=0;while(1){e=e.sort(((t,e)=>t.y===e.y?t.x-e.x:t.y-e.y));for(let s=0;s<e.length;s++){const l=e[s];if(l.health>0){if(e.filter((t=>t.health>0&&t.type!==l.type)).length<1)return i*e.filter((t=>t.health>0)).map((t=>t.health)).reduce(((t,e)=>t+e));let s=this.findEnemy(l,e,t);const r=s?null:this.findNextMovement(l,e,t);if(!s&&r&&(t[l.y][l.x]=".",l.x=r.x,l.y=r.y,t[l.y][l.x]=l.type,s=this.findEnemy(l,e,t)),s&&(s.health-=l.attack,s.health<1&&(t[s.y][s.x]=".","E"===s.type&&3!==n)))return null}}i++}},solvePartOne:function(){this.solutions.partOne=this.solve(JSON.parse(JSON.stringify(this.grid)),JSON.parse(JSON.stringify(this.players)),3)},solvePartTwo:function(){let t=4;while(1){const e=this.solve(JSON.parse(JSON.stringify(this.grid)),JSON.parse(JSON.stringify(this.players)),t);if(null!==e)return void(this.solutions.partTwo=e);t++}}}},h=r,a=n(1001),o=(0,a.Z)(h,i,s,!1,null,null,null),u=o.exports}}]);
//# sourceMappingURL=6074.7912d76e.js.map