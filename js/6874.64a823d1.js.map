{"version":3,"file":"js/6874.64a823d1.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCMtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GACA,gBAEAQ,EAAAA,SAAAA,IACA,wBACAC,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAIA,oBAEA,qBACA,0BACA,uFACAC,EAAAA,KAAAA,SAAAA,GACAC,QAAAA,IAAAA,EACA,CASA,EACAC,UAAAA,GAAAA,EAAAA,MAAAA,IAAAA,QAAAA,GAAAA,MAAAA,IAAAA,OACAC,QAAAA,GAAAA,EAAAA,MAAAA,KAAAA,KAAAA,GAAAA,EAAAA,MAAAA,MACAC,SAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,MAAAA,KAAAA,KACAC,MAAAA,GAAAA,EAAAA,MAAAA,KAAAA,KAAAA,GAAAA,EAAAA,MAAAA,IAAAA,UAAAA,KAAAA,MAAAA,KAAAA,KACAC,MAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,KAAAA,KACAC,SAAAA,CAAAA,EAAAA,IAAAA,EAAAA,QAAAA,GAAAA,EAAAA,IAAAA,KAAAA,GACAC,SAAAA,SAAAA,GACA,oBACA,sDAaA,OAXAC,EAAAA,SAAAA,CAAAA,EAAAA,KACA,YACA,MAEA,2BACA,2BACAC,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAEA,IAGA,CACA,EACAC,UAAAA,SAAAA,GACA,wBACA,WACA,cAEA,KACA,sBACA,uBAEA,WACA,qBACA,WACA,oBACAC,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,IAEAC,EAAAA,KAAAA,EACA,CACAC,EAAAA,KAAAA,EACA,CAEA,QACA,EACAC,YAAAA,SAAAA,GACA,SAEA,wBACAC,EAAAA,KAAAA,GACA,oBACAA,EAAAA,KAAAA,KAAAA,SAAAA,EAAAA,KAWA,OARAA,EAAAA,EAAAA,KAAAA,GAAAA,KAAAA,SAAAA,KAGAA,EAAAA,SAAAA,IACAA,EAAAA,KAAAA,KAAAA,MAAAA,IACAA,EAAAA,KAAAA,KAAAA,MAAAA,GAAAA,IAGA,CACA,EACAC,SAAAA,SAAAA,GAEA,sCAEA,2BACA,8BACAC,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAIA,QACA,ICzH6P,I,UCOzPC,GAAY,OACd,EACAvC,EACAW,GACA,EACA,KACA,WACA,MAIF,EAAe4B,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2017/Day21.vue?080a","webpack://advent-of-code/src/components/2017/Day21.vue","webpack://advent-of-code/./src/components/2017/Day21.vue?5f3a","webpack://advent-of-code/./src/components/2017/Day21.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":21,\"year\":2017,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"21\" :year=\"2017\" :solutions=\"solutions\" @input-changed=\"onInputChanged\" />\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const rules = new Map()\n\n      input.forEach(i => {\n        const parts = i.split(' => ')\n        rules.set(parts[0], parts[1])\n      })\n\n      // const grid = [['.', '#', '.'], ['.', '.', '#'], ['#', '#', '#']]\n      let grid = '.#./..#/###'\n\n      for (let it = 0; it < 2; it++) {\n        const split = this.splitGrid(grid)\n        const replaced = split.map(s => this.toArray(rules.get(this.findRule(rules, this.alterations(this.toString(s))))))\n        grid = this.joinGrid(replaced)\n        console.log(grid)\n      }\n\n      // const string = this.toString(grid)\n      // const alterations = this.alterations(string)\n      // const matches = this.findRule(rules, alterations)\n\n      // console.log(matches)\n\n      // console.log(this.splitGrid('##.##./#..#../....../##.##./#..#../......'))\n    },\n    countBits: (input) => input.split('').filter(i => i === '#').length,\n    toArray: (input) => input.split('/').map(r => r.split('')),\n    toString: (input) => input.map(r => r.join('')).join('/'),\n    flipH: (input) => input.split('/').map(r => r.split('').reverse().join('')).join('/'),\n    flipV: (input) => input.split('/').reverse().join('/'),\n    findRule: (rules, alterations) => alterations.filter(a => rules.has(a))[0],\n    joinGrid: function (parts) {\n      const l = parts[0].length\n      const result = Array.from(Array(l)).map(_ => Array.from(Array(l)))\n\n      parts.forEach((p, i) => {\n        const yGrid = i / l\n        const xGrid = i % l\n\n        for (let y = 0; y < p.length; y++) {\n          for (let x = 0; x < p.length; x++) {\n            result[yGrid * l + y][xGrid * l + x] = p[y][x]\n          }\n        }\n      })\n\n      return result\n    },\n    splitGrid: function (grid) {\n      const arr = this.toArray(grid)\n      const size = arr.length\n      const l = (size % 2 === 0) ? 2 : 3\n\n      const results = []\n      for (let yGrid = 0; yGrid < size / l; yGrid++) {\n        for (let xGrid = 0; xGrid < size / l; xGrid++) {\n          // Now parse the individual grid\n          const sub = []\n          for (let y = 0; y < l; y++) {\n            const row = []\n            for (let x = 0; x < l; x++) {\n              row.push(arr[yGrid * l + y][xGrid * l + x])\n            }\n            sub.push(row)\n          }\n          results.push(sub)\n        }\n      }\n      return results\n    },\n    alterations: function (input) {\n      let rotations = []\n\n      const arr = this.toArray(input)\n      rotations.push(arr)\n      for (let i = 0; i < 3; i++) {\n        rotations.push(this.rotate90(rotations[i]))\n      }\n\n      rotations = rotations.map(r => this.toString(r))\n\n      // For each rotation, add the flips\n      rotations.forEach(r => {\n        rotations.push(this.flipH(r))\n        rotations.push(this.flipV(r))\n      })\n\n      return rotations\n    },\n    rotate90: function (arr) {\n      // Take a copy for the dimensions\n      const res = JSON.parse(JSON.stringify(arr))\n\n      for (let y = 0; y < arr.length; y++) {\n        for (let x = 0; x < arr[y].length; x++) {\n          res[y][x] = arr[arr.length - x - 1][y]\n        }\n      }\n\n      return res\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day21.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day21.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day21.vue?vue&type=template&id=b1846c86&scoped=true\"\nimport script from \"./Day21.vue?vue&type=script&lang=js\"\nexport * from \"./Day21.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b1846c86\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","input","rules","grid","console","countBits","toArray","toString","flipH","flipV","findRule","joinGrid","parts","result","splitGrid","row","sub","results","alterations","rotations","rotate90","res","component"],"sourceRoot":""}