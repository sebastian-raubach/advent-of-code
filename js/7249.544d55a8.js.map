{"version":3,"file":"js/7249.544d55a8.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,gBAAgBC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACT,EAAG,MAAM,CAACU,YAAY,iBAAiB,CAACV,EAAG,SAAS,CAACU,YAAY,SAASR,MAAM,CAAC,GAAK,UAAU,MAAQ,OAAO,OAAS,YAAY,EAAES,OAAM,GAAM,CAACH,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACT,EAAG,MAAM,CAACU,YAAY,iBAAiB,CAACV,EAAG,SAAS,CAACU,YAAY,SAASR,MAAM,CAAC,GAAK,UAAU,MAAQ,OAAO,OAAS,YAAY,EAAES,OAAM,MAAS,EAC1kBC,EAAkB,G,WCiBtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAZ,UAAAA,CACAa,QAAAA,KACAC,QAAAA,MAEAC,UAAAA,CAAAA,EAAAA,GAAAA,GAAAA,CAAAA,GAAAA,GAAAA,CAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,EAAAA,IAEA,EACAC,QAAAA,CACAd,eAAAA,SAAAA,GACA,iBACA,iBACA,gBACA,gBAEA,cACAe,aAAAA,KAAAA,SAIA,kDAEA,2DAEA,2DAEA,6DACA,EACAC,IAAAA,SAAAA,EAAAA,GAEA,uBAEA,GACAC,EAAAA,GAAAA,GAAAA,EACAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EACAA,EAAAA,EAAAA,OAAAA,GAAAA,GAAAA,EACAA,EAAAA,EAAAA,OAAAA,GAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAEA,uBAEA,sBAIA,+BAGA,2BACA,+BAGA,iDACAC,QAAAA,GAAAA,EAAAA,IAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,QAAAA,EAAAA,IAAAA,GAAAA,EAAAA,GAAAA,EAAAA,SACAC,KAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IACAC,QAAAA,CAAAA,EAAAA,IAAAA,EAAAA,GAAAA,GAGA,QACAC,EAAAA,GAAAA,GAAAA,IAAAA,GAAAA,IAAAA,EAEAA,EAAAA,GAAAA,GAAAA,IAAAA,CAEA,CAIAJ,EAAAA,CACA,CAeA,OAZA,GACAA,EAAAA,GAAAA,GAAAA,EACAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EACAA,EAAAA,EAAAA,OAAAA,GAAAA,GAAAA,EACAA,EAAAA,EAAAA,OAAAA,GAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAEA,uBAEA,sBAIA,2EACA,EACAK,SAAAA,SAAAA,EAAAA,EAAAA,GAEA,mCACA,MACA,OAIA,2BACAC,EAAAA,UAAAA,EAAAA,EAAAA,IAAAA,KAGA,aACA,2BACA,8BACAA,EAAAA,UAAAA,EAAAA,GAAAA,GAAAA,UAAAA,UACAA,EAAAA,SAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,GAGA,EACAC,KAAAA,WAEA,qDACA,qDAEA,qDACA,qDAGA,0EACA,ICzI6P,I,UCQzPC,GAAY,OACd,EACAnC,EACAiB,GACA,EACA,KACA,KACA,MAIF,EAAekB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2015/Day18.vue?97a4","webpack://advent-of-code/src/components/2015/Day18.vue","webpack://advent-of-code/./src/components/2015/Day18.vue?3ce2","webpack://advent-of-code/./src/components/2015/Day18.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":18,\"year\":2015,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{staticClass:\"canvas-holder\"},[_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"partOne\",\"width\":\"1000\",\"height\":\"1000\"}})])]},proxy:true},{key:\"partTwo\",fn:function(){return [_c('div',{staticClass:\"canvas-holder\"},[_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"partTwo\",\"width\":\"1000\",\"height\":\"1000\"}})])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"18\" :year=\"2015\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partOne>\n      <div class=\"canvas-holder\">\n        <canvas id=\"partOne\" class=\"canvas\" width=\"1000\" height=\"1000\" />\n      </div>\n    </template>\n    <template v-slot:partTwo>\n      <div class=\"canvas-holder\">\n        <canvas id=\"partTwo\" class=\"canvas\" width=\"1000\" height=\"1000\" />\n      </div>\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      neighbors: [[-1, -1], [0, -1], [1, -1], [-1, 0], [1, 0], [-1, 1], [0, 1], [1, 1]]\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.gridsOne = []\n      this.gridsTwo = []\n      this.roundOne = 0\n      this.roundTwo = 0\n\n      if (this.timeout) {\n        clearTimeout(this.timeout)\n      }\n\n      // Convert the input into a boolean 2d array\n      const grid = input.map(i => i.split('').map(c => c === '#'))\n      // Take a copy of the original grid, then run as normal\n      this.solutions.partOne = this.run(grid.map(r => r.concat()), false)\n      // Take a copy of the original grid, then run with corners fixed\n      this.solutions.partTwo = this.run(grid.map(r => r.concat()), true)\n\n      this.$nextTick(() => window.requestAnimationFrame(this.draw))\n    },\n    run: function (grid, cornersOn) {\n      // Run 100 times\n      for (let i = 0; i < 100; i++) {\n        // Fix corner points if required\n        if (cornersOn) {\n          grid[0][0] = 1\n          grid[0][grid[0].length - 1] = 1\n          grid[grid.length - 1][0] = 1\n          grid[grid.length - 1][grid[0].length - 1] = 1\n\n          this.gridsTwo.push(grid)\n        } else {\n          this.gridsOne.push(grid)\n        }\n\n        // Take a copy\n        const copy = grid.map(r => r.concat())\n\n        // Iterate both dimensions\n        for (let y = 0; y < copy.length; y++) {\n          for (let x = 0; x < copy[y].length; x++) {\n            // Count the neighbors that are turned on by first getting their theoretical position\n            // Then excluding the ones outside the grid, then mapping to their value, then counting\n            const neighborCount = this.neighbors.map(n => [x + n[0], y + n[1]])\n              .filter(n => n[0] >= 0 && n[0] < copy[y].length && n[1] >= 0 && n[1] < copy.length)\n              .map(n => grid[n[1]][n[0]] ? 1 : 0)\n              .reduce((a, b) => a + b, 0)\n\n            // Update the grid cell\n            if (grid[y][x]) {\n              copy[y][x] = neighborCount === 2 || neighborCount === 3\n            } else {\n              copy[y][x] = neighborCount === 3\n            }\n          }\n        }\n\n        // Store the copy back as the new state\n        grid = copy\n      }\n\n      // Fix corner points if required\n      if (cornersOn) {\n        grid[0][0] = 1\n        grid[0][grid[0].length - 1] = 1\n        grid[grid.length - 1][0] = 1\n        grid[grid.length - 1][grid[0].length - 1] = 1\n\n        this.gridsTwo.push(grid)\n      } else {\n        this.gridsOne.push(grid)\n      }\n\n      // Return the number of \"turned-on\" cells\n      return grid.map(r => r.map(c => c ? 1 : 0).reduce((a, b) => a + b, 0)).reduce((a, b) => a + b, 0)\n    },\n    drawBits: function (id, grids, count) {\n      // Check the element actually exists\n      const el = document.getElementById(id)\n      if (!el) {\n        return\n      }\n\n      // Get context, clear canvas\n      const ctx = el.getContext('2d')\n      ctx.clearRect(0, 0, 1000, 1000)\n\n      // Draw grid\n      const grid = grids[count]\n      for (let y = 0; y < grid.length; y++) {\n        for (let x = 0; x < grid[y].length; x++) {\n          ctx.fillStyle = grid[y][x] ? '#C4E538' : '#006266'\n          ctx.fillRect(x * 10, y * 10, 10, 10)\n        }\n      }\n    },\n    draw: function () {\n      // Draw both grids\n      this.drawBits('partOne', this.gridsOne, this.roundOne)\n      this.drawBits('partTwo', this.gridsTwo, this.roundTwo)\n      // Update the indices\n      this.roundOne = (this.roundOne + 1) % this.gridsOne.length\n      this.roundTwo = (this.roundTwo + 1) % this.gridsTwo.length\n\n      // Redraw in 100ms\n      this.timeout = setTimeout(() => window.requestAnimationFrame(this.draw), 100)\n    }\n  }\n}\n</script>\n\n<style>\n.canvas {\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day18.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day18.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day18.vue?vue&type=template&id=5d01b9d2\"\nimport script from \"./Day18.vue?vue&type=script&lang=js\"\nexport * from \"./Day18.vue?vue&type=script&lang=js\"\nimport style0 from \"./Day18.vue?vue&type=style&index=0&id=5d01b9d2&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","staticClass","proxy","staticRenderFns","components","Day","data","partOne","partTwo","neighbors","methods","clearTimeout","run","grid","filter","map","reduce","copy","drawBits","ctx","draw","component"],"sourceRoot":""}