"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[3132],{79144:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day10)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day10.vue?vue&type=template&id=59c85c02&scoped=true\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":10,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{attrs:{\"id\":\"partOne\"}}),_c('b-button',{on:{\"click\":_vm.prev}},[_vm._v(\"Prev\")]),_c('b-button',{on:{\"click\":_vm.next}},[_vm._v(\"Next\")])]},proxy:true}])})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day10.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day10vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      step: 0,\n      firstDraw: true\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.step = 0;\n      this.points = input.map(i => {\n        // Split into needed parts\n        const parts = i.split('> velocity=<');\n        const coords = parts[0].replace('position=<', '').replace(/\\s*/g, '').split(',').map(c => +c);\n        const velocity = parts[1].replace('>', '').replace(/\\s*/g, '').split(',').map(v => +v);\n\n        // Invert y dimension for plotting\n        coords[1] = -coords[1];\n        velocity[1] = -velocity[1];\n        return {\n          coords,\n          velocity\n        };\n      });\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    prev: function () {\n      // Manually step one timepoint back\n      this.step--;\n      this.drawStep(this.step);\n    },\n    next: function () {\n      // Manually step one timepoint forwards\n      this.step++;\n      this.drawStep(this.step);\n    },\n    drawStep: function (i) {\n      // Create the chart trace\n      const traces = [{\n        x: this.points.map(p => p.coords[0] + p.velocity[0] * i),\n        y: this.points.map(p => p.coords[1] + p.velocity[1] * i),\n        mode: 'markers',\n        type: 'scatter',\n        marker: {\n          symbol: 'square',\n          size: 20\n        }\n      }];\n      if (this.firstDraw) {\n        // If it's the first time the chart is drawn, create it\n        this.$plotly.newPlot('partOne', traces, {\n          height: 350,\n          hovermode: false,\n          xaxis: {\n            visible: false\n          },\n          yaxis: {\n            visible: false\n          }\n        }, {\n          responsive: true,\n          displaylogo: false,\n          displayModeBar: false\n        });\n      } else {\n        // Otherwise, update it\n        delete traces.mode;\n        delete traces.type;\n        this.$plotly.update('partOne', traces, {}, [0]);\n      }\n    },\n    solvePartOne: function () {\n      // Find the timepoint with the smallest area of the minimal bounding box\n      let area = Number.MAX_VALUE;\n      while (true) {\n        // Get the min/max x/y coordinates\n        let minX = Number.MAX_VALUE;\n        let maxX = -Number.MAX_VALUE;\n        let minY = Number.MAX_VALUE;\n        let maxY = -Number.MAX_VALUE;\n        this.points.forEach(p => {\n          const x = p.coords[0] + p.velocity[0] * this.step;\n          const y = p.coords[1] + p.velocity[1] * this.step;\n          minX = Math.min(minX, x);\n          maxX = Math.max(maxX, x);\n          minY = Math.min(minY, y);\n          maxY = Math.max(maxY, y);\n        });\n\n        // Calculate the current area\n        const tempArea = (maxX - minX) * (maxY - minY);\n        if (tempArea < area) {\n          // If it's smaller, keep it\n          area = tempArea;\n          this.step++;\n        } else {\n          // If it got larger again, quit and decrement the step counter\n          this.step--;\n          break;\n        }\n      }\n\n      // Hack to make the solution show up\n      this.solutions.partOne = '';\n\n      // Then draw the chart\n      this.$nextTick(() => this.drawStep(this.step));\n    },\n    solvePartTwo: function () {\n      // Part two is just the number of steps it took to get there\n      this.solutions.partTwo = this.step;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2018/Day10.vue?vue&type=script&lang=js\n /* harmony default export */ const _2018_Day10vue_type_script_lang_js = (Day10vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2018/Day10.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2018_Day10vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59c85c02\",\n  null\n  \n)\n\n/* harmony default export */ const Day10 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///79144\n")}}]);