{"version":3,"file":"js/9492.3251afa3.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GACA,gBAEA,KAEAQ,EAAAA,SAAAA,IACA,wBAEA,kEAGA,mFAIA,iCACA,iCACA,iCAEA,gDAEA,yBAGA,mBAEA,qBACAC,EAAAA,OAAAA,GAFAA,EAAAA,IAAAA,EAIA,CAOAC,EAAAA,KAAAA,CACAX,GAAAA,OAAAA,EACAY,KAAAA,EAAAA,GAAAA,GACAC,KAAAA,EAAAA,GAAAA,GACAC,KAAAA,EAAAA,GAAAA,GACAC,KAAAA,EAAAA,GAAAA,GACAC,KAAAA,EAAAA,GAAAA,GACAC,KAAAA,EAAAA,GAAAA,IACA,IAIA,8BAGA,SAEAN,EAAAA,SAAAA,IAEA,WAGA,MACAO,EAAAA,KAAAA,GAIAC,EAAAA,SAAAA,IAEA,kCAEA,GAEAD,EAAAA,KAAAA,EACA,IAIAC,EAAAA,EAAAA,OAAAA,EAAAA,IAIA,wEACA,EACAC,OAAAA,SAAAA,GAEA,2DACA,EACAC,UAAAA,SAAAA,EAAAA,EAAAA,GAEA,gGACA,KAGA,CACArB,GAAAA,EACAY,KAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,MACAC,KAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,MACAC,KAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,MACAC,KAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,MACAC,KAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,MACAC,KAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,MAEA,ICxH6P,I,UCOzPK,GAAY,OACd,EACA/B,EACAW,GACA,EACA,KACA,WACA,MAIF,EAAeoB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2021/Day22.vue?8e74","webpack://advent-of-code/src/components/2021/Day22.vue","webpack://advent-of-code/./src/components/2021/Day22.vue?c864","webpack://advent-of-code/./src/components/2021/Day22.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":22,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"22\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const onCount = new Set()\n\n      const cubes = []\n\n      input.forEach(i => {\n        const [onOff, rule] = i.split(' ')\n\n        const coords = rule.split(',').map(d => d.split('=')[1].split('..').map(c => +c))\n\n        // Let's do part one naively\n        if (coords[0][1] < -50 || coords[0][0] > 50 || coords[1][1] < -50 || coords[1][0] > 50 || coords[2][1] < -50 || coords[2][0] > 50) {\n          // Skip rules that are completely outside the inner box\n        } else {\n          // Then iterate over all coordinates in the inner box\n          for (let x = coords[0][0]; x <= coords[0][1]; x++) {\n            for (let y = coords[1][0]; y <= coords[1][1]; y++) {\n              for (let z = coords[2][0]; z <= coords[2][1]; z++) {\n                // Ignore coordinates in valid rules, but outside of the  inner box\n                if (x >= -50 && x <= 50 && y >= -50 && y <= 50 && z >= -50 && z <= 50) {\n                  // Get coords\n                  const dot = `${x},${y},${z}`\n\n                  // Flip on/off\n                  if (onOff === 'on' && !onCount.has(dot)) {\n                    onCount.add(dot)\n                  } else if (onOff === 'off' && onCount.has(dot)) {\n                    onCount.delete(dot)\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Remember the cube for part two\n        cubes.push({\n          on: onOff === 'on',\n          xMin: coords[0][0],\n          xMax: coords[0][1],\n          yMin: coords[1][0],\n          yMax: coords[1][1],\n          zMin: coords[2][0],\n          zMax: coords[2][1]\n        })\n      })\n\n      // Part one is the number of coordinates still in the set (on)\n      this.solutions.partOne = onCount.size\n\n      // Part two, remember all cubes and their on/off status\n      let resultingCubes = []\n      // For each of the input cubes\n      cubes.forEach(c => {\n        // Keep track of any sub-cubes that we see due to intersection\n        const newCubes = []\n\n        // If this one is on, remember it straight away\n        if (c.on) {\n          newCubes.push(c)\n        }\n\n        // Then for each one that we remembered before\n        resultingCubes.forEach(oc => {\n          // Get the intersection (flip on/off)\n          const intersection = this.intersect(c, oc, !oc.on)\n\n          if (intersection) {\n            // Remember the intersection\n            newCubes.push(intersection)\n          }\n        })\n\n        // Remember the new cubes\n        resultingCubes = resultingCubes.concat(newCubes)\n      })\n\n      // The solution is the sum of all the volumes (depending on their on/off status)\n      this.solutions.partTwo = resultingCubes.reduce((a, b) => a + this.volume(b) * (b.on ? 1 : -1), 0)\n    },\n    volume: function (c) {\n      // Get the volume (remember the inclusivity of the edges (+1))\n      return (c.xMax - c.xMin + 1) * (c.yMax - c.yMin + 1) * (c.zMax - c.zMin + 1)\n    },\n    intersect: function (a, b, on) {\n      // If they don't overlap in any dimension, return null\n      if (a.xMin > b.xMax || a.xMax < b.xMin || a.yMin > b.yMax || a.yMax < b.yMin || a.zMin > b.zMax || a.zMax < b.zMin) {\n        return null\n      }\n      // Else return the intersection\n      return {\n        on: on,\n        xMin: Math.max(a.xMin, b.xMin),\n        xMax: Math.min(a.xMax, b.xMax),\n        yMin: Math.max(a.yMin, b.yMin),\n        yMax: Math.min(a.yMax, b.yMax),\n        zMin: Math.max(a.zMin, b.zMin),\n        zMax: Math.min(a.zMax, b.zMax)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day22.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day22.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day22.vue?vue&type=template&id=286c6400&scoped=true\"\nimport script from \"./Day22.vue?vue&type=script&lang=js\"\nexport * from \"./Day22.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"286c6400\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","input","onCount","cubes","xMin","xMax","yMin","yMax","zMin","zMax","newCubes","resultingCubes","volume","intersect","component"],"sourceRoot":""}