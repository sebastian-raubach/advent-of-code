{"version":3,"sources":["webpack:///./src/components/2021/Day10.vue?220c","webpack:///src/components/2021/Day10.vue","webpack:///./src/components/2021/Day10.vue?c822","webpack:///./src/components/2021/Day10.vue","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","open","close","methods","index","d","i","score","syntaxScore","stack","push","values","Math","floor","length","component","$","$map","map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","arguments","undefined"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,mBACrLC,EAAkB,G,0ECOtB,GACEC,WAAY,CACVC,IAAJ,cAEEC,KAAM,WACJ,MAAO,CACLN,UAAW,CACTO,QAAS,KACTC,QAAS,MAEXC,KAAM,CAAC,IAAK,IAAK,IAAK,KACtBC,MAAO,CAAC,IAAK,IAAK,IAAK,OAG3BC,QAAS,CACPT,eAAgB,SAApB,cACA,2CAEA,IACA,oBACA,YAEA,qBAIQ,IAFA,IAAR,KAEA,oBAEU,IAAV,wBAEU,IAAe,IAAXU,EAAc,CAEhB,IAAZ,UAEY,GAAIC,EAAEC,KAAO,EAAzB,yBAIc,OAFAC,GAASC,EAAYJ,GAEd,QAITK,EAAMC,KAAKL,EAAEC,IAIjB,OAAOG,KAGTvB,KAAKM,UAAUO,QAAUQ,EAGzB,IAAN,6CACA,iBAIQ,IAFA,IAAR,IAEA,uBAEU,IAAV,UAEA,oBACU,IAAV,OAEY,IAAZ,6BAGY,GAAZ,EACY,GAAZ,uBAIQ,OAAR,KACA,oBAAQ,OAAR,OAGMrB,KAAKM,UAAUQ,QAAUW,EAAOC,KAAKC,MAAMF,EAAOG,OAAS,OCpF6R,I,YCO1VC,EAAY,eACd,EACA/B,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAoB,E,2CCjBf,IAAIC,EAAI,EAAQ,QACZC,EAAO,EAAQ,QAAgCC,IAC/CC,EAA+B,EAAQ,QAEvCC,EAAsBD,EAA6B,OAKvDH,EAAE,CAAEK,OAAQ,QAASC,OAAO,EAAMC,QAASH,GAAuB,CAChEF,IAAK,SAAaM,GAChB,OAAOP,EAAK/B,KAAMsC,EAAYC,UAAUX,OAAS,EAAIW,UAAU,QAAKC","file":"js/chunk-161d09be.78ed522d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":10,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"10\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      open: ['(', '[', '{', '<'],\n      close: [')', ']', '}', '>']\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const data = input.map(r => r.split(''))\n\n      let score = 0\n      const syntaxScore = [3, 57, 1197, 25137]\n      const autoScore = [1, 2, 3, 4]\n\n      const sequence = data.map(d => {\n        // Keep track of the opening brackets we have seen\n        const stack = []\n\n        for (let i = 0; i < d.length; i++) {\n          // Check if it is a closing bracket\n          const index = this.close.indexOf(d[i])\n\n          if (index !== -1) {\n            // If so, pop the last opening one from the stack\n            const opp = stack.pop()\n            // If the closing one doesn't match the opposite of the popped opening one\n            if (d[i] !== this.close[this.open.indexOf(opp)]) {\n              // Increase the score\n              score += syntaxScore[index]\n              // Return an empty array to indicate that this is corrupt\n              return []\n            }\n          } else {\n            // Otherwise, it's an opening bracket, so add it to the stack\n            stack.push(d[i])\n          }\n        }\n\n        return stack\n      })\n\n      this.solutions.partOne = score\n\n      // Now calculate the scores per row for all non-corrupt ones, then sort\n      const values = sequence.filter(s => s.length > 0)\n        .map(s => {\n          // Score total\n          let total = 0\n          // From back to front\n          for (let i = s.length - 1; i >= 0; i--) {\n            // Get the last one\n            const curr = s.pop()\n            // Check if it's an opening one\n            const index = this.open.indexOf(curr)\n            if (index !== -1) {\n              // Get the matching closing bracket\n              const opp = this.close[this.open.indexOf(curr)]\n\n              // Adjust the score\n              total *= 5\n              total += autoScore[this.close.indexOf(opp)]\n            }\n          }\n\n          return total\n        }).sort((a, b) => a - b)\n\n      // Get the one in the middle\n      this.solutions.partTwo = values[Math.floor(values.length / 2)]\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day10.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day10.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day10.vue?vue&type=template&id=252a5602&\"\nimport script from \"./Day10.vue?vue&type=script&lang=js&\"\nexport * from \"./Day10.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}