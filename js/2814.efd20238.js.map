{"version":3,"file":"js/2814.efd20238.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACrMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GAEA,uDAGA,mEAGA,QACA,oBACA,4BAEA,mDACAQ,IAKA,wBACA,EACAC,cAAAA,SAAAA,GAEA,mBAIA,OAFAC,EAAAA,MAAAA,CAAAA,EAAAA,IAAAA,EAAAA,IAEA,cACA,IChD4P,I,UCOxPC,GAAY,OACd,EACArB,EACAW,GACA,EACA,KACA,WACA,MAIF,EAAeU,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2016/Day3.vue?14a5","webpack://advent-of-code/src/components/2016/Day3.vue","webpack://advent-of-code/./src/components/2016/Day3.vue?c78c","webpack://advent-of-code/./src/components/2016/Day3.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":3,\"year\":2016,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"3\" :year=\"2016\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Parse the triangles. Mind the padding spaces\n      const triangles = input.map(i => i.trim().split(/\\s+/).map(c => +c))\n\n      // Solution part one is just the number of valid triangles by row\n      this.solutions.partOne = triangles.filter(t => this.checkTriangle(t)).length\n\n      // For part two, we go through each column 3 steps at a time\n      let counter = 0\n      for (let col = 0; col < 3; col++) {\n        for (let row = 0; row < triangles.length; row += 3) {\n          // Increment counter if this vertical triangle is valid\n          if (this.checkTriangle([triangles[row][col], triangles[row + 1][col], triangles[row + 2][col]])) {\n            counter++\n          }\n        }\n      }\n\n      this.solutions.partTwo = counter\n    },\n    checkTriangle: function (t) {\n      // Take a copy\n      const cp = t.concat()\n      // Sort\n      cp.sort((a, b) => a - b)\n      // Check sum of smaller two > largest\n      return cp[0] + cp[1] > cp[2]\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day3.vue?vue&type=template&id=63674309&scoped=true\"\nimport script from \"./Day3.vue?vue&type=script&lang=js\"\nexport * from \"./Day3.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"63674309\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","counter","checkTriangle","cp","component"],"sourceRoot":""}