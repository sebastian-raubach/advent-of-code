{"version":3,"file":"js/1823-legacy.c788b213.js","mappings":"yJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,EAAE,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,mBACpLC,EAAkB,G,oFCOtB,SACEC,WAAY,CACVC,IAAJA,EAAAA,YAEEC,KAAM,WACJ,MAAO,CACLN,UAAW,CACTO,QAAS,KACTC,QAAS,QAIfC,QAAS,CACPP,eAAgB,SAApBA,GAAA,WAEA,kFAGMR,KAAKM,UAAUO,QAAUG,EAAUC,QAAO,SAAhD,uCAIM,IADA,IAAN,IACA,YACQ,IAAK,IAAb,oBAEcjB,KAAKkB,cAAc,CAACF,EAAUG,GAAKC,GAAMJ,EAAUG,EAAM,GAAGC,GAAMJ,EAAUG,EAAM,GAAGC,MACvFC,IAKNrB,KAAKM,UAAUQ,QAAUO,GAE3BH,cAAe,SAAnBA,GAEM,IAAN,aAIM,OAFAI,EAAGC,MAAK,SAAdD,EAAAA,GAAA,cAEaA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MC/CyO,I,cCOrQE,GAAY,OACd,EACA1B,EACAW,GACA,EACA,KACA,WACA,MAIF,QAAee,EAAiB,S,gBClBhC,IAAIC,EAAQ,EAAQ,OAChBC,EAAc,EAAQ,OAEtBC,EAAM,MAIVC,EAAOC,QAAU,SAAUC,GACzB,OAAOL,GAAM,WACX,QAASC,EAAYI,MAAkBH,EAAIG,MAAkBH,GAAOD,EAAYI,GAAaC,OAASD,O,6BCR1G,IAAIE,EAAI,EAAQ,OACZC,EAAO,aACPC,EAA+B,EAAQ,OACvCC,EAA0B,EAAQ,OAElCC,EAAsBF,EAA6B,OAEnDG,EAAiBF,EAAwB,OAK7CH,EAAE,CAAEM,OAAQ,QAASC,OAAO,EAAMC,QAASJ,IAAwBC,GAAkB,CACnFI,IAAK,SAAaC,GAChB,OAAOT,EAAKjC,KAAM0C,EAAYC,UAAUC,OAAS,EAAID,UAAU,QAAKE,O,6BCdxE,IAAIb,EAAI,EAAQ,OACZc,EAAQ,cACRC,EAAyB,EAAQ,OAIrCf,EAAE,CAAEM,OAAQ,SAAUC,OAAO,EAAMC,OAAQO,EAAuB,SAAW,CAC3EC,KAAM,WACJ,OAAOF,EAAM9C","sources":["webpack://advent-of-code/./src/components/2016/Day3.vue?74aa","webpack://advent-of-code/src/components/2016/Day3.vue","webpack://advent-of-code/./src/components/2016/Day3.vue?502b","webpack://advent-of-code/./src/components/2016/Day3.vue","webpack://advent-of-code/./node_modules/core-js/internals/string-trim-forced.js","webpack://advent-of-code/./node_modules/core-js/modules/es.array.map.js","webpack://advent-of-code/./node_modules/core-js/modules/es.string.trim.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":3,\"year\":2016,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"3\" :year=\"2016\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Parse the triangles. Mind the padding spaces\n      const triangles = input.map(i => i.trim().split(/\\s+/).map(c => +c))\n\n      // Solution part one is just the number of valid triangles by row\n      this.solutions.partOne = triangles.filter(t => this.checkTriangle(t)).length\n\n      // For part two, we go through each column 3 steps at a time\n      let counter = 0\n      for (let col = 0; col < 3; col++) {\n        for (let row = 0; row < triangles.length; row += 3) {\n          // Increment counter if this vertical triangle is valid\n          if (this.checkTriangle([triangles[row][col], triangles[row + 1][col], triangles[row + 2][col]])) {\n            counter++\n          }\n        }\n      }\n\n      this.solutions.partTwo = counter\n    },\n    checkTriangle: function (t) {\n      // Take a copy\n      const cp = t.concat()\n      // Sort\n      cp.sort((a, b) => a - b)\n      // Check sum of smaller two > largest\n      return cp[0] + cp[1] > cp[2]\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day3.vue?vue&type=template&id=63674309&scoped=true&\"\nimport script from \"./Day3.vue?vue&type=script&lang=js&\"\nexport * from \"./Day3.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"63674309\",\n  null\n  \n)\n\nexport default component.exports","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","triangles","filter","checkTriangle","row","col","counter","cp","sort","component","fails","whitespaces","non","module","exports","METHOD_NAME","name","$","$map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","map","callbackfn","arguments","length","undefined","$trim","forcedStringTrimMethod","trim"],"sourceRoot":""}