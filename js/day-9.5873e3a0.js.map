{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.reduce.js","webpack:///./src/assets/input/Day-9.txt","webpack:///./src/components/Day9.vue?2c88","webpack:///src/components/Day9.vue","webpack:///./src/components/Day9.vue?5388","webpack:///./src/components/Day9.vue","webpack:///./node_modules/core-js/internals/array-reduce.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/es.array.slice.js"],"names":["$","$reduce","left","arrayMethodIsStrict","arrayMethodUsesToLength","CHROME_VERSION","IS_NODE","STRICT_METHOD","USES_TO_LENGTH","1","CHROME_BUG","target","proto","forced","reduce","callbackfn","this","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","attrs","solutions","taskInput","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","preamble","methods","input","map","slice","solvePartOne","solvePartTwo","hasSumOfTwo","i","j","number","push","shift","inner","sum","range","sort","component","aFunction","toObject","IndexedObject","toLength","createMethod","IS_RIGHT","that","argumentsLength","memo","O","self","index","TypeError","module","exports","right","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","isObject","isArray","toAbsoluteIndex","toIndexedObject","createProperty","wellKnownSymbol","ACCESSORS","0","SPECIES","nativeSlice","max","Math","start","end","Constructor","result","n","k","fin","constructor","Array","prototype","call"],"mappings":"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","file":"js/day-9.5873e3a0.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\nvar CHROME_VERSION = require('../internals/engine-v8-version');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH || CHROME_BUG }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export default \"16\\n45\\n42\\n47\\n31\\n38\\n4\\n7\\n44\\n10\\n18\\n24\\n48\\n28\\n19\\n23\\n32\\n1\\n37\\n9\\n36\\n8\\n41\\n49\\n13\\n15\\n11\\n27\\n5\\n6\\n12\\n45\\n14\\n7\\n34\\n10\\n21\\n50\\n29\\n16\\n17\\n18\\n19\\n20\\n31\\n52\\n22\\n23\\n26\\n42\\n13\\n24\\n28\\n46\\n25\\n30\\n58\\n27\\n53\\n49\\n35\\n91\\n47\\n54\\n74\\n51\\n98\\n55\\n33\\n40\\n59\\n36\\n76\\n37\\n38\\n100\\n52\\n107\\n57\\n60\\n67\\n81\\n62\\n68\\n69\\n73\\n117\\n132\\n70\\n71\\n143\\n77\\n74\\n105\\n122\\n75\\n88\\n196\\n89\\n145\\n114\\n146\\n155\\n119\\n127\\n142\\n148\\n130\\n137\\n160\\n237\\n141\\n207\\n147\\n229\\n219\\n152\\n162\\n365\\n163\\n164\\n253\\n288\\n203\\n233\\n241\\n246\\n269\\n249\\n257\\n267\\n271\\n278\\n284\\n325\\n423\\n293\\n299\\n309\\n549\\n314\\n526\\n326\\n512\\n396\\n653\\n436\\n444\\n449\\n562\\n575\\n495\\n506\\n634\\n524\\n566\\n804\\n952\\n583\\n758\\n613\\n763\\n608\\n623\\n640\\n762\\n1145\\n722\\n1305\\n1010\\n1263\\n939\\n1019\\n955\\n1370\\n1001\\n1191\\n1768\\n1090\\n1107\\n1149\\n1853\\n1223\\n1196\\n1221\\n1231\\n1248\\n1772\\n1362\\n1723\\n1907\\n2311\\n2109\\n1894\\n1940\\n1956\\n2187\\n2419\\n2091\\n2960\\n2150\\n3046\\n5379\\n2321\\n2355\\n2469\\n3142\\n2427\\n2417\\n4373\\n2479\\n2610\\n3085\\n3471\\n3630\\n3801\\n3834\\n3850\\n3896\\n4031\\n4047\\n5233\\n4836\\n6277\\n4471\\n8269\\n8101\\n8502\\n7556\\n4772\\n6365\\n4906\\n6510\\n4896\\n5564\\n11282\\n6240\\n6556\\n7367\\n10541\\n7635\\n8305\\n7897\\n12148\\n8078\\n14443\\n11598\\n22521\\n11146\\n12541\\n12120\\n9802\\n9668\\n9678\\n10336\\n12531\\n10460\\n11136\\n11452\\n11804\\n12796\\n13607\\n13923\\n21242\\n15713\\n17699\\n16202\\n15975\\n17746\\n28882\\n19346\\n25515\\n19470\\n21922\\n23572\\n20004\\n19480\\n20014\\n22264\\n32142\\n21596\\n26403\\n22940\\n44995\\n24600\\n26719\\n27530\\n29898\\n31688\\n36206\\n32177\\n35455\\n46417\\n37760\\n38816\\n49912\\n38950\\n39474\\n39484\\n49975\\n62414\\n56777\\n41610\\n54441\\n44536\\n47540\\n53122\\n49659\\n86618\\n51319\\n54249\\n57428\\n61586\\n63865\\n67632\\n88027\\n73215\\n136277\\n76576\\n97199\\n78424\\n78434\\n100662\\n224304\\n111405\\n86146\\n142923\\n96051\\n126337\\n92076\\n98859\\n100978\\n118114\\n125060\\n105568\\n134004\\n223682\\n131497\\n137080\\n140847\\n223226\\n173877\\n156858\\n155000\\n164570\\n197644\\n186808\\n212067\\n178222\\n182197\\n194910\\n188127\\n221111\\n193054\\n256557\\n259064\\n289630\\n239572\\n298622\\n324551\\n309719\\n467852\\n268577\\n277927\\n328877\\n348054\\n464735\\n343666\\n319570\\n392554\\n360419\\n394264\\n366349\\n370324\\n383037\\n555329\\n381181\\n432626\\n710015\\n496129\\n498636\\n559142\\n517499\\n664971\\n546504\\n578296\\n743456\\n588147\\n721431\\n1086783\\n663236\\n685919\\n679989\\n689894\\n726768\\n730743\\n1401420\\n736673\\n751505\\n813807\\n877310\\n879817\\n1598741\\n1013628\\n1353130\\n1329801\\n1452174\\n2325509\\n1211475\\n1124800\\n3046940\\n1268136\\n1251383\\n1343225\\n1393979\\n1349155\\n1365908\\n1740396\\n2215227\\n1457511\\n2145446\\n1631322\\n1488178\\n1565312\\n1691117\\n2207111\\n2392936\\n2138428\\n2281764\\n2817979\\n2336275\\n2582311\\n2376183\\n2462858\\n3179295\\n2519519\\n3573019\\n3644319\\n2831403\\n2715063\\n2806666\\n2823419\\n2945689\\n3633624\\n3850447\\n4720739\\n3053490\\n4319581\\n3256429\\n3829545\\n4657947\\n5326185\\n4420192\\n5949202\\n5641398\\n4799133\\n4839041\\n4895702\\n4982377\\n5234582\\n7630536\\n5630085\\n7150984\\n5538482\\n6652964\\n5752355\\n8725247\\n5999179\\n6309919\\n10419371\\n6883035\\n11579287\\n7085974\\n7676621\\n9470943\\n13986540\\n9219325\\n9259233\\n9878079\\n9694835\\n16418550\\n9734743\\n18420082\\n12283049\\n12652143\\n11290837\\n11168567\\n11537661\\n11751534\\n12062274\\n22346978\\n17847580\\n16004754\\n21911376\\n13969009\\n14559656\\n14762595\\n16305299\\n16895946\\n18478558\\n18914160\\n32883169\\n31646119\\n19429578\\n36325524\\n26824869\\n24345323\\n22706228\\n33637815\\n22459404\\n36407597\\n22920101\\n23289195\\n37265884\\n45626329\\n39107918\\n57586476\\n37682696\\n28528665\\n28731604\\n29322251\\n31067894\\n33201245\\n45379505\\n48161182\\n38343738\\n42349679\\n41888982\\n42718773\\n66839060\\n45165632\\n57260269\\n67838909\\n45748599\\n46209296\\n51448766\\n71247438\\n51817860\\n57850916\\n58053855\\n62523496\\n61729910\\n99412606\\n61932849\\n99979042\\n60390145\\n88467372\\n71544983\\n81062511\\n103618892\\n80232720\\n84238661\\n84607755\\n87884405\\n106599441\\n133274893\\n91957895\\n97197365\\n104060212\\n142165569\\n113972262\\n109668776\\n109871715\\n115904771\\n149614315\\n122120055\\n153890744\\n122322994\\n131935128\\n140622865\\n144628806\\n164471381\\n151777703\\n161295231\\n236586701\\n172492160\\n188298873\\n286794375\\n194483846\\n189155260\\n236295256\\n353626641\\n206866141\\n301918096\\n231991770\\n219540491\\n292400568\\n225776486\\n238227765\\n244443049\\n254258122\\n274100697\\n262945859\\n355779077\\n309100187\\n332927679\\n313072934\\n480966838\\n333787391\\n425450516\\n360791033\\n493660516\\n383639106\\n552468170\\n396021401\\n432642627\\n426406632\\n438857911\\n445316977\\n889681917\\n499877183\\n464004251\\n470219535\\n482670814\\n498701171\\n517203981\\n537046556\\n572046046\\n622173121\\n948489571\\n646860325\\n673863967\\n890410883\\n694578424\\n744430139\\n968920706\\n1391290464\\n779660507\\n1139377102\\n822428033\\n982363533\\n865264543\\n902862162\\n909321228\\n934223786\\n998578354\\n946675065\\n1159219677\\n981371985\\n1015905152\\n1089250027\\n1512584004\\n1728150078\\n1556181553\\n1712838916\\n1537271208\\n1368442391\\n1474238931\\n1439008563\\n1524090646\\n1602088540\\n2292244511\\n1644925050\\n1687692576\\n1725290195\\n1907899582\\n2804144727\\n2881026395\\n2420913996\\n1880898851\\n3633189777\\n1928047050\\n2105155179\\n2457692418\\n2539995798\\n3833305257\\n5435393797\\n2089807806\\n2924623944\\n3119163981\\n3076327471\\n3013367441\\n7540548976\\n2963099209\\n3568591427\\n3970706657\\n4658292491\\n4108606572\\n4420894649\\n3830445374\\n3808945901\\n3986054030\\n4033202229\\n4017854856\\n6132531422\\n4194962985\\n4385739468\\n4562847597\\n4547500224\\n6581958868\\n5014431750\\n6984074098\\n5052907015\\n8251340023\\n5976466650\\n7399106909\\n6531690636\\n6772045110\\n6793544583\\n7377537328\\n7639391275\\n8194685369\\n11594069894\\n7794999931\\n7816499404\\n7826800757\\n10726653621\\n18971607222\\n15194036732\\n8580702453\\n9438646483\\n8933239692\\n15979809362\\n9561931974\\n21775995600\\n10990898400\\n11029373665\\n12847906946\\n14171081911\\n25161980311\\n13303735746\\n13325235219\\n13565589693\\n14432935858\\n15016928603\\n15455890679\\n17388732731\\n15611499335\\n15621800688\\n21717552021\\n31156198504\\n19000578457\\n34593407910\\n24913049054\\n17513942145\\n18371886175\\n22258474911\\n24354608884\\n40776574057\\n24316133619\\n25423834258\\n27736671604\\n26151642692\\n33433514315\\n26628970965\\n26869325439\\n26890824912\\n27998525551\\n29888826537\\n36514520602\\n49127800350\\n31233300023\\n33125441480\\n33135742833\\n44383267584\\n67729150743\\n41868551029\\n42937776403\\n35885828320\\n39772417056\\n40630361086\\n57788123199\\n49739967877\\n50467776311\\n51185459058\\n78823604723\\n62776653232\\n52780613657\\n53498296404\\n57862270988\\n92065576753\\n58124124935\\n57887352088\\n136710956811\\n64358741503\\n90240193367\\n82875710710\\n66261184313\\n102245538572\\n75658245376\\n89512384933\\n86353604631\\n80402778142\\n155026152229\\n110642884645\\n131588237200\\n100207744188\\n100925426935\\n101653235369\\n110667965745\\n106278910061\\n110904738592\\n148102464355\\n166756382773\\n115749623076\\n133545597464\\n259007202947\\n144761519645\\n168506722885\\n185121249282\\n149136895023\\n141919429689\\n146663962455\\n202578662304\\n156061023518\\n197258343223\\n210850628833\\n180610522330\\n211112482780\\n322817406291\\n217183648653\\n201133171123\\n211593392680\\n207932145430\\n303537253284\\n222028533137\\n244450336056\\n332933271729\\n329882768927\\n249295220540\\n275465027153\\n286680949334\\n334258144305\\n288583392144\\n455562818836\\n410510807734\\n349851575119\\n302724985973\\n403711833427\\n336671545848\\n377868865553\\n699094199878\\n492648675806\\n640208799132\\n562145976487\\n412726563803\\n409065316553\\n508709482471\\n579002280437\\n737099011862\\n466478869193\\n1261240176365\\n618466161071\\n1034565099273\\n524760247693\\n933825564246\\n575264341478\\n925115916597\\n864870962460\\n711790302526\\n639396531821\\n706436819400\\n898817522335\\n1355565172933\\n714540411401\\n1223854447571\\n821791880356\\n1331349831653\\n875544185746\\n879205432996\\n1033469730164\\n917774799024\\n1084945030264\\n991239116886\\n1143226408764\\n1041743210671\\n1333006572472\\n1100024589171\\n1811814891697\\n1164156779514\\n1214660873299\\n1287054644004\\n1345833351221\\n1353936943222\\n1697336066102\\n2002719829288\\n1909013915910\\n1536332291757\\n1906736910620\\n1590084597147\\n3252570261841\\n1700997313352\\n1796980232020\\n1754749618742\\n2184969619435\\n1951244529188\\n2141767799842\\n2032982327557\\n2091263706057\\n2205899990185\\n3610011229262\\n2264181368685\\n2314685462470\\n4112636900805\\n3703717142640\\n3472024263439\\n2640991587226\\n2699770294443\\n3150917175242\\n3126416888904\\n3539052121045\\n3291081910499\\n3497977545372\\n3344834215889\\n3387064829167\\n3455746932094\\n5561255758450\\n3551729850762\\n3787731946299\\n3984226856745\\n5654961671828\\n7313728371902\\n4124246033614\\n4297163696242\\n4470081358870\\n7771958803044\\n7135144031987\\n8906089974339\\n9126985935267\\n6180043708271\\n5767408476130\\n5340761881669\\n5826187183347\\n9100307879495\\n14441069761164\\n6635916126388\\n8727826710836\\n6731899045056\\n6842811761261\\n6938794679929\\n8021811209632\\n7339461797061\\n7535956707507\\n7911977979913\\n9779207705442\\n8421409729856\\n8594327392484\\n8767245055112\\n11809543155931\\n15119969587111\\n11520805589940\\n12006230891618\\n20621113469435\\n17118669502503\\n11108170357799\\n11166949065016\\n14378768468768\\n15736224005883\\n13367815171444\\n13478727887649\\n14071360842117\\n15933789189545\\n14182273558322\\n13781606441190\\n14278256476990\\n14875418504568\\n15251439776974\\n15447934687420\\n16333387709769\\n20946156770458\\n22628975947739\\n17361572447596\\n20288050645052\\n22687754654956\\n32466962360398\\n30404748551886\\n22275119422815\\n24475985529243\\n25179531199916\\n35996791119183\\n24534764236460\\n26846543059093\\n31185228966519\\n27439176013561\\n27260334328839\\n27852967283307\\n27963879999512\\n28657024945758\\n28059862918180\\n47914897047818\\n30126858281542\\n30699374464394\\n38608507132584\\n33694960157365\\n70543872995557\\n49121662481908\\n37649623092648\\n42563170067867\\n49714295436376\\n52026074259009\\n58759237382574\\n54106877387932\\n49010749765703\\n51381307295553\\n51795098565299\\n79286408587848\\n101036824024712\\n57387192610381\\n54699510342400\\n97367744515158\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":9,\"solutions\":_vm.solutions,\"taskInput\":_vm.taskInput},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"9\" :solutions=\"solutions\" :taskInput=\"taskInput\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      taskInput: require('@/assets/input/Day-9.txt').default,\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      preamble: []\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      input = input.map(i => +i)\n      this.preamble = input.slice(0, 25)\n\n      this.solvePartOne(input.slice(25, input.length))\n      this.solvePartTwo(input)\n    },\n    hasSumOfTwo: function (number) {\n      // Iterate through\n      for (let i = 0; i < this.preamble.length; i++) {\n        // Start second loop only from i\n        for (let j = i + 1; j < this.preamble.length; j++) {\n          if (this.preamble[i] + this.preamble[j] === number) {\n            return true\n          }\n        }\n      }\n\n      return false\n    },\n    solvePartOne: function (numbers) {\n      for (let n = 0; n < numbers.length; n++) {\n        const number = numbers[n]\n\n        const hasSumOfTwo = this.hasSumOfTwo(number)\n\n        if (hasSumOfTwo === false) {\n          this.solutions.partOne = number\n          return\n        }\n\n        this.preamble.push(number)\n        this.preamble.shift()\n      }\n    },\n    solvePartTwo: function (numbers) {\n      for (let start = 0; start < numbers.length; start++) {\n        inner: for (let end = start + 1; end < numbers.length; end++) {\n          const range = numbers.slice(start, end + 1)\n          const sum = range.reduce((a, b) => a + b)\n\n          if (sum === this.solutions.partOne) {\n            range.sort((a, b) => a - b)\n            this.solutions.partTwo = range[0] + range[range.length - 1]\n          } else if (sum > this.solutions.partOne) {\n            break inner\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day9.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day9.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day9.vue?vue&type=template&id=3d89507e&\"\nimport script from \"./Day9.vue?vue&type=script&lang=js&\"\nexport * from \"./Day9.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"],"sourceRoot":""}