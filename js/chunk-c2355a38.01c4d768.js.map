{"version":3,"sources":["webpack:///./src/components/2020/Day3.vue?c37d","webpack:///./src/components/2020/Day3.vue?7e87","webpack:///./src/util/PathDrawer.js","webpack:///src/components/2020/Day3.vue","webpack:///./src/components/2020/Day3.vue?6237","webpack:///./src/components/2020/Day3.vue?94c0","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","staticClass","domProps","_s","gridOne","_v","proxy","gridTwo","staticRenderFns","PathDrawer","input","paths","$input","$paths","result","xRepeats","map","p","Math","ceil","length","x","reduce","a","b","max","onPath","forEach","c","y","hit","rep","value","totalX","isHit","components","Day","data","partOne","partTwo","parsedInput","1","2","methods","r","split","solvePartOne","solvePartTwo","push","path","trees","slopes","checkSlope","deltaX","counter","component","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","proto","forced","callbackfn","arguments","undefined"],"mappings":"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","file":"js/chunk-c2355a38.01c4d768.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day3.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":3,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('pre',{staticClass:\"day-3-code border\"},[_c('code',{domProps:{\"innerHTML\":_vm._s(_vm.gridOne)}}),_vm._v(\"\\n      \")])]},proxy:true},{key:\"partTwo\",fn:function(){return [_c('pre',{staticClass:\"day-3-code border\"},[_c('code',{domProps:{\"innerHTML\":_vm._s(_vm.gridTwo)}}),_vm._v(\"\\n      \")])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class PathDrawer {\n  constructor (input, paths) {\n    this.$input = input\n    this.$paths = paths\n  }\n\n  getPathGrid () {\n    let result = ''\n    // Calculate how many times the grid repeats in x direction\n    const xRepeats = this.$paths.map(p => {\n      return Math.ceil(p[p.length - 1].x / this.$input[0].length)\n    }).reduce((a, b) => Math.max(a, b))\n\n    // Get a map of all cells on the path\n    const onPath = {}\n    this.$paths.forEach(p => {\n      p.forEach(c => {\n        onPath[`${c.x}-${c.y}`] = c.hit\n      })\n    })\n\n    // Each row\n    for (let y = 0; y < this.$input.length; y++) {\n      // Repeat the for xRepeat times\n      for (let rep = 0; rep < xRepeats; rep++) {\n        // Then draw the row\n        for (let x = 0; x < this.$input[y].length; x++) {\n          const value = this.$input[y][x] ? '#' : '.'\n          const totalX = this.$input[y].length * rep + x\n          const isHit = onPath[`${totalX}-${y}`]\n\n          if (isHit === true) {\n            result += '<span class=\"day-3-path-hit\">X</span>'\n          } else if (isHit === false) {\n            result += '<span class=\"day-3-path-miss\">O</span>'\n          } else {\n            result += value\n          }\n        }\n      }\n      result += '<br/>'\n    }\n\n    return result\n  }\n}\n","<template>\n  <Day :day=\"3\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partOne>\n      <pre class=\"day-3-code border\">\n<code v-html=\"gridOne\" />\n      </pre>\n    </template>\n    <template v-slot:partTwo>\n      <pre class=\"day-3-code border\">\n<code v-html=\"gridTwo\" />\n      </pre>\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nimport PathDrawer from '@/util/PathDrawer.js'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      parsedInput: [],\n      paths: {\n        1: [],\n        2: []\n      },\n      gridOne: null,\n      gridTwo: null\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Map the input into a 2d boolean array where trees are true\n      this.parsedInput = input.map(r => {\n        return r.split('').map(c => c === '#')\n      })\n\n      // Reset some data fields\n      this.paths = {\n        1: [],\n        2: []\n      }\n      this.gridOne = null\n      this.gridTwo = null\n\n      // Solve both parts\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      // Check the slope\n      const result = this.checkSlope(3, 1)\n      // Save the path for drawing\n      this.paths[1].push(result.path)\n      // Set the result\n      this.solutions.partOne = result.trees\n\n      // Start the drawer\n      this.gridOne = new PathDrawer(this.parsedInput, this.paths[1]).getPathGrid()\n    },\n    solvePartTwo: function () {\n      // Check the slopes\n      const slopes = [\n        [1, 1],\n        [3, 1],\n        [5, 1],\n        [7, 1],\n        [1, 2]\n      ]\n\n      // Map each slope to its number of trees then multiply them together\n      this.solutions.partTwo = slopes.map(s => {\n        // Calculate the result\n        const result = this.checkSlope(s[0], s[1])\n        // Save the path for drawing\n        this.paths[2].push(result.path)\n        // Return the number of trees\n        return result.trees\n      })\n        .reduce((a, b) => a * b, 1)\n\n      // Start the drawer\n      this.gridTwo = new PathDrawer(this.parsedInput, this.paths[2]).getPathGrid()\n    },\n    /**\n     * Checks the number of trees and grid points on the path from top left with the given delta slope\n     * @param deltaX The delta value in the x direction (>= 0)\n     * @param deltaY The delta value in the y direction (>= 0)\n     * @returns An object containing the number of trees (`trees`) and the cells on the path (`path`)\n     */\n    checkSlope: function (deltaX, deltaY) {\n      let counter = 0\n      let x = 0\n      // Keep track of the overall x position for repeated grids\n      let totalX = 0\n      // Track all the cells on the path\n      const path = []\n      // Traverse in y direction with delta y\n      for (let y = deltaY; y < this.parsedInput.length; y += deltaY) {\n        // Add to total x\n        totalX += deltaX\n        // Calculate new x based on wrapping\n        x = (x + deltaX) % this.parsedInput[y].length\n        // Check if it's a tree\n        if (this.parsedInput[y][x]) {\n          counter++\n          path.push({ x: totalX, y: y, hit: true })\n        } else {\n          path.push({ x: totalX, y: y, hit: false })\n        }\n      }\n\n      return {\n        path: path,\n        trees: counter\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.day-3-code {\n  background-color: #2c3e50;\n  color: #7f8c8d;\n  max-height: 300px;\n}\n.day-3-path-hit {\n  background-color: #2ecc71;\n  color: #2c3e50;\n}\n.day-3-path-miss {\n  background-color: #ecf0f1;\n  color: #2c3e50;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day3.vue?vue&type=template&id=d0ebb26a&\"\nimport script from \"./Day3.vue?vue&type=script&lang=js&\"\nexport * from \"./Day3.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Day3.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}