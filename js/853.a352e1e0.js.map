{"version":3,"file":"js/853.a352e1e0.js","mappings":"yKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,gBAAgBC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACT,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,aAAaF,EAAG,WAAW,CAACI,GAAG,CAAC,MAAQR,EAAIc,OAAO,CAACd,EAAIe,GAAG,UAAUX,EAAG,WAAW,CAACI,GAAG,CAAC,MAAQR,EAAIgB,OAAO,CAAChB,EAAIe,GAAG,UAAU,EAAEE,OAAM,MAAS,EAClaC,EAAkB,G,WCYtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAd,UAAAA,CACAe,QAAAA,KACAC,QAAAA,MAEAC,KAAAA,EACAC,WAAAA,EAEA,EACAC,QAAAA,CACAjB,eAAAA,SAAAA,GACA,YACA,uBAEA,gCACA,2EACA,kEAMA,OAHAkB,EAAAA,IAAAA,EAAAA,GACAC,EAAAA,IAAAA,EAAAA,GAEA,CACAD,SACAC,WACA,IAGA,oBACA,mBACA,EACAd,KAAAA,WAEA,YACA,wBACA,EACAE,KAAAA,WAEA,YACA,wBACA,EACAa,SAAAA,SAAAA,GAEA,UACAC,EAAAA,KAAAA,OAAAA,KAAAA,GAAAA,EAAAA,OAAAA,GAAAA,EAAAA,SAAAA,GAAAA,IACAC,EAAAA,KAAAA,OAAAA,KAAAA,GAAAA,EAAAA,OAAAA,GAAAA,EAAAA,SAAAA,GAAAA,IACAC,KAAAA,UACAC,KAAAA,UACAC,OAAAA,CACAC,OAAAA,SACAC,KAAAA,MAIA,eAEA,kCACAC,OAAAA,IACAC,WAAAA,EACAC,MAAAA,CACAC,SAAAA,GAEAC,MAAAA,CACAD,SAAAA,IAEA,CACAE,YAAAA,EACAC,aAAAA,EACAC,gBAAAA,YAIA,cACA,OACA,wCAEA,EACAC,aAAAA,WAEA,uBAEA,SAEA,uBACA,oBACA,mBACA,oBAEA,yBACA,4CACA,sCAEAC,EAAAA,KAAAA,IAAAA,EAAAA,GACAC,EAAAA,KAAAA,IAAAA,EAAAA,GACAC,EAAAA,KAAAA,IAAAA,EAAAA,GACAC,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,IAIA,oBAEA,UAIA,CAEA,YACA,KACA,CANAC,EAAAA,EACA,WAMA,CAGA,0BAGA,8CACA,EACAC,aAAAA,WAEA,gCACA,IC3I6P,I,UCOzPC,GAAY,OACd,EACArD,EACAmB,GACA,EACA,KACA,WACA,MAIF,EAAekC,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2018/Day10.vue?1768","webpack://advent-of-code/src/components/2018/Day10.vue","webpack://advent-of-code/./src/components/2018/Day10.vue?7746","webpack://advent-of-code/./src/components/2018/Day10.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":10,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{attrs:{\"id\":\"partOne\"}}),_c('b-button',{on:{\"click\":_vm.prev}},[_vm._v(\"Prev\")]),_c('b-button',{on:{\"click\":_vm.next}},[_vm._v(\"Next\")])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"10\" :year=\"2018\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partOne>\n      <div id=\"partOne\" />\n      <b-button @click=\"prev\">Prev</b-button>\n      <b-button @click=\"next\">Next</b-button>\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      step: 0,\n      firstDraw: true\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.step = 0\n      this.points = input.map(i => {\n        // Split into needed parts\n        const parts = i.split('> velocity=<')\n        const coords = parts[0].replace('position=<', '').replace(/\\s*/g, '').split(',').map(c => +c)\n        const velocity = parts[1].replace('>', '').replace(/\\s*/g, '').split(',').map(v => +v)\n\n        // Invert y dimension for plotting\n        coords[1] = -coords[1]\n        velocity[1] = -velocity[1]\n\n        return {\n          coords,\n          velocity\n        }\n      })\n\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    prev: function () {\n      // Manually step one timepoint back\n      this.step--\n      this.drawStep(this.step)\n    },\n    next: function () {\n      // Manually step one timepoint forwards\n      this.step++\n      this.drawStep(this.step)\n    },\n    drawStep: function (i) {\n      // Create the chart trace\n      const traces = [{\n        x: this.points.map(p => p.coords[0] + p.velocity[0] * i),\n        y: this.points.map(p => p.coords[1] + p.velocity[1] * i),\n        mode: 'markers',\n        type: 'scatter',\n        marker: {\n          symbol: 'square',\n          size: 20\n        }\n      }]\n\n      if (this.firstDraw) {\n        // If it's the first time the chart is drawn, create it\n        this.$plotly.newPlot('partOne', traces, {\n          height: 350,\n          hovermode: false,\n          xaxis: {\n            visible: false\n          },\n          yaxis: {\n            visible: false\n          }\n        }, {\n          responsive: true,\n          displaylogo: false,\n          displayModeBar: false\n        })\n      } else {\n        // Otherwise, update it\n        delete traces.mode\n        delete traces.type\n        this.$plotly.update('partOne', traces, {}, [0])\n      }\n    },\n    solvePartOne: function () {\n      // Find the timepoint with the smallest area of the minimal bounding box\n      let area = Number.MAX_VALUE\n\n      while (true) {\n        // Get the min/max x/y coordinates\n        let minX = Number.MAX_VALUE\n        let maxX = -Number.MAX_VALUE\n        let minY = Number.MAX_VALUE\n        let maxY = -Number.MAX_VALUE\n\n        this.points.forEach(p => {\n          const x = p.coords[0] + p.velocity[0] * this.step\n          const y = p.coords[1] + p.velocity[1] * this.step\n\n          minX = Math.min(minX, x)\n          maxX = Math.max(maxX, x)\n          minY = Math.min(minY, y)\n          maxY = Math.max(maxY, y)\n        })\n\n        // Calculate the current area\n        const tempArea = (maxX - minX) * (maxY - minY)\n\n        if (tempArea < area) {\n          // If it's smaller, keep it\n          area = tempArea\n          this.step++\n        } else {\n          // If it got larger again, quit and decrement the step counter\n          this.step--\n          break\n        }\n      }\n\n      // Hack to make the solution show up\n      this.solutions.partOne = ''\n\n      // Then draw the chart\n      this.$nextTick(() => this.drawStep(this.step))\n    },\n    solvePartTwo: function () {\n      // Part two is just the number of steps it took to get there\n      this.solutions.partTwo = this.step\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day10.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day10.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day10.vue?vue&type=template&id=59c85c02&scoped=true\"\nimport script from \"./Day10.vue?vue&type=script&lang=js\"\nexport * from \"./Day10.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59c85c02\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","prev","_v","next","proxy","staticRenderFns","components","Day","data","partOne","partTwo","step","firstDraw","methods","coords","velocity","drawStep","x","y","mode","type","marker","symbol","size","height","hovermode","xaxis","visible","yaxis","responsive","displaylogo","displayModeBar","solvePartOne","minX","maxX","minY","maxY","area","solvePartTwo","component"],"sourceRoot":""}