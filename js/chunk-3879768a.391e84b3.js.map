{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./src/components/2021/Day15.vue?3ff4","webpack:///src/components/2021/Day15.vue","webpack:///./src/components/2021/Day15.vue?73d2","webpack:///./src/components/2021/Day15.vue?5097","webpack:///./node_modules/core-js/modules/es.number.max-safe-integer.js","webpack:///./src/components/2021/Day15.vue?64bc"],"names":["collection","collectionStrong","init","this","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","staticClass","ref","proxy","staticRenderFns","components","Day","data","partOne","partTwo","neighbors","gridOne","methods","dijkstra","nodesOne","input","$nextTick","nodesTwo","parseInput","value","nodes","set","coords","x","y","cost","Number","POSITIVE_INFINITY","validNeighbors","compare","start","queue","enqueue","current","forEach","neighbor","Math","min","onQueue","target","size","get","print","ctx","clearRect","canvas","width","height","fillStyle","gradientValue","n","fillRect","path","has","maxX","gradient","getNodesOnPath","add","minValue","component","$","stat","MAX_SAFE_INTEGER"],"mappings":"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","file":"js/chunk-3879768a.391e84b3.js","sourcesContent":["'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\ncollection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":15,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{staticClass:\"canvas-holder-one\"},[_c('canvas',{ref:\"partOne\",staticClass:\"canvas\",attrs:{\"width\":\"202\",\"height\":\"100\"}})])]},proxy:true},{key:\"partTwo\",fn:function(){return [_c('div',{staticClass:\"canvas-holder-two\"},[_c('canvas',{ref:\"partTwo\",staticClass:\"canvas\",attrs:{\"width\":\"1002\",\"height\":\"500\"}})])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"15\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partOne>\n      <div class=\"canvas-holder-one\">\n        <canvas ref=\"partOne\" class=\"canvas\" width=\"202\" height=\"100\" />\n      </div>\n    </template>\n    <template v-slot:partTwo>\n      <div class=\"canvas-holder-two\">\n        <canvas ref=\"partTwo\" class=\"canvas\" width=\"1002\" height=\"500\" />\n      </div>\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nconst { PriorityQueue } = require('@datastructures-js/priority-queue')\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      neighbors: [[1, 0], [0, 1], [-1, 0], [0, -1]],\n      gridOne: null\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const nodesOne = this.parseInput(input, 1)\n      this.solutions.partOne = this.dijkstra(nodesOne, input[0].length - 1, input.length - 1)\n      this.$nextTick(() => this.print(this.$refs.partOne, nodesOne, this.getNodesOnPath(nodesOne, `${input[0].length - 1},${input.length - 1}`), input[0].length - 1, input.length - 1))\n\n      const nodesTwo = this.parseInput(input, 5)\n      this.solutions.partTwo = this.dijkstra(nodesTwo, input[0].length * 5 - 1, input.length * 5 - 1)\n      this.$nextTick(() => this.print(this.$refs.partTwo, nodesTwo, this.getNodesOnPath(nodesTwo, `${input[0].length * 5 - 1},${input.length * 5 - 1}`), input[0].length * 5 - 1, input.length * 5 - 1))\n    },\n    parseInput: function (input, repeat) {\n      const nodes = new Map()\n\n      const maxX = input[0].length\n      const maxY = input.length\n\n      // Parse the original grid\n      const grid = input.map(i => i.split('').map(c => +c))\n\n      // For the larger dimensions\n      for (let y = 0; y < maxY * repeat; y++) {\n        for (let x = 0; x < maxX * repeat; x++) {\n          // Get the coordinates and the valid neighbors\n          const coords = `${x},${y}`\n          const validNeighbors = this.neighbors.filter(n => x + n[0] >= 0 && x + n[0] < maxX * repeat && y + n[1] >= 0 && y + n[1] < maxY * repeat)\n\n          // Calculate the value of the repeated cell\n          let value = (+grid[y % grid.length][x % grid[0].length]) + Math.floor(y / maxY) + Math.floor(x / maxX)\n\n          // Fix issues with large values\n          if (value > 9) {\n            value -= 9\n          }\n\n          // Add the node to the mapping\n          nodes.set(coords, {\n            x: x,\n            y: y,\n            value: value,\n            coords: coords,\n            cost: Number.POSITIVE_INFINITY,\n            neighbors: validNeighbors\n          })\n        }\n      }\n\n      return nodes\n    },\n    dijkstra: function (nodes, maxX, maxY) {\n      const target = `${maxX},${maxY}`\n\n      // Use a priority queue to keep track of the node with lowest cost\n      const queue = new PriorityQueue({\n        compare: (a, b) => a.cost - b.cost\n      })\n\n      // Add the start point\n      const start = nodes.get('0,0')\n      start.cost = 0\n      queue.enqueue(start)\n\n      // While there are still nodes on the queue, continue\n      while (queue.size() > 0) {\n        // Get the lowest-cost node\n        const current = queue.dequeue()\n\n        // Go through all neighbors\n        current.neighbors.forEach(n => {\n          // Get the actual object\n          const coords = `${current.x + n[0]},${current.y + n[1]}`\n          const neighbor = nodes.get(coords)\n\n          // Check if it's on the queue\n          const onQueue = neighbor.cost !== Number.POSITIVE_INFINITY\n          // Adjust the cost\n          neighbor.cost = Math.min(neighbor.cost, current.cost + neighbor.value)\n\n          if (!onQueue) {\n            // Add to queue\n            queue.enqueue(neighbor)\n          }\n        })\n\n        // If we found the target, we can stop\n        if (current.coords === target) {\n          break\n        }\n      }\n\n      return nodes.get(target).cost\n    },\n    print: function (canvas, nodes, path, maxX, maxY) {\n      const ctx = canvas.getContext('2d')\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      const gradient = this.createColorGradient('#006266', '#C4E538', nodes.get(`${maxX},${maxY}`).cost + 1)\n      const gradientValue = this.createColorGradient('#006266', '#C4E538', 10)\n\n      nodes.forEach(n => {\n        ctx.fillStyle = gradientValue[n.value]\n        ctx.fillRect(n.x, n.y, 1, 1)\n\n        if (path.has(n.coords)) {\n          ctx.fillStyle = '#181a1b'\n          ctx.fillRect(n.x + maxX + 2, n.y, 1, 1)\n        } else {\n          ctx.fillStyle = gradient[n.cost]\n          ctx.fillRect(n.x + maxX + 2, n.y, 1, 1)\n        }\n      })\n    },\n    getNodesOnPath: function (nodes, target) {\n      // Keep track of the nodes on the path\n      const path = new Set()\n\n      // Start at the target\n      let current = target\n      path.add(current)\n\n      // While we haven't reached the start yet\n      while (current !== '0,0') {\n        // Find the neighbor with the smallest cost\n        let minValue = Number.MAX_SAFE_INTEGER\n        let min = null\n        nodes.get(current).neighbors.forEach(n => {\n          const curr = current.split(',').map(c => +c)\n          const coords = `${curr[0] + n[0]},${curr[1] + n[1]}`\n          const neighbor = nodes.get(coords)\n\n          if (neighbor.cost < minValue) {\n            minValue = neighbor.cost\n            min = coords\n          }\n        })\n\n        // Add that neighbor and continue with it\n        path.add(min)\n        current = min\n      }\n\n      // Add the target\n      path.add('0,0')\n\n      return path\n    }\n  }\n}\n</script>\n\n<style>\n.canvas-holder-one {\n  overflow: auto;\n  height: 100px;\n  width: 100%;\n}\n.canvas-holder-two {\n  overflow: auto;\n  height: 500px;\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day15.vue?vue&type=template&id=0346fac1&\"\nimport script from \"./Day15.vue?vue&type=script&lang=js&\"\nexport * from \"./Day15.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Day15.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.es/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day15.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}