{"version":3,"sources":["webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./src/components/2020/Day14.vue?c9c7","webpack:///src/components/2020/Day14.vue","webpack:///./src/components/2020/Day14.vue?cfa4","webpack:///./src/components/2020/Day14.vue","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/es.json.stringify.js"],"names":["uncurryThis","toObject","floor","Math","charAt","replace","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","match","ch","capture","n","f","render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","memory","input","masks","methods","forEach","i","indexOf","index","mask","value","solvePartOne","solvePartTwo","Object","keys","map","x","addressBits","y","copy","bin","finalAddresses","push","parseInt","join","decimalToBinary","result","overwriteBits","split","component","apply","call","fixRegExpWellKnownSymbolLogic","fails","anObject","isCallable","toIntegerOrInfinity","toLength","toString","requireObjectCoercible","advanceStringIndex","getMethod","getSubstitution","regExpExec","wellKnownSymbol","REPLACE","max","min","concat","stringIndexOf","maybeToString","it","String","REPLACE_KEEPS_$0","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","re","exec","groups","a","_","nativeReplace","maybeCallNative","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","string","rx","S","res","done","functionalReplace","global","fullUnicode","unicode","lastIndex","results","matchStr","accumulatedResult","nextSourcePosition","j","replacerArgs","$","IndexedObject","toIndexedObject","arrayMethodIsStrict","un$Join","ES3_STRINGS","STRICT_METHOD","target","proto","forced","separator","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","callbackfn","arguments","getBuiltIn","Array","$stringify","charCodeAt","numberToString","tester","low","hi","fix","offset","prev","next","FORCED","stat","stringify","space","l","args"],"mappings":"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","file":"js/chunk-25f398ae.74c5bf2b.js","sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":14,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"14\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      memory: {},\n      input: [],\n      masks: []\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Initialize everything\n      this.memory = {}\n      this.input = []\n      this.masks = []\n      // Loop through input\n      input.forEach(i => {\n        if (i.indexOf('mask') !== -1) {\n          // If it's a mask, parse it\n          this.masks.push(i.replace('mask = ', '').split(''))\n        } else {\n          // Otherwise, split on the equals\n          const parts = i.split(' = ')\n          // Get the memory index\n          const index = +parts[0].replace(/\\D/g, '')\n          // And get the binary representation of the value\n          const value = this.decimalToBinary(+parts[1], 36)\n          // Then push the configuration to an array\n          this.input.push({\n            index: index,\n            mask: this.masks[this.masks.length - 1],\n            value: value\n          })\n        }\n      })\n\n      this.solvePartOne()\n\n      // Reset the memory\n      this.memory = {}\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      this.input.forEach(i => {\n        // Set the memory at the given index to the corrected input\n        this.memory[i.index] = parseInt(this.overwriteBits(i.value, i.mask), 2)\n      })\n\n      // Sum over all set memory addresses\n      this.solutions.partOne = Object.keys(this.memory).map(k => this.memory[k]).reduce((a, b) => a + b)\n    },\n    solvePartTwo: function () {\n      // Loop over the input\n      this.input.forEach(i => {\n        // Convert the index to binary representation\n        const addressBits = this.decimalToBinary(i.index, 36).split('')\n        const mask = i.mask\n\n        // First replace all mask 1's\n        for (let x = 0; x < mask.length; x++) {\n          if (mask[x] === '1') {\n            addressBits[x] = '1'\n          }\n        }\n\n        // Keep track of all final addresses\n        const finalAddresses = []\n        // Get the number of Xs in the mask\n        const numberOfXs = mask.filter(x => x === 'X').length\n\n        // Loop through all 2^#Xs combinations\n        for (let x = 0; x < Math.pow(2, numberOfXs); x++) {\n          // Convert the number to a binary\n          // This gives for #X = 2\n          // 00, 01, 10, 11\n          // For #X = 3 this results in\n          // 000, 001, 010, 011, 100, 101, 110, 111\n          // We then use these bits from right to left to fill the Xs in the address\n          const bin = this.decimalToBinary(x, numberOfXs)\n\n          // Copy the current address\n          const copy = JSON.parse(JSON.stringify(addressBits))\n\n          // Walk through the current address from the right, replacing the positions where the mask has an X with the binary representation of the current loop\n          let position = 0\n          for (let y = addressBits.length - 1; y >= 0; y--) {\n            if (mask[y] === 'X') {\n              copy[y] = bin[bin.length - 1 - position]\n              position++\n            }\n          }\n\n          // Push the address index\n          finalAddresses.push(parseInt(copy.join(''), 2))\n        }\n\n        // Replace all memory indices with the value\n        finalAddresses.forEach(f => {\n          this.memory[f] = parseInt(i.value, 2)\n        })\n      })\n\n      // Sum over all set memory addresses\n      this.solutions.partTwo = Object.keys(this.memory).map(k => this.memory[k]).reduce((a, b) => a + b)\n    },\n    /**\n     * Converts the given decimal to its binary reprentation enforcing a length of at least `length`\n     * @param dec The decimal number to convert\n     * @param length The minimal length of the binary string representation\n     * @returns The binary string representation of the decimal input with at least the specified length\n     */\n    decimalToBinary: function (dec, length) {\n      let result = (dec >>> 0).toString(2)\n      while (result.length < length) {\n        result = '0' + result\n      }\n\n      return result\n    },\n    /**\n     * Overwrites the positions in the input with the mask bits skipping `X` positions\n     * @param input The input to replace on\n     * @param mask The mask to replace with\n     * @returns The replaced input\n     */\n    overwriteBits: function (input, mask) {\n      return input.split('').map((bit, index) => mask[index] === 'X' ? bit : mask[index]).join('')\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day14.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day14.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day14.vue?vue&type=template&id=e3107d18&\"\nimport script from \"./Day14.vue?vue&type=script&lang=js&\"\nexport * from \"./Day14.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\nvar concat = uncurryThis([].concat);\nvar push = uncurryThis([].push);\nvar stringIndexOf = uncurryThis(''.indexOf);\nvar stringSlice = uncurryThis(''.slice);\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n      return replacer\n        ? call(replacer, searchValue, O, replaceValue)\n        : call(nativeReplace, toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue == 'string' &&\n        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&\n        stringIndexOf(replaceValue, '$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = isCallable(replaceValue);\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        push(results, result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = concat([matched], captures, position, S);\n          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);\n          var replacement = toString(apply(replaceValue, undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + stringSlice(S, nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar un$Join = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\n\nvar Array = global.Array;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar fix = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nvar FORCED = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  // https://github.com/tc39/proposal-well-formed-stringify\n  $({ target: 'JSON', stat: true, forced: FORCED }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      for (var i = 0, l = arguments.length, args = Array(l); i < l; i++) args[i] = arguments[i];\n      var result = apply($stringify, null, args);\n      return typeof result == 'string' ? replace(result, tester, fix) : result;\n    }\n  });\n}\n"],"sourceRoot":""}