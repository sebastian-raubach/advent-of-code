{"version":3,"sources":["webpack:///./node_modules/@datastructures-js/heap/src/customHeap.js","webpack:///./node_modules/@datastructures-js/heap/src/maxHeap.js","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./src/components/2021/Day15.vue?24da","webpack:///src/components/2021/Day15.vue","webpack:///./src/components/2021/Day15.vue?73d2","webpack:///./src/components/2021/Day15.vue?5097","webpack:///./node_modules/@datastructures-js/heap/index.js","webpack:///./node_modules/core-js/internals/collection-strong.js","webpack:///./node_modules/core-js/internals/collection.js","webpack:///./node_modules/@datastructures-js/priority-queue/index.js","webpack:///./node_modules/@datastructures-js/priority-queue/src/priorityQueue.js","webpack:///./node_modules/core-js/modules/es.number.max-safe-integer.js","webpack:///./src/components/2021/Day15.vue?64bc","webpack:///./node_modules/@datastructures-js/priority-queue/src/maxPriorityQueue.js","webpack:///./node_modules/@datastructures-js/heap/src/minHeap.js","webpack:///./node_modules/@datastructures-js/heap/src/heap.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/@datastructures-js/priority-queue/src/minPriorityQueue.js"],"names":["Heap","CustomHeap","comparator","nodes","leaf","Error","super","this","_comparator","parentNode","childNode","index","leftChildIndex","rightChildIndex","compare","_nodes","slice","_leaf","list","Array","isArray","fix","isValid","exports","MaxHeap","parentKey","childKey","leftChildKey","_getKey","rightChildKey","_clone","_heapify","_isHeapified","collection","collectionStrong","init","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","staticClass","ref","proxy","staticRenderFns","components","Day","data","partOne","partTwo","neighbors","gridOne","methods","dijkstra","nodesOne","input","$nextTick","nodesTwo","parseInput","value","set","coords","x","y","cost","Number","POSITIVE_INFINITY","validNeighbors","start","queue","enqueue","current","forEach","neighbor","Math","min","onQueue","target","size","get","print","ctx","clearRect","canvas","width","height","fillStyle","gradientValue","n","fillRect","path","has","maxX","gradient","getNodesOnPath","add","minValue","component","MinHeap","defineProperty","f","create","redefineAll","bind","anInstance","iterate","defineIterator","setSpecies","DESCRIPTORS","fastKey","InternalStateModule","setInternalState","internalStateGetterFor","getterFor","module","getConstructor","wrapper","CONSTRUCTOR_NAME","IS_MAP","ADDER","Constructor","that","iterable","Prototype","type","first","last","AS_ENTRIES","prototype","getInternalState","define","previous","state","entry","getEntry","next","removed","clear","prev","callbackfn","boundFunction","setStrong","ITERATOR_NAME","getInternalCollectionState","getInternalIteratorState","iterated","kind","done","$","global","uncurryThis","isForced","redefine","InternalMetadataModule","isCallable","isObject","fails","checkCorrectnessOfIteration","setToStringTag","inheritIfRequired","common","indexOf","IS_WEAK","NativeConstructor","NativePrototype","exported","fixMethod","KEY","uncurriedNativeMethod","REPLACE","entries","enable","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","dummy","constructor","forced","MinPriorityQueue","MaxPriorityQueue","PriorityQueue","options","priority","_compare","_heap","_priority","el","node","element","isEmpty","root","_getElementWithPriority","p","insert","isNaN","extractRoot","clone","sort","reverse","map","stat","MAX_SAFE_INTEGER","parentIndex","i","j","temp","_compareKeys","childIndex","startingIndex","floor","_shouldSwap","_swap","_hasLeftChild","_hasRightChild","isLeft","_compareChildrenOf","pop","_heapifyDown","_compareChildrenBefore","HeapType","_heapifyDownUntil","newNode","push","heapifyUp","isValidRecursive","isValidLeft","isValidRight","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","proto"],"mappings":"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","file":"js/chunk-522d2091.5882c09f.js","sourcesContent":["/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n */\n\nconst { Heap } = require('./heap');\n\n/**\n * @class CustomHeap\n * @extends Heap\n */\nclass CustomHeap extends Heap {\n  constructor(comparator, nodes, leaf) {\n    if (typeof comparator !== 'function') {\n      throw new Error('CustomHeap expects a comparator function');\n    }\n    super(nodes, leaf);\n    this._comparator = comparator;\n  }\n\n  /**\n   * Compares parent & child nodes\n   * and returns true if they are in right positions\n   *\n   * @private\n   * @param {object|number|string} parent\n   * @param {object|number|string} child\n   * @returns {number}\n   */\n  _compare(parentNode, childNode) {\n    return this._comparator(parentNode, childNode) <= 0;\n  }\n\n  /**\n   * Returns child's index of two children before an index\n   * @private\n   * @param {number} index\n   * @param {number} leftChildIndex\n   * @param {number} rightChildIndex\n   * @returns {number}\n   */\n  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {\n    const compare = this._comparator(\n      this._nodes[rightChildIndex],\n      this._nodes[leftChildIndex]\n    );\n\n    if (compare <= 0 && rightChildIndex < index) {\n      return rightChildIndex;\n    }\n\n    return leftChildIndex;\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @public\n   * @returns {CustomHeap}\n   */\n  clone() {\n    return new CustomHeap(\n      this._comparator,\n      this._nodes.slice(),\n      this._leaf\n    );\n  }\n\n  /**\n   * Builds a custom heap from an array of items\n   * @public\n   * @static\n   * @param {array} list\n   * @param {function} comparator\n   * @returns {CustomHeap}\n   */\n  static heapify(list, comparator) {\n    if (!Array.isArray(list)) {\n      throw new Error('.heapify expects an array');\n    }\n\n    if (typeof comparator !== 'function') {\n      throw new Error('.heapify expects a comparator function');\n    }\n\n    return new CustomHeap(comparator, list).fix();\n  }\n\n  /**\n   * Checks if a list of items is a valid custom heap\n   * @public\n   * @static\n   * @param {array} list\n   * @param {function} comparator\n   * @returns {boolean}\n   */\n  static isHeapified(list, comparator) {\n    if (!Array.isArray(list)) {\n      throw new Error('.heapify expects an array');\n    }\n\n    if (typeof comparator !== 'function') {\n      throw new Error('.isHeapified expects a comparator function');\n    }\n\n    return new CustomHeap(comparator, list).isValid();\n  }\n}\n\nexports.CustomHeap = CustomHeap;\n","/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n */\n\nconst { Heap } = require('./heap');\n\n/**\n * @class MaxHeap\n * @extends Heap\n */\nclass MaxHeap extends Heap {\n  /**\n   * Checks two nodes are in relatively valid position\n   * @private\n   * @param {object} parent\n   * @param {object} child\n   * @returns {boolean}\n   */\n  _compareKeys(parentKey, childKey) {\n    return parentKey > childKey;\n  }\n\n  /**\n   * Returns max child's index of two children before an index\n   * @private\n   * @param {number} index\n   * @param {number} leftChildIndex\n   * @param {number} rightChildIndex\n   * @returns {number}\n   */\n  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {\n    const leftChildKey = this._getKey(this._nodes[leftChildIndex]);\n    const rightChildKey = this._getKey(this._nodes[rightChildIndex]);\n\n    if (rightChildKey > leftChildKey && rightChildIndex < index) {\n      return rightChildIndex;\n    }\n    return leftChildIndex;\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @public\n   * @returns {MaxHeap}\n   */\n  clone() {\n    return super._clone(MaxHeap);\n  }\n\n  /**\n   * Builds a max heap from an array of items\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {MaxHeap}\n   */\n  static heapify(list) {\n    return super._heapify(list, MaxHeap);\n  }\n\n  /**\n   * Checks if a list of items is a valid max heap\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {boolean}\n   */\n  static isHeapified(list) {\n    return super._isHeapified(list, MaxHeap);\n  }\n}\n\nexports.MaxHeap = MaxHeap;\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\ncollection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\ncollection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":15,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{staticClass:\"canvas-holder-one\"},[_c('canvas',{ref:\"partOne\",staticClass:\"canvas\",attrs:{\"width\":\"202\",\"height\":\"100\"}})])]},proxy:true},{key:\"partTwo\",fn:function(){return [_c('div',{staticClass:\"canvas-holder-two\"},[_c('canvas',{ref:\"partTwo\",staticClass:\"canvas\",attrs:{\"width\":\"1002\",\"height\":\"500\"}})])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"15\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partOne>\n      <div class=\"canvas-holder-one\">\n        <canvas ref=\"partOne\" class=\"canvas\" width=\"202\" height=\"100\" />\n      </div>\n    </template>\n    <template v-slot:partTwo>\n      <div class=\"canvas-holder-two\">\n        <canvas ref=\"partTwo\" class=\"canvas\" width=\"1002\" height=\"500\" />\n      </div>\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nconst { PriorityQueue } = require('@datastructures-js/priority-queue')\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      neighbors: [[1, 0], [0, 1], [-1, 0], [0, -1]],\n      gridOne: null\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const nodesOne = this.parseInput(input, 1)\n      this.solutions.partOne = this.dijkstra(nodesOne, input[0].length - 1, input.length - 1)\n      this.$nextTick(() => this.print(this.$refs.partOne, nodesOne, this.getNodesOnPath(nodesOne, `${input[0].length - 1},${input.length - 1}`), input[0].length - 1, input.length - 1))\n\n      const nodesTwo = this.parseInput(input, 5)\n      this.solutions.partTwo = this.dijkstra(nodesTwo, input[0].length * 5 - 1, input.length * 5 - 1)\n      this.$nextTick(() => this.print(this.$refs.partTwo, nodesTwo, this.getNodesOnPath(nodesTwo, `${input[0].length * 5 - 1},${input.length * 5 - 1}`), input[0].length * 5 - 1, input.length * 5 - 1))\n    },\n    parseInput: function (input, repeat) {\n      const nodes = new Map()\n\n      const maxX = input[0].length\n      const maxY = input.length\n\n      // Parse the original grid\n      const grid = input.map(i => i.split('').map(c => +c))\n\n      // For the larger dimensions\n      for (let y = 0; y < maxY * repeat; y++) {\n        for (let x = 0; x < maxX * repeat; x++) {\n          // Get the coordinates and the valid neighbors\n          const coords = `${x},${y}`\n          const validNeighbors = this.neighbors.filter(n => x + n[0] >= 0 && x + n[0] < maxX * repeat && y + n[1] >= 0 && y + n[1] < maxY * repeat)\n\n          // Calculate the value of the repeated cell\n          let value = (+grid[y % grid.length][x % grid[0].length]) + Math.floor(y / maxY) + Math.floor(x / maxX)\n\n          // Fix issues with large values\n          if (value > 9) {\n            value -= 9\n          }\n\n          // Add the node to the mapping\n          nodes.set(coords, {\n            x: x,\n            y: y,\n            value: value,\n            coords: coords,\n            cost: Number.POSITIVE_INFINITY,\n            neighbors: validNeighbors\n          })\n        }\n      }\n\n      return nodes\n    },\n    dijkstra: function (nodes, maxX, maxY) {\n      const target = `${maxX},${maxY}`\n\n      // Use a priority queue to keep track of the node with lowest cost\n      const queue = new PriorityQueue({\n        compare: (a, b) => a.cost - b.cost\n      })\n\n      // Add the start point\n      const start = nodes.get('0,0')\n      start.cost = 0\n      queue.enqueue(start)\n\n      // While there are still nodes on the queue, continue\n      while (queue.size() > 0) {\n        // Get the lowest-cost node\n        const current = queue.dequeue()\n\n        // Go through all neighbors\n        current.neighbors.forEach(n => {\n          // Get the actual object\n          const coords = `${current.x + n[0]},${current.y + n[1]}`\n          const neighbor = nodes.get(coords)\n\n          // Check if it's on the queue\n          const onQueue = neighbor.cost !== Number.POSITIVE_INFINITY\n          // Adjust the cost\n          neighbor.cost = Math.min(neighbor.cost, current.cost + neighbor.value)\n\n          if (!onQueue) {\n            // Add to queue\n            queue.enqueue(neighbor)\n          }\n        })\n\n        // If we found the target, we can stop\n        if (current.coords === target) {\n          break\n        }\n      }\n\n      return nodes.get(target).cost\n    },\n    print: function (canvas, nodes, path, maxX, maxY) {\n      const ctx = canvas.getContext('2d')\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      const gradient = this.createColorGradient('#006266', '#C4E538', nodes.get(`${maxX},${maxY}`).cost + 1)\n      const gradientValue = this.createColorGradient('#006266', '#C4E538', 10)\n\n      nodes.forEach(n => {\n        ctx.fillStyle = gradientValue[n.value]\n        ctx.fillRect(n.x, n.y, 1, 1)\n\n        if (path.has(n.coords)) {\n          ctx.fillStyle = '#181a1b'\n          ctx.fillRect(n.x + maxX + 2, n.y, 1, 1)\n        } else {\n          ctx.fillStyle = gradient[n.cost]\n          ctx.fillRect(n.x + maxX + 2, n.y, 1, 1)\n        }\n      })\n    },\n    getNodesOnPath: function (nodes, target) {\n      // Keep track of the nodes on the path\n      const path = new Set()\n\n      // Start at the target\n      let current = target\n      path.add(current)\n\n      // While we haven't reached the start yet\n      while (current !== '0,0') {\n        // Find the neighbor with the smallest cost\n        let minValue = Number.MAX_SAFE_INTEGER\n        let min = null\n        nodes.get(current).neighbors.forEach(n => {\n          const curr = current.split(',').map(c => +c)\n          const coords = `${curr[0] + n[0]},${curr[1] + n[1]}`\n          const neighbor = nodes.get(coords)\n\n          if (neighbor.cost < minValue) {\n            minValue = neighbor.cost\n            min = coords\n          }\n        })\n\n        // Add that neighbor and continue with it\n        path.add(min)\n        current = min\n      }\n\n      // Add the target\n      path.add('0,0')\n\n      return path\n    }\n  }\n}\n</script>\n\n<style>\n.canvas-holder-one {\n  overflow: auto;\n  height: 100px;\n  width: 100%;\n}\n.canvas-holder-two {\n  overflow: auto;\n  height: 500px;\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day15.vue?vue&type=template&id=0346fac1&\"\nimport script from \"./Day15.vue?vue&type=script&lang=js&\"\nexport * from \"./Day15.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Day15.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const { MinHeap } = require('./src/minHeap');\nconst { MaxHeap } = require('./src/maxHeap');\nconst { CustomHeap } = require('./src/customHeap');\n\nexports.MinHeap = MinHeap;\nexports.MaxHeap = MaxHeap;\nexports.CustomHeap = CustomHeap;\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/function-bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var Constructor = wrapper(function (that, iterable) {\n      anInstance(that, Prototype);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n    });\n\n    var Prototype = Constructor.prototype;\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(Prototype, {\n      // `{ Map, Set }.prototype.clear()` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.clear\n      // https://tc39.es/ecma262/#sec-set.prototype.clear\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // `{ Map, Set }.prototype.delete(key)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.delete\n      // https://tc39.es/ecma262/#sec-set.prototype.delete\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.foreach\n      // https://tc39.es/ecma262/#sec-set.prototype.foreach\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // `{ Map, Set}.prototype.has(key)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.has\n      // https://tc39.es/ecma262/#sec-set.prototype.has\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(Prototype, IS_MAP ? {\n      // `Map.prototype.get(key)` method\n      // https://tc39.es/ecma262/#sec-map.prototype.get\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // `Map.prototype.set(key, value)` method\n      // https://tc39.es/ecma262/#sec-map.prototype.set\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // `Set.prototype.add(value)` method\n      // https://tc39.es/ecma262/#sec-set.prototype.add\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(Prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return Constructor;\n  },\n  setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods\n    // https://tc39.es/ecma262/#sec-map.prototype.entries\n    // https://tc39.es/ecma262/#sec-map.prototype.keys\n    // https://tc39.es/ecma262/#sec-map.prototype.values\n    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator\n    // https://tc39.es/ecma262/#sec-set.prototype.entries\n    // https://tc39.es/ecma262/#sec-set.prototype.keys\n    // https://tc39.es/ecma262/#sec-set.prototype.values\n    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator\n    defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // `{ Map, Set }.prototype[@@species]` accessors\n    // https://tc39.es/ecma262/#sec-get-map-@@species\n    // https://tc39.es/ecma262/#sec-get-set-@@species\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        uncurriedNativeMethod(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        uncurriedNativeMethod(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  var REPLACE = isForced(\n    CONSTRUCTOR_NAME,\n    !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n      new NativeConstructor().entries().next();\n    }))\n  );\n\n  if (REPLACE) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.enable();\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new -- required for testing\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, NativePrototype);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","const { MinPriorityQueue } = require('./src/minPriorityQueue');\nconst { MaxPriorityQueue } = require('./src/maxPriorityQueue');\nconst { PriorityQueue } = require('./src/priorityQueue')\n\nmodule.exports = { MinPriorityQueue, MaxPriorityQueue, PriorityQueue };\n","/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\nconst { CustomHeap } = require('@datastructures-js/heap');\n\n/**\n * @class PriorityQueue\n */\nclass PriorityQueue {\n  /**\n   * Creates a priority queue\n   * @public\n   * @params {object} [options]\n   */\n  constructor(options = {}) {\n    const { priority, compare } = options;\n    if (compare) {\n      if (typeof compare !== 'function') {\n        throw new Error('.constructor expects a valid compare function');\n      }\n      this._compare = compare;\n      this._heap = new CustomHeap(this._compare);\n    } else {\n      if (priority !== undefined && typeof priority !== 'function') {\n        throw new Error('.constructor expects a valid priority function');\n      }\n\n      this._priority = priority || ((el) => +el);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {object}\n   */\n  _getElementWithPriority(node) {\n    return {\n      priority: node.key,\n      element: node.value\n    };\n  }\n\n  /**\n   * @public\n   * @returns {number}\n   */\n  size() {\n    return this._heap.size();\n  }\n\n  /**\n   * @public\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return this._heap.isEmpty();\n  }\n\n  /**\n   * Returns an element with highest priority in the queue\n   * @public\n   * @returns {object}\n   */\n  front() {\n    if (this.isEmpty()) return null;\n\n    if (this._compare) {\n      return this._heap.root();\n    }\n\n    return this._getElementWithPriority(this._heap.root());\n  }\n\n  /**\n   * Returns an element with lowest priority in the queue\n   * @public\n   * @returns {object}\n   */\n  back() {\n    if (this.isEmpty()) return null;\n\n    if (this._compare) {\n      return this._heap.leaf();\n    }\n\n    return this._getElementWithPriority(this._heap.leaf());\n  }\n\n  /**\n   * Adds an element to the queue\n   * @public\n   * @param {any} element\n   * @param {number} p - priority\n   * @throws {Error} if priority is not a valid number\n   */\n  enqueue(element, p) {\n    if (this._compare) {\n      this._heap.insert(element);\n      return this;\n    }\n\n    if (p && Number.isNaN(+p)) {\n      throw new Error('.enqueue expects a numeric priority');\n    }\n\n    if (Number.isNaN(+p) && Number.isNaN(this._priority(element))) {\n      throw new Error(\n        '.enqueue expects a numeric priority '\n        + 'or a constructor callback that returns a number'\n      );\n    }\n\n    const priority = !Number.isNaN(+p) ? p : this._priority(element);\n    this._heap.insert(+priority, element);\n    return this;\n  }\n\n  /**\n   * Removes and returns an element with highest priority in the queue\n   * @public\n   * @returns {object}\n   */\n  dequeue() {\n    if (this.isEmpty()) return null;\n\n    if (this._compare) {\n      return this._heap.extractRoot();\n    }\n\n    return this._getElementWithPriority(this._heap.extractRoot());\n  }\n\n  /**\n   * Returns a sorted list of elements from highest to lowest priority\n   * @public\n   * @returns {array}\n   */\n  toArray() {\n    if (this._compare) {\n      return this._heap.clone().sort().reverse();\n    }\n\n    return this._heap\n      .clone()\n      .sort()\n      .map((n) => this._getElementWithPriority(n))\n      .reverse();\n  }\n\n  /**\n   * Clears the queue\n   * @public\n   */\n  clear() {\n    this._heap.clear();\n  }\n}\n\nexports.PriorityQueue = PriorityQueue;\n","var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.es/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day15.vue?vue&type=style&index=0&lang=css&\"","/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\nconst { MaxHeap } = require('@datastructures-js/heap');\nconst { PriorityQueue } = require('./priorityQueue');\n\n/**\n * @class MaxPriorityQueue\n * @extends PriorityQueue\n */\nclass MaxPriorityQueue extends PriorityQueue {\n  constructor(options) {\n    super(options);\n    if (!this._compare) {\n      this._heap = new MaxHeap();\n    }\n  }\n}\n\nexports.MaxPriorityQueue = MaxPriorityQueue;\n","/**\n * @license MIT\n * @copyright 2019 Eyas Ranjous <eyas.ranjous@gmail.com>\n */\n\nconst { Heap } = require('./heap');\n\n/**\n * @class MinHeap\n * @extends Heap\n */\nclass MinHeap extends Heap {\n  /**\n   * Checks two nodes are in relatively valid position\n   * @private\n   * @param {object} parent\n   * @param {object} child\n   * @returns {boolean}\n   */\n  _compareKeys(parentKey, childKey) {\n    return parentKey < childKey;\n  }\n\n  /**\n   * Returns min child's index of two children before an index\n   * @protected\n   * @param {number} index\n   * @param {number} leftChildIndex\n   * @param {number} rightChildIndex\n   * @returns {number}\n   */\n  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {\n    const leftChildKey = this._getKey(this._nodes[leftChildIndex]);\n    const rightChildKey = this._getKey(this._nodes[rightChildIndex]);\n\n    if (rightChildKey < leftChildKey && rightChildIndex < index) {\n      return rightChildIndex;\n    }\n    return leftChildIndex;\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @public\n   * @returns {MinHeap}\n   */\n  clone() {\n    return super._clone(MinHeap);\n  }\n\n  /**\n   * Builds a min heap from an array of items\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {MinHeap}\n   */\n  static heapify(list) {\n    return super._heapify(list, MinHeap);\n  }\n\n  /**\n   * Checks if a list of list is a valid min heap\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {boolean}\n   */\n  static isHeapified(list) {\n    return super._isHeapified(list, MinHeap);\n  }\n}\n\nexports.MinHeap = MinHeap;\n","/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n *\n * @class\n * @abstract\n */\nclass Heap {\n  /**\n   * Creates a heap instance\n   * @param {array<string|number|object>} nodes\n   * @param {string|number|object} [leaf]\n   * @returns {number}\n   */\n  constructor(nodes, leaf) {\n    this._nodes = Array.isArray(nodes) ? nodes : [];\n    this._leaf = leaf || null;\n  }\n\n  /**\n   * Checks if a parent has a left child\n   * @private\n   * @param {number} parentIndex\n   * @returns {boolean}\n   */\n  _hasLeftChild(parentIndex) {\n    const leftChildIndex = (parentIndex * 2) + 1;\n    return leftChildIndex < this.size();\n  }\n\n  /**\n   * Checks if a parent has a right child\n   * @private\n   * @param {number} parentIndex\n   * @returns {boolean}\n   */\n  _hasRightChild(parentIndex) {\n    const rightChildIndex = (parentIndex * 2) + 2;\n    return rightChildIndex < this.size();\n  }\n\n  /**\n   * Returns heap node's key\n   * @private\n   * @param {object|number|string} node\n   * @returns {number|string}\n   */\n  _getKey(node) {\n    if (typeof node === 'object') return node.key;\n    return node;\n  }\n\n  /**\n   * Swaps two nodes in the heap\n   * @private\n   * @param {number} i\n   * @param {number} j\n   */\n  _swap(i, j) {\n    const temp = this._nodes[i];\n    this._nodes[i] = this._nodes[j];\n    this._nodes[j] = temp;\n  }\n\n  /**\n   * Compares parent & child nodes\n   * and returns true if they are in right positions\n   *\n   * @private\n   * @param {object|number|string} parent\n   * @param {object|number|string} child\n   * @returns {boolean}\n   */\n  _compare(parentNode, childNode) {\n    return this._compareKeys(\n      this._getKey(parentNode),\n      this._getKey(childNode)\n    );\n  }\n\n  /**\n   * Checks if parent and child nodes should be swapped\n   * @private\n   * @param {number} parentIndex\n   * @param {number} childIndex\n   * @returns {boolean}\n   */\n  _shouldSwap(parentIndex, childIndex) {\n    if (parentIndex < 0 || parentIndex >= this.size()) return false;\n    if (childIndex < 0 || childIndex >= this.size()) return false;\n\n    return !this._compare(\n      this._nodes[parentIndex],\n      this._nodes[childIndex]\n    );\n  }\n\n  /**\n   * Bubbles a node from a starting index up in the heap\n   * @param {number} startingIndex\n   * @public\n   */\n  heapifyUp(startingIndex) {\n    let childIndex = startingIndex;\n    let parentIndex = Math.floor((childIndex - 1) / 2);\n\n    while (this._shouldSwap(parentIndex, childIndex)) {\n      this._swap(parentIndex, childIndex);\n      childIndex = parentIndex;\n      parentIndex = Math.floor((childIndex - 1) / 2);\n    }\n  }\n\n  /**\n   * Compares left and right & children of a parent\n   * @private\n   * @param {number} parentIndex\n   * @returns {number} - a child's index\n   */\n  _compareChildrenOf(parentIndex) {\n    if (\n      !this._hasLeftChild(parentIndex)\n      && !this._hasRightChild(parentIndex)\n    ) {\n      return -1;\n    }\n\n    const leftChildIndex = (parentIndex * 2) + 1;\n    const rightChildIndex = (parentIndex * 2) + 2;\n\n    if (!this._hasLeftChild(parentIndex)) {\n      return rightChildIndex;\n    }\n\n    if (!this._hasRightChild(parentIndex)) {\n      return leftChildIndex;\n    }\n\n    const isLeft = this._compare(\n      this._nodes[leftChildIndex],\n      this._nodes[rightChildIndex]\n    );\n\n    return isLeft ? leftChildIndex : rightChildIndex;\n  }\n\n  /**\n   * Pushes a node from a starting index down in the heap\n   * @private\n   */\n  _heapifyDown(startingIndex) {\n    let parentIndex = startingIndex;\n    let childIndex = this._compareChildrenOf(parentIndex);\n\n    while (this._shouldSwap(parentIndex, childIndex)) {\n      this._swap(parentIndex, childIndex);\n      parentIndex = childIndex;\n      childIndex = this._compareChildrenOf(parentIndex);\n    }\n  }\n\n  /**\n   * Removes and returns the root node in the heap\n   * @public\n   * @returns {object}\n   */\n  extractRoot() {\n    if (this.isEmpty()) return null;\n\n    const root = this.root();\n    this._nodes[0] = this._nodes[this.size() - 1];\n    this._nodes.pop();\n    this._heapifyDown(0);\n\n    if (root === this._leaf) {\n      this._leaf = this.root();\n    }\n\n    return root;\n  }\n\n  /**\n   * Pushes a node with down in the heap before an index\n   * @private\n   * @param {number} index\n   */\n  _heapifyDownUntil(index) {\n    let parentIndex = 0;\n    let leftChildIndex = 1;\n    let rightChildIndex = 2;\n    let childIndex;\n\n    while (leftChildIndex < index) {\n      childIndex = this._compareChildrenBefore(\n        index,\n        leftChildIndex,\n        rightChildIndex\n      );\n\n      if (this._shouldSwap(parentIndex, childIndex)) {\n        this._swap(parentIndex, childIndex);\n      }\n\n      parentIndex = childIndex;\n      leftChildIndex = (parentIndex * 2) + 1;\n      rightChildIndex = (parentIndex * 2) + 2;\n    }\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @protected\n   * @param {class} HeapType\n   * @returns {Heap}\n   */\n  _clone(HeapType) {\n    return new HeapType(this._nodes.slice(), this._leaf);\n  }\n\n  /**\n   * Sorts the heap by swapping root with all nodes and fixing positions\n   * @public\n   * @returns {array} the sorted nodes\n   */\n  sort() {\n    for (let i = this.size() - 1; i > 0; i -= 1) {\n      this._swap(0, i);\n      this._heapifyDownUntil(i);\n    }\n\n    return this._nodes;\n  }\n\n  /**\n   * Inserts a node in the right position into the heap\n   * @public\n   * @param {number|string} key\n   * @param {any} [value]\n   * @returns {Heap}\n   */\n  insert(key, value) {\n    const newNode = value !== undefined ? { key, value } : key;\n    this._nodes.push(newNode);\n    this.heapifyUp(this.size() - 1);\n    if (this._leaf === null || !this._compare(newNode, this._leaf)) {\n      this._leaf = newNode;\n    }\n    return this;\n  }\n\n  /**\n   * Fixes all positions of the nodes in the heap\n   * @public\n   * @returns {Heap}\n   */\n  fix() {\n    for (let i = 0; i < this.size(); i += 1) {\n      this.heapifyUp(i);\n    }\n    return this;\n  }\n\n  /**\n   * Verifies that the heap is valid\n   * @public\n   * @returns {boolean}\n   */\n  isValid() {\n    const isValidRecursive = (parentIndex) => {\n      let isValidLeft = true;\n      let isValidRight = true;\n\n      if (this._hasLeftChild(parentIndex)) {\n        const leftChildIndex = (parentIndex * 2) + 1;\n        isValidLeft = this._compare(\n          this._nodes[parentIndex],\n          this._nodes[leftChildIndex]\n        );\n\n        if (!isValidLeft) {\n          return false;\n        }\n\n        isValidLeft = isValidRecursive(leftChildIndex);\n      }\n\n      if (this._hasRightChild(parentIndex)) {\n        const rightChildIndex = (parentIndex * 2) + 2;\n        isValidRight = this._compare(\n          this._nodes[parentIndex],\n          this._nodes[rightChildIndex]\n        );\n\n        if (!isValidRight) {\n          return false;\n        }\n\n        isValidRight = isValidRecursive(rightChildIndex);\n      }\n\n      return isValidLeft && isValidRight;\n    };\n\n    return isValidRecursive(0);\n  }\n\n  /**\n   * Returns the root node in the heap\n   * @public\n   * @returns {object|number|string|null}\n   */\n  root() {\n    if (this.isEmpty()) return null;\n    return this._nodes[0];\n  }\n\n  /**\n   * Returns a leaf node in the heap\n   * @public\n   * @returns {object|number|string|null}\n   */\n  leaf() {\n    return this._leaf;\n  }\n\n  /**\n   * Returns the number of nodes in the heap\n   * @public\n   * @returns {number}\n   */\n  size() {\n    return this._nodes.length;\n  }\n\n  /**\n   * Checks if the heap is empty\n   * @public\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  /**\n   * Clears the heap\n   * @public\n   */\n  clear() {\n    this._nodes = [];\n    this._leaf = null;\n  }\n\n  /**\n   * Convert a list of items into a heap\n   * @protected\n   * @static\n   * @param {array} array\n   * @param {class} HeapType\n   * @returns {Heap}\n   */\n  static _heapify(list, HeapType) {\n    if (!Array.isArray(list)) {\n      throw new Error('.heapify expects an array');\n    }\n\n    return new HeapType(list).fix();\n  }\n\n  /**\n   * Checks if a list of items is a valid heap\n   * @protected\n   * @static\n   * @param {array} array\n   * @param {class} HeapType\n   * @returns {boolean}\n   */\n  static _isHeapified(list, HeapType) {\n    return new HeapType(list).isValid();\n  }\n}\n\nexports.Heap = Heap;\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\nconst { MinHeap } = require('@datastructures-js/heap');\nconst { PriorityQueue } = require('./priorityQueue');\n\n/**\n * @class MinPriorityQueue\n * @extends PriorityQueue\n */\nclass MinPriorityQueue extends PriorityQueue {\n  constructor(options) {\n    super(options);\n    if (!this._compare) {\n      this._heap = new MinHeap();\n    }\n  }\n}\n\nexports.MinPriorityQueue = MinPriorityQueue;\n"],"sourceRoot":""}