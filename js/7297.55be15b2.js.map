{"version":3,"file":"js/7297.55be15b2.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GACA,wBAEA,oBACA,mBACA,EACAQ,aAAAA,WAEA,SACAC,MAAAA,GAEA,OACAA,MAAAA,GAGAC,EAAAA,KAAAA,EACAC,EAAAA,KAAAA,EAEA,cAGA,QAEA,8BAEA,gCAEA,YAEA,gCAEAC,GAAAA,EAAAA,OAGAC,EAAAA,SAAAA,IAEA,SACAJ,MAAAA,EACAK,KAAAA,GAGAJ,EAAAA,KAAAA,EACAA,EAAAA,CAAAA,IAIAK,EAAAA,SAAAA,CAAAA,EAAAA,KAEA,sBACAC,EAAAA,GAAAA,EAAAA,GAAAA,IACA,GAEA,CAGA,QAEA,oCACAC,EAAAA,EAAAA,KAGA,WACA,qBACAC,EAAAA,KAAAA,EAAAA,OACAD,EAAAA,EAAAA,KAIA,iCACA,EACAE,aAAAA,WAEA,+BACA,2BAGA,GACAV,MAAAA,GAEA,OACAA,MAAAA,GAGAC,EAAAA,KAAAA,EACAC,EAAAA,KAAAA,EAEA,cAEA,QACA,KAEA,SAEA,gCAEA,YAEA,gCAEA,4BACA,aAGA,GAFAS,IAEA,gBACAC,EAAAA,KAAAA,OACA,CACA,GACAA,EAAAA,EAAAA,MAAAA,SACA,uCAEA,iBACAA,EAAAA,KAAAA,EAEA,CAEA,uBAEA,YADA,mCAIA,SACAZ,MAAAA,EACAK,KAAAA,GAEAJ,EAAAA,KAAAA,EACAA,EAAAA,CACA,CAGAK,EAAAA,SAAAA,CAAAA,EAAAA,KAEA,sBACAC,EAAAA,GAAAA,EAAAA,GAAAA,IACA,GAEA,CACA,IC7J6P,I,UCOzPM,GAAY,OACd,EACAhC,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAeqB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2018/Day14.vue?3bae","webpack://advent-of-code/src/components/2018/Day14.vue","webpack://advent-of-code/./src/components/2018/Day14.vue?489e","webpack://advent-of-code/./src/components/2018/Day14.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":14,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"14\" :year=\"2018\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.recipeTarget = +input[0]\n\n      this.solvePartOne()\n      this.solvePartTwo()\n    },\n    solvePartOne: function () {\n      // Define the two nodes of the circular linked list\n      const first = {\n        value: 3\n      }\n      let last = {\n        value: 7\n      }\n      // Define their neighbors\n      last.next = first\n      first.next = last\n      // Elves start on those two\n      const elves = [first, last]\n\n      // Keep track of the recipe count\n      let recipeCount = 2\n      // While we need to produce more\n      while (recipeCount < this.recipeTarget + 10) {\n        // Get the recipe values\n        const values = [elves[0].value, elves[1].value]\n        // Construct the new recipe\n        const newRecipe = values[0] + values[1]\n        // Split the digits\n        const digits = `${newRecipe}`.split('').map(c => +c)\n        // Increase the recipe counter\n        recipeCount += digits.length\n\n        // For each digit\n        digits.forEach(d => {\n          // Create a new node\n          const node = {\n            value: d,\n            next: first\n          }\n          // Add it to the end\n          last.next = node\n          last = node\n        })\n\n        // Use the new values to adjust elf indices\n        values.forEach((value, index) => {\n          // Move forward value + 1 steps\n          for (let i = 0; i < value + 1; i++) {\n            elves[index] = elves[index].next\n          }\n        })\n      }\n\n      // Start at the beginning\n      let node = first\n      // Step through the first recipes to the target count\n      for (let i = 0; i < this.recipeTarget; i++) {\n        node = node.next\n      }\n      // Now start tracking the 10 recipes scores right after\n      const result = []\n      for (let i = 0; i < 10; i++) {\n        result.push(node.value)\n        node = node.next\n      }\n\n      // Concatenate them together\n      this.solutions.partOne = result.join('')\n    },\n    solvePartTwo: function () {\n      // Split the input into its digits\n      const targetString = `${this.recipeTarget}`\n      const targetDigits = targetString.split('').map(c => +c)\n\n      // Define the two nodes of the circular linked list\n      const first = {\n        value: 3\n      }\n      let last = {\n        value: 7\n      }\n      // Define their neighbors\n      last.next = first\n      first.next = last\n      // Elves start on those two\n      const elves = [first, last]\n\n      let totalLength = 2\n      let matched = []\n\n      while (true) {\n        // Get the recipe values\n        const values = [elves[0].value, elves[1].value]\n        // Construct the new recipe\n        const newRecipe = values[0] + values[1]\n        // Split the digits\n        const digits = `${newRecipe}`.split('').map(c => +c)\n\n        for (let i = 0; i < digits.length; i++) {\n          const value = digits[i]\n          totalLength++\n\n          if (value === targetDigits[matched.length]) {\n            matched.push(value)\n          } else {\n            do {\n              matched = matched.slice(1)\n            } while (matched.length > 0 && !targetString.startsWith(matched.join('')))\n\n            if (value === targetDigits[matched.length]) {\n              matched.push(value)\n            }\n          }\n\n          if (matched.length === targetDigits.length) {\n            this.solutions.partTwo = totalLength - targetDigits.length\n            return\n          }\n\n          const node = {\n            value: value,\n            next: first\n          }\n          last.next = node\n          last = node\n        }\n\n        // Use the new values to adjust elf indices\n        values.forEach((value, index) => {\n          // Move forward value + 1 steps\n          for (let i = 0; i < value + 1; i++) {\n            elves[index] = elves[index].next\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day14.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day14.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day14.vue?vue&type=template&id=370d363a\"\nimport script from \"./Day14.vue?vue&type=script&lang=js\"\nexport * from \"./Day14.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","solvePartOne","value","last","first","recipeCount","digits","next","values","elves","node","result","solvePartTwo","totalLength","matched","component"],"sourceRoot":""}