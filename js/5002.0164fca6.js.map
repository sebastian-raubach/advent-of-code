{"version":3,"file":"js/5002.0164fca6.js","mappings":"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","sources":["webpack://advent-of-code/./src/components/2016/Day1.vue?3d26","webpack://advent-of-code/src/components/2016/Day1.vue","webpack://advent-of-code/./src/components/2016/Day1.vue?1708","webpack://advent-of-code/./src/components/2016/Day1.vue","webpack://advent-of-code/./src/util/math.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":1,\"year\":2016,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{attrs:{\"id\":\"partOne\"}})]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"1\" :year=\"2016\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partOne>\n      <div id=\"partOne\" />\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\nimport { mapGetters } from 'vuex'\nimport { mod } from '@/util/math'\n\nexport default {\n  components: {\n    Day\n  },\n  computed: {\n    ...mapGetters([\n      'storeDarkMode'\n    ])\n  },\n  watch: {\n    storeDarkMode: function () {\n      if (this.trace.x.length > 0) {\n        this.plot()\n      }\n    }\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      directions: ['N', 'E', 'S', 'W'],\n      move: {\n        N: (curr, amount) => { curr[1] += amount },\n        E: (curr, amount) => { curr[0] += amount },\n        S: (curr, amount) => { curr[1] -= amount },\n        W: (curr, amount) => { curr[0] -= amount }\n      },\n      trace: {\n        x: [],\n        y: []\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const directions = input[0].split(', ').map(i => {\n        return {\n          turn: i.substring(0, 1),\n          move: +i.substring(1, i.length)\n        }\n      })\n\n      this.trace = {\n        x: [],\n        y: []\n      }\n\n      this.solutions = {\n        partOne: null,\n        partTwo: null\n      }\n\n      // Keep track of the current position\n      const curr = {\n        pos: [0, 0],\n        dir: 'N'\n      }\n\n      // Remember visited positions\n      const memory = new Set()\n\n      // For each instruction\n      directions.forEach(d => {\n        // Keep a copy of the current position before moving\n        const prev = {\n          pos: curr.pos.concat()\n        }\n\n        // Based on the turn, calculate the direction delta\n        const delta = d.turn === 'R' ? 1 : -1\n        // Adjust the direction accordingly\n        curr.dir = this.directions[mod((this.directions.indexOf(curr.dir) + delta), this.directions.length)]\n        // Move in the new direction\n        this.move[curr.dir](curr.pos, d.move)\n\n        const match = this.walk(prev.pos, curr.pos, memory)\n        // If we haven't found solution part two yet\n        if (!this.solutions.partTwo) {\n          // Check if there's a previously visited coordinate on the just walked path\n          this.solutions.partTwo = match\n        }\n      })\n\n      // Solution part one is the manhattan distance between the origin and the target\n      this.solutions.partOne = Math.abs(curr.pos[0]) + Math.abs(curr.pos[1])\n\n      this.$nextTick(() => this.plot())\n    },\n    walk: function (a, b, mem) {\n      this.trace.x.push(b[0])\n      this.trace.y.push(b[1])\n\n      // Check whether it's x or y coordinate that's different\n      const index = a[0] !== b[0] ? 0 : 1\n\n      // Calculate min and max\n      const minX = Math.min(a[index], b[index])\n      const maxX = Math.max(a[index], b[index])\n\n      // Iterate between min and max\n      for (let i = minX + 1; i < maxX; i++) {\n        const coords = index === 0 ? `${i},${a[1]}` : `${a[0]},${i}`\n\n        if (mem.has(coords)) {\n          // If visited before, return manhattan distance\n          return Math.abs(i) + Math.abs(a[1 - index])\n        } else {\n          // Else add to memory\n          mem.add(coords)\n        }\n      }\n    },\n    plot: function () {\n      this.$plotly.purge('partOne')\n\n      const traces = [this.trace]\n\n      this.$plotly.newPlot('partOne', traces, {\n        height: 250,\n        margin: { t: 10, b: 20, l: 50, r: 0 },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          title: { text: 'Ranking', font: { color: this.storeDarkMode ? 'white' : 'black' } },\n          tickfont: { color: this.storeDarkMode ? 'white' : 'black' },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        }\n      }, {\n        responsive: true,\n        displaylogo: false\n      })\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day1.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day1.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day1.vue?vue&type=template&id=692f2484\"\nimport script from \"./Day1.vue?vue&type=script&lang=js\"\nexport * from \"./Day1.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const mod = (a, b) => {\n  return ((a % b) + b) % b\n}\n\nconst transpose = (matrix) => {\n  const rows = matrix.length\n  const cols = matrix[0].length\n  const grid = []\n  for (let j = 0; j < cols; j++) {\n    grid[j] = Array(rows)\n  }\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      grid[j][i] = matrix[i][j]\n    }\n  }\n  return grid\n}\n\nconst gcd = (a, b) => b === 0 ? a : gcd(b, a % b)\nconst lcmInternal = (a, b) => a / gcd(a, b) * b\nconst lcmAll = (ns) => ns.reduce(lcmInternal, 1)\n\nconst lcm = (values) => lcmAll(values)\n\nexport {\n  mod,\n  transpose,\n  lcm\n}\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","proxy","staticRenderFns","components","Day","computed","watch","storeDarkMode","data","partOne","partTwo","directions","move","N","curr","E","S","W","trace","x","y","methods","turn","pos","dir","walk","mem","plot","height","margin","t","b","l","r","paper_bgcolor","plot_bgcolor","xaxis","tickfont","color","gridcolor","yaxis","title","text","font","responsive","displaylogo","component","mod","a","transpose","matrix","rows","length","cols","grid","j","Array","i","gcd","lcmInternal","lcmAll","ns","reduce","lcm","values"],"sourceRoot":""}