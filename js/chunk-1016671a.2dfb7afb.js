(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1016671a"],{"00b2":function(n,e,a){"use strict";a.r(e),e["default"]="It's no use; your navigation system simply isn't capable of providing walking directions in the arctic circle, and certainly not in 1018.\n\nThe Elves suggest an alternative. In times like these, North Pole rescue operations will arrange points of light in the sky to guide missing Elves back to base. Unfortunately, the message is easy to miss: the points move slowly enough that it takes hours to align them, but have so much momentum that they only stay aligned for a second. If you blink at the wrong time, it might be hours before another message appears.\n\nYou can see these points of light floating in the distance, and record their position in the sky and their velocity, the relative change in position per second (your puzzle input). The coordinates are all given from your perspective; given enough time, those positions and velocities will move the points into a cohesive message!\n\nRather than wait, you decide to fast-forward the process and calculate what the points will eventually spell.\n\nFor example, suppose you note the following points:\n\n```\nposition=< 9,  1> velocity=< 0,  2>\nposition=< 7,  0> velocity=<-1,  0>\nposition=< 3, -2> velocity=<-1,  1>\nposition=< 6, 10> velocity=<-2, -1>\nposition=< 2, -4> velocity=< 2,  2>\nposition=<-6, 10> velocity=< 2, -2>\nposition=< 1,  8> velocity=< 1, -1>\nposition=< 1,  7> velocity=< 1,  0>\nposition=<-3, 11> velocity=< 1, -2>\nposition=< 7,  6> velocity=<-1, -1>\nposition=<-2,  3> velocity=< 1,  0>\nposition=<-4,  3> velocity=< 2,  0>\nposition=<10, -3> velocity=<-1,  1>\nposition=< 5, 11> velocity=< 1, -2>\nposition=< 4,  7> velocity=< 0, -1>\nposition=< 8, -2> velocity=< 0,  1>\nposition=<15,  0> velocity=<-2,  0>\nposition=< 1,  6> velocity=< 1,  0>\nposition=< 8,  9> velocity=< 0, -1>\nposition=< 3,  3> velocity=<-1,  1>\nposition=< 0,  5> velocity=< 0, -1>\nposition=<-2,  2> velocity=< 2,  0>\nposition=< 5, -2> velocity=< 1,  2>\nposition=< 1,  4> velocity=< 2,  1>\nposition=<-2,  7> velocity=< 2, -2>\nposition=< 3,  6> velocity=<-1, -1>\nposition=< 5,  0> velocity=< 1,  0>\nposition=<-6,  0> velocity=< 2,  0>\nposition=< 5,  9> velocity=< 1, -2>\nposition=<14,  7> velocity=<-2,  0>\nposition=<-3,  6> velocity=< 2, -1>\n```\n\nEach line represents one point. Positions are given as `<X, Y>` pairs: X represents how far left (negative) or right (positive) the point appears, while Y represents how far up (negative) or down (positive) the point appears.\n\nAt 0 seconds, each point has the position given. Each second, each point's velocity is added to its position. So, a point with velocity `<1, -2>` is moving to the right, but is moving upward twice as quickly. If this point's initial position were `<3, 9>`, after 3 seconds, its position would become `<6, 3>`.\n\nOver time, the points listed above would move like this:\n\n```\nInitially:\n........#.............\n................#.....\n.........#.#..#.......\n......................\n#..........#.#.......#\n...............#......\n....#.................\n..#.#....#............\n.......#..............\n......#...............\n...#...#.#...#........\n....#..#..#.........#.\n.......#..............\n...........#..#.......\n#...........#.........\n...#.......#..........\n\nAfter 1 second:\n......................\n......................\n..........#....#......\n........#.....#.......\n..#.........#......#..\n......................\n......#...............\n....##.........#......\n......#.#.............\n.....##.##..#.........\n........#.#...........\n........#...#.....#...\n..#...........#.......\n....#.....#.#.........\n......................\n......................\n\nAfter 2 seconds:\n......................\n......................\n......................\n..............#.......\n....#..#...####..#....\n......................\n........#....#........\n......#.#.............\n.......#...#..........\n.......#..#..#.#......\n....#....#.#..........\n.....#...#...##.#.....\n........#.............\n......................\n......................\n......................\n\nAfter 3 seconds:\n......................\n......................\n......................\n......................\n......#...#..###......\n......#...#...#.......\n......#...#...#.......\n......#####...#.......\n......#...#...#.......\n......#...#...#.......\n......#...#...#.......\n......#...#..###......\n......................\n......................\n......................\n......................\n\nAfter 4 seconds:\n......................\n......................\n......................\n............#.........\n........##...#.#......\n......#.....#..#......\n.....#..##.##.#.......\n.......##.#....#......\n...........#....#.....\n..............#.......\n....#......#...#......\n.....#.....##.........\n...............#......\n...............#......\n......................\n......................\n```\n\nAfter 3 seconds, the message appeared briefly: **`HI`**. Of course, your message will be much longer and will take many more seconds to appear.\n\n**What message will eventually appear in the sky?**"},"0105":function(n,e,a){"use strict";a.r(e),e["default"]="As your flight slowly drifts through the sky, the Elves at the Mythical Information Bureau at the North Pole contact you. They'd like some help debugging a malfunctioning experimental energy source aboard one of their super-secret imaging satellites.\n\nThe experimental energy source is based on cutting-edge technology: a set of Conway Cubes contained in a pocket dimension! When you hear it's having problems, you can't help but agree to take a look.\n\nThe pocket dimension contains an infinite 3-dimensional grid. At every integer 3-dimensional coordinate (`x,y,z`), there exists a single cube which is either **active** or **inactive**.\n\nIn the initial state of the pocket dimension, almost all cubes start **inactive**. The only exception to this is a small flat region of cubes (your puzzle input); the cubes in this region start in the specified **active** (`#`) or **inactive** (`.`) state.\n\nThe energy source then proceeds to boot up by executing six **cycles**.\n\nEach cube only ever considers its **neighbors**: any of the 26 other cubes where any of their coordinates differ by at most `1`. For example, given the cube at `x=1,y=2,z=3`, its neighbors include the cube at `x=2,y=2,z=2`, the cube at `x=0,y=2,z=3`, and so on.\n\nDuring a cycle, **all** cubes **simultaneously** change their state according to the following rules:\n\n- If a cube is **active** and **exactly** `2` or `3` of its neighbors are also active, the cube remains **active**. Otherwise, the cube becomes **inactive**.\n- If a cube is **inactive** but **exactly** `3` of its neighbors are active, the cube becomes **active**. Otherwise, the cube remains **inactive**.\n\nThe engineers responsible for this experimental energy source would like you to simulate the pocket dimension and determine what the configuration of cubes should be at the end of the six-cycle boot process.\n\nFor example, consider the following initial state:\n```\n.#.\n..#\n###\n```\n\nEven though the pocket dimension is 3-dimensional, this initial state represents a small 2-dimensional slice of it. (In particular, this initial state defines a 3x3x1 region of the 3-dimensional space.)\n\nSimulating a few cycles from this initial state produces the following configurations, where the result of each cycle is shown layer-by-layer at each given `z` coordinate (and the frame of view follows the active cells in each cycle):\n\n```\nBefore any cycles:\n\nz=0\n.#.\n..#\n###\n\n\nAfter 1 cycle:\n\nz=-1\n#..\n..#\n.#.\n\nz=0\n#.#\n.##\n.#.\n\nz=1\n#..\n..#\n.#.\n\n\nAfter 2 cycles:\n\nz=-2\n.....\n.....\n..#..\n.....\n.....\n\nz=-1\n..#..\n.#..#\n....#\n.#...\n.....\n\nz=0\n##...\n##...\n#....\n....#\n.###.\n\nz=1\n..#..\n.#..#\n....#\n.#...\n.....\n\nz=2\n.....\n.....\n..#..\n.....\n.....\n\n\nAfter 3 cycles:\n\nz=-2\n.......\n.......\n..##...\n..###..\n.......\n.......\n.......\n\nz=-1\n..#....\n...#...\n#......\n.....##\n.#...#.\n..#.#..\n...#...\n\nz=0\n...#...\n.......\n#......\n.......\n.....##\n.##.#..\n...#...\n\nz=1\n..#....\n...#...\n#......\n.....##\n.#...#.\n..#.#..\n...#...\n\nz=2\n.......\n.......\n..##...\n..###..\n.......\n.......\n.......\n```\n\nAfter the full six-cycle boot process completes, **`112`** cubes are left in the **active** state.\n\nStarting with your given initial configuration, simulate six cycles. **How many cubes are left in the active state after the sixth cycle?**"},"016b":function(n,e,a){"use strict";a.r(e),e["default"]="qgct fxctfc zbqfz zxdkrx hrqbs hgmsn ndqtf rmn cxfz slzctfh xvj xrqj nslqr bnxl rsprgcj vvchk gfhdct xsbt qbkjvg xtpdql mpvnt ssffbt gtl lxjtns prxmdlz mjlqj clg mrjqg qdtjjz fkxf vzzz qdfpq cqkrhx vbmz ljcvh mvdgf clmxkbn nmqlz vjzc bqrqj sqnbsg tn knprxg rbxz qzqzj qmcrpm grzv (contains wheat, eggs)\njthsmn qdtjjz qkhft slzctfh ksfbnhz rsprgcj tn clg zjtlrq ttqgh rclxmm llqfr kl qdfpq lxjtns cxfz mgx vjzc ncjv vrqb jmrx qmcrpm prxmdlz zsgnd vhbmztr gscdgj mrjqg sxxnb rkgbgn dxzmr nnxmgx cjp qzdpffs tbvh dxldm rxhrpjv jtgsn khqt jgdf jtlfh pdvqs kzpmt nslqr vzzz rmsgmj nkjcr bnxl lqtqm xlkgtc jcs cqkrhx xxhtdkp qnljhd kkhq gmdldb (contains soy, peanuts, sesame)\nglx bzxh slrc qhzqq vdlj xmm vjzc dsksm qrnkl xpjd ttqgh qdfpq dtnzp tfrpccb lchdf sjg mgx xkzk qmcrpm jlfm knprxg xngkf mpvnt gfhdct vmcsb cjp zdvr ncjv ssffbt dxzmr xkkjl ltcxqdbm rxdns qdtjjz qpfh clg vzzz gtl prxmdlz jcs mct xsbt lxjtns hgmsn jbpz rxhrpjv fkxf vqbb qckgcc (contains peanuts, fish, sesame)\ntxhkk mvdgf llqfr clg vbmz tfrpccb rjmk bkzgpg cxfz qdfpq prxmdlz vqbb jmrx kl mjlqj zbqfz sfkf pgzgn qjtrpj jpdxvmv qpfh vrhj zpsbc vjzc ncjv crbxx cklx lxjtns zxdkrx gmdldb jgdf kvzpzvt fkhcbzbk rsprgcj rkgbgn mbllkbf grzv qc pdvqs jrbfkg kkhq qckgcc dxzmr qzdpffs hfjrp ljcvh vzzz fsjbdt qzqzj vsbttl qmcrpm tcnhp qrnkl hlsbn mgx (contains soy, eggs, sesame)\nqzdpffs vvchk xtzt drqg tn mzr lxjtns grzv hjg hsfx qnljhd mpvnt zkvlf mmdmtg knprxg xjjk llqfr cklx rmc cxfz gpjkqrq zxjksd zpsbc xkkjl nkjcr mtzqr zsgnd jlrtmv vjzc qdtjjz fpqc crbxx ncjv cqkrhx lzkmdq vhcqpn mct fhtn qqgq xxhtdkp dsksm rxdns vrhj qgct mgx nslqr slg qhzqq jcs vzzz prxmdlz sskfj pgzgn gfhvs kcncjpk pbblp hbkmd clg fsjbdt qckgcc zjtlrq nnxmgx rkgbgn sxxnb tcnhp qmzzgr slzctfh vbmz bqrqj sjg zdxn rxhrpjv tfrpccb bkzgpg rgmlds ltcxqdbm rpmf (contains eggs, sesame)\nzdvr zxdkrx gmcm xmm tbvh mct jlfm sfxsj qpfh ltcxqdbm jtlfh qmzzgr fkhcbzbk tfbpk lqkxpxr ssfb knprxg gxnjk dsksm mgx cjjd qckgcc tn gfhvs zjtlrq fhtn cqkrhx tcnhp qc qdfpq bkzgpg bzxh hbkmd rkgbgn lzkmdq hbpsp xkzk pdvqs vhbmztr ssffbt nfzz zsgnd dqf sdcdmn cklx xsrk pjlz ncjv vdlj hfjrp dxldm lxjtns gmdldb qzdpffs xtpdql slg pdfv jncfpc clg qhzqq prxmdlz vzzz dxzmr vvchk pgzgn (contains eggs, nuts, fish)\ndrqg sfkf kl pjlz bqrqj tcnhp gfhvs bnxl llqfr csdslq jglqz qbkjvg fsrmcx ffpfsv mgx bbltf xqpph ssb vzzz xrqj zdxn dsksm gmcm xngkf lqkxpxr xsbt cxfz xxhtdkp lxjtns vdlj rxdns rmsgmj qmzzgr rbxz jbpz vrhj rkms gtl clg pdfv prhkvr knprxg bqdtr qrnkl mzr gscdgj zpsbc zkvlf fkhcbzbk qzqzj prxmdlz qdfpq txhkk xvj jpdxvmv mjlqj mct rtkk mrjqg mpvnt fxctfc qjtrpj jmrx vbmz hfjrp zxjksd qmcrpm sjg vvchk xmm hlsbn sbkksv cklx jlrtmv sxxnb glx vsbttl jrbfkg mvdgf xsrk vjzc (contains eggs, sesame, nuts)\nrmsgmj pdvqs xxhtdkp nmqlz sskfj cxfz xlkgtc jrbfkg ttjvqs tfrpccb xjjk knprxg mct qqgq ltcxqdbm zdvr dsksm pbblp mtzqr slg ncjv ssfb rbxz bnkss zjtlrq gxnjk gpjkqrq tcnhp xctvtxzl lqkxpxr fpqc ffpfsv vrqb jbpz slzctfh cjjd tn qdfpq hlsbn vzzz rtkk lzkmdq gfhdct rkms zkvlf pgzgn vqbb vrhj txhkk bqrqj mjlqj vjzc rmc ksfbnhz dtkcj nzqlgz jcs zdxn xngkf fhtn nkjcr sdcdmn gscdgj jthsmn dqf hrqbs jncfpc bbltf zbqfz clg jpdxvmv xsrk lxjtns khqt mmdmtg lchdf vbmz jmrx sbkksv sqnbsg drqg gmcm nnxmgx rxdns kkhq mzr rxhrpjv ssb bqdtr vvchk (contains shellfish)\nmjlqj dxldm bqrqj zxdkrx lxjtns xctvtxzl kvzpzvt jncfpc nnxmgx xtzt ssfb mmdmtg mct ktzlr bzxh xjjk cxfz qmzzgr hlsbn jrbfkg vqbb gmdldb ndqtf zxjksd sqnbsg bnkss sfkf vrhj qnljhd ncjv nmqlz gpjkqrq slg kzpmt drqg xqpph cjp bnxl zpsbc rmsgmj zjtlrq qdfpq clg mvdgf rbxz jmrx qmcrpm jtlfh prxmdlz gtl ssffbt ktgqpk vhbmztr vzzz (contains eggs, sesame, peanuts)\nvqbb xngkf nkjcr drqg sfkf xsbt jthsmn prxmdlz clg sqnbsg clmxkbn zdxn tbvh cqkrhx kvzpzvt rxhrpjv vmcsb dtnzp mvdgf qnljhd txhkk lxjtns mmdmtg ttqgh qdfpq pgzgn dqf ssb kkhq ncjv cxfz vzzz rmsgmj ssfb ltcxqdbm jncfpc vjzc csdslq bqdtr prhkvr rkms (contains soy, sesame)\nqdfpq hgmsn jbpz sskfj xtpdql ljcvh mct qrnkl qmzzgr lqtqm xxhtdkp rxhrpjv ttjvqs bbltf rxdns vzzz prxmdlz hrqbs vdlj xmm drqg nfzz qckgcc gmcm hbpsp dsksm ffpfsv vqbb mjlqj mmdmtg jlrtmv ktgqpk hbkmd fpqc sfkf dqf ktzlr xkkjl rbxz tfbpk vmcsb tbvh kl gfhvs knprxg nnxmgx ksfbnhz fkxf bqrqj qhzqq bqdtr qjtrpj mbllkbf xsrk qbkjvg lzkmdq ttqgh rjmk gmltxp xjjk lqkxpxr cqkrhx cxfz crbxx vbmz zsgnd lxjtns jgdf hfjrp pdfv clg mpvnt bnkss gbk zxjksd nkjcr sdcdmn (contains wheat)\nkl bqdtr mgx jcs nfzz knprxg lqtqm clg slg jglqz gmdldb sqnbsg qmcrpm pgzgn tbvh nzqlgz llqfr tfbpk fxctfc qnljhd cxfz vzzz nkjcr pbblp hfjrp clmxkbn rxhrpjv ncjv bnkss slrc prhkvr qpfh tcnhp xsrk kkhq hrqbs qgct gscdgj vbmz xrqj pdfv sfkf khqt xpjd rjmk lxjtns qdfpq vhcqpn ttqgh bnxl zjtlrq qqgq lchdf jgdf jpdxvmv mmdmtg sdcdmn (contains nuts, peanuts)\nvrhj bnxl vsbttl qdtjjz ncjv bbltf mgx xpjd mbllkbf hgmsn xqpph vzzz dxldm tcnhp vhbmztr jthsmn mpvnt prhkvr gbk rxhrpjv ffpfsv clmxkbn rsprgcj qbkjvg tbvh rmc kvzpzvt qsgcg nnxmgx qdfpq xlkgtc rgmlds pgzgn bqdtr vdlj kkhq sqnbsg cqkrhx qgct ttqgh rkms xtzt nmqlz vbmz vmcsb mtzqr nslqr llqfr zxjksd cxfz fxctfc dtnzp slrc grzv nkjcr sdcdmn xtpdql gxnjk lxjtns mvdgf qzdpffs mct csdslq knprxg zkvlf vvchk nzqlgz crbxx pdvqs prxmdlz bnkss ktgqpk ltcxqdbm qrnkl gtl gmdldb jncfpc tn jmrx qckgcc gpjkqrq dxzmr rclxmm rkgbgn bqrqj xjjk (contains sesame, fish)\nnzqlgz ffpfsv qjtrpj vjzc mzr bqdtr gmcm kkhq vmcsb vhbmztr ssfb hbkmd rxdns mjlqj knprxg qmzzgr qc tfrpccb cjp vzzz ltcxqdbm tqgjg mbllkbf sfxsj xngkf jtlfh ncjv hfjrp jmrx vvchk rclxmm dtnzp fsjbdt sfkf qbkjvg gmltxp jncfpc clg bzxh xxhtdkp xjjk dtkcj qdfpq bqrqj drqg gfhvs nfzz tfbpk jlrtmv prxmdlz zdvr fhtn sskfj qsgcg lxjtns (contains fish, eggs)\nllqfr zsgnd vvchk hjg qmzzgr vzzz jncfpc gxnjk sfxsj fsrmcx zbqfz glx qzdpffs bbltf rkgbgn qc gbk xkkjl xxhtdkp tqgjg jmrx nkjcr slg rjmk vrhj nnxmgx gmcm rxhrpjv ltcxqdbm bqrqj ksfbnhz hbkmd rtkk mbllkbf bkzgpg ssb qjtrpj vbmz zjtlrq kzpmt clg qsgcg bqdtr mgx lxjtns crbxx qhzqq pgzgn sbkksv rgmlds jgdf jlrtmv ncjv ktzlr gpjkqrq cxfz qzqzj bqg dxzmr vhcqpn jpdxvmv pdvqs hrqbs rxdns kvzpzvt fsjbdt lzkmdq jbpz knprxg xsbt kkhq dtnzp qdfpq gfhdct sfkf tbvh cjjd vqbb xjjk (contains sesame, nuts)\nqqgq xmm fhtn tcnhp prxmdlz sskfj ksfbnhz tbvh ncjv rkms nkjcr sjg grzv jmrx vhbmztr knprxg pdfv khqt qhzqq cjp zsgnd txhkk xpjd ltcxqdbm cqkrhx fkhcbzbk hbpsp slzctfh qsgcg gmcm tfrpccb jlrtmv qdfpq tfbpk vdlj fxctfc jpdxvmv gpjkqrq clg vhcqpn zkvlf crbxx zjtlrq ssfb ttqgh xqpph qjtrpj rpmf vqbb pgzgn hfjrp vzzz gtl vjzc mjlqj qdtjjz lxjtns qpfh zdxn xtpdql (contains fish, peanuts)\ngrzv pbblp vhbmztr qjtrpj zsgnd dxldm pdfv rxdns vrhj cqkrhx clmxkbn vsbttl lchdf slzctfh bqrqj vdlj mgx zxjksd ssffbt ncjv mmdmtg sqnbsg vzzz qckgcc jrbfkg lxjtns slg cklx zpsbc jlrtmv pdvqs ffpfsv jncfpc vrqb knprxg qdfpq rtkk dqf rbxz xpjd qc rmn ttqgh zjtlrq tbvh clg hfjrp bqg sdcdmn bkzgpg zdvr mct csdslq qgct gmdldb bnkss qsgcg prxmdlz xrqj dsksm (contains nuts, shellfish, fish)\nrtkk jncfpc zxjksd zsgnd clg crbxx sdcdmn vbmz rkms hlsbn xsbt tfrpccb zdvr prhkvr vzzz slzctfh txhkk knprxg drqg slrc rgmlds xxhtdkp lxjtns mct qqgq grzv zpsbc gbk qmzzgr fpqc nnxmgx kl hjg jlfm kzpmt lqtqm xtpdql rmc hbkmd rxdns rmsgmj sqnbsg xqpph rclxmm zkvlf jmrx cklx mrjqg qmcrpm kcncjpk pbblp fkxf ncjv fsrmcx pgzgn xvj sjg rkgbgn cjp dsksm nmqlz zxdkrx sbkksv tcnhp ljcvh prxmdlz gfhvs mjlqj qc ssb cxfz bzxh dtkcj ksfbnhz hfjrp mgx mtzqr bqdtr sskfj cjjd ltcxqdbm fxctfc ktzlr nfzz dqf kvzpzvt (contains shellfish)\nrtkk xrqj xctvtxzl gmltxp qzdpffs bqrqj gpjkqrq xpjd xngkf jcs nslqr slzctfh rsprgcj ksfbnhz qdtjjz jthsmn ttjvqs nkjcr xjjk qgct ncjv xkzk ktgqpk mct xlkgtc xsrk sdcdmn hrqbs jrbfkg jglqz vdlj slrc vqbb nzqlgz prxmdlz tcnhp qckgcc zxjksd vzzz bqdtr slg ffpfsv qkhft lqtqm clg dxzmr cxfz jtlfh jncfpc lxjtns gfhdct sjg ljcvh hjg qzqzj dsksm ktzlr knprxg rclxmm kzpmt vrqb rkgbgn sfxsj cqkrhx vhbmztr (contains fish, eggs, peanuts)\nkkhq tbvh knprxg qdfpq rpmf rkms mct cjp ttqgh qjtrpj cklx rxdns tn rgmlds mrjqg mbllkbf qnljhd pdfv pdvqs jgdf pjlz ssfb xsbt clg crbxx qrnkl rsprgcj llqfr fxctfc clmxkbn jlfm txhkk hbpsp fsjbdt gmcm lzkmdq nslqr xjjk vzzz kl ssb ktgqpk prxmdlz nmqlz sfkf rmsgmj rkgbgn ssffbt gscdgj lchdf lxjtns gfhvs jncfpc csdslq xpjd qdtjjz hgmsn cxfz (contains peanuts, shellfish)\njlfm knprxg nkjcr slg vzzz fkxf ffpfsv rclxmm rmn ncjv cjjd mbllkbf xxhtdkp rtkk txhkk hsfx mvdgf clg qbkjvg fkhcbzbk sskfj fpqc khqt zjtlrq dqf cqkrhx hrqbs sfkf qdfpq vjzc vsbttl vrqb lqkxpxr cxfz bnxl xsrk hbpsp vqbb kkhq bnkss hfjrp qrnkl lzkmdq zkvlf drqg gfhdct lchdf pjlz lxjtns fsrmcx dxzmr (contains sesame, peanuts)\nrxdns qhzqq clg mrjqg ndqtf jrbfkg cqkrhx sdcdmn qdfpq cxfz xvj fpqc xkkjl dxldm bnxl dxzmr fkhcbzbk vjzc hjg qpfh rpmf xpjd mpvnt nkjcr qzqzj drqg jbpz gbk fxctfc jlfm xtpdql bzxh sfxsj zxdkrx ffpfsv hfjrp tfrpccb khqt qc rkgbgn nmqlz rmn ssffbt slzctfh mzr xsbt qckgcc knprxg lxjtns prxmdlz gfhvs bnkss kcncjpk vzzz gscdgj mmdmtg ssfb zsgnd xxhtdkp (contains eggs, nuts, peanuts)\nxtzt tfrpccb vrqb rxhrpjv cxfz gfhvs llqfr sqnbsg jlfm rsprgcj tn jncfpc rgmlds csdslq ssfb qdtjjz qmzzgr nslqr rmn fsrmcx gbk rjmk vbmz rkgbgn zsgnd prxmdlz qpfh dqf pdvqs vdlj zjtlrq rclxmm qrnkl qgct vqbb qzqzj rxdns zkvlf zdxn knprxg bzxh gmdldb cklx zxjksd vvchk zpsbc sxxnb lxjtns qdfpq ljcvh jthsmn ksfbnhz gfhdct zbqfz mjlqj ssb kzpmt vzzz fxctfc xngkf nkjcr sfkf kkhq jgdf clg bqdtr xxhtdkp (contains wheat, nuts)\ncjjd ttqgh jthsmn cxfz dtnzp ksfbnhz slrc rtkk rbxz hjg clg tfbpk tqgjg kl lxjtns tn ncjv bnkss jtlfh xkzk vrhj crbxx ssfb zpsbc gmcm qc jncfpc mzr vbmz gscdgj qsgcg knprxg xqpph bnxl hfjrp nzqlgz qnljhd pgzgn vmcsb xmm qdfpq cklx ffpfsv sxxnb vzzz (contains nuts)\npjlz zbqfz xsbt cxfz vsbttl sbkksv mtzqr dxldm lqkxpxr vqbb gtl mjlqj vhbmztr slg glx khqt mmdmtg nslqr zkvlf cjjd ncjv tfrpccb xkzk xlkgtc kcncjpk jgdf hbkmd mbllkbf prhkvr kl vzzz rgmlds rsprgcj gbk lxjtns dtkcj bbltf rkgbgn knprxg prxmdlz qdfpq rpmf jtlfh xvj jtgsn vrhj bqdtr vvchk bqrqj jlrtmv gfhvs hsfx xtpdql cqkrhx xjjk (contains soy)\nrmsgmj txhkk slg nfzz mmdmtg ssb lchdf mct csdslq pgzgn qgct xmm bnkss ljcvh gbk jmrx clg zsgnd vvchk ktgqpk bzxh fxctfc slzctfh tcnhp kcncjpk vrhj nkjcr cqkrhx clmxkbn gmltxp fpqc xtzt rclxmm sdcdmn qbkjvg dxldm dxzmr fkxf vqbb vhcqpn qsgcg lqtqm jbpz lzkmdq mtzqr xtpdql qc cjp sjg bkzgpg bqg rgmlds qdtjjz qckgcc prxmdlz mpvnt knprxg xngkf mjlqj nmqlz xxhtdkp zpsbc mrjqg qdfpq rmn cklx jpdxvmv glx xctvtxzl sfkf bqrqj zbqfz zkvlf rxdns gfhdct sskfj mgx qhzqq kvzpzvt cxfz gpjkqrq gmcm jglqz xkzk lxjtns xpjd rbxz xvj grzv hbkmd slrc dtkcj ncjv xqpph zdxn (contains shellfish, wheat, fish)\nttqgh qzqzj lxjtns rbxz xpjd dxldm fsrmcx pjlz nslqr khqt crbxx pbblp pdfv hrqbs mbllkbf rmc zbqfz prxmdlz ncjv llqfr gxnjk ltcxqdbm qdfpq gfhdct dsksm vhcqpn ssb cjp nmqlz vrqb cjjd slzctfh vqbb zsgnd rmsgmj ktzlr hfjrp cxfz vvchk qbkjvg gscdgj txhkk kcncjpk zpsbc mtzqr sxxnb jmrx knprxg nfzz vzzz fhtn rkms jncfpc nzqlgz jgdf ksfbnhz qgct (contains nuts)\nltcxqdbm clg xkzk jgdf clmxkbn bnxl pdfv nslqr ncjv rpmf ttjvqs lzkmdq vzzz jcs qnljhd hrqbs gscdgj txhkk tqgjg kvzpzvt knprxg fxctfc drqg dsksm ttqgh fkhcbzbk xsrk sjg gmcm xtpdql prxmdlz gfhvs qdfpq kcncjpk ktzlr qjtrpj cklx gpjkqrq jtgsn cxfz dxzmr qzdpffs sbkksv ssb sfkf jmrx nfzz vvchk xngkf gfhdct vhbmztr tn vrhj fkxf xkkjl mmdmtg mct kl lqkxpxr (contains soy, shellfish)\nlzkmdq dsksm qzdpffs xctvtxzl nmqlz xxhtdkp lqkxpxr hjg zpsbc nkjcr qhzqq bzxh rsprgcj zxdkrx nzqlgz hbpsp dqf xsbt jpdxvmv qkhft csdslq xmm mbllkbf xsrk jbpz prxmdlz slrc qdfpq gmcm glx prhkvr zsgnd bqg fpqc clg zjtlrq nnxmgx pgzgn mzr mvdgf ncjv rgmlds knprxg dxzmr xvj gmltxp lxjtns mpvnt xtzt xtpdql zdxn kcncjpk gbk cxfz fxctfc sskfj sdcdmn bbltf vvchk jthsmn jmrx gmdldb cklx (contains peanuts, wheat)\nrtkk kl fsrmcx prxmdlz lqkxpxr hfjrp fpqc jmrx vzzz xtpdql gscdgj ltcxqdbm zxjksd bnxl lxjtns bqdtr mrjqg qgct xlkgtc bnkss txhkk qkhft hsfx cjjd csdslq kzpmt gmdldb ljcvh clmxkbn xmm jglqz vrhj rmc xkkjl knprxg tfrpccb jtlfh lchdf rxhrpjv vjzc qqgq sxxnb qckgcc fxctfc tbvh xkzk jlrtmv qbkjvg rbxz hbkmd jthsmn bbltf nslqr mgx clg cxfz jlfm gtl kcncjpk cjp gpjkqrq qzdpffs xsbt xjjk qdfpq tfbpk ktzlr nnxmgx xxhtdkp prhkvr qrnkl fhtn cklx sqnbsg slg glx (contains wheat)\nprhkvr tfbpk prxmdlz sdcdmn xrqj mvdgf sbkksv lxjtns hbpsp fsjbdt llqfr rpmf zpsbc rbxz mjlqj fsrmcx gmltxp mrjqg jtlfh bqdtr jpdxvmv tbvh bqrqj ndqtf bnkss sfxsj nkjcr xvj rclxmm sxxnb hgmsn knprxg qdfpq mmdmtg mgx jlfm cqkrhx fpqc zxjksd bkzgpg fkxf xpjd clmxkbn ncjv clg xqpph xsbt fhtn qzqzj nnxmgx lchdf bnxl gmdldb qnljhd khqt rmn vzzz dxzmr (contains nuts)\ncxfz mjlqj lxjtns kvzpzvt mrjqg qmcrpm clg ssffbt ndqtf rmsgmj dqf ttjvqs ksfbnhz tcnhp gmcm zsgnd hbpsp xtzt qjtrpj jbpz slzctfh qpfh hjg xjjk knprxg fkhcbzbk prhkvr cqkrhx lqkxpxr zpsbc qnljhd xkkjl lchdf xtpdql vzzz sjg ncjv bkzgpg pdfv sdcdmn cjjd ltcxqdbm vdlj csdslq nnxmgx mct jtgsn qckgcc bbltf jlfm bzxh dtnzp tfbpk gpjkqrq xqpph qc bqrqj vvchk ssfb glx lqtqm xngkf nslqr qzqzj gbk sfxsj prxmdlz xkzk (contains soy, nuts, peanuts)\nslzctfh mbllkbf xvj sfxsj xtzt rmc rkms qmcrpm hgmsn dsksm knprxg rsprgcj jpdxvmv qrnkl rxhrpjv rbxz xqpph sjg xctvtxzl mzr lxjtns ncjv dqf prxmdlz nkjcr nmqlz hrqbs gmltxp gxnjk sbkksv mtzqr mvdgf clg ndqtf jbpz kvzpzvt cjjd hfjrp gmcm jrbfkg xrqj zpsbc gpjkqrq bzxh qzqzj qdfpq qsgcg hbpsp hjg qmzzgr mct mgx qbkjvg jgdf drqg fxctfc dxzmr cklx qpfh jtlfh rxdns dtnzp xxhtdkp jtgsn zbqfz jlfm lzkmdq vzzz nnxmgx xtpdql xkzk vhbmztr dxldm gfhvs jncfpc qjtrpj ttjvqs ssfb bqg (contains fish)\nprxmdlz mtzqr tfbpk xqpph hrqbs clg zxdkrx lchdf vzzz gmcm ksfbnhz dtkcj mbllkbf tbvh sqnbsg dtnzp qdfpq kkhq dxldm mzr xngkf qkhft jglqz hbkmd zkvlf ncjv cqkrhx xmm kzpmt gbk qhzqq mmdmtg xxhtdkp jpdxvmv kcncjpk mgx cxfz ktzlr hlsbn prhkvr lxjtns xpjd cjjd gpjkqrq sxxnb qjtrpj qqgq sbkksv mvdgf jtgsn slg ktgqpk fhtn rtkk rxdns qrnkl ssb dxzmr mct lzkmdq fsjbdt sjg rxhrpjv rkgbgn xctvtxzl mpvnt (contains wheat)\npdvqs rjmk clg mgx zdxn qzqzj qzdpffs rpmf jcs zxdkrx jtlfh rbxz kkhq rgmlds ljcvh sqnbsg dsksm zkvlf bqg qhzqq tn hsfx lchdf qgct lqtqm jthsmn lxjtns xctvtxzl nfzz hbkmd slrc pjlz jtgsn vzzz mjlqj kzpmt pbblp knprxg mrjqg txhkk mct ssfb bqrqj clmxkbn rmsgmj jlfm mmdmtg xsrk pgzgn prxmdlz jncfpc hrqbs bnxl nkjcr zjtlrq xrqj mvdgf gmcm tcnhp lqkxpxr zbqfz zpsbc gxnjk fsjbdt gbk kl hgmsn dqf rsprgcj vqbb qmcrpm jmrx qsgcg tbvh fsrmcx hlsbn lzkmdq slzctfh ssffbt gfhdct qc xkzk vvchk cxfz qmzzgr fhtn vrqb rkms kcncjpk pdfv gscdgj xtpdql cjp sfkf vsbttl sjg qdfpq (contains sesame, soy, nuts)\ncklx vzzz fhtn ncjv hgmsn xkzk nslqr rmn ffpfsv fpqc qmcrpm zxdkrx gfhvs sskfj rxdns cqkrhx qjtrpj mvdgf xmm jncfpc vsbttl kl ssfb xsbt zjtlrq gmltxp mzr jtlfh ktgqpk knprxg xxhtdkp nzqlgz clg pdfv drqg qmzzgr lxjtns kkhq rgmlds glx bnxl qsgcg jbpz hlsbn qdfpq cxfz (contains shellfish)\nkvzpzvt qgct mvdgf hgmsn jrbfkg qdfpq ssffbt gfhvs prhkvr clg bbltf rbxz lxjtns vzzz dsksm tqgjg txhkk slg gbk crbxx rsprgcj qnljhd qzqzj rmc vrhj hrqbs jgdf qbkjvg vqbb gmcm zxjksd khqt rclxmm ksfbnhz jtgsn mjlqj ssb gmdldb xlkgtc ktzlr ssfb qdtjjz cxfz knprxg rmn xmm ffpfsv vdlj qqgq bnkss xkzk ncjv glx mrjqg bqdtr pdfv lqtqm bqrqj dxldm nzqlgz gfhdct xpjd tfbpk vbmz jncfpc lchdf kkhq (contains nuts, fish)\nbqrqj bqdtr vzzz jthsmn vmcsb fsrmcx ncjv xkkjl xqpph slg sdcdmn ssffbt gscdgj gfhvs xlkgtc zkvlf drqg mvdgf hbkmd nzqlgz dxldm slrc qc cjjd vjzc lxjtns zdxn rpmf vdlj xctvtxzl xvj tfrpccb jtgsn sxxnb bbltf kkhq fpqc clg kvzpzvt xtzt qdfpq nnxmgx cklx mrjqg xsrk ttjvqs lchdf qmcrpm kcncjpk nslqr rmc vhcqpn cqkrhx prxmdlz jrbfkg lqkxpxr rsprgcj bzxh lzkmdq ffpfsv vrhj cjp qrnkl qzdpffs vhbmztr hfjrp tcnhp dxzmr fxctfc jgdf rmn mgx rkgbgn gmltxp lqtqm jmrx kl vrqb ltcxqdbm fhtn knprxg (contains peanuts)\ngmcm xxhtdkp cqkrhx lqtqm vzzz jpdxvmv grzv ncjv sskfj dxldm kzpmt zdxn zbqfz rclxmm fkhcbzbk vvchk cxfz prxmdlz lqkxpxr vjzc clg jgdf vrqb rsprgcj nzqlgz fhtn jmrx pjlz bnxl bnkss qmzzgr fxctfc qrnkl lxjtns qdfpq slrc slg tcnhp nfzz mbllkbf hlsbn kkhq zxdkrx gmdldb gscdgj (contains sesame, wheat, shellfish)\ngxnjk lqkxpxr kvzpzvt vzzz cqkrhx jrbfkg lxjtns xtzt jcs qzdpffs txhkk kzpmt xkkjl vrqb mtzqr fkhcbzbk jtgsn mct prhkvr rmsgmj sdcdmn qkhft ndqtf mjlqj gtl tfbpk mgx jglqz ktgqpk zxjksd xrqj gfhvs knprxg clg hbkmd xmm vjzc rxhrpjv rmc vmcsb nfzz xpjd cjjd sjg ssb fpqc qdfpq llqfr jthsmn vqbb rkms ktzlr ncjv jncfpc qsgcg sfkf cxfz xngkf xxhtdkp glx qmzzgr hrqbs zpsbc bnkss dxldm vbmz tbvh cjp qzqzj (contains soy)\npdfv bkzgpg lchdf dsksm rkms vhbmztr ttjvqs slrc csdslq mtzqr mzr qrnkl slzctfh vhcqpn ndqtf bqdtr ncjv gfhvs dxldm qdfpq bqg sdcdmn nmqlz xtpdql prxmdlz dtkcj rbxz rjmk qc qkhft kkhq ffpfsv jtlfh vrhj vzzz fxctfc rmc mct sqnbsg pdvqs xkkjl dqf rmsgmj lxjtns rtkk jlrtmv jbpz jrbfkg zdvr nslqr hlsbn fsjbdt jncfpc nzqlgz llqfr sfkf ttqgh gmcm qnljhd pjlz ljcvh mgx fkhcbzbk gpjkqrq clg qsgcg vrqb xrqj cxfz jgdf dxzmr tcnhp rxhrpjv tbvh ktzlr (contains wheat, soy, shellfish)\ntn bzxh bqrqj csdslq jlfm jtlfh qdtjjz bnxl jthsmn gmcm lxjtns kvzpzvt jpdxvmv xjjk nmqlz rgmlds hlsbn khqt jlrtmv qbkjvg prxmdlz bqg nkjcr vzzz jbpz knprxg qckgcc nfzz pbblp hgmsn hfjrp ktzlr ktgqpk hbkmd qmcrpm gxnjk xsbt qjtrpj fsrmcx gmdldb xctvtxzl cjp cxfz jtgsn rkms vvchk qdfpq rjmk sfkf rmsgmj xngkf zxdkrx mvdgf clg bkzgpg lzkmdq hjg (contains sesame)\nkkhq crbxx bqg rkms ncjv rclxmm gfhvs lxjtns vzzz bbltf kcncjpk jncfpc jlrtmv dsksm slg mjlqj xngkf fpqc kl cjjd sdcdmn knprxg grzv rmc lqkxpxr clmxkbn vvchk qzdpffs ksfbnhz zjtlrq bqdtr bnkss xsbt fsjbdt rxdns rjmk slrc zsgnd cxfz xjjk bqrqj bkzgpg vdlj qbkjvg xpjd clg prxmdlz vjzc rbxz sjg rtkk ktzlr sfxsj jbpz khqt qjtrpj pjlz fkhcbzbk ttqgh ssfb ffpfsv xctvtxzl mpvnt rmn ssb hlsbn vrhj rxhrpjv qmzzgr rkgbgn (contains fish, soy)\nrmsgmj ttqgh jmrx vrqb xlkgtc csdslq rjmk jncfpc vjzc qnljhd knprxg ssffbt zxjksd ltcxqdbm slzctfh vdlj pbblp rgmlds xrqj fsrmcx sdcdmn lchdf xkzk sbkksv cjp sxxnb cxfz jtlfh clg bzxh gscdgj khqt cqkrhx pdfv nmqlz pgzgn vsbttl gfhdct qc qhzqq xmm gxnjk zkvlf rkgbgn jgdf xctvtxzl zxdkrx rmn nkjcr mgx vqbb mzr prxmdlz bnxl cklx ncjv dqf qpfh rmc hbpsp lxjtns clmxkbn mct ljcvh ttjvqs xxhtdkp pdvqs vzzz qdtjjz (contains shellfish, fish)\ncjp clg xsrk gxnjk hbkmd qzqzj mzr rmsgmj mtzqr qgct qmzzgr vdlj hjg bzxh nslqr drqg dtkcj prxmdlz fpqc fkxf tfrpccb csdslq mbllkbf mgx hlsbn knprxg gfhvs vzzz txhkk cqkrhx xjjk jlfm rpmf kl ncjv lxjtns nkjcr rmn qrnkl hsfx qpfh qdfpq fhtn zkvlf qbkjvg rxhrpjv qqgq hfjrp xctvtxzl rkgbgn ttjvqs jtgsn (contains nuts)\nzkvlf rclxmm hlsbn gpjkqrq qqgq dxzmr xlkgtc hbpsp zpsbc tfrpccb gscdgj sxxnb ttqgh rxdns lqkxpxr fkhcbzbk mct bnkss prxmdlz rmsgmj qmcrpm kzpmt jrbfkg ncjv vzzz slzctfh xctvtxzl dxldm hsfx ssfb qsgcg cxfz sskfj xkkjl fhtn gxnjk xtpdql nmqlz vbmz ffpfsv jtlfh cklx gmcm nslqr llqfr qzdpffs rkgbgn sbkksv rtkk tqgjg clg nkjcr pgzgn pdvqs vrqb sfxsj lxjtns jgdf qdtjjz prhkvr pbblp knprxg vqbb qnljhd khqt jbpz vsbttl drqg qhzqq (contains soy, sesame, peanuts)\nvhbmztr bqrqj jtlfh gmdldb xjjk jlrtmv tqgjg gfhvs ndqtf rgmlds sdcdmn fsjbdt zbqfz ltcxqdbm hbpsp jbpz dqf sxxnb rtkk ncjv prxmdlz sfxsj llqfr rkms cxfz xtzt glx mpvnt xctvtxzl zxjksd gtl zxdkrx knprxg kzpmt pjlz khqt qdfpq tcnhp bqdtr fkxf vjzc mjlqj fxctfc lzkmdq zsgnd clg pbblp kvzpzvt qjtrpj jncfpc nmqlz ljcvh vzzz fsrmcx (contains soy, nuts)\nrxdns mtzqr ttqgh dtkcj tn knprxg xqpph qbkjvg nzqlgz hbpsp ncjv dtnzp rbxz jrbfkg ssfb gmcm qckgcc xsrk pbblp qmzzgr sfkf jmrx cjjd rkgbgn fpqc zxjksd gmltxp cqkrhx glx xkkjl sdcdmn gbk jtlfh gscdgj cxfz lxjtns gfhvs jgdf tqgjg xvj vsbttl qc qgct mgx rxhrpjv gpjkqrq qzdpffs prxmdlz xsbt qzqzj xtzt ssb zkvlf vzzz mrjqg qdfpq qrnkl dsksm ljcvh nfzz xngkf bnxl lchdf kvzpzvt rmn khqt ndqtf hrqbs xjjk qnljhd ksfbnhz mmdmtg mvdgf xlkgtc bkzgpg mbllkbf (contains wheat, soy, nuts)"},"020c":function(n,e,a){"use strict";a.r(e),e["default"]="The high-speed train leaves the forest and quickly carries you south. You can even see a desert in the distance! Since you have some spare time, you might as well see if there was anything interesting in the image the Mythical Information Bureau satellite captured.\n\nAfter decoding the satellite messages, you discover that the data actually contains many small images created by the satellite's **camera array**. The camera array consists of many cameras; rather than produce a single square image, they produce many smaller square image **tiles** that need to be **reassembled back into a single image**.\n\nEach camera in the camera array returns a single monochrome **image tile** with a random unique **ID number**. The tiles (your puzzle input) arrived in a random order.\n\nWorse yet, the camera array appears to be malfunctioning: each image tile has been **rotated and flipped to a random orientation**. Your first task is to reassemble the original image by orienting the tiles so they fit together.\n\nTo show how the tiles should be reassembled, each tile's image data includes a border that should line up exactly with its adjacent tiles. All tiles have this border, and the border lines up exactly when the tiles are both oriented correctly. Tiles at the edge of the image also have this border, but the outermost edges won't line up with any other tiles.\n\nFor example, suppose you have the following nine tiles:\n\n```\nTile 2311:\n..##.#..#.\n##..#.....\n#...##..#.\n####.#...#\n##.##.###.\n##...#.###\n.#.#.#..##\n..#....#..\n###...#.#.\n..###..###\n\nTile 1951:\n#.##...##.\n#.####...#\n.....#..##\n#...######\n.##.#....#\n.###.#####\n###.##.##.\n.###....#.\n..#.#..#.#\n#...##.#..\n\nTile 1171:\n####...##.\n#..##.#..#\n##.#..#.#.\n.###.####.\n..###.####\n.##....##.\n.#...####.\n#.##.####.\n####..#...\n.....##...\n\nTile 1427:\n###.##.#..\n.#..#.##..\n.#.##.#..#\n#.#.#.##.#\n....#...##\n...##..##.\n...#.#####\n.#.####.#.\n..#..###.#\n..##.#..#.\n\nTile 1489:\n##.#.#....\n..##...#..\n.##..##...\n..#...#...\n#####...#.\n#..#.#.#.#\n...#.#.#..\n##.#...##.\n..##.##.##\n###.##.#..\n\nTile 2473:\n#....####.\n#..#.##...\n#.##..#...\n######.#.#\n.#...#.#.#\n.#########\n.###.#..#.\n########.#\n##...##.#.\n..###.#.#.\n\nTile 2971:\n..#.#....#\n#...###...\n#.#.###...\n##.##..#..\n.#####..##\n.#..####.#\n#..#.#..#.\n..####.###\n..#.#.###.\n...#.#.#.#\n\nTile 2729:\n...#.#.#.#\n####.#....\n..#.#.....\n....#..#.#\n.##..##.#.\n.#.####...\n####.#.#..\n##.####...\n##..#.##..\n#.##...##.\n\nTile 3079:\n#.#.#####.\n.#..######\n..#.......\n######....\n####.#..#.\n.#...#.##.\n#.#####.##\n..#.###...\n..#.......\n..#.###...\n```\n\nBy rotating, flipping, and rearranging them, you can find a square arrangement that causes all adjacent borders to line up:\n\n```\n#...##.#.. ..###..### #.#.#####.\n..#.#..#.# ###...#.#. .#..######\n.###....#. ..#....#.. ..#.......\n###.##.##. .#.#.#..## ######....\n.###.##### ##...#.### ####.#..#.\n.##.#....# ##.##.###. .#...#.##.\n#...###### ####.#...# #.#####.##\n.....#..## #...##..#. ..#.###...\n#.####...# ##..#..... ..#.......\n#.##...##. ..##.#..#. ..#.###...\n\n#.##...##. ..##.#..#. ..#.###...\n##..#.##.. ..#..###.# ##.##....#\n##.####... .#.####.#. ..#.###..#\n####.#.#.. ...#.##### ###.#..###\n.#.####... ...##..##. .######.##\n.##..##.#. ....#...## #.#.#.#...\n....#..#.# #.#.#.##.# #.###.###.\n..#.#..... .#.##.#..# #.###.##..\n####.#.... .#..#.##.. .######...\n...#.#.#.# ###.##.#.. .##...####\n\n...#.#.#.# ###.##.#.. .##...####\n..#.#.###. ..##.##.## #..#.##..#\n..####.### ##.#...##. .#.#..#.##\n#..#.#..#. ...#.#.#.. .####.###.\n.#..####.# #..#.#.#.# ####.###..\n.#####..## #####...#. .##....##.\n##.##..#.. ..#...#... .####...#.\n#.#.###... .##..##... .####.##.#\n#...###... ..##...#.. ...#..####\n..#.#....# ##.#.#.... ...##.....\n```\n\nFor reference, the IDs of the above tiles are:\n\n```\n1951    2311    3079\n2729    1427    2473\n2971    1489    1171\n```\n\nTo check that you've assembled the image correctly, multiply the IDs of the four corner tiles together. If you do this with the assembled tiles from the example above, you get `1951 * 3079 * 2971 * 1171` = **`20899048083289`**.\n\nAssemble the tiles into an image. **What do you get if you multiply together the IDs of the four corner tiles?**"},"02a5":function(n,e,a){"use strict";a.r(e),e["default"]="You find yourself standing on a snow-covered coastline; apparently, you landed a little off course. The region is too hilly to see the North Pole from here, but you do spot some Elves that seem to be trying to unpack something that washed ashore. It's quite cold out, so you decide to risk creating a paradox by asking them for directions.\n\n\"Oh, are you the search party?\" Somehow, you can understand whatever Elves from the year 1018 speak; you assume it's [Ancient Nordic Elvish](https://adventofcode.com/2015/day/6). Could the device on your wrist also be a translator? \"Those clothes don't look very warm; take this.\" They hand you a heavy coat.\n\n\"We do need to find our way back to the North Pole, but we have higher priorities at the moment. You see, believe it or not, this box contains something that will solve all of Santa's transportation problems - at least, that's what it looks like from the pictures in the instructions.\" It doesn't seem like they can read whatever language it's in, but you can: \"Sleigh kit. Some assembly required.\"\n\n\"'Sleigh'? What a wonderful name! You must help us assemble this 'sleigh' at once!\" They start excitedly pulling more parts out of the box.\n\nThe instructions specify a series of **steps** and requirements about which steps must be finished before others can begin (your puzzle input). Each step is designated by a single letter. For example, suppose you have the following instructions:\n\n```\nStep C must be finished before step A can begin.\nStep C must be finished before step F can begin.\nStep A must be finished before step B can begin.\nStep A must be finished before step D can begin.\nStep B must be finished before step E can begin.\nStep D must be finished before step E can begin.\nStep F must be finished before step E can begin.\n```\n\nVisually, these requirements look like this:\n\n```\n  --\x3eA---\x3eB--\n /    \\      \\\nC      --\x3eD-----\x3eE\n \\           /\n  ----\x3eF-----\n```\n\nYour first goal is to determine the order in which the steps should be completed. If more than one step is ready, choose the step which is first alphabetically. In this example, the steps would be completed as follows:\n\n- Only **`C`** is available, and so it is done first.\n- Next, both `A` and `F` are available. **`A`** is first alphabetically, so it is done next.\n- Then, even though `F` was available earlier, steps `B` and `D` are now also available, and **`B`** is the first alphabetically of the three.\n- After that, only `D` and `F` are available. `E` is not available because only some of its prerequisites are complete. Therefore, **`D`** is completed next.\n- **`F`** is the only choice, so it is done next.\n- Finally, **`E`** is completed.\n\nSo, in this example, the correct order is **`CABDFE`**.\n\n**In what order should the steps in your instructions be completed?**"},"05f3":function(n,e,a){"use strict";a("5b27")},"06d5":function(n,e,a){"use strict";a.r(e),e["default"]="8141"},"080b":function(n,e,a){"use strict";a.r(e),e["default"]="The year 518 is significantly more underground than your history books implied. Either that, or you've arrived in a vast cavern network under the North Pole.\n\nAfter exploring a little, you discover a long tunnel that contains a row of small pots as far as you can see to your left and right. A few of them contain plants - someone is trying to grow things in these geothermally-heated caves.\n\nThe pots are numbered, with `0` in front of you. To the left, the pots are numbered `-1`, `-2`, `-3`, and so on; to the right, `1`, `2`, `3`.... Your puzzle input contains a list of pots from `0` to the right and whether they do (`#`) or do not (`.`) currently contain a plant, the **initial state**. (No other pots currently contain plants.) For example, an initial state of `#..##....` indicates that pots `0`, `3`, and `4` currently contain plants.\n\nYour puzzle input also contains some notes you find on a nearby table: someone has been trying to figure out how these plants **spread** to nearby pots. Based on the notes, for each generation of plants, a given pot has or does not have a plant based on whether that pot (and the two pots on either side of it) had a plant in the last generation. These are written as `LLCRR => N`, where `L` are pots to the left, `C` is the current pot being considered, `R` are the pots to the right, and `N` is whether the current pot will have a plant in the next generation. For example:\n\n- A note like `..#.. => .` means that a pot that contains a plant but with no plants within two pots of it will not have a plant in it during the next generation.\n- A note like `##.## => .` means that an empty pot with two plants on each side of it will remain empty in the next generation.\n- A note like `.##.# => #` means that a pot has a plant in a given generation if, in the previous generation, there were plants in that pot, the one immediately to the left, and the one two pots to the right, but not in the ones immediately to the right and two to the left.\n\nIt's not clear what these plants are for, but you're sure it's important, so you'd like to make sure the current configuration of plants is sustainable by determining what will happen after **`20` generations**.\n\nFor example, given the following input:\n\n```\ninitial state: #..#.#..##......###...###\n\n...## => #\n..#.. => #\n.#... => #\n.#.#. => #\n.#.## => #\n.##.. => #\n.#### => #\n#.#.# => #\n#.### => #\n##.#. => #\n##.## => #\n###.. => #\n###.# => #\n####. => #\n```\n\nFor brevity, in this example, only the combinations which do produce a plant are listed. (Your input includes all possible combinations.) Then, the next 20 generations will look like this:\n\n```\n                 1         2         3     \n       0         0         0         0     \n 0: ...#..#.#..##......###...###...........\n 1: ...#...#....#.....#..#..#..#...........\n 2: ...##..##...##....#..#..#..##..........\n 3: ..#.#...#..#.#....#..#..#...#..........\n 4: ...#.#..#...#.#...#..#..##..##.........\n 5: ....#...##...#.#..#..#...#...#.........\n 6: ....##.#.#....#...#..##..##..##........\n 7: ...#..###.#...##..#...#...#...#........\n 8: ...#....##.#.#.#..##..##..##..##.......\n 9: ...##..#..#####....#...#...#...#.......\n10: ..#.#..#...#.##....##..##..##..##......\n11: ...#...##...#.#...#.#...#...#...#......\n12: ...##.#.#....#.#...#.#..##..##..##.....\n13: ..#..###.#....#.#...#....#...#...#.....\n14: ..#....##.#....#.#..##...##..##..##....\n15: ..##..#..#.#....#....#..#.#...#...#....\n16: .#.#..#...#.#...##...#...#.#..##..##...\n17: ..#...##...#.#.#.#...##...#....#...#...\n18: ..##.#.#....#####.#.#.#...##...##..##..\n19: .#..###.#..#.#.#######.#.#.#..#.#...#..\n20: .#....##....#####...#######....#.#..##.\n```\n\nThe generation is shown along the left, where `0` is the initial state. The pot numbers are shown along the top, where `0` labels the center pot, negative-numbered pots extend to the left, and positive pots extend toward the right. Remember, the initial state begins at pot `0`, which is not the leftmost pot used in this example.\n\nAfter one generation, only seven plants remain. The one in pot `0` matched the rule looking for `..#..`, the one in pot `4` matched the rule looking for `.#.#.`, pot `9` matched `.##..`, and so on.\n\nIn this example, after 20 generations, the pots shown as `#` contain plants, the furthest left of which is pot `-2`, and the furthest right of which is pot `34`. Adding up all the numbers of plant-containing pots after the 20th generation produces **`325`**.\n\n**After `20` generations, what is the sum of the numbers of all pots which contain a plant?**"},"0b93":function(n,e,a){"use strict";a.r(e),e["default"]="6,13,1,15,2,0"},1276:function(n,e,a){"use strict";var s=a("d784"),t=a("44e7"),b=a("825a"),i=a("1d80"),r=a("4840"),o=a("8aa5"),l=a("50c4"),w=a("14c3"),L=a("9263"),c=a("d039"),h=[].push,d=Math.min,g=4294967295,p=!c((function(){return!RegExp(g,"y")}));s("split",2,(function(n,e,a){var s;return s="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,a){var s=String(i(this)),b=void 0===a?g:a>>>0;if(0===b)return[];if(void 0===n)return[s];if(!t(n))return e.call(s,n,b);var r,o,l,w=[],c=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),d=0,p=new RegExp(n.source,c+"g");while(r=L.call(p,s)){if(o=p.lastIndex,o>d&&(w.push(s.slice(d,r.index)),r.length>1&&r.index<s.length&&h.apply(w,r.slice(1)),l=r[0].length,d=o,w.length>=b))break;p.lastIndex===r.index&&p.lastIndex++}return d===s.length?!l&&p.test("")||w.push(""):w.push(s.slice(d)),w.length>b?w.slice(0,b):w}:"0".split(void 0,0).length?function(n,a){return void 0===n&&0===a?[]:e.call(this,n,a)}:e,[function(e,a){var t=i(this),b=void 0==e?void 0:e[n];return void 0!==b?b.call(e,t,a):s.call(String(t),e,a)},function(n,t){var i=a(s,n,this,t,s!==e);if(i.done)return i.value;var L=b(n),c=String(this),h=r(L,RegExp),m=L.unicode,u=(L.ignoreCase?"i":"")+(L.multiline?"m":"")+(L.unicode?"u":"")+(p?"y":"g"),f=new h(p?L:"^(?:"+L.source+")",u),y=void 0===t?g:t>>>0;if(0===y)return[];if(0===c.length)return null===w(f,c)?[c]:[];var x=0,v=0,k=[];while(v<c.length){f.lastIndex=p?v:0;var F,B=w(f,p?c:c.slice(v));if(null===B||(F=d(l(f.lastIndex+(p?0:v)),c.length))===x)v=o(c,v,m);else{if(k.push(c.slice(x,v)),k.length===y)return k;for(var j=1;j<=B.length-1;j++)if(k.push(B[j]),k.length===y)return k;v=x=F}}return k.push(c.slice(x)),k}]}),!p)},1279:function(n,e,a){"use strict";a.r(e),e["default"]="To completely determine whether you have enough adapters, you'll need to figure out how many different ways they can be arranged. Every arrangement needs to connect the charging outlet to your device. The previous rules about when adapters can successfully connect still apply.\n\nThe first example above (the one that starts with `16`, `10`, `15`) supports the following arrangements:\n\n```\n(0), 1, 4, 5, 6, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 5, 6, 7, 10, 12, 15, 16, 19, (22)\n(0), 1, 4, 5, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 5, 7, 10, 12, 15, 16, 19, (22)\n(0), 1, 4, 6, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 6, 7, 10, 12, 15, 16, 19, (22)\n(0), 1, 4, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 7, 10, 12, 15, 16, 19, (22)\n```\n\n(The charging outlet and your device's built-in adapter are shown in parentheses.) Given the adapters from the first example, the total number of arrangements that connect the charging outlet to your device is **`8`**.\n\nThe second example above (the one that starts with `28`, `33`, `18`) has many arrangements. Here are a few:\n\n```\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 47, 48, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 47, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 48, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 47, 48, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n46, 48, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n46, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n47, 48, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n47, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n48, 49, (52)\n```\n\nIn total, this set of adapters can connect the charging outlet to your device in **`19208`** distinct arrangements.\n\nYou glance back down at your bag and try to remember why you brought so many adapters; there must be **more than a trillion** valid ways to arrange them! Surely, there must be an efficient way to count the arrangements.\n\n**What is the total number of distinct ways you can arrange the adapters to connect the charging outlet to your device?**"},1396:function(n,e,a){"use strict";a.r(e),e["default"]="16\n45\n42\n47\n31\n38\n4\n7\n44\n10\n18\n24\n48\n28\n19\n23\n32\n1\n37\n9\n36\n8\n41\n49\n13\n15\n11\n27\n5\n6\n12\n45\n14\n7\n34\n10\n21\n50\n29\n16\n17\n18\n19\n20\n31\n52\n22\n23\n26\n42\n13\n24\n28\n46\n25\n30\n58\n27\n53\n49\n35\n91\n47\n54\n74\n51\n98\n55\n33\n40\n59\n36\n76\n37\n38\n100\n52\n107\n57\n60\n67\n81\n62\n68\n69\n73\n117\n132\n70\n71\n143\n77\n74\n105\n122\n75\n88\n196\n89\n145\n114\n146\n155\n119\n127\n142\n148\n130\n137\n160\n237\n141\n207\n147\n229\n219\n152\n162\n365\n163\n164\n253\n288\n203\n233\n241\n246\n269\n249\n257\n267\n271\n278\n284\n325\n423\n293\n299\n309\n549\n314\n526\n326\n512\n396\n653\n436\n444\n449\n562\n575\n495\n506\n634\n524\n566\n804\n952\n583\n758\n613\n763\n608\n623\n640\n762\n1145\n722\n1305\n1010\n1263\n939\n1019\n955\n1370\n1001\n1191\n1768\n1090\n1107\n1149\n1853\n1223\n1196\n1221\n1231\n1248\n1772\n1362\n1723\n1907\n2311\n2109\n1894\n1940\n1956\n2187\n2419\n2091\n2960\n2150\n3046\n5379\n2321\n2355\n2469\n3142\n2427\n2417\n4373\n2479\n2610\n3085\n3471\n3630\n3801\n3834\n3850\n3896\n4031\n4047\n5233\n4836\n6277\n4471\n8269\n8101\n8502\n7556\n4772\n6365\n4906\n6510\n4896\n5564\n11282\n6240\n6556\n7367\n10541\n7635\n8305\n7897\n12148\n8078\n14443\n11598\n22521\n11146\n12541\n12120\n9802\n9668\n9678\n10336\n12531\n10460\n11136\n11452\n11804\n12796\n13607\n13923\n21242\n15713\n17699\n16202\n15975\n17746\n28882\n19346\n25515\n19470\n21922\n23572\n20004\n19480\n20014\n22264\n32142\n21596\n26403\n22940\n44995\n24600\n26719\n27530\n29898\n31688\n36206\n32177\n35455\n46417\n37760\n38816\n49912\n38950\n39474\n39484\n49975\n62414\n56777\n41610\n54441\n44536\n47540\n53122\n49659\n86618\n51319\n54249\n57428\n61586\n63865\n67632\n88027\n73215\n136277\n76576\n97199\n78424\n78434\n100662\n224304\n111405\n86146\n142923\n96051\n126337\n92076\n98859\n100978\n118114\n125060\n105568\n134004\n223682\n131497\n137080\n140847\n223226\n173877\n156858\n155000\n164570\n197644\n186808\n212067\n178222\n182197\n194910\n188127\n221111\n193054\n256557\n259064\n289630\n239572\n298622\n324551\n309719\n467852\n268577\n277927\n328877\n348054\n464735\n343666\n319570\n392554\n360419\n394264\n366349\n370324\n383037\n555329\n381181\n432626\n710015\n496129\n498636\n559142\n517499\n664971\n546504\n578296\n743456\n588147\n721431\n1086783\n663236\n685919\n679989\n689894\n726768\n730743\n1401420\n736673\n751505\n813807\n877310\n879817\n1598741\n1013628\n1353130\n1329801\n1452174\n2325509\n1211475\n1124800\n3046940\n1268136\n1251383\n1343225\n1393979\n1349155\n1365908\n1740396\n2215227\n1457511\n2145446\n1631322\n1488178\n1565312\n1691117\n2207111\n2392936\n2138428\n2281764\n2817979\n2336275\n2582311\n2376183\n2462858\n3179295\n2519519\n3573019\n3644319\n2831403\n2715063\n2806666\n2823419\n2945689\n3633624\n3850447\n4720739\n3053490\n4319581\n3256429\n3829545\n4657947\n5326185\n4420192\n5949202\n5641398\n4799133\n4839041\n4895702\n4982377\n5234582\n7630536\n5630085\n7150984\n5538482\n6652964\n5752355\n8725247\n5999179\n6309919\n10419371\n6883035\n11579287\n7085974\n7676621\n9470943\n13986540\n9219325\n9259233\n9878079\n9694835\n16418550\n9734743\n18420082\n12283049\n12652143\n11290837\n11168567\n11537661\n11751534\n12062274\n22346978\n17847580\n16004754\n21911376\n13969009\n14559656\n14762595\n16305299\n16895946\n18478558\n18914160\n32883169\n31646119\n19429578\n36325524\n26824869\n24345323\n22706228\n33637815\n22459404\n36407597\n22920101\n23289195\n37265884\n45626329\n39107918\n57586476\n37682696\n28528665\n28731604\n29322251\n31067894\n33201245\n45379505\n48161182\n38343738\n42349679\n41888982\n42718773\n66839060\n45165632\n57260269\n67838909\n45748599\n46209296\n51448766\n71247438\n51817860\n57850916\n58053855\n62523496\n61729910\n99412606\n61932849\n99979042\n60390145\n88467372\n71544983\n81062511\n103618892\n80232720\n84238661\n84607755\n87884405\n106599441\n133274893\n91957895\n97197365\n104060212\n142165569\n113972262\n109668776\n109871715\n115904771\n149614315\n122120055\n153890744\n122322994\n131935128\n140622865\n144628806\n164471381\n151777703\n161295231\n236586701\n172492160\n188298873\n286794375\n194483846\n189155260\n236295256\n353626641\n206866141\n301918096\n231991770\n219540491\n292400568\n225776486\n238227765\n244443049\n254258122\n274100697\n262945859\n355779077\n309100187\n332927679\n313072934\n480966838\n333787391\n425450516\n360791033\n493660516\n383639106\n552468170\n396021401\n432642627\n426406632\n438857911\n445316977\n889681917\n499877183\n464004251\n470219535\n482670814\n498701171\n517203981\n537046556\n572046046\n622173121\n948489571\n646860325\n673863967\n890410883\n694578424\n744430139\n968920706\n1391290464\n779660507\n1139377102\n822428033\n982363533\n865264543\n902862162\n909321228\n934223786\n998578354\n946675065\n1159219677\n981371985\n1015905152\n1089250027\n1512584004\n1728150078\n1556181553\n1712838916\n1537271208\n1368442391\n1474238931\n1439008563\n1524090646\n1602088540\n2292244511\n1644925050\n1687692576\n1725290195\n1907899582\n2804144727\n2881026395\n2420913996\n1880898851\n3633189777\n1928047050\n2105155179\n2457692418\n2539995798\n3833305257\n5435393797\n2089807806\n2924623944\n3119163981\n3076327471\n3013367441\n7540548976\n2963099209\n3568591427\n3970706657\n4658292491\n4108606572\n4420894649\n3830445374\n3808945901\n3986054030\n4033202229\n4017854856\n6132531422\n4194962985\n4385739468\n4562847597\n4547500224\n6581958868\n5014431750\n6984074098\n5052907015\n8251340023\n5976466650\n7399106909\n6531690636\n6772045110\n6793544583\n7377537328\n7639391275\n8194685369\n11594069894\n7794999931\n7816499404\n7826800757\n10726653621\n18971607222\n15194036732\n8580702453\n9438646483\n8933239692\n15979809362\n9561931974\n21775995600\n10990898400\n11029373665\n12847906946\n14171081911\n25161980311\n13303735746\n13325235219\n13565589693\n14432935858\n15016928603\n15455890679\n17388732731\n15611499335\n15621800688\n21717552021\n31156198504\n19000578457\n34593407910\n24913049054\n17513942145\n18371886175\n22258474911\n24354608884\n40776574057\n24316133619\n25423834258\n27736671604\n26151642692\n33433514315\n26628970965\n26869325439\n26890824912\n27998525551\n29888826537\n36514520602\n49127800350\n31233300023\n33125441480\n33135742833\n44383267584\n67729150743\n41868551029\n42937776403\n35885828320\n39772417056\n40630361086\n57788123199\n49739967877\n50467776311\n51185459058\n78823604723\n62776653232\n52780613657\n53498296404\n57862270988\n92065576753\n58124124935\n57887352088\n136710956811\n64358741503\n90240193367\n82875710710\n66261184313\n102245538572\n75658245376\n89512384933\n86353604631\n80402778142\n155026152229\n110642884645\n131588237200\n100207744188\n100925426935\n101653235369\n110667965745\n106278910061\n110904738592\n148102464355\n166756382773\n115749623076\n133545597464\n259007202947\n144761519645\n168506722885\n185121249282\n149136895023\n141919429689\n146663962455\n202578662304\n156061023518\n197258343223\n210850628833\n180610522330\n211112482780\n322817406291\n217183648653\n201133171123\n211593392680\n207932145430\n303537253284\n222028533137\n244450336056\n332933271729\n329882768927\n249295220540\n275465027153\n286680949334\n334258144305\n288583392144\n455562818836\n410510807734\n349851575119\n302724985973\n403711833427\n336671545848\n377868865553\n699094199878\n492648675806\n640208799132\n562145976487\n412726563803\n409065316553\n508709482471\n579002280437\n737099011862\n466478869193\n1261240176365\n618466161071\n1034565099273\n524760247693\n933825564246\n575264341478\n925115916597\n864870962460\n711790302526\n639396531821\n706436819400\n898817522335\n1355565172933\n714540411401\n1223854447571\n821791880356\n1331349831653\n875544185746\n879205432996\n1033469730164\n917774799024\n1084945030264\n991239116886\n1143226408764\n1041743210671\n1333006572472\n1100024589171\n1811814891697\n1164156779514\n1214660873299\n1287054644004\n1345833351221\n1353936943222\n1697336066102\n2002719829288\n1909013915910\n1536332291757\n1906736910620\n1590084597147\n3252570261841\n1700997313352\n1796980232020\n1754749618742\n2184969619435\n1951244529188\n2141767799842\n2032982327557\n2091263706057\n2205899990185\n3610011229262\n2264181368685\n2314685462470\n4112636900805\n3703717142640\n3472024263439\n2640991587226\n2699770294443\n3150917175242\n3126416888904\n3539052121045\n3291081910499\n3497977545372\n3344834215889\n3387064829167\n3455746932094\n5561255758450\n3551729850762\n3787731946299\n3984226856745\n5654961671828\n7313728371902\n4124246033614\n4297163696242\n4470081358870\n7771958803044\n7135144031987\n8906089974339\n9126985935267\n6180043708271\n5767408476130\n5340761881669\n5826187183347\n9100307879495\n14441069761164\n6635916126388\n8727826710836\n6731899045056\n6842811761261\n6938794679929\n8021811209632\n7339461797061\n7535956707507\n7911977979913\n9779207705442\n8421409729856\n8594327392484\n8767245055112\n11809543155931\n15119969587111\n11520805589940\n12006230891618\n20621113469435\n17118669502503\n11108170357799\n11166949065016\n14378768468768\n15736224005883\n13367815171444\n13478727887649\n14071360842117\n15933789189545\n14182273558322\n13781606441190\n14278256476990\n14875418504568\n15251439776974\n15447934687420\n16333387709769\n20946156770458\n22628975947739\n17361572447596\n20288050645052\n22687754654956\n32466962360398\n30404748551886\n22275119422815\n24475985529243\n25179531199916\n35996791119183\n24534764236460\n26846543059093\n31185228966519\n27439176013561\n27260334328839\n27852967283307\n27963879999512\n28657024945758\n28059862918180\n47914897047818\n30126858281542\n30699374464394\n38608507132584\n33694960157365\n70543872995557\n49121662481908\n37649623092648\n42563170067867\n49714295436376\n52026074259009\n58759237382574\n54106877387932\n49010749765703\n51381307295553\n51795098565299\n79286408587848\n101036824024712\n57387192610381\n54699510342400\n97367744515158"},"14bc":function(n,e,a){"use strict";a.r(e),e["default"]="qzbw\nqez\n\nxgedfibnyuhqsrazlwtpocj\nfxgpoqijdzybletckwaunsr\npwnqsizrfcbyljexgouatd\nljtperqsodghnufiycxwabz\n\nuk\nkupacjlriv\ndku\nqunk\n\nyjnprofmcuhdlawt\nfrmhulyncvweatodzjp\nfhadtrcyjzwlnpumo\nhrcutablndyjpfmwo\n\nrdclv\nlrvdc\ncrldv\ndvrcl\nvrlcd\n\ndqrwajpb\nasrfpdjwbq\nwjdtarq\n\nnalkhgoi\nbmiad\nsdvpiyerma\nami\n\nsmg\nwlmdftcr\nmk\nmy\n\nebaxsun\nuaxnebs\nsuxnbea\neanxusb\naexusnb\n\nzoxegrfd\nqorjv\noqr\nvor\nroq\n\njpasdnrcvhglft\ndgkstavnhjrclfx\ncrtndjglfvwahq\nhjclinvdtagrkf\ngjfcdtuhlanvr\n\nexiopqbgrj\nundhwyfkvltis\n\nnpsxwlyog\nudylki\n\nbnuwck\nnuack\n\ncahpwtlozkm\nghnpzfqmoxabi\n\nhvwgxesraocbpnf\newvranqcpbghoxf\npaxfnwoegrhcvub\nqbrawpfscexngvho\nahpxognlrvebwfc\n\nagqmwpvlb\nwaklrnbqyp\nblquawtp\nqltabwp\n\nrymhgolkustipjxbzqnafe\nfrzqjiuktbsxmahdepylg\n\nzricqdofygvtbsjmeu\nvudjctzynegboiafqmrsx\nrsbefoytcqgiuvzdjm\nzucobitsgyjrfqemvd\n\ny\nyc\ntg\nlavoqef\nby\n\nfevykin\nwxytrhqk\n\npxbclzknowyq\nlybwkpcoqxn\noknlpbxcyqw\n\nl\nf\ngixvd\n\nunogwsfavzkhi\nsiohufnkzgavw\nahitunswfvkzog\ngvhknzuaisfow\nukasozfihnwgv\n\nulhgwo\nghluo\nogulh\noughl\nlphuog\n\nnike\nbkn\n\ngefzwrdjsqx\nfegzsjwxrpqh\n\nlfknweboxyrpajmig\ngkpafnieojybrwl\niafesdyulrkpgnwbjo\n\nzjoiqtgpwxdach\niajdhqucpxtzgl\n\nyhav\nvnshac\nhcav\nhvw\ncyvh\n\nhwz\nwhz\n\ndhunracmzksvxopjgtbqi\nvqhpowubyzirdksmgca\n\nckrhefz\nrkvexdfzcbh\nheczkrf\n\nrbsldt\nqgr\n\na\nea\na\n\nwnadxkgehtpsv\ngwnexkavshpd\nbfkdpansvhewxg\nkvtwdnsahpxge\nxnhdpvekwgsa\n\nydajvctr\ndrcejtgin\n\nkw\ncbmj\nl\nt\nn\n\ngyzlnp\nzahsyu\nrek\n\nvjdmhsorqw\nwhdjoqvrms\nrhsjqdmov\nomdsqjrzhv\n\nrcxsgnluhtqey\nldejuqpykrtc\n\nrylcqxt\nwlgtzyrcf\nyrltc\nrclpyt\n\nfrke\nkfe\n\nnchvxtqarsejld\nrkhntaexcbqljod\nqhdepzrxljtifcan\n\nuyfshgxzbqvrdwintjlmec\noyrvdwtgeczsfbmluqih\nkabdlqytwgfrhmuevczpsi\n\nguwmkrfyex\nfxekmrygwu\nwfgremukiyx\naywegkrmxufl\nwukygimrxfe\n\nm\nm\nm\nm\nm\n\nhbgnkqe\nkhgn\n\nhngypzmd\noixyanpdg\n\nqbdklpvhjaeif\nkzaiglyjfpmeurn\n\nynsm\nsmjn\nnsyum\n\nmpcztqkydxifv\nzdqfvxtmpcyk\nzkcmxfpqvydt\nyopktfnqrmvxdczw\nmdckxypvztqf\n\nva\nbvhg\n\nfe\nef\n\nn\nhpmqn\nn\ndn\n\nnjxazhtevsmlir\ntxmsijvaezwn\ntezacmwsvinxj\n\ngvzpbmeijyhaukflcrdqw\nsivlhgumyzkdrjfeoxqtc\n\nouq\nh\n\ncsxewy\nkxoscmw\nucnvwsxg\nhfocysxmiwe\nwcsmx\n\nretcxugsdwjnykm\nsfhudnxoqwjktyzarc\nrklvinxudpsbywtjc\n\ncwfizpyguatbodsqemxrjknlv\nujikxwsmntcloyqgaebrzfdvp\njreyubofkpdnzsimxwvgaqtlc\nnuewfvmlidsatzqbkcjgorpyx\n\nycqolubpktxwshegafvm\ndjnlhafsreuzgxkb\n\nodasxjtqcepgrzl\njsoelxpqgtczam\nqiajrhesdzoxfplcgt\n\nvnthkurzf\nbnfpqutvekra\n\ngujxqsnitohp\ntchxqjgoiu\n\nhgparlm\nmjxghlqzp\nfmlpahcg\n\ndeptkcyasiwgfonv\nptqufxjhcyglrzdov\n\nawnxeshvrbcjm\nxreswnhbcmvja\naxvwnsejrmbhc\nxajcmrnevhwbs\nsjxhcbearmwnv\n\nwoystmzcbgrljqhxdiukn\nmzhlbgcwjusnortdqky\ntunrjlzmqosygbwhkcd\n\nagh\nahg\nagh\nhga\nhag\n\ncmzkthbquilgwypreno\ntsmezpqlwkhrcginuo\ngmniotwlpzyqceukrh\nwztuikrglhqocnpme\nekqchwogpliumrtzn\n\njqadntioypevlwcksmb\nhymnfzcvtdaxsekrqijo\ndvqmgiacknyoesjt\n\ncdnbkfzev\nbfvdwcezk\nkzeblcdvf\nvfdkneczb\nfdeovjczystkib\n\nrzc\npma\nzwvx\nzyrlt\n\nlmwvudafhnczxibsgpjkreoq\ndurlgqhmvpxofsiejwcbkzan\nmieraklxftswzjbuocndvpqghy\n\nqlaxkbf\nrfhyxtbkseaq\nbxkqaf\nfkxbaqn\n\nlpntzrufvskoqciaxhedw\narsztnpofkxcqudilhewv\nsrvlzcujywkenimafhtoqxp\n\nsnxwjqapfo\nnwsfqxpajo\nnpfqjowaxs\nopjfxanwqs\nsjaonwxqpf\n\ncswjquxv\nuyecrkg\nufjcl\n\nqjvzl\njvqzl\nlzjqv\nqlvjz\n\nh\nh\n\nmprvotcsgadybjfkqehz\nbjsordtucqlgkhfzvepy\nfsoqijpvhgkczybrted\nyzsgkfhvcbjpeqtrdo\ncjzdvkprbheysmofgqt\n\njzontimefb\nldorvefxuatpj\n\ni\nxi\n\nzhtkdvl\npchznv\njmryxuwgazvfh\nlkdevczh\n\nsubt\nutsb\nfsuobt\njutsb\nutbjs\n\nn\nn\nn\ndnk\n\nqkrfv\nfqgvkseut\nqvrfk\n\nw\nx\nn\nn\n\nmkpoyfrngtwdcjlv\nyprcuimjsz\nrcyjzxphm\npjecrmyx\nipyramcqj\n\npuwnzsohkv\nnsohwkuzvp\nupnhokswvzx\n\nrmvjwzhx\nkpxhqevglom\nmzxfhbv\nmhwjitfrvnx\nmcusxhvwj\n\nvipkgth\noskhetgp\nzlqhnbdjwgurxapc\n\nvn\nvna\ngwvdn\n\nrugcbipvzow\nuogrzcvpbwi\n\njwxuc\nkrngvmypl\njwxzi\nqashtbedfco\n\nbzfyl\nyzflb\nfylbz\nlyfzb\nylfbz\n\nuhkvb\nkjhulb\nvbkhu\n\nandlzobvguqsk\nnkgvqlzbu\nklbiezughvmxnrt\nbunkzgljvf\nyvkgjpwzubln\n\nt\nt\n\nbdrjpavtiqlhxuw\npjmzbxidrtulcfw\n\nwqylp\nmrhgfxsjcaltonedv\nywbkul\nikl\n\nhxpivszmbaodecnlurq\ncedlpnibqmwxaghrszou\nhunbrdzpsxleaitmqyco\n\npymewobv\nveazgoy\nyvoxle\nyoufveix\nsyegdvo\n\nogceirlsaqjtmvzdx\nrtsaijxocelmzgdvq\ndvrqjxizmgscteoal\n\njeupkmhcydwaz\ndaykzechjpwmu\numkaejhwydpzc\naywkjphdzeucm\nypdchmujekazw\n\nsuzacvgjnoi\nevgsufjaitn\nrqeanjskxbvfgiwu\ndknubsaxgvji\n\nojxfyetcpdbglmwqunrsi\nfjletcbrdsnviogpxwuq\njcgprswxiaefdqnotlub\nzfgjewrpldsioxcqntub\nnxcgewpqolibrktujsfd\n\nvwh\nhjvw\nhvjw\nhvwr\nvhw\n\nmd\nm\nm\nm\n\nxkpu\nizfmrosjbd\neywqt\nxgak\nhgn\n\nlayhskgxrpfnwqmdj\nmlsxywoakrectnzgqdjf\nfbsxnmuikqwrljgv\n\nrhcn\nlon\ndln\npban\nnhd\n\nuxwhl\nhx\n\naesduycrgfmhjblnkzt\njktlhwqioepzgcbnmda\n\ntbhfongxiudcrv\nrqoyfnuxabjekl\n\najd\nwjdmak\njda\njad\n\nghimtjly\nhjtgilm\nghixmjtpal\njtmhilg\nimhgtjluo\n\newpfam\nepmwa\nepwma\newamp\n\ncslywuzkdg\njfluyxgbsma\nugysbl\nytlqgaus\nhsufgloxyr\n\neigjpobrlxnasvhquwy\nnirbjslgwyxuoaqevhp\nfpnsuxbleoajwyhgirvq\nayinxhubgvweprqljso\n\nandu\nsguand\n\nembqxktgpduyjia\nqtjagiydempukxb\naxswpjdgqbumyteik\nkgaexydbupqtjmi\nuqjbixkdptgmeya\n\nuxzwnlgyareost\nnesygtowzuralx\nlnguxsaoyzwtre\n\nthfobmluspeiwxygv\nibtfgsyouvxdpelh\ntxqerhuolbpsgfyvi\noehxfsmbiuvpyltg\npfoiuhlebvyxwdgst\n\ne\nke\ne\ne\n\nzhxyc\nhczxy\nohzycx\n\nsylzvbx\nsxzvlyb\nvltysxbz\nylbxzsvf\n\nzxkt\nxztk\n\nmnctogxvwkseh\nowrsadeqmhtykcg\nmatkscwo\nmcwpzbofs\n\nwvpybgulfrhnixjka\nrgawyujfcsveki\n\nhbmljqxrtza\nxmutqzahl\nzaqlmhxtu\nhziqlatxumc\n\nsjwq\nqjws\nwqjs\njqsw\n\nithgcoaed\nqtgsdohec\n\npuidogmhysnk\npgszdunhyiomk\ngmyivhnksqodpt\n\nionrt\nyhvsiud\n\nxtzrljypsknh\njkhztpylxnrs\nyxlkrshtpnjz\n\nveyflgkws\njwukvfeshmr\nevfwksdz\nfekvsw\nvkfsew\n\nqbercltdyiwzpfghujxa\nbvzlratfchxyijqewpdgu\nhfrtqbiayzdxpwujlcge\nejhbpuwytgixrdzaflqc\nphrjagczeiyxwdufltbq\n\nchxzbkemyjgqvltsardoi\nosykewcidjtuvzpbqhg\nibqozcsvygmkedfjhtn\n\nczgih\nzcg\n\ndpulzxtweoafsvnrykqg\nzoasklutxwnqevyfgrd\nvnrequfolxgtzsdawyk\nynurtkjfogvdqzlewsax\nkuydfznpatgvrelxoqws\n\nfmpeunzs\nsumpfzn\nfzpmnus\n\nsadewmz\nsldnwe\nwjduetyxsh\n\nno\nou\noua\nybwdoe\n\netjdmfhkvupsgob\nzjvatuxrhomingds\n\nwcrpzale\nctyzwdsulbvmexo\nikecwnzlg\nngjwczlae\nzlqhwgecj\n\np\np\np\nv\n\nx\ni\np\nx\nbgckq\n\nhuty\nyatu\ncytrqju\nwtyu\n\nk\nk\ns\n\nti\nut\nut\n\nltyxj\nvaicrwnzb\nyegjqp\nmjogk\n\nifyupadt\nidutaypf\n\ncivyufabow\noafw\neawtof\n\ntdxrcuvqmaoblhsjfynpwigkze\nhqfymskzljrtexwugbnacpiov\nnymlpweztcgrhjqfuiasbkxvo\nqxcponmlbwtvazuykfsegjrih\nvuaoelhfcyztjpxingmbkqsrw\n\nzqtkcomfdyrs\nqokdtmzyawfrlc\nqdmzejfctykor\n\nqgkmhvx\nvnqmkxlh\nkqvhxmre\n\naklnbydq\ndqynjokaebzlu\nkblqrdany\n\nznaepc\nuthvilcm\ncpbda\n\ncep\nwgecdbpz\npce\npce\n\nqgtaelxzvnfr\nvwlquxfbmhgdjzir\nfqvryplogztx\nkrfvglqszx\n\nxebsp\nvohgfurnmsa\ndqws\nysl\neqyps\n\nfxnlgkjizbsupyt\naixlkfuwezbgcpsnh\n\nfliogmexzuqc\nygxqvoeklitmfu\niofxzueqmgl\nqouifehxalmg\noefiuqjgdmplx\n\ncjqnrvu\ncquvrn\nvqnur\nqvrnu\nqwsvruxnmf\n\nesxbjiwnya\nibwnjsxyae\nabienjwys\nijwaybnsep\nybeiasjnw\n\nf\nf\nf\nf\nj\n\ndwfgkqohamebnzly\nvhyokaeqpufjdlb\nayhlqfbnoedkg\n\ng\nijur\nad\n\noxpwmzunkjved\ndgwxejtpzn\nexnrwizdpljhfy\nekzxwdjnpt\n\njghbztdkypsovc\narefyzdnlhwpoivbsqj\n\ncwvpyqnhjmsblikorx\nywjmvfxnbqoitdls\ngyuloqbznavmijsxw\n\ntv\nvt\nvt\n\ncxvwzdbpsqnhoa\nthoqpsvmaxcbkzlin\nanecpvqohsxzb\nxscpvobnaqhz\n\naxnrzgyvepoif\nzovgfipynhr\ngrodvzhinfpy\nrnipgfojyhvz\n\npbmhlxwqfezrscdtykn\ncfmbkwtnlryzqehxpsd\nqrbylwtdnsckzefxhmp\n\nzkqw\nwzkq\njqwxzk\n\nvrdnmyfspbzlxw\nizepalkytdnfcxjwhg\nnxuwdfqzlyp\n\nbc\ncb\n\nbf\nfb\nbfh\nefbq\n\namw\nmpa\nmaw\n\nbqwtvl\nvlzwtq\nytlqv\nzvlqtb\ntlqxvc\n\nlbhxpnkiurmwates\nfuwrqbeztjmlpsnxaik\n\njpwm\nzwljp\njwmp\n\nzep\ncep\npe\n\nmzx\nzmx\nxzbck\n\ndlmvbnupathgjsf\nblknfsvtjpgmhdu\npnufdgmhsqtbljv\nijeoufmnchvysrlwzpgtdb\nxvpudhgsjmlnbtkf\n\ncnyuhkmbswzilxovjp\nybjtdewvsrfcznalqhgiku\n\nbi\nrzla\nj\n\ngraezckvnqx\nagwzkcqnxre\ngrzxeckaqn\nghercxazknq\nrzqakdgexcns\n\nsfe\nb\nf\nxpjtuand\nboies\n\nkgjfzqlwic\nrkcdstgp\n\nfgsndtox\nzodnyxlgts\notxdsgn\nnxtfgodis\n\nzwrtohqdey\nteqwry\npvytwegf\nltioweyrc\nmyeaxntuw\n\nbw\nbw\nbw\nbw\nfbw\n\no\ngh\n\nowadmhy\nadmhoyw\nwmohyda\n\nnywib\nceulqpzh\n\nzs\nsz\nzs\nzsko\nszr\n\nizaqf\nuijrf\ninfgq\n\nw\nqw\nm\nbzr\no\n\nemavls\nhbxwektuqjo\n\nqrhspwbulzkaxdm\nauwbhyxlkdvq\n\nturdsw\nutxrwsd\nrtundsw\nusdtrjwo\nutdowrs\n\ngjro\ngojm\n\nxhnilqdp\nienxaovqldkhg\n\nrgjonh\nnvokcjqrt\nargnjo\n\njmgchqb\njivdabluqf\n\nylmicxtahwqfvukneopgzsbrdj\nhbzpeaqvlxgotsjkwmfndyiruc\n\np\nrop\n\ndelgcpurwxniqohkvyas\ngurxclnvdwbikoqezs\nrnxewiqvgktmosfjd\n\ntigwskmhvupobfnydxcre\nqwmdoycrhvsjptzxngbikue\nyvmetfcbahuklxpdgowrisn\n\nwsy\nwys\nsyjw\nwys\nyws\n\nsrwpt\nwtsrp\n\nlhafkqwscv\naklhcvrsqfw\nvfsqckalwh\nhlnqskcfvwa\nklfwvzsdpacmhq\n\nehbzglfvtdxpkicy\ndl\njnmdl\nwdsl\n\nrew\nrek\nehi\nilehwkm\naxe\n\nbl\nhzlgey\n\niboqgtdxprunz\nuonzipxrgqbtd\n\no\no\n\nbldk\nbkpl\nfklbc\n\nynmuedqwhoktxprcavz\nfshlwuznoymekqtprdv\n\nhjtwrzo\nrowhztj\nwuxrojhzt\nozjhrtw\nhotzwjr\n\nsenxaq\nbaen\najmne\ngaielnd\nhtfnpkuvwoae\n\njoklzmcuyg\nuyzrifcmlkgsj\nkyoumjcagblz\nuytcgqklzjm\n\nujvi\nijuv\nepmijuv\nviju\n\ntahxdeq\ndazexot\nbaelxdq\npwexdgvyiukjcaf\nedrnamzx\n\nzxqslwyh\nshgyqlwxaz\n\nxbs\nxbs\nbsx\n\nkwlhvxy\nkqwvlyxh\nklvxwyqh\nhxlkwvyq\nkylwpvhxd\n\nkoznivas\nbasiozvkn\novzkluniash\nksnxcavioz\n\ng\ng\ng\ng\nshin\n\ne\nqtvo\nac\nksw\nae\n\npay\nnau\na\n\nczkmwrvefultigxjhdqaopsnby\nflqrbdxungowzkmjsyepvhitca\n\nymw\nvurft\n\nwqpgys\nywsq\nqswy\nqsyew\nywsq\n\nndmo\nfdoznkmw\nhmuzndo\nmtqdrnyo\nuwfomnd\n\npktnzsqhyvmaejclwuor\njwznystlkmqcraeovhup\nvuwmteknjqohylazsrcp\n\nk\nk\nk\nokxe\n\nfjilbxs\nib\nbi\niqb\nibeq\n\ngjlyop\nopglehyztj\njpclgymno\ndopglymwj\ngojplrbcy\n\nnuygowpxetsahrv\njgtpyhruwonexq\nrlepnuikhgybxwot\nsvnygeuroxhzptqw\n\nwkies\neisqwk\nkisew\neiwks\ngxbkwsiep\n\noj\njoe\noj\njo\noj\n\ngtzunomec\ncezutnko\ntunzeco\ncuoftneazk\n\nvpifjqnbcuaelxzgdwos\ngfsyuwzclexopjvimqabd\n\nnpaxeizolfrygctvw\nrgtpxwicvafozenl\n\ne\ne\np\nt\ne\n\nohiaqmdktxnbpwlc\niqcopmavhwxbgnl\nbhqaoiwxlpmcnzy\noxhwifeapuncblrmq\n\nwghbsijofevcu\nqtlmkday\nxlrznmp\n\nzbrjh\nrzbjh\nvebhzr\nklrzhb\nrjbhznl\n\nkcgzmvfrxebiautyohdwq\nthdkgwzymrafbxecqiovus\nrgtwzvocydiafmkqubehx\n\ni\nry\nn\nxgscp\n\nkzjngd\nrdmwgnujzok\n\ndjpivm\nmdipjv\nmlvdjip\n\nilbdjmvfhyzxcqwuspn\nlichmuxnzpqsyvwbfj\numnvlbiwqsfchxpzyj\nuylzhpvfqbscijxmwn\nclwjnihuyzpmqbxsfv\n\no\no\nfo\npon\n\naowpk\nzg\ndt\nuc\nu\n\nymhiouqp\nlkyoqi\nywtsvqio\nlnmyoiq\n\nydbhigntrexvkua\nurlaigkqnydwxhb\n\nnfro\nz\njz\n\nojsag\ngajso\ngjsao\njhsog\n\nt\nt\ny\nh\n\njieqmryxv\nxqvimey\numyqveix\nvtedmnxliqyf\n\ntmd\ntdm\ndtm\nmkdt\nhmdt\n\npx\ngwruq\npz\n\ntejofhqklimp\nthojpkfgelwmrq\n\ntseirdkyqvcghwju\ntjhycvgilezdws\n\nroqbndl\nrdql\nqlrd\nlqremd\n\nqvgunystzpckrwifmxdolajehb\nbgtixcwloydzqjskvnfmpeurah\n\nsoviern\nrlakxngecptvsz\nnvdsre\n\ngzkoiysxl\nvjrlmtpbsceozhauwx\nkfnqdzolsx\n\nkwzaqnipgxfhoy\nhanwlofgqxpzk\nxqngazkwphof\npqwkfghaoxzn\nqwnfgpakxhzo\n\nzhurktfoqmlbnx\nmhlxorzbntufqk\nqbzklhnurmotfx\n\ngezmci\noecmg\n\npcyteovnsz\ndptlfuzh\n\nroxjhkng\nxonksrad\nrxnikos\n\nvbgmsrecxpj\nsrcjxmbgep\nrbgsxcepjkmq\npjgcmzbsrxe\n\ngkvwndflryjshmbqxtpizuocea\nfwndvekqtzployghijsmruabx\n\ndcxtogbifek\nifkdgoxbc\n\nsrmqlnhbwv\nliwsqzvtn\nwgeoqvpfs\nwkyqvsacd\n\nyswarofhdmqclxkgut\ndaxhzkgumjysrlwq\nqfamswzyiglxdruhk\nvsnwxadlhrbgqmuyk\n\nrxwzkmd\nkwzx\nqawokzlxe\nxmdnfkwz\n\nexo\nxvqod\ncv\npnrkmywh\nuztea\n\nma\nma\nqamfr\nam\n\nnksp\nkvpn\npkn\nnkvp\nnkp\n\npwlvdsagy\nislyawu\n\nsgbnwulekhpmy\nmjgqeyshpbwuln\nyubghpanecmszwlv\neuwohbysqngptlmx\n\ngs\ne\nkas\na\nmd\n\ni\nx\nbl\n\nvishqyrzgmpbeuldj\ngwcpvnskbftudyorj\n\nueswlatkopc\nwbeosclpktau\nlcpvaswokuet\nltkupsmeawoc\n\niwtvopbgyc\nwidjykopv\nivowyp\niwyvhop\n\nbfnwdumyozhpxre\nzhweumdnpbofy\ndcsobyuhfntpmzwe\n\nzrlaspbhty\noyhrftzbslap\nysztbhlapr\ntszhpbayrl\n\nwbgxh\ngnhwxcb\nwxbhg\ngxhwb\ngxbwh\n\nngribvdawujskcmfx\nrvskbgiwjxuca\nwiyvgcsbjxkrua\n\nifstrq\nfk\n\nb\nb\nb\nu\n\nhpqy\nwjplyq\n\nzwkfgbsmedluyot\nfdtrhsgeumk\nvexgtudkshfim\neutigskmdrf\n\nimljkdnzpx\njqwknpxlhmzd\npmdyxgnjklz\nrxbjmlnkzdpg\nulxbmpdnzykj\n\nvetubnwdy\nbnwatdvyou\nzfwgvtdbnki\ndlvewatnb\n\nuj\notuj\nuj\n\nifstpgrbcnywaxmkdzoqvh\nqkbfhovrginxapzywdct\nvyofbwcdginrkqtazhxp\n\nmvnaokugdshybwtr\nntvsywuadrkmohgb\n\nfauo\npnofxadk\nsfoa\nsofa\n\nakecpnjdwrztvlfbuhsiq\njehrndzisqcauwlftkbpv\nuawiskrjentfbcqlpdvhz\ncrtpjbdalsviwfnhqezuk\nncawkfdsqtrhpjzielvub\n\notazsfhc\nltkacysow\npvtomna\ntacok\n\nmx\nx\nx\nx\nx\n\nhmoy\nzmyhjuo\nypmxohn\nhoxym\n\ndm\nmd\ndm\nmd\n\nuqvbhfdomlwtkxez\nszaqwmlhytgvxkr\nwmpzhxqktlv\n\nbtkpdjinsrmogfywzhlvecau\nidylbvnopjsgrkfheuczawtm\ntygvsizrwjneplkohcmafudb\nwtvprskenjchmiyfuzglodba\njwdafzcemrbsunotyglpihkv\n\ne\nouxg\nei\nshp\n\nul\nul\nulrspe\nlouy\nuynlvo\n\nyibgqkf\nuvcwx\nmvxdohjlw\n\nq\nz\nz\n\norxgfiqznujyplsbadv\ngtzieoxspqrvndjbylfu\n\nhmlqcujrysbgoentdp\ndyjmrbtpuhgslncw\nrmyfuhdgclnpsktjb\nptucnyhsmlwrbgjd\nwrhnldscjeyupmtgb\n\nsowieczubgx\nfirsgewzpbo\n\ntxeo\nexot\noext\noxte\notxe\n\nontlbzyekruhpscwqvaxmdj\nahrtijxdepnokymcsgwuf\n\nftsraxmwogvnkdbzqiyhju\nylsdhonjzrfwmqukc\n\nleiupzardbfsv\ndzuwlesifrbp\nldiupzersfb\nfupwslrzbedi\n\njtdp\ndajg\n\njpglzoriafexks\ngpaozketlcixs\n\nbutisvecnfplqmygworax\njrhpbwztcveifamlyqxdung\n\nr\nr\nr\nzr\n\neyniaztvgdrl\ndalgonxbiecywthzvr\ndtzrgenvliya\n\nakzferolcmstgby\nkmcagsbteyrlfzo\naoktgslmcrzbfye\n\njqigpeydwl\nmkeaxqcudzgvfhb\n\nayhgbfzerjxd\nrnzfaxy\nwyzaxnrf\nycazxfrw\nayzxrf\n\njgmkwtnizxrcbvfqhyeal\nmwatrngvlezckqfiybhjx\nvmrwyqnigzhtjfckxaeb\nwkehnqrtcjigzxavbfym\nvrczmohgtfbnaejxqiwyk\n\nc\nc\nc\nc\n\nidx\nid\nid\n\nzaipnjbsxkg\nxevnfipkjgb\nujxldqcnbhi\n\nhco\nco\n\nztlrica\nktneixcrs\n\nhlutcdsgoj\nmwlypnzbqafvxkire\n\nlznhjwgsiv\nwricunaxj\n\nfdqgyzopwlen\nrkvt\n\nvy\ngy\n\nihbpfsx\npshixfb\nsifxhpb\n\nbegmqirvflkxuyanp\ndmpvhfbnaxsuloqitjy\n\nuwamykhsnbfzxielpdo\ncxzswhvtabupmqjlekond\n\ngisqpjrubx\nrjbiuqxspg\ngqpirxbsju\n\nu\nu\nv\nu\n\ngnjqsoha\nqgandhlyrs\nsnhqvlrabg\n\nvo\nvo\nov\nvo\n\niudvwxpmtac\nowlyxsangim\nhbdrxmwaei\nwjimax\n\nxmubte\nyuogxa\n\nnwkurtxjcpqozmhgsvbe\nchrmvakuyxtowqpgzbej\n\nmanbesvzpyt\ndgtwazpqjmbnr\nitfkoupbhlcnax\n\nomhinsxf\nlnmdoix\neimgrno\nhyomidn\nnmjodi\n\nqmpn\nripmn\n\nwfm\nwmf\nmwf\nmfw\nfwm\n\nuaoxphg\nphoxb\n\nbtfprm\nztmrf\nmrft\nramft\ntmrezfa\n\nuaznory\nzyaiourn\nnouryaz\ncoszugmanyr\nlqazryonu\n\nvqlswifmcg\nwzuclnxsvt\n\neh\neh\nhe\n\nsiuhfpb\niuhfs\n\nyfhciqlnwpgemoxktas\nticjauwfsygepqnhx\n\nndmhwtub\nzbagktxiulnwh\n\ntxdikm\nboldxtiqmf\ndxtimj\n\nwvr\nvwrb\nwrv\n\nutyjachpfordvw\nbenvkudcfta\nvduqiftcgsa\nfcuatdxv\n\ndoivj\njiv\nvjkpyi\njvi\ndijv\n\nmhyn\nmxngywh\nyjhmn\ndmynhulkacb\n\nhpidlbezkwqtr\ndgtaflrnyscm\n\nosqeajcvduwhzrtkl\nzcaevujrqsdolgwkyt\nuokqnrdjaecvwtlzs\n\novsbxzgaju\nvliydjht\ndvjt\n\nstlxuabmcwqkodevrhf\najskvtpmlicqewbhuzfd\n\ng\ncg\nezfo\n\nzqfmuxlnhkgdpvwrtjio\nrkjqvomtguhpiwfzxnld\nzfgxrclnimokhvpjdutwq\ntgkxfqrnhdzowpvijlmu\n\nni\nqn\nnq\n\nsn\nqn\nfdn\nqn\nhson\n\ntplicyhxqfujbkzv\nqfbzvwkuycsa\nvzqnbfcokyuda\n\napoy\nplfxotkv\niphsqjorged\n\nravyhbsfelgcmzponqwikj\nbitfjzwakhmvxngsoepcyrlq\ncevpwyrnlobjsfziagkhmq\nmswnezcpklfrjqgiyovabdh\ncijelkwpbnhrsmzofygavq\n\nsqvnuedcytaxohplzf\ncekhbgwadpmyofslxq\n\ngclfnxakjzsw\nwzjcnsgka\nciwzsganjk\naspicokjgnwz\n\nqrabg\najbgmw\nyabg\nvgsrba\nhcgtbya\n\nxarbuvi\nivaku\nkiuav\nvzgxiah\nflsivaj\n\nckodrthljgyfwm\nmgytohfxnrdkjbvlwc\ncfdwmjoltkshrgy\nyhwmrldfucogkjt\nfmctpgwydhkajlro\n\nqvibocelnsdyzfkjhpuxmtrg\nzgdksnoypqebifltcrjvuxmh\ngiocmuefxsprhdjkzntvqlyb\n\nxkcrlwomygs\ngrluckhsanomxwf\nsriokwlmcyxg\nkxgirswtcvlom\n\nbudr\nbrdu\ndibur\nurbd\n\no\no\n\np\np\np\np\n\nwnydf\nwrptghizjqk\n\nwnbdmltxcq\ndfcwl\n\nksaveflzdxqocbgyjp\nbcxavldgysqozpkjfe\nozpvselaqgbdycjxfk\nclpzdoebvqjgaskxfy\nqykodlgvzjaxspfceb\n\nnrmdjstqozklxvcyag\nejzwbu\n\nkfgijmd\nzmgjdikf\njgimfdk\nijfgkmdz\nsmbrfkxdwgeij\n\nyhtuxnfcq\ntcyufhnxq\nhfuxytcqn\nnqtufyxch\n\nrlhzknoiuycefpmvxqbg\nnbvgfexmqikpyhruo\nhqkgnvyieomubfxpr\n\nbjyadnftcsxqk\nlpfbvzcsumerho\nwctsbf\n\niyamec\nmyeibctka\negyicam\n\nac\npvaqdb\na\nau\n\ngiltsum\nixyhncbjqped\n\ncinzuvkystgfodr\nrksphwcfxdgey\nxrdjkygcsfq\nbfmdecpysrkg\ngcrdyslfk\n\nayqpgucwedftoxjk\neoagwdtkfqlypjuc\n\nktysxp\nsptx\nqpxst\nptsqx\n\nuvclismeajkpbzgqwn\naicbqfzvlnuegpm\nglecvmpzrnioudaq\nkanmveflzpcgyuqi\n\nvklag\nglv\nlvg\nlgv\nvgl\n\ntyuh\nhut\nthu\nhtu\nthu\n\neyipwtfuhxzalmdgrs\nwhfcvbquxgepn\n\ntg\nge\ng\n\nvk\nuatvn\nmzv\n\njhfmpux\nmhjquxkp\n\ngzyxjwfb\ngrzfxmwybj\ncywfjpxztgb\n\nudrye\neqdyr\nyerd\neryd\n\nkwdoynribhpsqmlgvuje\ngunbjywvmheirdqpok\ndnqeivoptrkwuyjhmg\n\nczvmpr\nsxpum\n\nqlktsn\ntkclq\nsbqlkwt\nluetjiqpk\nlcvtqsk\n\nrotvsfwelbnj\nfwbqmaolesn\nqbfwegzislpnoc\nnzoelswfpab\n\nwsecbml\nsclabmwe\nezpsidclwtmbgvr\nmcelawsb\n\nngz\nzg\ngz\nzg\ngz\n\nxqjwnaiyb\njayxibqngw\nqinjwxbay\nnbaiwyxqj\njniaxqwyb\n\nhktywl\nhtwlyk\nkytwlh\n\nymbeahldgz\npjaoszx\n\nb\nb\nbz\nkb\n\ngvdcqp\nqpvyrcdlk\n\nnij\njfiub\njtieyxl\nmnij\nimvju\n\nqh\nhq\nhq\nhq\n\ntez\nzet\netz\netz\n\nwz\nwz\n\nxc\njvxc\nxpzc\nrgumxc\nxc\n\nnizsgkvylw\nngylivwzks\nylgsiznvkw\nilgyvsankzw\nilzywsnkgv\n\nemhpiwfyung\nqlzkob\nldjx\nxvat\n\nluzfaswdyj\njsdyuzlafw\nljdsafzuwy\nyusdjwzfal\ndsyjwuzafl\n\nuioafnlegsvjdxphr\nlnfrjdpehvsxguoa\nnajruefdlxogvhsp\n\ngumjphl\nmplchdjuw\nhmjrlup\njmpgulh\n\nq\nq\nq\nq\nq\n\nfeyimktsugrq\nqygsrtlpmfkeui\nsfkmrgqyitue\n\nxpklzsyodcnhrjq\nxcznojsdpqhrlky\n\nbtmsc\nmtscbv\ncsmtb\ntmbcsx\nmbxtsc\n\ndvrfumay\nymafr\nmrifya\nykrmaf\n\ndo\nd\nandk\ndcp\nd\n\nglhmjykfaznvrd\nbvmijshzga\nvmjuqazhgpx\nvoczhgamj\nwjhizgqavms\n\nvoilgtup\n\nvrphtmc\nbgfkjvad\n\nbxkfi\nkixbf\nxfkbi\nxfikb\nxfkbi\n\nlfixvpozghcauk\nplgixmzukcovh\nhyruilocxgkztqv\nuglxkaihcozv\n\navgptdmi\ngydpvt\ndptawvu\nrvtdopxlqs\n\nrsmglpt\ngpmnlthr\n\ntqmeukoia\nkamiout\nmqwauekov\nmacoryuk\nnujbskgapmlo\n\nndjrglykwoi\njrwkdnolygi\nownkidlryjg\n\nkwheact\ntxukwjcgbhar\nwhgotjk\nkzhtw\nlmvynhptdqkifw\n\nodkzwylprhvn\npwozvnydrh\nzdhnpryowv\n\ncrni\nqdnkiou\ngbwhyasjx\n\nbxitsamogcq\nerbxklyhvtczu\n\nswrfxdpjhly\npwdjkvfyxrshl\nsxehqrtwpdamnyjzolbui\ngpdryslhwxcj\n\nfhldcksrpyi\nqfejshrcat\nwsmrvcnogxh\n\nvwacyofjtilrxngp\notylvxpfwgcnjria\nxojfignyrtlpwvca\n\nqvz\nozm\n\nmsrdwqahutefvxy\nrjmyotiefuh\nltyrmenbzjuhf\nfelbyputmhr\n\nriyzo\nkzroyuwi\nyirozp\nyoirz\nroiyz\n\nrqjz\nvjrq\nqrj\nprqj\nzqjr\n\nvdx\nxvd\nxdvu\nvdx\n\nxeauhryviqg\nwpxkufzsjmctlnybd\n\nhbzwdlno\ntmrj\nnp\nlqfx\nkuygescvia\n\niqph\nihpq\npqhi\nihqp\nqpih\n\nlsfwxmpkgqzvhecoay\ngqfszwakhvymptcexol\ncpaxwlzkfqvhsgemyo\nlghfwvcmzxpokeysaq\n\ntgmpafqbuds\nhspdfabuqgctm\ntpcubdaqsvgm\nmxqbktspoaujd\n\nxktgfvyprhndme\nvntmyskfegprid\ndsvpfmnkygtre\nydmvpkfretng\n\nnpvgjzuo\nmwlackhs\n\ngyj\nmyk\n\nw\nw\nw\nk\nw\n\nsgrhv\nrixdgjluf\nrgs\nrsbg\n\nkmiqobutwplfryxgeajhnz\nylrtmpauodjnfvwgeixqz\nextlfwjsirnmgyuqaopz\n\nvdngfjbwypio\nsukyvfzpeqwthdxg\nfyvrndgbwp\nydwfvglp\n\nfhsi\nhsbif\n\nfihzecojaqm\njzchuomvwsqfr\njzchoqtfm\n\nkqafdzcgphvbos\nqbspzodfavhck\nadfozhquktlcibspv\nszhpfboagdcqkv\n\ntmeb\ntakbe\n\nymrhgdo\nypgzhmltd\nfdbymgshcx\nnghyzldm\n\nbxgm\ngmxb\nmxgb\ngxbm\nxbmvg\n\nfep\nlnp\ntrjim\ndauy\nfplk\n\nudhzexv\ndhmezvx\nqdxylbhvzw\nzveduxcht\n\nwgvhaokesjirly\nosrewigqfdyvzk\nkupsxrimowgbe\n\nskzvhanpljbogdyxtiquw\nxzgdwyjluhnbstopikaqv\npasixghzovnjylbwudqkt\n\nwj\nwj\nwkj\njw\nwj\n\nnsmyxfhc\nxcfymhsn\nhxscmnyf\ncfxsmnlyh\n\njpblgmiyunazcfd\ntabnyfmupclzgd\nesyvuphfgwbknodzcxlqa\n\nxkyqozefvgutmrw\nrmhzwgeutoypx\n\nrzaxcemljnvo\nkdwyqvohesitfb\n\nkfqrcezwn\nqrnwkzcf\nfrcnqwzk\nfrnckvhzwq\nkqzrcnfw\n\nfqux\nqxuyfod\nufxq\nqxfu\nqxuf\n\nztopdir\nritpozd\notrpizd\nidpotzr\n\njzhngmufw\nzguwhfj\n\nndxhmysbgcriqkewoztujva\ncmtwbudvysekqaxizrojng\nitncgkdyoaxswrqvmejzpbu\nqyvcdusgwbomejtxznkira\n\nnik\nyfi\ni\ni\n\nhpsdjo\nhobps\nohsp\nshpo\nkypshio\n\njbiyatwz\nzbtagnrc\nztnagb\nbatz\n\nfvkurj\nkfgjvru\njukfrv\nkvfujr"},"14c3":function(n,e,a){var s=a("c6b6"),t=a("9263");n.exports=function(n,e){var a=n.exec;if("function"===typeof a){var b=a.call(n,e);if("object"!==typeof b)throw TypeError("RegExp exec method returned something other than an Object or null");return b}if("RegExp"!==s(n))throw TypeError("RegExp#exec called on incompatible receiver");return t.call(n,e)}},"14da":function(n,e,a){"use strict";a.r(e),e["default"]="Time to improve the polymer.\n\nOne of the unit types is causing problems; it's preventing the polymer from collapsing as much as it should. Your goal is to figure out which unit type is causing the most problems, remove all instances of it (regardless of polarity), fully react the remaining polymer, and measure its length.\n\nFor example, again using the polymer `dabAcCaCBAcCcaDA` from above:\n\n- Removing all `A/a` units produces `dbcCCBcCcD`. Fully reacting this polymer produces `dbCBcD`, which has length 6.\n- Removing all `B/b` units produces `daAcCaCAcCcaDA`. Fully reacting this polymer produces `daCAcaDA`, which has length 8.\n- Removing all `C/c` units produces `dabAaBAaDA`. Fully reacting this polymer produces `daDA`, which has length 4.\n- Removing all `D/d` units produces `abAcCaCBAcCcaA`. Fully reacting this polymer produces `abCBAc`, which has length 6.\nIn this example, removing all `C`/`c` units was best, producing the answer **4**.\n\n**What is the length of the shortest polymer you can produce** by removing all units of exactly one type and fully reacting the result?"},"16c2":function(n,e,a){"use strict";a.r(e),e["default"]="Your plane lands with plenty of time to spare. The final leg of your journey is a ferry that goes directly to the tropical island where you can finally start your vacation. As you reach the waiting area to board the ferry, you realize you're so early, nobody else has even arrived yet!\n\nBy modeling the process people use to choose (or abandon) their seat in the waiting area, you're pretty sure you can predict the best place to sit. You make a quick map of the seat layout (your puzzle input).\n\nThe seat layout fits neatly on a grid. Each position is either floor (`.`), an empty seat (`L`), or an occupied seat (`#`). For example, the initial seat layout might look like this:\n\n```\nL.LL.LL.LL\nLLLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLLL\nL.LLLLLL.L\nL.LLLLL.LL\n```\n\nNow, you just need to model the people who will be arriving shortly. Fortunately, people are entirely predictable and always follow a simple set of rules. All decisions are based on the **number of occupied seats** adjacent to a given seat (one of the eight positions immediately up, down, left, right, or diagonal from the seat). The following rules are applied to every seat simultaneously:\n\n- If a seat is **empty** (`L`) and there are **no** occupied seats adjacent to it, the seat becomes occupied.\n- If a seat is **occupied** (`#`) and **four or more** seats adjacent to it are also occupied, the seat becomes **empty**.\n- Otherwise, the seat's state does not change.\n\nFloor (`.`) never changes; seats don't move, and nobody sits on the floor.\n\nAfter one round of these rules, every seat in the example layout becomes occupied:\n\n```\n#.##.##.##\n#######.##\n#.#.#..#..\n####.##.##\n#.##.##.##\n#.#####.##\n..#.#.....\n##########\n#.######.#\n#.#####.##\n```\n\nAfter a second round, the seats with four or more occupied adjacent seats become empty again:\n\n```\n#.LL.L#.##\n#LLLLLL.L#\nL.L.L..L..\n#LLL.LL.L#\n#.LL.LL.LL\n#.LLLL#.##\n..L.L.....\n#LLLLLLLL#\n#.LLLLLL.L\n#.#LLLL.##\n```\n\nThis process continues for three more rounds:\n\n```\n#.##.L#.##\n#L###LL.L#\nL.#.#..#..\n#L##.##.L#\n#.##.LL.LL\n#.###L#.##\n..#.#.....\n#L######L#\n#.LL###L.L\n#.#L###.##\n```\n\n```\n#.#L.L#.##\n#LLL#LL.L#\nL.L.L..#..\n#LLL.##.L#\n#.LL.LL.LL\n#.LL#L#.##\n..L.L.....\n#L#LLLL#L#\n#.LLLLLL.L\n#.#L#L#.##\n```\n\n```\n#.#L.L#.##\n#LLL#LL.L#\nL.#.L..#..\n#L##.##.L#\n#.#L.LL.LL\n#.#L#L#.##\n..L.L.....\n#L#L##L#L#\n#.LLLLLL.L\n#.#L#L#.##\n```\n\nAt this point, something interesting happens: the chaos stabilizes and further applications of these rules cause no seats to change state! Once people stop moving around, you count **`37`** occupied seats.\n\nSimulate your seating area by applying the seating rules repeatedly until no seats change state. **How many seats end up occupied?**"},"1e3e":function(n,e,a){"use strict";a.r(e),e["default"]="You realize that 20 generations aren't enough. After all, these plants will need to last another 1500 years to even reach your timeline, not to mention your future.\n\n**After fifty billion (`50000000000`) generations, what is the sum of the numbers of all pots which contain a plant?**"},"1e66":function(n,e,a){"use strict";a.r(e),e["default"]="It only takes a few hours of sailing the ocean on a raft for boredom to sink in. Fortunately, you brought a small deck of [space cards](https://adventofcode.com/2019/day/22)! You'd like to play a game of **Combat**, and there's even an opponent available: a small crab that climbed aboard your raft before you left.\n\nFortunately, it doesn't take long to teach the crab the rules.\n\nBefore the game starts, split the cards so each player has their own deck (your puzzle input). Then, the game consists of a series of **rounds**: both players draw their top card, and the player with the higher-valued card wins the round. The winner keeps both cards, placing them on the bottom of their own deck so that the winner's card is above the other card. If this causes a player to have all of the cards, they win, and the game ends.\n\nFor example, consider the following starting decks:\n\n```\nPlayer 1:\n9\n2\n6\n3\n1\n\nPlayer 2:\n5\n8\n4\n7\n10\n```\n\nThis arrangement means that player 1's deck contains 5 cards, with `9` on top and `1` on the bottom; player 2's deck also contains 5 cards, with `5` on top and `10` on the bottom.\n\nThe first round begins with both players drawing the top card of their decks: `9` and `5`. Player 1 has the higher card, so both cards move to the bottom of player 1's deck such that `9` is above `5`. In total, it takes 29 rounds before a player has all of the cards:\n\n```\n-- Round 1 --\nPlayer 1's deck: 9, 2, 6, 3, 1\nPlayer 2's deck: 5, 8, 4, 7, 10\nPlayer 1 plays: 9\nPlayer 2 plays: 5\nPlayer 1 wins the round!\n\n-- Round 2 --\nPlayer 1's deck: 2, 6, 3, 1, 9, 5\nPlayer 2's deck: 8, 4, 7, 10\nPlayer 1 plays: 2\nPlayer 2 plays: 8\nPlayer 2 wins the round!\n\n-- Round 3 --\nPlayer 1's deck: 6, 3, 1, 9, 5\nPlayer 2's deck: 4, 7, 10, 8, 2\nPlayer 1 plays: 6\nPlayer 2 plays: 4\nPlayer 1 wins the round!\n\n-- Round 4 --\nPlayer 1's deck: 3, 1, 9, 5, 6, 4\nPlayer 2's deck: 7, 10, 8, 2\nPlayer 1 plays: 3\nPlayer 2 plays: 7\nPlayer 2 wins the round!\n\n-- Round 5 --\nPlayer 1's deck: 1, 9, 5, 6, 4\nPlayer 2's deck: 10, 8, 2, 7, 3\nPlayer 1 plays: 1\nPlayer 2 plays: 10\nPlayer 2 wins the round!\n\n...several more rounds pass...\n\n-- Round 27 --\nPlayer 1's deck: 5, 4, 1\nPlayer 2's deck: 8, 9, 7, 3, 2, 10, 6\nPlayer 1 plays: 5\nPlayer 2 plays: 8\nPlayer 2 wins the round!\n\n-- Round 28 --\nPlayer 1's deck: 4, 1\nPlayer 2's deck: 9, 7, 3, 2, 10, 6, 8, 5\nPlayer 1 plays: 4\nPlayer 2 plays: 9\nPlayer 2 wins the round!\n\n-- Round 29 --\nPlayer 1's deck: 1\nPlayer 2's deck: 7, 3, 2, 10, 6, 8, 5, 9, 4\nPlayer 1 plays: 1\nPlayer 2 plays: 7\nPlayer 2 wins the round!\n\n\n== Post-game results ==\nPlayer 1's deck: \nPlayer 2's deck: 3, 2, 10, 6, 8, 5, 9, 4, 7, 1\n```\n\nOnce the game ends, you can calculate the winning player's **score**. The bottom card in their deck is worth the value of the card multiplied by 1, the second-from-the-bottom card is worth the value of the card multiplied by 2, and so on. With 10 cards, the top card is worth the value on the card multiplied by 10. In this example, the winning player's score is:\n\n```\n   3 * 10\n+  2 *  9\n+ 10 *  8\n+  6 *  7\n+  8 *  6\n+  5 *  5\n+  9 *  4\n+  4 *  3\n+  7 *  2\n+  1 *  1\n= 306\n```\n\nSo, once the game ends, the winning player's score is **`306`**.\n\nPlay the small crab in a game of Combat using the two decks you just dealt. **What is the winning player's score?**"},"203a":function(n,e,a){"use strict";a.r(e),e["default"]="The second check is slightly more complicated: you need to find the value of the root node (`A` in the example above).\n\nThe **value of a node** depends on whether it has child nodes.\n\nIf a node has **no child nodes**, its value is the sum of its metadata entries. So, the value of node `B` is `10+11+12=33`, and the value of node `D` is `99`.\n\nHowever, if a node **does have child nodes**, the metadata entries become indexes which refer to those child nodes. A metadata entry of `1` refers to the first child node, `2` to the second, `3` to the third, and so on. The value of this node is the sum of the values of the child nodes referenced by the metadata entries. If a referenced child node does not exist, that reference is skipped. A child node can be referenced multiple time and counts each time it is referenced. A metadata entry of `0` does not refer to any child node.\n\nFor example, again using the above nodes:\n\n- Node `C` has one metadata entry, `2`. Because node `C` has only one child node, `2` references a child node which does not exist, and so the value of node `C` is `0`.\n- Node `A` has three metadata entries: `1`, `1`, and `2`. The `1` references node `A`'s first child node, `B`, and the `2` references node `A`'s second child node, `C`. Because node `B` has a value of `33` and node `C` has a value of `0`, the value of node `A` is `33+33+0=`**`66`**.\n\nSo, in this example, the value of the root node is `66`.\n\n**What is the value of the root node?**"},2043:function(n,e,a){"use strict";a.r(e),e["default"]="                                                           /------------\\                                    /---------------------------------------\\\n                                              /------------+-----------\\|                                    |                                       |\n                                     /--------+------------+-----------++------------------\\              /--+----------------------\\                |\n                       /-------------+----\\   |            |           ||  /--------\\      |             /+--+-------\\              |                |\n             /---------+-------------+----+---+----------\\ |           ||/-+--------+--\\   |             ||  |       |        /-----+--------\\       |\n           /-+---------+-------------+----+---+----------+-+-----------+++-+------\\ |  |   |        /----++--+-------+--------+---\\ |        |       |\n           | |         |             |    |   |          | |     /-----+++-+------+-+--+---+-------\\|    ||  |       |        |   | |        |       |\n      /----+-+---------+-------------+----+---+----------+-+-----+---\\ ||| |      | |  |   |       ||    ||  |       |        |   | |        |       |\n      |    | |         |     /-------+----+---+-----\\    | |     |   | ||| |      | |/-+---+-------++----++--+-------+--------+---+-+--------+--\\    |\n      |    | |         |     |       |    |   |     |    | |     |   | ||| |      | || |   |       ||    ||  |       |        |   | |        |  |    |\n      |   /+-+---------+-----+-------+----+---+-----+----+-+-----+---+-+++-+-\\    | || |   |       ||    ||  |       |        |   | |        |  |    |\n      |   || |         |    /+-------+----+---+-----+----+-+-----+---+-+++-+-+----+\\|| |   |  /----++----++--+-\\     |        |   | |        |  |    |\n      |   || |         |    ||       |    |   |     |    | |     |   | ||| | |    ||||/+---+--+----++----++--+-+-----+--------+---+-+--------+--+---\\|\n      |   || |         |    ||       |    |   |     |    | |     |   | ||| | |    ||||||   |  |    ||    ||  | |     |        |   | |        |  |   ||\n      |   || |   /-----+----++-------+----+---+----\\|    |/+-----+---+-+++-+-+----++++++---+--+----++----++--+-+-----+--------+---+-+--------+\\ |   ||\n      |   || |/--+-----+----++-------+----+---+----++----+++-----+---+-+++-+-+----++++++---+--+----++----++--+-+---\\ |        |   | |        || |   ||\n      |   || ||  |     |    ||       |    |   |    ||    |||     |   | ||| | |/---++++++---+--+----++-\\  ||  | |   | |        |   | |        || |   ||\n      |   |\\-++--+-----+----++-------+----+---+----++----+++-----+---+-+++-+-++---/|||||   |  |    || |  \\+--+-+---+-/        |   | |        || |   ||\n   /--+---+--++--+----\\|    ||       |   /+---+----++----+++-----+---+-+++-+-++----+++++\\  |  |    || |   |  | |   |          |   | |        || |   ||\n   |  |   |  ||  |    ||    ||       |   ||   |    ||    |||     |   | ||| | ||    ||||||  |  |    || |   |  | | /-+----------+---+-+--------++-+--\\||\n   |  |   |  ||  |    ||    ||       |   ||   |    ||    |||     |   | ||| | ||   /++++++--+--+----++-+---+--+-+-+-+--------\\ |   | |        || |  |||\n   |  |   |  ||  |    ||    ||/------+---++---+----++----+++-----+---+-+++-+-++---+++++++--+--+----++-+---+--+-+-+-+--------+-+-\\ | |        || |  |||\n   |  |   |  ||  |    ||    |||      |   ||   |    ||    |||     |   | ||\\-+-++---+++++/|  |  |    || |   |  | | | |        | | | | |        || |  |||\n   |  |   |  ||  |    ||    |||      |   ||   |    ||    |||     |   | ||  | ||   ||||| |  |  |    |\\-+---+--+-+-+-+--------+-+-+-/ |        || |  v||\n   |  |   |  ||  \\----++----+++------+---++---+----/|    |||     |   | ||  | ||   ||||| |  |  |    |  |   |  | |/+-+--------+-+-+---+-----\\  || |  |||\n   |  |   |  ||       ||    |||      |   ||   |     |    |||     |   | ||  | |\\---+++++-+--+--+----+--/   \\--+-+++-+--------+-+-+---/     |  || |  |||\n   |  |   |  ||       ||    |||      |   ||   |     |    |||     |   | ||  | |    ||||| |  |  |    |         \\-+++-+--------+-+-+---------+--++-+--++/\n   |  |   |  ||       ||    |||      |   ||   |     |    ||\\-----+---+-+/  | |    ||||| |  |  |    |           ||| |        | | |         |  || |  || \n   |  |   |  ||       ||    |||      |   ||   |     |    ||      |   | |   | |    ||||| |  |  |    |           ||| |        | | |         |  || |  || \n   |  |   |  ||       ||    |||      |   ||   |     |    ||      |   | |   | |    ||||| |  |  \\----+-----------/|| |        | | |         |  || |  || \n   |  |   |  ||       ||    |\\+------+---++---+-----/    ||      |   | |   | |   /+++++-+--+-------+------------++-+--------+-+\\|         |  || |  || \n   |  |   |  ||      /++----+-+------+---++---+--\\       ||      |   | |   | |  /++++++-+--+-------+------------++\\|        | |||         |  || |  || \n   |  |/--+--++------+++----+-+------+---++---+--+-------++------+---+-+---+-+--+++++++-+--+-------+\\           ||||        | |||         |  || |  || \n   |  ||  |  ||      |||    | |      |   ||   |  | /-----++-----\\|   | |   | |  ||||||| |  |       ||           ||||        | \\++---------+--/| |  || \n   |  ||  |  ||      |||    | |    /-+---++---+--+-+-----++-\\   ||   | |   | |  ||||||| |  |       ||           ||||        |  ||         |   | |  || \n   |  ||  |  ||      |||    | |    | |   ||   |  | |     || | /-++---+-+---+-+--+++++++-+--+-------++-----------++++--------+--++---------+\\  | |  || \n   |  ||  |  ||      |||    \\-+----+-+---++---+--+-+-----++-+-+-++---+-+---+-+--+++/||| |  |       ||           ||||        |  ||         ||  | |  || \n   |  ||  | /++------+++------+----+-+---++---+--+-+-----++-+-+-++---+-+---+-+--+++-+++-+--+-------++-----------++++----\\   |  ||         ||  | |  || \n   |  ||  | |||      |||      |    | |   ||   |  | |     || | | ||   | |   \\-+--+++-/|| |  |       ||           ||||    |   |  ||         ||  | |  || \n   |  || /+-+++------+++----\\ | /--+-+---++---+\\/+-+-----++-+-+-++---+-+-----+--+++--++-+--+-------++-----------++++----+---+--++---------++--+\\|  || \n   |  || || |||      |||    | | |  | |  /++---++++-+-----++-+-+-++---+-+-----+--+++--++-+--+-------++---------\\ ||||    |   |  ||         ||  |||  || \n   |  || || |||      |||    | | |  | |  |||   |||v |     || | | ||   | |     |  |||  || |  |       ||         | ||||    |   |  ||         ||  |||  || \n   |  || || |||      |||   /+-+-+--+-+--+++---++++-+-----++-+-+-++---+-+-----+--+++--++-+--+-------++-----\\   | |\\++----+---+--++---------++--+++--/| \n   |  || || |||      |||   || | |  | | /+++---++++-+-----++-+-+-++---+-+-\\   |  |||  || |  |       ||     |   | | ||    |   |  || /-------++--+++-\\ | \n   |  || || |||      ||\\---++-+-+--+-+-+++/   |||| |     || | |/++---+-+-+---+--+++--++-+--+\\      ||     |   | | ||    |   |  || |       ||  ||| | | \n   |  || || |||      || /--++-+-+--+-+-+++-\\  |||| |     || | ||||   | | |   |  |||  || | /++------++-----+\\  | |/++----+---+--++-+-------++\\ ||| | | \n   |  || || |||/-----++-+\\ || | |  | | ||| |  |||| |     || | ||||   |/+-+---+--+++--++-+-+++------++-----++--+-++++----+---+--++-+----\\  ||| ||| | | \n   |  || || ||||     || || || | |  | | ||| |  |||| |     || | ||||   ||| |   |  ||\\--++-+-+++------++-----++--+-++++----+---/  || |    |  ||| ||| | | \n   |  || || |||| /---++-++-++-+-+--+-+-+++-+--++++-+-----++-+-++++-\\ ||| |   |  ||   |\\-+-+++------++-----++--+-++++----+------++-+----+--+++-+++-+-/ \n   |  || || |||| |   || || || | |  | | ||| |  |||| |     || | |||| | ||| |   |  || /-+--+-+++------++-----++-\\| ||||    |      || |    |  ||| ||| |   \n   |  || || ||||/+---++-++-++-+-+-\\| | |||/+--++++-+-----++-+-++++-+-+++-+---+--++-+-+\\ | |||      ||     || || ||||    |      || |    |  ||| ||| |   \n   |  || || ||||||   || || || | | || | |||||  |||| |    /++-+-++++-+-+++-+---+--++-+-++-+-+++------++-----++-++-++++-\\  |      || |    |  ||| ||| |   \n   |  || || ||||||   || || || | | || | ||||| /++++-+----+++-+-++++-+-+++-+---+--++-+-++-+-+++------++-----++-++-++++-+--+-----\\|| |    |  ||| ||| |   \n   |  || || ||||||   || || || | | || | ||||| ||||| |    ||| | |||\\-+-+++-+---+--++-+-++-+-+++------/|     || || |||| |  |     ||| |    |  ||| ||| |   \n   |  || || ||||||   || || || | | || | |||||/+++++-+--\\ ||| | |||  | ||| |   |  || | || | |||    /--+-----++-++-++++-+--+-----+++-+--\\ |  ||| ||| |   \n   |  || || ||||||   || || || \\-+-++-+-+++++++++++-+--+-+++-+-+++--+-+++-+---+--++-+-++-+-+++----+--+-----++-++-++++-+--+-----++/ |  | |  ||| ||| |   \n   |  || || ||||||   || || ||   | || | ||||||||||| |  | ||| | |||/-+-+++-+---+--++-+-++-+-+++----+--+-----++-++-++++-+--+-----++--+\\ | |  ||| ||| |   \n   |  || || ||||||   || ||/++---+-++-+-+++++++++++-+--+-+++-+-++++-+-+++-+---+--++-+-++\\| |||    |  |     || || \\+++-+--+-----++--++-+-+--/|| ||| |   \n   |  || || ||||||   \\+-+++++---+-++-+-++++++++++/ |  | ||| | |||| | ||| |   |  || | ||||/+++----+--+-----++-++--+++-+--+-----++\\ || | | /-++-+++-+-\\ \n   |  || || ||||||    | |||||/--+-++-+-++++++++++--+--+-+++-+-++++-+-+++-+--\\|  || | |||||||| /--+--+-----++-++--+++-+\\ |/----+++-++\\| | | || ||| | | \n   |  || || |||\\++----+-+/||||  | || | ||||||||||  |/-+-+++-+-++++-+-+++-+--++--++-+-++++++++-+--+--+-----++-++--+++-++-++----+++-++++-+-+\\|| ||| | | \n /-+--++-++-+++-++----+-+-++++--+-++-+-++++++++++--++-+-+++-+-++++-+-+++-+--++--++-+-++++++++-+--+\\ |     || ||  ||| || ||    ||| |||| | |||| ||| | | \n | |  || || ||| ||    | | ||||  | || | |||||||||\\--++-+-+++-+-++++-+-+++-+--++--++-+-++++++++-+--++-+-----++-++--+++-++-++----+++-++++-+-++++-+/| | | \n | |  || || ||| ||  /-+-+-++++--+-++-+-+++++++++---++-+-+++-+-++++-+-+++-+--++--++-+-++++++++-+--++-+-----++-++--+++-++-++\\   ||| |||| | |||| | | | | \n | |  || || ||| ||  | |/+-++++--+-++-+-+++++++++---++-+-+++-+-++++-+-+++-+--++--++-+-++++++++-+--++-+-\\   || ||  ||| || |||   ||| |||| | |||| | | | | \n | |  || || ||| ||  | ||| ||||  | || | |||||||||   || | ||| | |||| | |\\+-+--++--++-+-++++++++-+--++-+-+---++-++--+++-++-+++---+++-++++-/ |||| | | | | \n/+-+--++-++-+++-++\\ | ||| ||||  | || | |||||||||   || | ||| | |||| | | | |  ||  \\+-+-++++++++-+--++-+-+---++-++--+/| || |||   ||| ||||   |||| | | | | \n|| |  || || ||| ||| | ||| ||||  | || | |||||||||   || | ||| | |||| | | | |  ||   | | |||||||| |  || | |   ||/++--+-+-++-+++---+++-++++---++++\\| | | | \n|| |  || || ||| ||| | ||| ||||  | || | |||||||||   || | ||| | |||| | | | |  ||   | | |||||||| |  || |/+---+++++--+-+\\|| |||   ||| ||||   |||||| | | | \n|| |  \\+-++-+++-+++-+-+++-++++--+-++-+-+++++++++---++-+-+++-+-++++-+-/ | |  ||   | | |||||||| |  || |||   ||||v  | |||| |||   ||| ||||   |||||| | | | \n|| |   | || ||| ||| | ||| ||||  | || | ||\\++++++---++-+-+++-+-++++-+---+-+--++---+-+-+++/|||| |  || |||   |||||  | |||| |||   ||| ||||   |||||| | | | \n|| |   | || ||| ||| | ||| ||||  | ||/+-++-++++++---++-+-+++-+-++++-+---+-+--++--\\| | ||| |||| |  || |||   |||||  | |||| |||   ||| ||||   |||||| | | | \n|| |   | ||/+++-+++-+-+++-++++--+-++++-++-++++++---++-+-+++-+-++++-+---+\\|  ||  || | ||| |||| |  || |||   |||||  | |||| |||   ||| ||||   |||||| | | | \n|| |   | |||||| ||| | ||| |\\++--+-++++-++-++++++---++-+-+++-+-++++-+---+++--++--++-+-+++-++++<+--++-+++---/||||  | |||| |||   ||| ||||   |||||| | | | \n|| |   | |||||| ||| | ||| | ||  | |||| || ||||||/--++-+-+++-+-++++-+---+++--++--++-+-+++-++++-+--++-+++----++++--+-++++-+++\\  ||| ||||   |||||| | | | \n|| |   | |\\++++-+++-+-+++-+-++--+-++++-++-+++++++--++-+-+++-+-++++-+---+++--+/  || | ||| |||| |  || |||    ||||  | |||| ||||  |||/++++---++++++-+-+-+\\\n|| |   | | ||\\+-+++-+-+++-+-++--+-++++-++-+++++++--++-+-+/| | |||| |   |||  |   || | ||| |||| |  || |||    ||||  | ||^| ||||  ||||||||   |||||| | | ||\n|| |   | | || | ||| | ||| \\-++--+-++++-++-+++++++--++-+-+-+-+-++++-+---+++--+---++-+-++/ |||| |  || |||    ||||  | |||| ||||  ||||||||   |||||| | | ||\n|| |   | | || | ||| | |||   ||  | |||| || ||||\\++--++-+-+-+-+-++++-+---/||  |   || | ||  |||| |  || |||    ||||  | |||| ||||  ||||||||   |||||| | | ||\n|| |   | | || | ||| | |||   ||  | |||| || |||| ||  || | | | | |||| |    ||  |   || | ||  |||| \\--++-+++----++++--+-+++/ ||||  ||||||||   |||||| | | ||\n|| |   | | || | ||| | |||   ||  | |||| ||/++++-++--++-+-+-+>+-++++-+----++--+---++-+-++\\ ||||    || |||    ||||  | |||  ||||  ||||||||   |||||| | | ||\n|| |   | | || | ||| | |||   ||  | |||| ||||||| ||  || | | \\-+-++++-+----++--+---++-+-+++-++++----++-+++----++++--+-+++--++++--++++++++---+++++/ | | ||\n|| |   | | || \\-+++-+-+++---++--+>++++-+++++++-++--++-+-+---+-++++-+----++--+---++-+-+++-++++----++-+++----++++--+-/||  ||||  ||||||||   |||||  | | ||\n|| |   | | ||  /+++-+-+++---++--+-++++-+++++++-++--++-+-+---+\\\\+++-+----++--+---++-+-+++-++++----++-+++----++++--+<-++--++++--++++++++---++/||  | | ||\n|| |   | | ||  |||| | |||   ||  | |||| ||||||| ||  || | |   || ||| |    ||  |   || | ||| ||||    || |||    ||||  |  ||  ||||  ||||||||   || ||  | | ||\n|| |   | | ||  |||| | |||   ||  | |||| ||||||| ||  \\+-+-+---++-+/| |    ||  |   || | ||| ||||    || |||    |\\++--+--++--++++--++++++++---++-+/  | | ||\n|| |   | | ||  |||| | |||   ||  | |||| ||||||| ||   | | |   || | | |   /++--+---++-+-+++-++++----++-+++----+-++--+\\ ||  ||||  ||||||||   || |   | | ||\n|| |   | | ||  |||| | |||   ||  | |||| ||||||| ||   | | |   || | | |   |||  |   || \\-+++-++++----++-+++----+-/|  || ||  ||||  ||||||||   || |   | | ||\n|| |   | | ||  |||| | |||   ||  | |||| ||||||| ||   | | |   || \\-+-+---+++--+---++---+++-+++/    || |||    |  |  || ||  ||||  ||||||||   || |   | | ||\n|| |/--+-+-++--++++-+-+++---++-\\| |||| ||||||| ||   | | |   ||   | |   |||  |   ||   ||| |||     || |||    |  |  || ||  ||||  ||||||||   || |   | | ||\n|| \\+--+-+-++--++++-+-/||   || || ||\\+-+++++++-++---+-+-+---++---+-+---+++--+---/|   ||| |||     || |||    |  |  || ||  ||||  ||||||||   || |   | | ||\n||  |  | | ||  |||| |  ||   |\\-++-++-+-+++++++-++---+-+-+---++---+-+---+++--/    |   ||| |||     || |||    |  |  || ||  ||||  ||||||||   || |   | | ||\n||  |  | | ||  |||| |  ||   |  || || | ||||||\\-++---+-+-+---++---+-+---+++-------+---+++-+++-----++-+++----+--+--++-++--++++--/|||||||   || |   | | ||\n||  |  | | ||  |||| |  ||   |  || || | ||||||  |\\---+-+-+---++---+-+---+++-------+---+++-+++-----++-+++----+--+--++-++--+++/   |||||||   || |   | | ||\n||  |  | | ||  |||| |  \\+---+--++-++-+-++++++--+----+-+-+---++---+-+---+++---\x3e---+---+++-+++-----++-++/    |  |  || ||  |||    |||||||   || |   | | ||\n||/-+--+-+-++--++++-+---+---+--++-++-+-++++++--+----+-+-+---++---+-+---+++-------+---+++-+++-----++-++-----+-\\|  || ||  |||    |||||||   || |   | | ||\n||| |  | | ||  |||| |   |   |  || || |/++++++--+----+-+-+---++---+-+---+++-------+---+++-+++-----++-++-----+-++--++-++--+++-\\  |||||||   || |   | | ||\n||| |  \\-+-++--++++-+---+---+--++-++-++++++++--+----+-+-+---++---+-+---+++-------+---+++-+++-----++-/|     | ||  || ||  ||| |  |||||||   || |   | | ||\n||| |    | ||  |||| |   |   |  || || \\+++++++--+----+-+-+---++---+-+---+++-------+---+++-++/     ||  |     | ||  || ||  |\\+-+--+++++/|   || |   | | ||\n||| |    | |v  ||\\+-+---+---+--++-++--+++++++--+----+-+-+---++---+-/   |||       |   \\++-++------++--+-----+-++--++-++--+-+-+--+++++-+---++-+---/ | ||\n||| |    | ||  || | |   |   |  || ||  |||||||  |    | | |   ||   |  /--+++-------+----++-++------++--+----\\| ||  || ||  | | |  ||||| |   || |     | ||\n||| \\----+-++--++-+-+---+---+--/| ||  |||||||  |    | | |   ||   |  |  |||       \\----++-++------++--+----++-++--++-++--+-+-+--/|||| |   || |     | ||\n|||      | ||  || | |   \\---+---+-++--+++++/|  |    \\-+-+---++---+--+--+++------------++-++------++--+----++-++--++-++--+-+-+---++++-+---+/ |     | ||\n|||      | ||  || | \\-------+---+-++--+++++-+--+------+-+---++---+--+--+++------------++-++------++--+----++-++--++-++--+-/ |   |||| |   |  |     | ||\n|||      | ||  || |         |   | ||  |||||/+--+----\\ | |   ||   |  |  \\++------------++-++------++--+----++-++--+/ ||  |   |   |||| |   |  |     | ||\n|||    /-+-++--++-+---------+---+-++--+++++++--+----+-+-+---++---+--+---++------------++\\||      ||  |    || ||  |  ||  |   |   |||| |   |  |     | ||\n|||    | | ||  ||/+---------+---+-++--+++++++--+----+-+-+---++---+--+---++------------+++++------++--+----++-++--+--++--+---+\\  |||| |   \\--+-----+-/|\n|||    | | ||  |||| /-------+---+-++--+++++++--+---<+-+-+---++---+--+---++------------+++++------++--+---\\|| ||  |  ||  |   ||  |||| |      |     |  |\n|||    | | ||  \\+++-+-------+---+-++--+++++++--+----+-+-+---+/   |  |   ||     /------+++++-----\\||  |   ||| ||  |  ||  |   ||  |||| |      |     |  |\n|\\+----+-+-++---+++-+-------+---+-++--+++++++--+----+-+-+---+----+--+---++-----+------+++++-----++/  |   ||| ||  |  ||  |   ||  |||| |      |     |  |\n| |    | | ||   ||| |       |   | ||  ||\\++++--+----+-+-+---+----+--+---++-----+------+++++-----++---+---+++-+/  |  ||  |   ||  |||| |      |     |  |\n| |    | | ||   ||| |    /--+---+-++--++-++++--+----+-+-+---+----+--+---++-----+------+++++--\\  ||   |   ||| |   \\--++--+---++--++++-+------/     |  |\n| |    | | ||   ||| |    |  |   | ||  \\+-++++--+----+-+-+---+----+--+---++-----+------+++++--+--++---+---+++-+------++--+---/|  |||| |            |  |\n| |    | | ||   ||| |    |  |   \\-++---+-++++--/    | | |   |    |  |   ||     |      |||||  |/-++---+---+++-+----\x3e-++--+----+--++++-+-\\          |  |\n| |    | | ||   ||| |    |  |     ||   | \\+++-------+-+-+---+----+--+---++-----+------+/|||  || ||   |   ||| |      ||  |    |  |\\++-+-+----------+--/\n| |    | | |^   ||| |    |  |     ||   |  |||       | | |   |    |  |   ||     |      | |||  || ||   \\---+++-+------/|  |    |  | || | |          |   \n| |    | | ||   ||| |    |/-+-----++---+--+++-------+-+-+---+----+--+---++\\    |      | |||  || ||       ||| |       |  |    |  | || | |          |   \n| |    | | ||   ||| |    || |     ||   v  ||\\-------+-/ |   |    |  |/--+++----+------+-+++--++-++-------+++-+-------+--+----+-\\| || | |          |   \n| |    | | ||   \\++-+----++-+-----/|   |  ||        |   |   |    |  \\+--+++----+------+-+++--++-++-------+/| |       |  |    | || || | |          |   \n| |    | | ||    || |    || |      |   |  ||        |   |   |    |   |  |||    |      | |||  || ||       | | |       |  |    | || || | |          |   \n| |    | | ||    || |    || |      |   |  ||        |   |   |    \\---+--+++----+------+-+++--++-++-----<-+-+-+-------+--+----+-++-+/ | |          |   \n| |    | |/++----++-+----++-+------+---+--++--------+\\  | /-+--------+--+++----+------+-+++--++-++-------+-+-+-------+--+----+-++\\|  | |          |   \n| |    | ||||    || |    || |      |   |  ||        ||  | | |        |  |||    \\------+-+++--++-/|       | | |       |  |    | ||||  | |          |   \n| |    | ||||  /-++-+----++-+------+---+--++--------++--+-+-+---\\    |  |||         /-+-+++--++--+--\\    | | |       |  |    | ||||  | |          |   \n| |    | ||||  | || |    || |      |   |/-++--------++--+-+-+---+----+--+++---------+-+-+++--++--+--+----+-+-+-------+--+----+-++++--+-+----------+-\\ \n| |    | ||||  | || |    || |      |   || ||        ||  | | |   |    |  |||         | | |||  ||  |  |    | | |       |  |    | ||||  | |          | | \n| |    | ||||  | || |    || |/-----+---++-++--------++--+-+-+---+----+--+++---------+-+\\|||  ||  \\--+----+-+-+----\x3e--+--+----+-++++--/ |          | | \n| |    | ||||  | || \\----++-++-----+---++-++--------++--+-+-+---+----+--+++---------+-+++++--++-----+----/ | |       |  |    | ||||    |          | | \n| |    | ||||  | ||      \\+-++-----+---++-++--------++--+-+-+---+----+--+++---------+-+++++--/|     |   /--+-+-------+--+----+-++++---\\|          | | \n| |    | ||||  | ||       | ||     |   \\+-++--------++--+-+-+---+----+--+/|         | |||||   |     |   |  | |       |  |    | ||||   ||          | | \n| |    | ||||  | ||       | ||     |    | ||        ||  | | |   |    |  | |         | |||||   |     |   |  | |       |  |    | ||||   ||          | | \n\\-+----+-++++--+-+/       | ||     |    | ||        ||  | \\-+---+----+--+-+---------+-+++++---+-----+---+--+-+-------+--+----+-++/|   ||          | | \n  |    | ||||  \\-+--------+-++-----+----+-++--------++--+---+---/    |  | |         | |||||   |     |   |  | |       |  |    | || |   ||          | | \n  |    | \\+++----+--------+-/|     |    | ||        ||  \\---+--------+--+-+---------+-+++++---+-----+---+--+-+-------/  |    | || |   ||          | | \n  |    |  |||    |        |  |     |    | ||        ||      |        |  | |         | |||||   |     |   |  | |          |    | || |   ||          | | \n  |    |  |||    |        |  |     |    | ||        ||      |        \\--+-+---------+-+++++---+-----+---+--+-+----------+----+-/| |   ||          | | \n  |    \\--+++----+--------+--+-----+----+-++--------++------+-----------+-+---------+-++/\\+---+-----+---+--+-+----------+----+--/ |   ||          | | \n  |       |||    \\--------+--+-----+----+-++--------++------+-----------+-+---------+-++--+---+-----+---+--+-+----------+----/    |   ||          | | \n  |       ||\\-------------+--+-----+----+-++--------++------+-----------+-+---------+-++--+---+-----+---+--+-+----------/         |   ||          | | \n  |       ||              \\--+-----+----+-++--------++------+-----------+-/         | ||  |   |     |   |  | |                    |   ||          | | \n  |       ||                 |     \\----+-++--------++------/           |           \\-++--+---+-----/   |  | |                    |   ||          | | \n  |       ||                 |          | ||        ||                  |             ||  |   |         |  | |                    |   ||          | | \n  |       ||                 \\----------+-++--------++------------------+-------------+/  |   \\---------+--+-+--------------------+---+/          | | \n  |       ||                            \\-++--------++------------------+-------------+---+-------------+--+-+--------------------+---+-----------+-/ \n  \\-------++------------------------------++--------++------------------+-------------+---+-------------+--+-/                    |   |           |   \n          ||                              |\\--------/|                  |             |   |             |  |                      |   |           |   \n          \\+---------------------<--------+----------/                  |             |   |             |  |                      \\---+-----------/   \n           |                              |                             |             |   |             |  |                          |               \n           \\------------------------------+-----------------------------/             |   |             \\--+--------------------------/               \n                                          \\-------------------------------------------/   \\----------------/                                          "},"21be":function(n,e,a){"use strict";a.r(e),e["default"]='As you finish the last group\'s customs declaration, you notice that you misread one word in the instructions:\n\nYou don\'t need to identify the questions to which **anyone** answered "yes"; you need to identify the questions to which **everyone** answered "yes"!\n\nUsing the same example as above:\n\n```\nabc\n\na\nb\nc\n\nab\nac\n\na\na\na\na\n\nb\n```\n\nThis list represents answers from five groups:\n\n- In the first group, everyone (all 1 person) answered "yes" to `3` questions: `a`, `b`, and `c`.\n- In the second group, there is **no** question to which everyone answered "yes".\n- In the third group, everyone answered yes to only `1` question, `a`. Since some people did not answer "yes" to `b` or `c`, they don\'t count.\n- In the fourth group, everyone answered yes to only `1` question, `a`.\n- In the fifth group, everyone (all 1 person) answered "yes" to `1` question, `b`.\n\nIn this example, the sum of these counts is `3 + 0 + 1 + 1 + 1` = `6`.\n\nFor each group, count the number of questions to which **everyone** answered "yes". **What is the sum of those counts?**'},2470:function(n,e,a){"use strict";a.r(e),e["default"]="-6\n-1\n-18\n-10\n+5\n+18\n+19\n+11\n-6\n+13\n+16\n-15\n+8\n-10\n+9\n+12\n+1\n-9\n-6\n+16\n+6\n+13\n+5\n+18\n-15\n-1\n+14\n-2\n+6\n+12\n-7\n+5\n-19\n+2\n+16\n-5\n-3\n+6\n+8\n+18\n-3\n+9\n+14\n-10\n+9\n-5\n+4\n-1\n+11\n+10\n+15\n+12\n-16\n-12\n+17\n-2\n-16\n-11\n+15\n-11\n+12\n+14\n-5\n+10\n-12\n-6\n+21\n+19\n-12\n-6\n+9\n-4\n-18\n+15\n+10\n+3\n+12\n-17\n-6\n-11\n+5\n+10\n+15\n+9\n-19\n+3\n+15\n+2\n+13\n+15\n-13\n+7\n+5\n+19\n+10\n+14\n+10\n+9\n+1\n+13\n+4\n-5\n+17\n-14\n+3\n-8\n-3\n-3\n-13\n+6\n-3\n-11\n-7\n+17\n+9\n+4\n-14\n-19\n-15\n+7\n-14\n+19\n-3\n+11\n+9\n+16\n+17\n-6\n+12\n+12\n+14\n-7\n+18\n+8\n+7\n+7\n-10\n+5\n+11\n+15\n+10\n-2\n-2\n-5\n-12\n-7\n+4\n+10\n+19\n+11\n-19\n-10\n-16\n+11\n-19\n-2\n-20\n-10\n+15\n+8\n-2\n-12\n+17\n-14\n-17\n-18\n-2\n+1\n+16\n-12\n-19\n-13\n-18\n-3\n+15\n+9\n+18\n+16\n+8\n-9\n-22\n-4\n+20\n-6\n+14\n+1\n+7\n+10\n+7\n-4\n+11\n+11\n-16\n-5\n+9\n+22\n+10\n+12\n-9\n-17\n+15\n-8\n+4\n-3\n-6\n-3\n+2\n+11\n+7\n+9\n+13\n+11\n-14\n+11\n-2\n-2\n-9\n-1\n-17\n+15\n+4\n-14\n+4\n+16\n+20\n-4\n+18\n+8\n-11\n-18\n+4\n+19\n-18\n-15\n-4\n+9\n+21\n-8\n+5\n+6\n+3\n+6\n-11\n+14\n+11\n+4\n-7\n+18\n+3\n-2\n-6\n+9\n-16\n+3\n+2\n-9\n+2\n+6\n-12\n-11\n-6\n-9\n+19\n-18\n+3\n-9\n-18\n+10\n+11\n-7\n-1\n-9\n-19\n+26\n+26\n+10\n+21\n+18\n+2\n-6\n+9\n+8\n-3\n-12\n+6\n+10\n-17\n-5\n-15\n-7\n-6\n-14\n+9\n+7\n+13\n+10\n+6\n+17\n+13\n+1\n+17\n+10\n+2\n+2\n+20\n-5\n+2\n+11\n-18\n+9\n-18\n-13\n+14\n-5\n+17\n-6\n-15\n+20\n+5\n+3\n-12\n+16\n-13\n+11\n+15\n+8\n-12\n+14\n+7\n-19\n-9\n+3\n+5\n+4\n+21\n-3\n+6\n+11\n-8\n-14\n+15\n-5\n+15\n-6\n+19\n+4\n-16\n+3\n+23\n-9\n-9\n-18\n+8\n+7\n-8\n+12\n-18\n-4\n+19\n+9\n+5\n+8\n+19\n+13\n+22\n+14\n-9\n+18\n+6\n-8\n-1\n+16\n-9\n+13\n+17\n+9\n-13\n+10\n-19\n-9\n-10\n+20\n+13\n+6\n+4\n-14\n+2\n-19\n-13\n+18\n+6\n-18\n-19\n-1\n-7\n+12\n+11\n-14\n-19\n+4\n-8\n+19\n-1\n-27\n+3\n-14\n-2\n-10\n-14\n+2\n+16\n-7\n+14\n-15\n-4\n-1\n-11\n-12\n+6\n-2\n-17\n-2\n+42\n+4\n-1\n+51\n+22\n+11\n+4\n+12\n-3\n+10\n+7\n+19\n-16\n+23\n+15\n-16\n-3\n-20\n-10\n+19\n+4\n-35\n+2\n-18\n-2\n-9\n-6\n+34\n-12\n+43\n-8\n+5\n-19\n+18\n+16\n+4\n+23\n+10\n+14\n+14\n-13\n+25\n-11\n-4\n-2\n-1\n-6\n+29\n-36\n+23\n+14\n-19\n-20\n-32\n-35\n-89\n-97\n-22\n-16\n+10\n-26\n-9\n-14\n-18\n+11\n+17\n-2\n-11\n+14\n+16\n-22\n+7\n-8\n-10\n+2\n-1\n+25\n-21\n+8\n+11\n-5\n-43\n-13\n+10\n-18\n+15\n+11\n+17\n-15\n+6\n+4\n+19\n+34\n-106\n+2\n-20\n+22\n-9\n-30\n+13\n-26\n-53\n+5\n-2\n+32\n+206\n-15\n+7\n+18\n+22\n-36\n+43\n+46\n-190\n+314\n+76479\n+13\n-19\n-3\n+13\n+4\n+16\n+9\n+7\n+10\n-13\n+6\n-15\n-17\n+10\n+17\n-7\n-11\n-11\n+7\n+16\n-18\n-18\n-20\n-14\n+12\n+18\n+20\n+15\n-17\n-4\n-1\n+20\n+17\n-19\n-8\n-14\n-14\n+1\n-7\n+18\n+23\n-4\n-1\n+31\n+18\n-11\n-2\n-4\n+15\n-12\n+10\n+14\n-2\n+13\n+6\n+5\n+8\n+16\n+18\n+19\n-18\n-2\n+16\n+16\n+8\n+10\n-6\n-13\n+10\n+8\n-14\n-17\n-13\n-8\n+7\n-16\n+4\n+18\n+1\n-13\n+15\n-1\n-5\n-4\n-16\n-17\n+7\n-9\n+18\n-15\n-19\n+6\n-11\n-9\n+18\n+8\n-19\n-6\n+4\n-15\n-9\n-11\n-3\n-8\n-6\n+5\n+10\n+18\n+17\n-15\n+8\n-5\n+4\n+7\n+11\n-20\n-1\n+2\n-12\n+1\n-3\n-6\n+10\n+27\n+4\n+19\n+7\n+6\n-3\n+2\n+10\n+2\n-3\n-20\n-16\n+19\n+14\n+18\n+15\n+4\n+6\n-16\n-11\n-7\n-18\n-7\n+4\n-17\n+2\n+3\n-16\n+10\n-16\n-2\n-6\n+29\n+15\n-25\n+7\n+13\n+16\n-2\n+25\n+7\n+4\n+17\n-20\n+17\n+6\n-7\n-4\n+9\n+14\n-6\n+11\n-8\n+11\n-5\n+6\n+2\n+3\n+8\n-12\n+15\n-9\n-3\n+6\n+11\n-6\n+10\n+10\n-13\n+7\n+11\n+2\n-15\n+14\n+11\n+3\n+10\n-18\n-17\n+15\n+14\n-13\n+10\n+1\n+7\n-15\n-10\n-13\n-9\n+7\n-15\n-1\n+6\n-21\n+19\n+16\n+10\n+13\n+15\n-3\n-13\n+8\n+19\n+1\n+19\n-7\n+4\n-1\n+3\n-1\n-14\n+7\n-1\n+12\n+3\n-1\n+12\n+17\n+8\n-11\n-16\n+17\n+11\n-14\n-19\n+15\n+20\n+2\n-17\n-7\n-11\n+12\n-8\n+3\n+18\n-9\n-1\n+11\n+15\n+6\n+8\n+4\n-10\n+8\n-19\n+7\n-11\n-10\n-18\n+2\n+13\n+16\n-5\n-4\n+8\n+7\n+7\n-11\n+5\n+19\n+19\n+19\n-8\n+14\n-11\n-9\n-12\n+11\n+12\n+18\n+1\n+3\n+18\n+17\n-16\n+8\n+7\n-10\n+1\n+11\n+1\n+5\n+7\n+4\n+3\n-13\n+14\n-16\n+17\n+7\n+9\n+1\n-7\n-13\n+17\n+11\n-19\n+7\n-19\n-13\n-6\n-16\n-13\n+1\n+5\n+18\n-17\n-12\n-10\n+2\n+15\n-4\n-12\n-13\n+5\n+10\n+15\n+14\n+9\n-10\n-8\n+2\n+15\n+9\n+2\n+4\n-13\n-16\n+1\n+6\n+4\n-17\n-21\n-20\n+4\n+8\n-11\n+17\n-3\n+12\n-10\n+13\n-14\n-19\n+10\n-19\n+4\n-1\n+11\n+4\n+20\n-1\n+8\n+22\n+9\n-19\n-5\n-5\n+42\n+15\n+16\n-7\n-15\n+9\n+10\n+4\n+14\n+9\n-16\n-14\n+8\n+7\n+9\n+4\n+5\n-15\n-1\n+2\n+1\n-8\n-20\n-12\n+1\n-4\n+1\n+13\n+5\n+14\n-21\n+36\n+12\n+1\n+26\n+12\n+5\n+10\n-2\n-20\n-8\n-19\n-10\n+42\n-20\n+150\n+6\n+11\n+9\n+2\n+5\n-11\n+20\n-8\n-27\n-11\n-17\n+6\n+31\n+2\n+7\n+22\n+12\n+13\n+25\n-7\n-11\n+19\n-9\n+18\n+1\n+7\n+6\n+15\n+7\n+11\n-9\n-17\n-10\n-6\n+10\n+3\n-19\n+14\n+19\n-12\n-18\n+2\n+5\n-13\n-19\n-11\n-19\n+1\n+12\n-11\n-77534"},2503:function(n,e,a){"use strict";a.r(e),e["default"]='"We\'ve detected some temporal anomalies," one of Santa\'s Elves at the Temporal Anomaly Research and Detection Instrument Station tells you. She sounded pretty worried when she called you down here. "At 500-year intervals into the past, someone has been changing Santa\'s history!"\n\n"The good news is that the changes won\'t propagate to our time stream for another 25 days, and we have a device" - she attaches something to your wrist - "that will let you fix the changes with no such propagation delay. It\'s configured to send you 500 years further into the past every few days; that was the best we could do on such short notice."\n\n"The bad news is that we are detecting roughly **fifty** anomalies throughout time; the device will indicate fixed anomalies with *stars*. The other bad news is that we only have one device and you\'re the best person for the job! Good lu--" She taps a button on the device and you suddenly feel like you\'re falling. To save Christmas, you need to get all *fifty stars* by December 25th.\n\nCollect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants *one star*. Good luck!\n\nAfter feeling like you\'ve been falling for a few minutes, you look at the device\'s tiny screen. "Error: Device must be calibrated before first use. Frequency drift detected. Cannot maintain destination lock." Below the message, the device shows a sequence of changes in frequency (your puzzle input). A value like `+6` means the current frequency increases by `6`; a value like `-3` means the current frequency decreases by `3`.\n\nFor example, if the device displays frequency changes of `+1`, `-2`, `+3`, `+1`, then starting from a frequency of zero, the following changes would occur:\n\n- Current frequency  `0`, change of `+1`; resulting frequency  `1`.\n- Current frequency  `1`, change of `-2`; resulting frequency `-1`.\n- Current frequency `-1`, change of `+3`; resulting frequency  `2`.\n- Current frequency  `2`, change of `+1`; resulting frequency  `3`.\n\nIn this example, the resulting frequency is `3`.\n\nHere are other example situations:\n\n- `+1, +1, +1` results in ` 3`\n- `+1, +1, -2` results in ` 0`\n- `-1, -2, -3` results in `-6`\n\nStarting with a frequency of zero, **what is the resulting frequency** after all of the changes in frequency have been applied?'},2718:function(n,e,a){"use strict";a.r(e),e["default"]="LLLL.LLLLL.LLLLLLLLLLLLLLLL.L.LLLLLL.LLLL..L.LLLLLLLL.LLLLLL.LLLL..LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLL.LLLLLLLLL.L..LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLLLL.LLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LL.LLLL.LL.LLLLLLLLLLLLLLLLLLLL\nLLL.LLLLLLLLLLL.LLLL.LLLLLLLLLL.LL.L.LLLLLLL.LLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\nLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLL.LLL.LLLL.LLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLLLL\n...L..LL.LL.LLL....L......L..L.....L.....L....L.LL.....LL..L.L...LL.L...LL..L.L...L.LL...L..LL..L.\nLLLLLLLLLLLLLLLLLL.L.LLLLLL.LLLLLLLL.LLLLL.L.LLLLLLLLLLLLLLL.LLLLL.LLLLLLLLLL.LLLLL.LLLLLLLL.LLLLL\nLLLLLLLLL.LLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLL.\nLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLLLLLLLL.L.LLLL.L.LLLLL.L.LLLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\nLLLLLLL..L.LLLLLLLL..LLL.LL.LLLLLL.L.LLLLLLL.LLLLLLLL.LLLLLL.LLLLL.LL.LLLL.LLLLLLLL.LLLL.LLLLLLLLL\n...L..L.L.L......L....L.L..L...L.L..L.L...LL.LL....L...L........L.L.LLL....L..L..L...L.L..L..LL...\nLLLLLLLLLL.LLLLLLLLLLLLLLLL.L.LLLLLL.LLLLLLL.LLLLLLLLLLLLLLL.LLLLL.LLLLLLLLLLLL.L.LLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLL.LLLL.L.LLLLLLLLLLLLLLL..LLLLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLL.LLL.LL.LLLLLLLLL.LLLLL..LLLLLLLL.LLLLLLLLLLLLLLL..LLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLL.LLLLLLLLLL\n.LLLLLLLLL.LL.LLLLLL.LLL.LLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LL.LLLLLLLLLLL\nLLLLL.LLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\n.LLLLLLLLLLLLLLLLLLL.L.LLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLL..LL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nL....LL.....L......LLL......L.LLL..L....L.L....L....LL.L.LL.LL........LL....L.L.L..LLLL.......L...\nLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLL.LLL.LLL.LLLLLLLL.LLLLLLLLLLLLLL\n.LL..LL.LL.LLLLLLLLL.LL.LLLLLLLLLLLL.LLLLLLL.LLLLL.LLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LL.LLLLLL.LLLLL.LLLLLLL.L.LL.LLLLLLLLLLLLLLLLLL\nLLLLLLLLLL..LLLLLLLL.LLLL.L.LLL.LLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLL..LLLLLLLLLL..LLLL.LLLLLLLLLLLLLL\nLLL.LLLLLL.LLLLLLLLL.LLLLLL.LLLLLLL..LLLLLLL..LLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\n.LLLLLLLLLLLLLLLLLLL.LLLLLL.LL.LLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLL.LL.LLL.LLLLLLLL.LLLLLLL.LLLLLLLL..LLL.L.LLLLL.LLLLLLL.LLLLLL...LLLLLLLLLLLLLL\nLLL.LLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLL.LLLL\nLLLL.LLLLL...LLLLLLLLLLL.LL.LLLLLLLL.LLLLLLL.LLLLLLLLLLLLLL..LLLLL.LLLLLLL..LLLLLLL.LLLLLLLLLLLLLL\n..L...LLL........LL....L.....L.....L..L..L.....L.L.LL...L......LLLLL.L.L...........L.LL.....LL...L\nLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.L.LLL.LLL.LLLLLL.LLLLLLLL.LLLLL.LLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLL\nLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLL.LLL\nLLLLLLLLLLLLLLLL.LLLLLLLLLL.LLLLLLLLLLLLL.LL.LL.LLLLLLLLLLLL.LLLLL.LLLLLLLLLLLL.LL.LLL.LLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLL...LLLLLLLLLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLL.LL\nLLLLLLL.LL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLL..LLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\n....L..L.L.LL..LLL..L....LL...L.L..LL.L......L...LLL.L.L.L.....L.......L......LL.....L..L.L..LL...\nLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLLLLLLLLL.L\nLLLLLLLLLL.LLLLLLLLL.LLLL.L.LLL.LLLL.LLLLLLL.LLLLLLLLLLLLLLL.LLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL...LLLLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLLL..LLLLLLLLLLLLLLLLLL.LLLLLLL.LLLL.LLLLLLL.LLLLLLLL.LLL.LLLLLLLLLL\nLLLLLLLLLL.L.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLL.LLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLL.LLLLLLLLLL\nLL.LLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL.LLL.LL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\n..LL.LLL...LLL.....L.L.L......L......L........L.LL......LLL..LL..L..L.LLL..LL..LL.L.....L.LL....L.\nLLLLLLLLLL.LL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL..LLLL.LLLLLLLL\nLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLL.LL.LLLLLL.L.LLLLLLLLL.L.LLLLL.LL.L.LLLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLL.LLLLLLL.LL.LLLLL.LLLLLLLLLLL.LL\nLLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLL.LLLLLLLLLL.LLLLL.LLL.LLL.LLLLL.LL.LLLLLLLLLLLLLL\nL..L..LL..LLL...L......L.....L...LL..L..L.....L.L...LL......L.L.LLL.L..L....L....L...L.L........LL\nLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL..LLLLLLLLLLLLLL\nLLLLLL.LLL.LLLLLLLLL.LLLLLLLLLLLLLLL.L.LL.LLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL\nL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLL.L.LLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.LLL.LL.LL.LLLLLLLLL.LL.LL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLL.LL.LLLLLLLLLLLLLL\nLL.LLLLLLLLLLLLLL.LL.LLLLLLLLLLLLLL..LLLLLLLLLL.LLL.L..LLLLL.LLLLL..LLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLL.LLL.LLLLLLLLLLLL.LLLLLL.LLLLL.LLLLLLL..LLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.LLL.LLLLL.LL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLL.LL.L.LLLLLLL.LLL.L.\nLLLLLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLL.LLL.LLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLL.L.LL.LLLLLLLLLL.LLL\n..L....L....L....L........L...L....L..LL.L.L..L.LLLL.L.LLL...L...L..LL..L...L....L....L.......L.L.\nLLLLLLLLLL..LLL.LLLLLLLLLLL.LLLLLLLL.LLL.LLL..LLLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLLL..LL..LLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLL.LL.LLLLL.LLLLLL.LLLLLLLLLLLL..LLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLL..LLLLLLL.LLLLLLLLLLLLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLLLL.LLLL.LLLLLLLLL\nLLLLLLLLLL.LLLLLLLLL.LLLLLL..LLLLLLL..LLLLLL.LL.LLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLL.L\nL.LLLLLLLL.LLLLLLLLL.LL.LLL.LLLLLLLLLLLLLLL..LLLLLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL..LLL.LLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLL.LLLLL..LLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nL.....L..LLL.....LL.L..L..LL....LLLLL.LL..L.......L...LL.....LL...L...........L.....L.L..L.....L.L\nLLLLLLLLLL.LLL.LLLLL.LLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLLL.LLLL..LLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLL\nLLLLLLLLLL..LLLLL.LL.LLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLL.L.LLL.LLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLL.LL.LLLLLLLLLLLLLLL\nLLLLL.LLLL.LLLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLL.LLLL..LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLL..LLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLL.LLLLLL..LLLLLLLL.LLLLLLLLLLLLLL\n........LLLLLL.LL.L..L...L...LLL....L.......LLLL..L.LL.L..L.L.LLL...L...L.......L..L.....L.L.L..LL\nLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LL.LLL..LLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL..LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLL.LLLLLLLLLL\nL.LLLLL.LLLLLLLLLLLL.LLLLLL.LLLLLLLLLLL.LLLL.LLL.LLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\nLLLLLL.LLL.LLLLLLLLLLLLL.LLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLL.LLL.L.L.LLLLLLLL.LLLLLLLLLLLLLL\nLLL.LLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLL.LL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLL..LLLLLLL.LLLLLLLLLLLLLL\n..LL..L....L.......L....L....LL...L.L..L.........LL..L..LL.L....LLL.L.LLL...L.....LL.....LL.LL....\nLLLLLLLLLL.LLLLLL.LL.LLLLLLLL..LLLLL.LLLLLLLLLLLLLLLL.LLLLLL.L.LLLLLLLLLLL.LLLLLLLL.LLLLLLLLLL.LLL\nL.LLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLL.LL.LLLLLL.LLLLL.LLLLLLL.LLLLL.LLLLLLLLLL.LLLLLL\nLLLLLLLLLL.LLLLLLLLL.LLL.LL.LLLLLLLL.L.LLLLLLLLLLLLLLLLLLLLL.L.LLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLL.\nLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL\nLLLLL.LLLL.LLLLLLLLL.LLLLLL.LLLL.LLL..LLLLLL.LLLLLLLLLLLLLLL.LLLLL.LLLLLLLLLL.LLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLL.LLLL\nLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLL.L.LLLLLLLLLLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLLLL.LL.LLLLLLLLLLL\n.L.L....L........L....LL...L...L...L..L.............LL.LL..L.L.L...LL.......LLL.......LLL.L.L.L..L\nLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLL.LL.LLLLLLLLLLLLLL.L.LLLLL..LLLLL.LLLLLLL.LLLLLLLL.LLLL.LLLLLLLLL\nLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLLLL\nLLLLLLLLLL..LLLLLLLL.LLLLLL..LLLLLLL.LLLLLLLLLLLLLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL\nLLLLLLLLLL.L.LLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL.LLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL\nLLLLL.LLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLL.L.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.L.LLLLLLLLLLLL"},"2a25":function(n,e,a){"use strict";a.r(e),e["default"]="After some careful analysis, you believe that **exactly one instruction is corrupted**.\n\nSomewhere in the program, **either** a `jmp` is supposed to be a `nop`, **or** a `nop` is supposed to be a `jmp`. (No `acc` instructions were harmed in the corruption of this boot code.)\n\nThe program is supposed to terminate by **attempting to execute an instruction immediately after the last instruction in the file**. By changing exactly one `jmp` or `nop`, you can repair the boot code and make it terminate correctly.\n\nFor example, consider the same program from above:\n\n```\nnop +0\nacc +1\njmp +4\nacc +3\njmp -3\nacc -99\nacc +1\njmp -4\nacc +6\n```\n\nIf you change the first instruction from `nop +0` to `jmp +0`, it would create a single-instruction infinite loop, never leaving that instruction. If you change almost any of the jmp instructions, the program will still eventually find another jmp instruction and loop forever.\n\nHowever, if you change the second-to-last instruction (from `jmp -4` to `nop -4`), the program terminates! The instructions are visited in this order:\n\n```\nnop +0  | 1\nacc +1  | 2\njmp +4  | 3\nacc +3  |\njmp -3  |\nacc -99 |\nacc +1  | 4\nnop -4  | 5\nacc +6  | 6\n```\n\nAfter the last instruction (`acc +6`), the program terminates by attempting to run the instruction below the last instruction in the file. With this change, after the program terminates, the accumulator contains the value **`8`** (`acc +1`, `acc +1`, `acc +6`).\n\nFix the program so that it terminates normally by changing exactly one `jmp` (to `nop`) or `nop` (to `jmp`). **What is the value of the accumulator after the program terminates?**"},"2a33":function(n,e,a){"use strict";a.r(e),e["default"]="Now that you've isolated the inert ingredients, you should have enough information to figure out which ingredient contains which allergen.\n\nIn the above example:\n\n- `mxmxvkd` contains `dairy`.\n- `sqjhc` contains `fish`.\n- `fvjkl` contains `soy`.\n\nArrange the ingredients **alphabetically by their allergen** and separate them by commas to produce your **canonical dangerous ingredient list**. (There should **not be any spaces** in your canonical dangerous ingredient list.) In the above example, this would be **`mxmxvkd,sqjhc,fvjkl`**.\n\nTime to stock your raft with supplies. **What is your canonical dangerous ingredient list?**"},"2e5c":function(n,e,a){"use strict";a.r(e),e["default"]="F70\nS4\nE3\nS4\nL90\nN4\nR90\nW3\nF75\nS5\nL90\nE1\nS4\nF98\nN4\nR90\nS3\nL90\nW1\nF39\nW2\nL90\nE1\nF99\nS3\nE5\nF63\nN4\nF26\nE1\nR180\nF58\nN3\nF4\nE1\nF45\nE4\nR90\nE3\nF76\nS1\nF22\nR90\nN1\nW1\nF76\nW1\nN5\nE3\nL180\nS5\nF87\nW4\nL90\nF9\nS2\nF11\nN4\nL180\nS3\nR90\nF92\nL90\nS1\nE4\nR90\nW1\nF1\nS2\nL90\nF27\nN3\nE1\nN1\nE3\nL180\nS1\nS5\nR180\nW5\nW5\nF60\nS5\nW5\nL270\nN3\nR90\nF65\nS5\nF53\nW5\nL90\nN1\nW5\nL180\nF87\nW2\nR180\nS2\nF77\nN1\nF81\nL180\nE5\nN5\nW4\nL90\nW4\nL90\nE3\nN2\nL90\nW2\nS1\nF19\nW1\nF82\nN4\nR270\nE5\nL90\nN3\nR90\nF81\nL270\nW3\nR90\nL270\nN3\nF53\nE2\nF84\nR90\nS2\nF39\nR180\nN1\nL90\nF11\nS2\nW5\nF20\nW1\nN4\nR90\nF76\nE3\nS5\nE3\nS5\nW5\nS2\nL90\nN3\nE3\nS5\nF27\nW1\nL90\nF65\nW3\nR180\nF84\nW2\nN5\nF43\nL180\nW3\nF11\nW2\nR90\nN1\nR90\nN5\nW1\nS4\nN4\nF88\nN3\nF87\nW3\nL90\nF77\nS5\nF18\nN4\nF97\nE5\nS5\nR90\nF94\nN5\nL180\nF8\nN4\nR90\nW2\nN2\nL180\nF4\nR90\nW4\nS3\nR90\nF38\nS3\nE1\nN5\nF4\nE3\nR90\nS4\nF95\nE5\nF77\nF32\nW5\nF3\nR90\nN1\nW3\nF96\nL270\nN2\nE2\nF30\nS3\nW2\nR90\nF57\nR90\nE1\nR90\nN5\nE1\nN4\nW4\nN1\nW2\nF47\nN5\nW3\nL90\nN4\nF50\nE3\nR90\nF27\nN3\nF78\nN2\nR90\nF100\nS3\nF67\nR90\nN4\nR90\nN4\nF88\nS4\nE2\nS2\nF31\nS5\nR90\nW3\nR180\nW2\nF97\nF31\nN1\nL90\nS4\nF50\nN3\nW2\nL180\nF85\nL180\nE3\nL90\nF95\nN4\nL90\nE1\nS2\nR180\nN2\nF19\nN5\nE5\nS1\nW5\nR90\nN1\nL180\nF76\nS4\nE5\nS2\nS5\nE3\nF53\nL90\nS3\nE4\nS1\nE1\nL90\nF54\nW1\nS1\nE2\nN1\nR90\nS3\nR90\nF63\nL90\nW4\nL90\nF47\nL90\nE5\nF23\nW2\nF97\nE3\nL90\nN4\nF54\nW3\nS4\nW3\nS2\nF67\nW1\nS4\nR90\nS5\nR90\nW4\nL180\nL90\nS4\nF19\nF42\nS4\nF91\nR90\nL180\nF64\nL180\nW4\nR90\nF32\nN3\nF18\nE2\nL180\nN4\nE2\nN1\nE4\nN4\nF54\nW5\nF50\nN3\nL90\nN5\nR90\nF100\nE4\nN1\nE3\nL90\nF8\nL90\nE4\nL270\nF95\nL90\nF44\nE5\nR90\nF79\nN5\nF61\nS2\nF71\nL90\nF4\nN3\nF25\nL180\nF7\nW4\nF96\nR90\nS1\nR90\nW1\nF9\nN2\nW5\nF1\nR90\nN2\nF36\nW4\nR90\nF96\nW2\nF26\nS2\nF28\nE4\nN1\nF33\nN5\nF51\nW2\nS1\nF40\nN3\nF67\nE3\nS2\nR90\nW1\nS3\nE3\nL90\nF75\nE3\nN5\nE2\nF52\nE3\nF7\nN4\nF4\nS4\nL90\nS2\nW5\nF85\nF7\nL180\nE1\nL90\nE2\nS3\nR180\nN3\nE2\nR90\nN5\nF6\nN2\nL90\nW1\nR90\nR90\nF91\nE2\nN4\nR90\nS2\nE3\nS3\nL90\nW3\nF61\nS1\nL90\nW3\nN2\nE1\nR180\nE2\nW5\nR90\nF65\nN4\nW3\nF54\nE1\nN3\nE5\nL180\nS4\nN3\nE5\nR90\nS3\nR90\nS4\nW4\nF31\nS5\nR90\nN2\nE3\nF49\nF47\nW3\nF79\nR270\nW2\nF90\nS3\nF73\nL180\nF14\nW4\nF27\nR90\nF75\nL90\nN5\nR90\nN4\nL90\nN4\nE2\nS1\nW1\nS4\nW5\nW1\nF7\nW5\nL180\nE1\nS1\nF82\nF36\nN2\nL90\nE1\nL90\nS4\nL180\nN2\nW3\nF21\nR270\nF18\nR180\nF93\nL90\nW2\nF4\nE1\nR90\nE2\nS3\nW4\nF30\nE1\nF69\nW5\nR90\nE2\nL180\nS4\nW1\nN1\nE3\nL90\nE3\nR90\nF69\nR90\nS2\nL90\nN4\nF13\nL90\nE2\nL90\nN2\nW2\nN5\nS4\nF70\nR90\nF67\nE4\nF62\nL270\nF98\nL90\nE5\nF15\nE5\nR90\nW3\nE2\nF25\nR180\nF7\nL180\nW4\nS3\nF42\nR180\nR270\nN1\nR180\nS2\nF37\nE2\nF72\nN5\nW5\nF61\nF43\nW3\nR90\nR270\nN5\nR270\nE4\nL90\nW4\nF31\nF43\nL180\nS3\nW4\nR90\nF20\nE2\nS5\nL90\nF75\nR90\nF52\nW3\nL90\nN5\nW5\nN4\nR90\nF52\nW3\nF91\nE1\nN2\nF81\nR90\nE2\nL90\nF24\nE2\nL180\nE1\nF55\nE1\nL90\nE5\nR90\nF23\nS3\nR180\nS3\nF8\nL180\nS1\nN3\nF90\nN5\nW3\nN4\nL90\nN3\nW5\nR90\nE4\nS4\nF89\nW3\nN2\nR90\nF18\nR180\nW5\nE4\nF100\nN4\nF40\nE3\nS2\nE2\nF16\nR90\nS2\nL180\nF58\nW1\nF70\nS1\nR90\nW3\nL90\nS4\nF48\nR90\nW1\nN5\nE3\nR90\nE1\nL90\nF1\nR90\nN1\nE3\nF39\nW3\nR90\nE3\nL90\nN5\nR90\nS3\nW4\nR180\nE1\nS3\nF56\nL90\nF98\nN2\nW4\nF67\nR90\nW3\nS1\nF33\nR90\nF42\nL90\nR90\nE4\nR90\nE3\nF74\nE4\nR270\nF62\nS5\nL90\nE4\nF21"},"32a7":function(n,e,a){"use strict";a.r(e),e["default"]="Your ferry made decent progress toward the island, but the storm came in faster than anyone expected. The ferry needs to take **evasive actions**!\n\nUnfortunately, the ship's navigation computer seems to be malfunctioning; rather than giving a route directly to safety, it produced extremely circuitous instructions. When the captain uses the [PA system](https://en.wikipedia.org/wiki/Public_address_system) to ask if anyone can help, you quickly volunteer.\n\nThe navigation instructions (your puzzle input) consists of a sequence of single-character **actions** paired with integer input **values**. After staring at them for a few minutes, you work out what they probably mean:\n\n- Action `N` means to move **north** by the given value.\n- Action `S` means to move **south** by the given value.\n- Action `E` means to move **east** by the given value.\n- Action `W` means to move **west** by the given value.\n- Action `L` means to turn **left** the given number of degrees.\n- Action `R` means to turn **right** the given number of degrees.\n- Action `F` means to move **forward** by the given value in the direction the ship is currently facing.\n\nThe ship starts by facing **east**. Only the `L` and `R` actions change the direction the ship is facing. (That is, if the ship is facing east and the next instruction is `N10`, the ship would move north 10 units, but would still move east if the following action were `F`.)\n\nFor example:\n\n```\nF10\nN3\nF7\nR90\nF11\n```\n\nThese instructions would be handled as follows:\n\n- `F10` would move the ship 10 units east (because the ship starts by facing east) to east 10, north 0.\n- `N3` would move the ship 3 units north to **east 10, north 3**.\n- `F7` would move the ship another 7 units east (because the ship is still facing east) to **east 17, north 3**.\n- `R90` would cause the ship to turn right by 90 degrees and face **south**; it remains at **east 17, north 3**.\n- `F11` would move the ship 11 units south to **east 17, south 8**.\n\nAt the end of these instructions, the ship's [Manhattan distance](https://en.wikipedia.org/wiki/Manhattan_distance) (sum of the absolute values of its east/west position and its north/south position) from its starting position is `17 + 8` = **`25`**.\n\nFigure out where the navigation instructions lead. **What is the Manhattan distance between that location and the ship's starting position?**"},"36e9":function(n,e,a){"use strict";a.r(e),e["default"]='You land in an airport surrounded by dense forest. As you walk to your high-speed train, the Elves at the Mythical Information Bureau contact you again. They think their satellite has collected an image of a **sea monster**! Unfortunately, the connection to the satellite is having problems, and many of the messages sent back from the satellite have been corrupted.\n\nThey sent you a list of **the rules valid messages should obey** and a list of **received messages** they\'ve collected so far (your puzzle input).\n\nThe **rules for valid messages** (the top part of your puzzle input) are numbered and build upon each other. For example:\n\n```\n0: 1 2\n1: "a"\n2: 1 3 | 3 1\n3: "b"\n```\n\nSome rules, like `3: "b"`, simply match a single character (in this case, `b`).\n\nThe remaining rules list the sub-rules that must be followed; for example, the rule `0: 1 2` means that to match rule `0`, the text being checked must match rule `1`, and the text after the part that matched rule `1` must then match rule `2`.\n\nSome of the rules have multiple lists of sub-rules separated by a pipe (|). This means that **at least one** list of sub-rules must match. (The ones that match might be different each time the rule is encountered.) For example, the rule `2: 1 3 | 3 1` means that to match rule `2`, the text being checked must match rule `1` followed by rule `3` or it must match rule `3` followed by rule `1`.\n\nFortunately, there are no loops in the rules, so the list of possible matches will be finite. Since rule `1` matches `a` and rule `3` matches `b`, rule `2` matches either `ab` or `ba`. Therefore, rule `0` matches `aab` or `aba`.\n\nHere\'s a more interesting example:\n\n```\n0: 4 1 5\n1: 2 3 | 3 2\n2: 4 4 | 5 5\n3: 4 5 | 5 4\n4: "a"\n5: "b"\n```\n\nHere, because rule `4` matches `a` and rule `5` matches `b`, rule 2 matches two letters that are the same (`aa` or `bb`), and rule `3` matches two letters that are different (`ab` or `ba`).\n\nSince rule `1` matches rules `2` and `3` once each in either order, it must match two pairs of letters, one pair with matching letters and one pair with different letters. This leaves eight possibilities: `aaab`, `aaba`, `bbab`, `bbba`, `abaa`, `abbb`, `baaa`, or `babb`.\n\nRule `0`, therefore, matches `a` (rule `4`), then any of the eight options from rule `1`, then `b` (rule `5`): `aaaabb`, `aaabab`, `abbabb`, `abbbab`, `aabaab`, `aabbbb`, `abaaab`, or `ababbb`.\n\nThe **received messages** (the bottom part of your puzzle input) need to be checked against the rules so you can determine which are valid and which are corrupted. Including the rules and the messages together, this might look like:\n\n```\n0: 4 1 5\n1: 2 3 | 3 2\n2: 4 4 | 5 5\n3: 4 5 | 5 4\n4: "a"\n5: "b"\n\nababbb\nbababa\nabbbab\naaabbb\naaaabbb\n```\n\nYour goal is to determine **the number of messages that completely match rule `0`**. In the above example, `ababbb` and `abbbab` match, but `bababa`, `aaabbb`, and `aaaabbb` do not, producing the answer **`2`**. The whole message must match all of rule `0`; there can\'t be extra unmatched characters in the message. (For example, `aaaabbb` might appear to match rule `0` above, but it has an extra unmatched `b` on the end.)\n\n**How many messages completely match rule `0`?**'},3827:function(n,e,a){"use strict";a.r(e),e["default"]='You stop falling through time, catch your breath, and check the screen on the device. "Destination reached. Current Year: 1518. Current Location: North Pole Utility Closet 83N10." You made it! Now, to find those anomalies.\n\nOutside the utility closet, you hear footsteps and a voice. "...I\'m not sure either. But now that so many people have chimneys, maybe he could sneak in that way?" Another voice responds, "Actually, we\'ve been working on a new kind of **suit** that would let him fit through tight spaces like that. But, I heard that a few days ago, they lost the prototype fabric, the design plans, everything! Nobody on the team can even seem to remember important details of the project!"\n\n"Wouldn\'t they have had enough fabric to fill several boxes in the warehouse? They\'d be stored together, so the box IDs should be similar. Too bad it would take forever to search the warehouse for **two similar box IDs**..." They walk too far away to hear any more.\n\nLate at night, you sneak to the warehouse - who knows what kinds of paradoxes you could cause if you were discovered - and use your fancy wrist device to quickly scan every box and produce a list of the likely candidates (your puzzle input).\n\nTo make sure you didn\'t miss any, you scan the likely candidate boxes again, counting the number that have an ID containing **exactly two of any letter** and then separately counting those with **exactly three of any letter**. You can multiply those two counts together to get a rudimentary [checksum](https://en.wikipedia.org/wiki/Checksum) and compare it to what your device predicts.\n\nFor example, if you see the following box IDs:\n\n- `abcdef` contains no letters that appear exactly two or three times.\n- `bababc` contains two `a` and three `b`, so it counts for both.\n- `abbcde` contains two `b`, but no letter appears exactly three times.\n- `abcccd` contains three `c`, but no letter appears exactly two times.\n- `aabcdd` contains two `a` and two `d`, but it only counts once.\n- `abcdee` contains two `e`.\n- `ababab` contains three `a` and three `b`, but it only counts once.\n\nOf these box IDs, four of them contain a letter which appears exactly twice, and three of them contain a letter which appears exactly three times. Multiplying these together produces a checksum of `4 * 3 = 12`.\n\n**What is the checksum for your list of box IDs?**'},"388f":function(n,e,a){"use strict";a.r(e),e["default"]="The small crab challenges you to a game! The crab is going to mix up some cups, and you have to predict where they'll end up.\n\nThe cups will be arranged in a circle and labeled **clockwise** (your puzzle input). For example, if your labeling were `32415`, there would be five cups in the circle; going clockwise around the circle from the first cup, the cups would be labeled `3`, `2`, `4`, `1`, `5`, and then back to 3 again.\n\nBefore the crab starts, it will designate the first cup in your list as the **current cup**. The crab is then going to do **100 moves**.\n\nEach move, the crab does the following actions:\n\n- The crab picks up the **three cups** that are immediately **clockwise** of the **current cup**. They are removed from the circle; cup spacing is adjusted as necessary to maintain the circle.\n- The crab selects a **destination cup**: the cup with a **label** equal to the **current cup's** label minus one. If this would select one of the cups that was just picked up, the crab will keep subtracting one until it finds a cup that wasn't just picked up. If at any point in this process the value goes below the lowest value on any cup's label, it **wraps around** to the highest value on any cup's label instead.\n- The crab places the cups it just picked up so that they are **immediately clockwise** of the destination cup. They keep the same order as when they were picked up.\n- The crab selects a new current cup: the cup which is immediately clockwise of the current cup.\n\nFor example, suppose your cup labeling were `389125467`. If the crab were to do merely 10 moves, the following changes would occur:\n\n```\n-- move 1 --\ncups: (3) 8  9  1  2  5  4  6  7 \npick up: 8, 9, 1\ndestination: 2\n\n-- move 2 --\ncups:  3 (2) 8  9  1  5  4  6  7 \npick up: 8, 9, 1\ndestination: 7\n\n-- move 3 --\ncups:  3  2 (5) 4  6  7  8  9  1 \npick up: 4, 6, 7\ndestination: 3\n\n-- move 4 --\ncups:  7  2  5 (8) 9  1  3  4  6 \npick up: 9, 1, 3\ndestination: 7\n\n-- move 5 --\ncups:  3  2  5  8 (4) 6  7  9  1 \npick up: 6, 7, 9\ndestination: 3\n\n-- move 6 --\ncups:  9  2  5  8  4 (1) 3  6  7 \npick up: 3, 6, 7\ndestination: 9\n\n-- move 7 --\ncups:  7  2  5  8  4  1 (9) 3  6 \npick up: 3, 6, 7\ndestination: 8\n\n-- move 8 --\ncups:  8  3  6  7  4  1  9 (2) 5 \npick up: 5, 8, 3\ndestination: 1\n\n-- move 9 --\ncups:  7  4  1  5  8  3  9  2 (6)\npick up: 7, 4, 1\ndestination: 5\n\n-- move 10 --\ncups: (5) 7  4  1  8  3  9  2  6 \npick up: 7, 4, 1\ndestination: 3\n\n-- final --\ncups:  5 (8) 3  7  4  1  9  2  6 \n```\n\nIn the above example, the cups' values are the labels as they appear moving clockwise around the circle; the **current cup** is marked with `( )`.\n\nAfter the crab is done, what order will the cups be in? Starting **after the cup labeled `1`**, collect the other cups' labels clockwise into a single string with no extra characters; each number except 1 should appear exactly once. In the above example, after 10 moves, the cups clockwise from `1` are labeled `9`, `2`, `6`, `5`, and so on, producing `92658374`. If the crab were to complete all 100 moves, the order after cup 1 would be 67384529.\n\nUsing your labeling, simulate 100 moves. **What are the labels on the cups after cup 1?**"},"3cef":function(n,e,a){"use strict";a.r(e),e["default"]="You reach the train's last stop and the closest you can get to your vacation island without getting wet. There aren't even any boats here, but nothing can stop you now: you build a raft. You just need a few days' worth of food for your journey.\n\nYou don't speak the local language, so you can't read any ingredients lists. However, sometimes, allergens are listed in a language you **do** understand. You should be able to use this information to determine which ingredient contains which allergen and work out which foods are safe to take with you on your trip.\n\nYou start by compiling a list of foods (your puzzle input), one food per line. Each line includes that food's **ingredients list** followed by some or all of the allergens the food contains.\n\nEach allergen is found in exactly one ingredient. Each ingredient contains zero or one allergen. **Allergens aren't always marked**; when they're listed (as in `(contains nuts, shellfish)` after an ingredients list), the ingredient that contains each listed allergen will be **somewhere in the corresponding ingredients list**. However, even if an allergen isn't listed, the ingredient that contains that allergen could still be present: maybe they forgot to label it, or maybe it was labeled in a language you don't know.\n\nFor example, consider the following list of foods:\n\n```\nmxmxvkd kfcds sqjhc nhms (contains dairy, fish)\ntrh fvjkl sbzzf mxmxvkd (contains dairy)\nsqjhc fvjkl (contains soy)\nsqjhc mxmxvkd sbzzf (contains fish)\n```\n\nThe first food in the list has four ingredients (written in a language you don't understand): `mxmxvkd`, `kfcds`, `sqjhc`, and `nhms`. While the food might contain other allergens, a few allergens the food definitely contains are listed afterward: `dairy` and `fish`.\n\nThe first step is to determine which ingredients **can't possibly** contain any of the allergens in any food in your list. In the above example, none of the ingredients `kfcds`, `nhms`, `sbzzf`, or `trh` can contain an allergen. Counting the number of times any of these ingredients appear in any ingredients list produces **`5`**: they all appear once each except sbzzf, which appears twice.\n\nDetermine which ingredients cannot possibly contain any of the allergens in your list. **How many times do any of those ingredients appear?**"},"3da3":function(n,e,a){"use strict";a.r(e),e["default"]="You discover a dial on the side of the device; it seems to let you select a square of **any size**, not just 3x3. Sizes from 1x1 to 300x300 are supported.\n\nRealizing this, you now must find the **square of any size with the largest total power**. Identify this square by including its size as a third parameter after the top-left coordinate: a 9x9 square with a top-left corner of `3,5` is identified as `3,5,9`.\n\nFor example:\n\n- For grid serial number `18`, the largest total square (with a total power of `113`) is `16x16` and has a top-left corner of `90,269`, so its identifier is **`90,269,16`**.\n- For grid serial number `42`, the largest total square (with a total power of `119`) is `12x12` and has a top-left corner of `232,251`, so its identifier is **`232,251,12`**.\n\n**What is the `X,Y,size` identifier of the square with the largest total power?**"},"3e46":function(n,e,a){"use strict";a.r(e),e["default"]="You've sneaked into another supply closet - this time, it's across from the prototype suit manufacturing lab. You need to sneak inside and fix the issues with the suit, but there's a guard stationed outside the lab, so this is as close as you can safely get.\n\nAs you search the closet for anything that might help, you discover that you're not the first person to want to sneak in. Covering the walls, someone has spent an hour starting every midnight for the past few months secretly observing this guard post! They've been writing down the ID of **the one guard on duty that night** - the Elves seem to have decided that one guard was enough for the overnight shift - as well as when they fall asleep or wake up while at their post (your puzzle input).\n\nFor example, consider the following records, which have already been organized into chronological order:\n\n```\n[1518-11-01 00:00] Guard #10 begins shift\n[1518-11-01 00:05] falls asleep\n[1518-11-01 00:25] wakes up\n[1518-11-01 00:30] falls asleep\n[1518-11-01 00:55] wakes up\n[1518-11-01 23:58] Guard #99 begins shift\n[1518-11-02 00:40] falls asleep\n[1518-11-02 00:50] wakes up\n[1518-11-03 00:05] Guard #10 begins shift\n[1518-11-03 00:24] falls asleep\n[1518-11-03 00:29] wakes up\n[1518-11-04 00:02] Guard #99 begins shift\n[1518-11-04 00:36] falls asleep\n[1518-11-04 00:46] wakes up\n[1518-11-05 00:03] Guard #99 begins shift\n[1518-11-05 00:45] falls asleep\n[1518-11-05 00:55] wakes up\n```\n\nTimestamps are written using `year-month-day hour:minute` format. The guard falling asleep or waking up is always the one whose shift most recently started. Because all asleep/awake times are during the midnight hour (`00:00` - `00:59`), only the minute portion (`00` - `59`) is relevant for those events.\n\nVisually, these records show that the guards are asleep at these times:\n\n```\nDate   ID   Minute\n            000000000011111111112222222222333333333344444444445555555555\n            012345678901234567890123456789012345678901234567890123456789\n11-01  #10  .....####################.....#########################.....\n11-02  #99  ........................................##########..........\n11-03  #10  ........................#####...............................\n11-04  #99  ....................................##########..............\n11-05  #99  .............................................##########.....\n```\n\nThe columns are Date, which shows the month-day portion of the relevant day; ID, which shows the guard on duty that day; and Minute, which shows the minutes during which the guard was asleep within the midnight hour. (The Minute column's header shows the minute's ten's digit in the first row and the one's digit in the second row.) Awake is shown as `.`, and asleep is shown as `#`.\n\nNote that guards count as asleep on the minute they fall asleep, and they count as awake on the minute they wake up. For example, because Guard #10 wakes up at 00:25 on 1518-11-01, minute 25 is marked as awake.\n\nIf you can figure out the guard most likely to be asleep at a specific time, you might be able to trick that guard into working tonight so you can have the best chance of sneaking in. You have two strategies for choosing the best guard/minute combination.\n\n**Strategy 1**: Find the guard that has the most minutes asleep. What minute does that guard spend asleep the most?\n\nIn the example above, Guard #10 spent the most minutes asleep, a total of 50 minutes (20+25+5), while Guard #99 only slept for a total of 30 minutes (10+10+10). Guard #**10** was asleep most during minute **24** (on two days, whereas any other minute the guard was asleep was only seen on one day).\n\nWhile this example listed the entries in chronological order, your entries are in the order you found them. You'll need to organize them before they can be analyzed.\n\n**What is the ID of the guard you chose multiplied by the minute you chose?** (In the above example, the answer would be `10 * 24 = 240`.)"},4043:function(n,e,a){"use strict";a.r(e),e["default"]="The device on your wrist beeps several times, and once again you feel like you're falling.\n\n\"Situation critical,\" the device announces. \"Destination indeterminate. Chronal interference detected. Please specify new target coordinates.\"\n\nThe device then produces a list of coordinates (your puzzle input). Are they places it thinks are safe or dangerous? It recommends you check manual page 729. The Elves did not give you a manual.\n\n**If they're dangerous**, maybe you can minimize the danger by finding the coordinate that gives the largest distance from the other points.\n\nUsing only the [Manhattan distance](https://en.wikipedia.org/wiki/Taxicab_geometry), determine the **area** around each coordinate by counting the number of [integer](https://en.wikipedia.org/wiki/Integer) X,Y locations that are **closest** to that coordinate (and aren't **tied in distance** to any other coordinate).\n\nYour goal is to find the size of the **largest area** that isn't infinite. For example, consider the following list of coordinates:\n\n```\n1, 1\n1, 6\n8, 3\n3, 4\n5, 5\n8, 9\n```\n\nIf we name these coordinates `A` through `F`, we can draw them on a grid, putting `0,0` at the top left:\n\n```\n..........\n.A........\n..........\n........C.\n...D......\n.....E....\n.B........\n..........\n..........\n........F.\n```\n\nThis view is partial - the actual grid extends infinitely in all directions. Using the Manhattan distance, each location's closest coordinate can be determined, shown here in lowercase:\n\n```\naaaaa.cccc\naAaaa.cccc\naaaddecccc\naadddeccCc\n..dDdeeccc\nbb.deEeecc\nbBb.eeee..\nbbb.eeefff\nbbb.eeffff\nbbb.ffffFf\n```\n\nLocations shown as `.` are equally far from two or more coordinates, and so they don't count as being closest to any.\n\nIn this example, the areas of coordinates A, B, C, and F are infinite - while not shown here, their areas extend forever outside the visible grid. However, the areas of coordinates D and E are finite: D is closest to 9 locations, and E is closest to 17 (both including the coordinate's location itself). Therefore, in this example, the size of the largest area is **`17`**.\n\n**What is the size of the largest area** that isn't infinite?"},"40ba":function(n,e,a){"use strict";a.r(e),e["default"]="light salmon bags contain 5 dotted olive bags, 4 wavy lavender bags.\ndark purple bags contain 5 striped maroon bags, 1 wavy maroon bag.\nmuted lime bags contain 4 drab lavender bags, 1 clear orange bag, 2 striped black bags.\nlight green bags contain 5 dull gray bags, 3 dark crimson bags.\nbright violet bags contain 1 bright purple bag.\ndotted magenta bags contain 2 wavy beige bags, 1 dotted bronze bag.\nwavy bronze bags contain 4 clear fuchsia bags.\nbright plum bags contain 2 dim violet bags.\nshiny yellow bags contain 5 clear violet bags, 3 drab maroon bags.\npale tomato bags contain 3 bright aqua bags.\nlight chartreuse bags contain 3 vibrant fuchsia bags.\nmirrored blue bags contain 2 pale aqua bags.\nmuted maroon bags contain 3 muted indigo bags, 1 vibrant gold bag.\nclear green bags contain 4 dotted beige bags.\nmuted indigo bags contain 1 dull green bag.\nfaded orange bags contain 1 shiny gold bag, 4 dim tomato bags.\nposh purple bags contain 3 posh turquoise bags, 4 dull lime bags, 3 vibrant fuchsia bags, 2 dull green bags.\ndim beige bags contain 4 dull fuchsia bags, 5 pale silver bags, 3 shiny silver bags.\ndark tomato bags contain 5 dotted magenta bags.\nmuted chartreuse bags contain 2 plaid chartreuse bags, 3 faded orange bags.\ndrab teal bags contain 2 dotted blue bags, 2 striped maroon bags, 5 dotted tomato bags, 5 striped gold bags.\nshiny olive bags contain 5 dim blue bags, 3 dotted violet bags.\nbright magenta bags contain 2 dotted silver bags, 4 plaid black bags, 4 posh tomato bags, 4 dark salmon bags.\nstriped crimson bags contain 3 muted tomato bags, 2 mirrored black bags, 2 wavy yellow bags, 2 faded green bags.\nshiny bronze bags contain 5 striped turquoise bags, 5 light coral bags, 4 striped aqua bags, 5 dim bronze bags.\nstriped gray bags contain 2 faded coral bags.\nstriped yellow bags contain 4 clear chartreuse bags, 2 shiny violet bags, 2 faded gold bags.\nclear tan bags contain 4 dim green bags, 3 dull white bags, 2 posh turquoise bags.\ndark bronze bags contain 1 shiny purple bag, 2 dark coral bags, 5 plaid gold bags.\nlight orange bags contain 3 clear green bags, 2 muted blue bags, 3 drab gray bags.\nwavy turquoise bags contain 3 clear gold bags, 5 wavy tomato bags, 5 dotted coral bags.\ndrab tan bags contain 1 striped lime bag, 1 clear orange bag, 3 pale white bags, 3 bright yellow bags.\ndark plum bags contain 2 striped blue bags, 4 bright fuchsia bags.\ndotted blue bags contain 2 pale aqua bags, 1 dotted orange bag, 4 dotted indigo bags, 1 plaid blue bag.\nlight white bags contain 5 dull red bags, 4 faded salmon bags.\nposh olive bags contain 4 shiny silver bags, 5 dark bronze bags.\ndull olive bags contain 4 dark plum bags, 2 dotted coral bags, 4 clear blue bags, 2 dull maroon bags.\ndim tomato bags contain 2 dim chartreuse bags, 3 shiny gold bags.\nclear lavender bags contain 5 light aqua bags, 5 dull tan bags.\nwavy teal bags contain 4 dotted beige bags.\nmirrored orange bags contain 2 pale beige bags.\ndim purple bags contain 2 striped gold bags.\ndark chartreuse bags contain 2 wavy tomato bags.\nbright coral bags contain 4 muted violet bags.\ndrab yellow bags contain 1 dark gold bag, 5 dotted gold bags, 3 mirrored chartreuse bags.\nclear orange bags contain 3 bright cyan bags, 1 dull lavender bag.\nbright brown bags contain 1 light teal bag, 4 dotted salmon bags.\ndrab violet bags contain 5 bright crimson bags, 2 wavy bronze bags, 1 wavy lavender bag.\ndull turquoise bags contain 3 vibrant tomato bags, 4 light indigo bags, 4 shiny green bags.\nmuted cyan bags contain 5 muted plum bags, 3 drab red bags, 5 mirrored plum bags.\npale indigo bags contain 4 dim yellow bags, 1 bright red bag.\nvibrant green bags contain 3 shiny white bags, 3 faded fuchsia bags, 4 clear orange bags.\ndotted crimson bags contain 5 clear fuchsia bags, 1 clear tan bag.\ndrab maroon bags contain 4 muted olive bags.\ndull bronze bags contain 5 shiny indigo bags, 2 dim chartreuse bags.\nwavy brown bags contain 1 bright teal bag.\nposh blue bags contain 3 striped blue bags, 3 drab teal bags, 5 shiny black bags.\nclear chartreuse bags contain 1 clear tan bag, 2 dim cyan bags, 1 drab lime bag.\nfaded coral bags contain 4 dotted green bags, 3 plaid cyan bags, 2 bright cyan bags.\ndotted green bags contain 4 drab gray bags.\nwavy orange bags contain 5 striped coral bags, 5 striped blue bags, 5 wavy green bags.\ndotted tomato bags contain 1 light crimson bag, 5 light lime bags, 3 vibrant purple bags, 5 clear plum bags.\npale fuchsia bags contain 2 muted orange bags, 3 dull orange bags, 4 posh bronze bags, 2 faded purple bags.\nwavy lavender bags contain 1 dull lime bag.\ndull blue bags contain 5 striped silver bags, 5 bright brown bags, 5 dotted green bags, 3 dark brown bags.\nmuted beige bags contain 5 dim tomato bags, 2 shiny purple bags.\npale lime bags contain 1 vibrant crimson bag, 1 pale plum bag, 4 mirrored gold bags, 3 bright chartreuse bags.\nmirrored plum bags contain 2 dim white bags, 3 posh cyan bags, 3 dark lime bags.\nlight coral bags contain 4 clear silver bags, 5 dim green bags, 1 striped tomato bag.\nfaded lavender bags contain 2 dark tan bags, 2 wavy tomato bags, 2 light coral bags, 5 dotted silver bags.\nplaid lime bags contain 3 light orange bags, 5 drab black bags, 2 drab lime bags.\nvibrant cyan bags contain 1 vibrant gray bag, 5 wavy teal bags.\ndark blue bags contain 5 clear tan bags, 5 clear silver bags, 3 drab black bags.\nplaid coral bags contain 2 plaid aqua bags, 3 drab gold bags, 5 mirrored plum bags, 2 dim bronze bags.\nlight maroon bags contain 3 dim yellow bags, 1 light red bag.\nplaid silver bags contain 1 pale maroon bag, 5 shiny black bags, 2 dark coral bags, 3 posh violet bags.\nclear violet bags contain 2 vibrant fuchsia bags.\nclear cyan bags contain 2 plaid yellow bags, 4 plaid olive bags, 5 dull green bags.\ndim magenta bags contain 1 wavy plum bag.\ndrab salmon bags contain 5 dull white bags, 4 dark brown bags.\npale magenta bags contain 1 muted olive bag, 5 mirrored fuchsia bags, 3 shiny purple bags.\ndrab coral bags contain 2 striped silver bags.\nlight gold bags contain 4 shiny aqua bags, 5 dim violet bags, 2 dotted orange bags.\nshiny cyan bags contain 4 muted aqua bags, 3 striped maroon bags, 5 light salmon bags.\ndrab beige bags contain 4 light gold bags, 5 dull white bags.\nplaid fuchsia bags contain no other bags.\nvibrant teal bags contain 4 muted maroon bags, 5 posh violet bags, 2 clear tan bags, 1 dull orange bag.\ndim cyan bags contain 1 dark turquoise bag.\nmirrored chartreuse bags contain 1 dull lavender bag, 4 pale red bags, 4 plaid chartreuse bags.\nplaid gold bags contain 5 dark turquoise bags, 4 dim turquoise bags, 4 plaid fuchsia bags.\nwavy gold bags contain 2 light lime bags, 5 wavy tomato bags.\nwavy red bags contain 4 dotted lavender bags, 3 dotted blue bags, 4 striped brown bags, 2 faded orange bags.\ndull red bags contain 5 drab green bags.\nlight red bags contain 2 dark coral bags.\nwavy crimson bags contain 2 shiny gold bags, 1 drab white bag.\ndrab turquoise bags contain 4 posh gold bags, 2 pale plum bags, 3 wavy beige bags, 2 drab beige bags.\ndim lavender bags contain 4 dark olive bags.\nshiny tan bags contain 1 shiny teal bag, 1 clear tan bag, 4 wavy beige bags, 5 posh coral bags.\nmirrored fuchsia bags contain 3 bright brown bags.\nclear white bags contain 2 bright cyan bags, 1 pale orange bag, 3 vibrant gold bags, 3 dim cyan bags.\nclear magenta bags contain 3 dull violet bags, 2 dull coral bags, 1 dull olive bag, 1 pale cyan bag.\nmirrored salmon bags contain 5 drab gray bags, 1 striped magenta bag.\nvibrant crimson bags contain 4 shiny aqua bags, 5 faded bronze bags.\nclear yellow bags contain 3 bright beige bags.\nstriped olive bags contain 2 clear silver bags, 5 dim orange bags, 2 posh black bags, 2 striped lavender bags.\npale olive bags contain 3 dotted blue bags, 2 faded indigo bags, 3 pale crimson bags, 4 clear tan bags.\nstriped white bags contain 2 drab silver bags, 2 clear brown bags.\ndotted chartreuse bags contain 4 dark brown bags, 4 dim maroon bags, 3 plaid chartreuse bags, 2 dark red bags.\ndim fuchsia bags contain 3 posh indigo bags, 5 clear purple bags.\nshiny lime bags contain 3 muted gold bags, 3 vibrant crimson bags, 3 mirrored green bags.\nstriped blue bags contain 2 clear coral bags, 4 drab green bags, 2 dull green bags.\nshiny beige bags contain 3 wavy lime bags.\ndim tan bags contain 2 clear green bags, 2 dull green bags.\nposh cyan bags contain 4 faded purple bags.\nstriped violet bags contain 2 faded orange bags, 5 plaid crimson bags, 2 dull fuchsia bags, 2 bright black bags.\nmirrored crimson bags contain 1 drab gray bag, 3 faded crimson bags, 2 dim white bags, 4 dull green bags.\ndim orange bags contain 4 dim lime bags, 1 drab black bag.\ndrab cyan bags contain 2 shiny salmon bags, 4 muted plum bags, 4 dotted lavender bags, 2 plaid gray bags.\ndrab brown bags contain 2 muted purple bags.\nmirrored white bags contain 4 mirrored crimson bags, 5 pale plum bags, 2 bright maroon bags.\nvibrant silver bags contain 3 dark bronze bags, 2 light olive bags, 3 posh cyan bags.\nwavy magenta bags contain 3 muted aqua bags, 3 clear beige bags, 5 drab beige bags, 1 faded teal bag.\nstriped purple bags contain 3 pale crimson bags, 1 bright maroon bag, 2 striped bronze bags, 4 pale gold bags.\ndark teal bags contain 4 shiny aqua bags, 1 dull white bag, 2 dotted orange bags, 2 dull green bags.\ndotted coral bags contain 5 dark turquoise bags.\nvibrant lime bags contain 3 dim purple bags, 5 shiny black bags, 3 dotted black bags, 1 mirrored coral bag.\nbright gold bags contain 3 posh tan bags, 4 drab gray bags, 1 dotted maroon bag, 2 clear fuchsia bags.\ndark fuchsia bags contain 2 dull yellow bags, 1 dim orange bag, 4 muted beige bags.\nmuted tomato bags contain 1 posh teal bag, 5 shiny olive bags.\ndull indigo bags contain 4 muted maroon bags.\nbright purple bags contain 1 dotted olive bag, 1 wavy chartreuse bag, 1 clear tan bag, 2 dotted green bags.\nwavy violet bags contain 3 striped silver bags, 1 pale plum bag.\nshiny orange bags contain 2 drab black bags, 3 drab lime bags, 2 shiny black bags, 4 faded purple bags.\nlight beige bags contain 5 dim coral bags, 1 dark white bag, 1 light crimson bag, 3 mirrored coral bags.\ndrab tomato bags contain 5 shiny teal bags, 2 drab beige bags, 2 shiny purple bags.\ndrab lavender bags contain 3 striped tomato bags, 1 bright brown bag.\nshiny plum bags contain 4 plaid magenta bags, 5 posh indigo bags, 1 wavy violet bag, 5 clear white bags.\ndotted brown bags contain 3 mirrored olive bags, 5 light yellow bags, 3 light tomato bags.\nwavy coral bags contain 2 mirrored plum bags, 4 posh purple bags.\nshiny maroon bags contain 4 muted cyan bags, 1 wavy blue bag, 2 clear lime bags, 3 plaid orange bags.\nposh bronze bags contain 1 plaid gold bag, 1 posh yellow bag, 4 wavy lime bags, 2 dull white bags.\nbright fuchsia bags contain 3 dull silver bags, 2 light lime bags.\ndull plum bags contain 1 dotted salmon bag, 4 shiny lavender bags, 5 mirrored purple bags, 2 bright cyan bags.\nbright aqua bags contain 5 dull salmon bags, 1 plaid crimson bag, 4 shiny tomato bags, 5 vibrant fuchsia bags.\nshiny salmon bags contain 4 plaid orange bags, 5 drab green bags.\nmuted coral bags contain 4 dull indigo bags, 4 pale plum bags, 5 dotted black bags.\nvibrant salmon bags contain 5 dark turquoise bags, 1 drab red bag.\ndull black bags contain 1 dull magenta bag.\nplaid white bags contain 3 shiny purple bags.\ndrab green bags contain 5 striped maroon bags, 4 dark crimson bags, 1 faded teal bag, 1 dull green bag.\nfaded purple bags contain 4 shiny gold bags.\nstriped lime bags contain 5 striped turquoise bags, 1 clear silver bag.\nclear black bags contain 4 dark beige bags, 3 posh black bags.\nvibrant purple bags contain 5 dark brown bags.\nclear beige bags contain 1 light teal bag, 4 plaid fuchsia bags.\nlight lime bags contain 4 drab gray bags, 1 dark white bag, 3 drab tomato bags, 2 plaid maroon bags.\nmuted violet bags contain 1 posh turquoise bag, 4 mirrored white bags.\nvibrant olive bags contain 3 clear beige bags.\nbright salmon bags contain 1 plaid orange bag.\ndrab bronze bags contain 4 shiny turquoise bags, 1 clear fuchsia bag.\ndrab plum bags contain 2 muted gold bags, 5 mirrored turquoise bags, 5 faded orange bags, 5 bright magenta bags.\ndotted turquoise bags contain 5 striped maroon bags, 3 mirrored violet bags, 1 dark fuchsia bag.\nwavy olive bags contain 5 vibrant maroon bags, 3 shiny tan bags, 5 vibrant yellow bags, 5 dotted silver bags.\nwavy tomato bags contain 1 pale white bag, 5 light yellow bags.\nplaid chartreuse bags contain 3 drab black bags.\npale chartreuse bags contain 3 muted purple bags, 1 dull green bag, 3 dark brown bags, 5 light teal bags.\ndotted cyan bags contain 2 pale salmon bags.\nmuted gold bags contain 5 plaid silver bags, 5 dotted orange bags.\nposh orange bags contain 5 posh purple bags, 4 dark teal bags, 4 dotted silver bags.\npale brown bags contain 2 faded teal bags.\nwavy aqua bags contain 5 muted plum bags, 5 wavy tomato bags, 3 mirrored gold bags, 5 drab tan bags.\nbright blue bags contain 2 clear green bags.\ndotted red bags contain 4 wavy plum bags, 5 muted green bags.\nclear tomato bags contain 3 bright cyan bags, 1 dull gray bag, 5 drab maroon bags, 4 muted indigo bags.\nplaid orange bags contain 4 dotted coral bags, 5 pale gray bags, 5 shiny violet bags, 2 pale aqua bags.\nmuted teal bags contain 2 muted maroon bags, 1 drab teal bag, 2 light teal bags.\nwavy blue bags contain 5 pale chartreuse bags, 2 shiny white bags, 5 posh teal bags.\nposh teal bags contain 3 pale chartreuse bags.\nmirrored magenta bags contain 1 bright aqua bag.\nvibrant orange bags contain 3 mirrored magenta bags, 1 mirrored violet bag, 3 posh indigo bags, 5 faded orange bags.\nposh black bags contain 5 bright red bags.\npale white bags contain 3 dark teal bags, 1 dotted silver bag, 2 clear green bags.\nposh tomato bags contain 1 shiny yellow bag, 3 light black bags, 2 drab blue bags, 5 wavy crimson bags.\nmirrored teal bags contain 1 drab gray bag, 4 light lime bags.\nmuted green bags contain 5 striped brown bags.\ndim gold bags contain 2 posh indigo bags, 5 clear indigo bags, 4 posh gray bags.\ndull gray bags contain 4 posh orange bags, 3 shiny gold bags, 1 dim tomato bag, 3 bright crimson bags.\nstriped green bags contain 4 dark tan bags, 2 drab gray bags, 1 mirrored brown bag.\nclear coral bags contain 2 striped brown bags, 2 light lime bags.\nposh brown bags contain 3 vibrant purple bags, 3 dark chartreuse bags, 5 shiny cyan bags.\ndotted black bags contain 2 bright crimson bags, 3 posh orange bags, 4 light gold bags, 5 dark brown bags.\nposh chartreuse bags contain 5 wavy salmon bags, 3 striped silver bags, 2 drab violet bags.\nmirrored tomato bags contain 3 pale crimson bags.\nbright yellow bags contain 1 shiny coral bag, 2 muted blue bags, 4 wavy beige bags.\ndull salmon bags contain 3 bright blue bags, 4 dull green bags, 5 drab salmon bags.\npale black bags contain 5 shiny salmon bags.\ndrab aqua bags contain 5 striped fuchsia bags, 2 light lavender bags, 1 light magenta bag.\nmuted yellow bags contain 4 striped plum bags, 2 faded beige bags, 1 dull salmon bag, 5 bright red bags.\nstriped brown bags contain 3 bright red bags, 3 shiny violet bags.\nposh white bags contain 2 mirrored violet bags, 4 muted silver bags.\nposh lavender bags contain 5 light crimson bags, 5 pale silver bags, 2 shiny green bags, 4 mirrored silver bags.\nplaid beige bags contain 3 mirrored silver bags.\ndull silver bags contain 1 dotted silver bag, 1 drab salmon bag.\ndark violet bags contain 3 dotted green bags, 1 muted aqua bag, 4 bright chartreuse bags.\ndotted maroon bags contain 3 clear red bags, 4 drab blue bags, 4 vibrant gray bags.\ndim green bags contain 4 dotted silver bags.\nvibrant fuchsia bags contain 5 shiny violet bags, 1 dim violet bag, 5 dotted beige bags.\nmuted salmon bags contain 5 dim white bags.\ndrab orange bags contain 5 dark teal bags.\nvibrant violet bags contain 4 posh cyan bags, 4 mirrored brown bags, 5 dark beige bags.\nbright crimson bags contain 1 plaid fuchsia bag, 2 drab black bags.\nmuted plum bags contain 4 striped brown bags, 4 dull green bags, 4 mirrored beige bags.\nplaid violet bags contain 4 dotted indigo bags.\nwavy yellow bags contain 3 plaid lime bags, 2 mirrored orange bags.\nfaded teal bags contain 2 clear plum bags, 2 posh purple bags, 3 muted plum bags, 2 dim tomato bags.\nvibrant brown bags contain 1 light tan bag, 1 light lime bag.\nvibrant turquoise bags contain 2 clear bronze bags, 2 striped gray bags, 2 pale green bags, 5 vibrant indigo bags.\ndark black bags contain 3 mirrored gray bags.\nmuted orange bags contain 2 dull orange bags.\nshiny aqua bags contain 1 posh turquoise bag.\nposh fuchsia bags contain 2 shiny fuchsia bags, 5 light gold bags.\nlight plum bags contain 1 pale teal bag, 4 plaid maroon bags, 3 drab maroon bags.\nposh plum bags contain 4 muted magenta bags.\nplaid teal bags contain 1 muted gray bag, 3 clear bronze bags, 5 pale tomato bags.\npale aqua bags contain 4 posh turquoise bags, 5 light chartreuse bags, 1 pale white bag, 5 light gold bags.\nbright tomato bags contain 4 bright yellow bags, 5 dark red bags, 1 shiny orange bag, 1 dim teal bag.\nlight teal bags contain no other bags.\ndark olive bags contain 1 drab gray bag, 2 striped teal bags.\ndotted tan bags contain 4 shiny salmon bags, 2 light black bags, 5 bright red bags.\nlight cyan bags contain 1 clear beige bag, 4 plaid orange bags, 5 wavy lavender bags.\ndark indigo bags contain 5 mirrored orange bags, 3 posh brown bags.\nclear fuchsia bags contain 1 dark red bag, 2 posh black bags.\ndotted salmon bags contain 5 pale gray bags.\nmirrored turquoise bags contain 1 light aqua bag.\nplaid olive bags contain 2 dull silver bags, 2 light black bags.\nposh crimson bags contain 4 drab black bags, 4 dim teal bags, 5 light cyan bags, 3 dark teal bags.\ndull lime bags contain no other bags.\ndrab chartreuse bags contain 1 faded tan bag.\nfaded gray bags contain 5 dark crimson bags, 3 light lavender bags, 5 dim silver bags.\nwavy indigo bags contain 3 muted chartreuse bags, 2 dim green bags, 3 light fuchsia bags, 3 shiny white bags.\nlight tan bags contain 1 light olive bag, 1 dim cyan bag, 5 plaid orange bags.\nlight fuchsia bags contain 2 shiny indigo bags, 5 wavy coral bags, 2 wavy tomato bags.\ndull yellow bags contain 4 faded coral bags, 3 dim white bags, 5 dull white bags.\ndrab magenta bags contain 4 muted violet bags, 5 light plum bags, 4 faded orange bags.\nmirrored gray bags contain 2 wavy cyan bags, 1 drab teal bag, 1 clear red bag, 5 bright lavender bags.\ndull coral bags contain 1 bright yellow bag, 5 dull violet bags, 5 dark orange bags, 2 bright green bags.\nmirrored olive bags contain 1 drab plum bag, 3 plaid orange bags.\nmuted olive bags contain 5 shiny gold bags, 2 shiny aqua bags, 5 wavy chartreuse bags, 4 wavy lavender bags.\nclear gold bags contain 3 bright purple bags, 3 light cyan bags, 5 wavy tomato bags.\nplaid green bags contain 4 shiny yellow bags, 2 light salmon bags, 2 light silver bags, 5 dim purple bags.\nposh red bags contain 5 dark violet bags.\nmuted purple bags contain 3 drab salmon bags.\nvibrant aqua bags contain 5 clear beige bags, 3 vibrant silver bags, 1 faded olive bag.\nstriped indigo bags contain 3 plaid brown bags, 4 light aqua bags, 3 pale tomato bags.\nwavy tan bags contain 2 faded indigo bags, 1 vibrant chartreuse bag, 5 drab beige bags, 4 drab gold bags.\nshiny gold bags contain 5 wavy chartreuse bags.\nwavy purple bags contain 5 faded maroon bags, 4 pale magenta bags.\nmirrored indigo bags contain 2 plaid black bags, 5 dark teal bags, 2 dull indigo bags.\nplaid crimson bags contain 5 dotted green bags, 2 dull white bags.\ndark aqua bags contain 1 wavy coral bag, 1 plaid crimson bag.\nshiny fuchsia bags contain 1 dark olive bag, 4 wavy silver bags, 2 bright turquoise bags, 1 dull white bag.\nstriped orange bags contain 4 dotted green bags, 1 mirrored coral bag, 5 dull indigo bags.\ndrab purple bags contain 1 posh orange bag, 1 bright blue bag.\ndull orange bags contain 3 dim indigo bags, 3 pale orange bags.\npale plum bags contain 2 light yellow bags.\npale cyan bags contain 4 drab salmon bags, 3 dull magenta bags, 1 clear plum bag, 1 faded tomato bag.\ndotted indigo bags contain 1 mirrored beige bag, 1 drab black bag, 4 shiny aqua bags.\nshiny lavender bags contain 1 muted beige bag, 5 bright cyan bags, 2 dull green bags.\ndrab lime bags contain 5 drab black bags, 4 dotted salmon bags.\nmirrored bronze bags contain 3 dim bronze bags, 3 striped tan bags, 4 clear maroon bags, 4 dotted coral bags.\nshiny brown bags contain 4 striped gold bags, 1 vibrant silver bag, 3 shiny gold bags.\nstriped chartreuse bags contain 5 vibrant gray bags, 1 dark cyan bag.\nmuted black bags contain 4 plaid indigo bags.\nmuted aqua bags contain 1 pale red bag, 5 pale aqua bags.\nbright maroon bags contain 2 drab black bags, 1 clear violet bag, 1 dotted lavender bag, 1 mirrored turquoise bag.\nvibrant chartreuse bags contain 5 pale silver bags.\ndull purple bags contain 2 mirrored chartreuse bags.\nclear brown bags contain 2 light coral bags, 4 plaid cyan bags, 3 dim brown bags.\nshiny teal bags contain 5 drab black bags, 2 shiny silver bags, 3 muted purple bags.\ndull aqua bags contain 5 dotted lime bags, 4 mirrored lime bags.\nwavy green bags contain 1 striped brown bag, 2 striped turquoise bags, 4 dull silver bags, 3 drab white bags.\nclear gray bags contain 5 pale tan bags, 4 posh tomato bags, 3 dark brown bags, 1 striped violet bag.\nbright cyan bags contain 5 drab salmon bags, 5 light crimson bags.\nclear silver bags contain 4 mirrored turquoise bags, 4 posh orange bags, 3 light gold bags, 4 clear green bags.\npale purple bags contain 5 dotted beige bags, 5 posh orange bags.\nstriped tomato bags contain 1 dotted green bag, 4 dark turquoise bags.\nmuted tan bags contain 2 faded green bags, 3 dim cyan bags.\ndark coral bags contain 2 dim chartreuse bags, 1 striped plum bag.\nshiny white bags contain 2 posh orange bags.\ndim olive bags contain 1 faded teal bag, 4 pale lime bags, 3 dim teal bags.\nfaded black bags contain 4 pale cyan bags, 3 dull gray bags, 5 light teal bags, 4 shiny bronze bags.\nlight indigo bags contain 3 dim cyan bags, 1 shiny silver bag, 5 dull lavender bags.\ndim coral bags contain 2 striped silver bags, 4 dim tomato bags.\nplaid tan bags contain 2 mirrored turquoise bags, 4 dim beige bags, 5 shiny lavender bags, 4 dim bronze bags.\nstriped plum bags contain 2 wavy lavender bags, 1 drab white bag.\nfaded white bags contain 1 dim coral bag.\ndotted lime bags contain 2 muted gold bags, 5 shiny violet bags, 5 plaid violet bags, 1 wavy bronze bag.\ndotted violet bags contain 1 posh orange bag, 2 plaid fuchsia bags.\ndull gold bags contain 5 vibrant crimson bags, 1 drab bronze bag, 3 dotted tan bags.\nbright red bags contain 4 pale white bags, 4 light chartreuse bags, 3 clear beige bags, 5 dotted green bags.\nwavy cyan bags contain 5 dotted chartreuse bags, 1 wavy violet bag, 1 posh coral bag, 5 dotted bronze bags.\nfaded fuchsia bags contain 3 posh maroon bags, 4 clear plum bags, 3 drab lime bags.\ndim violet bags contain no other bags.\nstriped bronze bags contain 2 dim orange bags, 1 dark orange bag, 1 dark salmon bag, 4 faded teal bags.\ndrab olive bags contain 2 striped violet bags, 2 pale beige bags.\nmuted red bags contain 5 pale aqua bags, 1 wavy cyan bag, 4 clear white bags, 1 drab red bag.\nshiny blue bags contain 5 plaid aqua bags, 2 drab salmon bags, 5 pale tan bags, 4 vibrant cyan bags.\ndotted olive bags contain 5 dark brown bags.\nshiny silver bags contain 3 light gold bags, 5 bright crimson bags, 4 dark turquoise bags.\ndark beige bags contain 1 mirrored red bag, 3 dark salmon bags, 5 striped silver bags, 3 plaid orange bags.\nplaid red bags contain 2 wavy fuchsia bags, 2 shiny turquoise bags, 1 shiny coral bag.\nmirrored beige bags contain 1 plaid crimson bag, 4 dotted beige bags, 2 clear beige bags, 2 muted blue bags.\ndim plum bags contain 4 striped cyan bags, 5 shiny beige bags, 2 vibrant olive bags, 4 light maroon bags.\ndotted beige bags contain 3 shiny violet bags, 5 dim violet bags, 5 dull white bags, 2 plaid fuchsia bags.\npale beige bags contain 2 light aqua bags.\ndim gray bags contain 4 dotted indigo bags, 4 dim coral bags.\nlight purple bags contain 5 shiny brown bags, 2 drab violet bags, 1 striped tomato bag.\ndark salmon bags contain 1 dim green bag, 5 dim tan bags.\nmirrored lime bags contain 5 light gold bags, 5 drab tan bags.\nclear blue bags contain 3 drab tomato bags, 3 pale olive bags.\nplaid lavender bags contain 5 shiny indigo bags, 3 muted crimson bags, 5 mirrored lime bags.\nvibrant tomato bags contain 3 drab salmon bags, 5 faded purple bags, 1 faded bronze bag, 4 bright fuchsia bags.\nposh turquoise bags contain 1 dim chartreuse bag.\nclear turquoise bags contain 4 muted indigo bags, 1 dark maroon bag, 4 dull coral bags.\ndrab crimson bags contain 1 plaid turquoise bag, 2 faded salmon bags.\ndark brown bags contain no other bags.\nfaded tomato bags contain 2 light cyan bags, 1 light maroon bag.\nclear plum bags contain 2 drab lavender bags.\nbright white bags contain 2 dim tan bags, 1 faded orange bag, 1 dim aqua bag.\nshiny green bags contain 3 dotted coral bags, 1 mirrored white bag, 3 shiny gray bags.\nclear olive bags contain 3 mirrored teal bags.\nstriped red bags contain 1 pale green bag, 4 light maroon bags.\ndull tomato bags contain 3 mirrored white bags, 4 posh bronze bags.\nlight silver bags contain 1 mirrored plum bag, 2 dim teal bags.\nstriped teal bags contain 4 light bronze bags.\nmirrored tan bags contain 5 light gold bags, 2 posh brown bags.\nclear purple bags contain 5 clear magenta bags, 2 pale tomato bags, 2 light black bags.\nfaded green bags contain 5 light green bags, 5 plaid bronze bags.\nshiny red bags contain 3 dark white bags, 2 posh green bags, 2 shiny indigo bags.\nmuted white bags contain 4 dotted coral bags, 5 wavy blue bags.\ndim crimson bags contain 3 wavy blue bags, 2 pale gray bags.\nstriped lavender bags contain 2 dark blue bags, 2 pale aqua bags, 5 striped turquoise bags, 3 dark coral bags.\nwavy gray bags contain 2 muted gray bags, 1 pale silver bag, 5 muted blue bags, 5 pale tomato bags.\nmirrored silver bags contain 2 mirrored black bags, 5 mirrored plum bags, 5 striped silver bags, 3 dotted green bags.\nlight crimson bags contain 4 faded maroon bags, 4 dim chartreuse bags, 5 dotted violet bags.\nshiny coral bags contain 4 shiny silver bags, 3 posh yellow bags, 5 plaid blue bags, 3 shiny aqua bags.\npale red bags contain 4 drab white bags, 1 dotted silver bag, 4 drab salmon bags, 3 dull green bags.\nposh maroon bags contain 1 dim green bag.\nposh gold bags contain 1 pale green bag, 5 striped silver bags.\nlight blue bags contain 2 dotted silver bags, 1 muted beige bag.\npale lavender bags contain 5 vibrant orange bags, 2 dull chartreuse bags.\nfaded gold bags contain 2 shiny gray bags.\nbright orange bags contain 3 posh teal bags, 5 wavy green bags, 1 bright chartreuse bag, 5 dark white bags.\nmirrored violet bags contain 2 pale white bags, 5 dark brown bags, 5 bright blue bags.\ndim white bags contain 4 clear green bags.\nlight aqua bags contain no other bags.\ndull chartreuse bags contain 5 striped gold bags.\nclear salmon bags contain 5 pale salmon bags.\nbright olive bags contain 1 posh blue bag.\nbright lavender bags contain 2 pale lime bags.\npale turquoise bags contain 3 muted chartreuse bags.\nvibrant white bags contain 5 light red bags.\ndotted silver bags contain 1 dark brown bag, 5 dark turquoise bags, 4 dim violet bags.\ndull green bags contain 2 light teal bags, 5 drab black bags.\nwavy plum bags contain 4 pale indigo bags, 3 plaid yellow bags, 1 wavy green bag, 4 muted green bags.\nvibrant yellow bags contain 2 bright beige bags, 2 dim brown bags, 3 dotted teal bags.\nfaded beige bags contain 3 dim brown bags, 4 clear gold bags.\ndotted purple bags contain 4 shiny white bags.\nmirrored green bags contain 5 dark red bags, 4 drab violet bags, 3 bright lavender bags.\nshiny tomato bags contain 3 striped lavender bags.\nbright silver bags contain 1 dotted magenta bag, 3 dim green bags, 1 muted coral bag, 4 shiny teal bags.\nplaid maroon bags contain 5 dim brown bags.\ndim salmon bags contain 4 pale olive bags, 5 dark crimson bags.\ndark gold bags contain 3 dark orange bags, 3 bright fuchsia bags, 1 dull salmon bag, 5 dark blue bags.\nstriped cyan bags contain 3 plaid blue bags, 1 dark orange bag, 5 clear violet bags.\ndark gray bags contain 5 light orange bags.\nposh gray bags contain 1 plaid maroon bag, 4 drab gold bags, 1 muted gold bag, 4 light bronze bags.\npale gold bags contain 4 clear orange bags, 5 dim orange bags.\npale teal bags contain 1 posh teal bag, 5 pale red bags.\nvibrant lavender bags contain 5 plaid silver bags, 3 clear orange bags, 2 posh silver bags, 1 wavy violet bag.\ndim black bags contain 2 dark plum bags, 2 plaid turquoise bags, 3 dull salmon bags, 2 clear orange bags.\ndark white bags contain 2 vibrant fuchsia bags.\ndark red bags contain 3 shiny violet bags, 5 vibrant fuchsia bags, 1 pale crimson bag.\nstriped silver bags contain 2 posh purple bags, 4 dark white bags.\nstriped turquoise bags contain 1 bright brown bag, 2 dotted green bags.\nwavy salmon bags contain 5 light teal bags.\nmuted turquoise bags contain 1 bright gray bag, 2 plaid orange bags, 5 muted blue bags, 2 dotted olive bags.\nwavy black bags contain 2 mirrored black bags, 2 striped plum bags, 1 dull lime bag, 4 posh teal bags.\nstriped tan bags contain 5 pale green bags.\ndark turquoise bags contain 5 shiny violet bags, 3 dark brown bags.\nplaid black bags contain 5 plaid crimson bags, 2 dim turquoise bags, 4 dotted black bags.\nlight turquoise bags contain 4 plaid chartreuse bags, 4 dull violet bags.\nplaid gray bags contain 1 light yellow bag, 4 striped lavender bags, 4 wavy chartreuse bags, 3 dotted salmon bags.\ndrab black bags contain no other bags.\nplaid cyan bags contain 1 dim tan bag, 2 plaid gold bags, 1 drab gray bag.\nbright tan bags contain 1 plaid olive bag, 3 mirrored black bags.\nfaded brown bags contain 2 dotted tomato bags.\ndotted fuchsia bags contain 5 drab silver bags.\ndrab white bags contain 5 shiny violet bags.\nposh salmon bags contain 3 striped turquoise bags.\ndull maroon bags contain 2 faded indigo bags.\nbright bronze bags contain 1 muted blue bag, 5 dark chartreuse bags, 2 wavy purple bags, 3 vibrant violet bags.\nplaid bronze bags contain 1 dark brown bag.\ndark lavender bags contain 3 dim yellow bags, 4 drab red bags, 2 bright turquoise bags, 4 shiny black bags.\nwavy silver bags contain 1 light yellow bag, 2 pale red bags.\npale tan bags contain 5 dull orange bags, 5 dotted olive bags, 2 vibrant purple bags, 4 dull tan bags.\npale orange bags contain 3 light teal bags, 1 dim maroon bag.\nshiny indigo bags contain 3 drab maroon bags, 2 dotted indigo bags, 1 bright purple bag, 2 striped brown bags.\nmuted fuchsia bags contain 4 posh crimson bags, 3 clear beige bags.\nplaid plum bags contain 1 clear silver bag, 4 light cyan bags, 1 vibrant gray bag, 5 drab purple bags.\nfaded violet bags contain 3 dotted beige bags, 3 muted aqua bags.\ndotted plum bags contain 4 plaid brown bags, 5 wavy green bags, 3 dark cyan bags, 2 pale red bags.\nvibrant tan bags contain 4 clear gray bags.\ndrab silver bags contain 3 dull chartreuse bags.\nshiny turquoise bags contain 4 dark olive bags.\ndark silver bags contain 2 dotted black bags.\nstriped beige bags contain 5 striped magenta bags.\ndotted orange bags contain 1 light aqua bag, 4 posh turquoise bags.\nshiny magenta bags contain 3 drab salmon bags, 5 mirrored orange bags.\nposh magenta bags contain 3 plaid fuchsia bags, 4 dim maroon bags.\nclear bronze bags contain 1 wavy fuchsia bag, 2 vibrant black bags.\ndull violet bags contain 1 muted indigo bag, 2 posh green bags, 4 striped white bags, 1 clear red bag.\nposh lime bags contain 5 vibrant cyan bags.\npale silver bags contain 2 dark crimson bags, 1 light salmon bag, 1 clear brown bag.\nposh yellow bags contain 1 dim white bag, 2 pale crimson bags.\nvibrant bronze bags contain 4 faded gray bags, 1 dim gray bag, 2 posh cyan bags, 4 plaid lavender bags.\ndull beige bags contain 4 wavy fuchsia bags, 4 plaid crimson bags, 2 dark blue bags, 1 wavy silver bag.\ndull brown bags contain 4 pale turquoise bags, 4 clear tan bags.\nfaded turquoise bags contain 5 plaid gold bags, 4 wavy chartreuse bags.\ndark yellow bags contain 1 wavy lavender bag, 5 dark coral bags.\ndotted gray bags contain 4 posh purple bags, 5 wavy lavender bags, 5 shiny green bags, 5 plaid white bags.\ndim aqua bags contain 1 dull lime bag.\nposh violet bags contain 1 mirrored tomato bag, 3 posh cyan bags.\nshiny gray bags contain 3 clear green bags, 1 wavy bronze bag, 4 dark turquoise bags, 3 pale white bags.\ndrab red bags contain 2 mirrored violet bags, 3 dotted orange bags, 5 dark lime bags, 4 bright purple bags.\nstriped magenta bags contain 3 striped brown bags.\ndull magenta bags contain 4 dim tomato bags, 3 muted beige bags, 5 clear violet bags.\nclear maroon bags contain 4 plaid lime bags.\nposh silver bags contain 3 mirrored red bags.\ndark crimson bags contain 2 mirrored violet bags.\npale maroon bags contain 2 shiny black bags.\ndark magenta bags contain 1 dark green bag, 4 light plum bags.\nbright lime bags contain 1 pale indigo bag, 3 dim yellow bags, 2 drab maroon bags, 4 light plum bags.\ndark orange bags contain 1 wavy lavender bag, 1 dotted orange bag, 2 light crimson bags, 3 light yellow bags.\nwavy lime bags contain 4 clear blue bags, 2 muted brown bags, 2 mirrored violet bags, 2 dotted lavender bags.\ndotted lavender bags contain 1 posh teal bag, 5 dark red bags, 1 pale gray bag.\nmuted brown bags contain 1 dark white bag, 2 dull maroon bags, 1 faded maroon bag.\ndim yellow bags contain 5 dark white bags.\nfaded tan bags contain 4 light coral bags, 4 light yellow bags.\nfaded crimson bags contain 3 plaid fuchsia bags, 5 plaid orange bags.\npale salmon bags contain 5 pale red bags, 4 dotted olive bags, 3 plaid magenta bags.\ndim bronze bags contain 4 muted plum bags, 3 light cyan bags, 3 dark coral bags.\nbright teal bags contain 2 vibrant violet bags, 4 striped bronze bags, 1 striped violet bag, 2 dark gray bags.\npale bronze bags contain 2 plaid brown bags, 1 plaid white bag.\nvibrant plum bags contain 2 drab tan bags, 2 plaid yellow bags, 3 faded fuchsia bags.\ndotted teal bags contain 5 faded coral bags, 5 faded indigo bags, 1 posh violet bag, 3 pale indigo bags.\nplaid salmon bags contain 2 dark lavender bags, 3 posh bronze bags, 4 light coral bags, 1 posh orange bag.\ndim red bags contain 3 light violet bags.\ndrab gold bags contain 4 wavy silver bags, 5 light bronze bags.\nshiny violet bags contain no other bags.\nmirrored maroon bags contain 1 drab yellow bag, 5 wavy beige bags.\ndotted aqua bags contain 4 muted plum bags.\nfaded salmon bags contain 4 mirrored olive bags, 5 dim lavender bags.\nlight violet bags contain 2 wavy salmon bags.\nplaid brown bags contain 5 faded indigo bags.\nmirrored coral bags contain 4 pale gray bags.\nmuted lavender bags contain 1 posh beige bag, 2 clear silver bags, 1 dotted bronze bag.\nbright turquoise bags contain 2 striped black bags, 3 dull maroon bags.\nvibrant gold bags contain 5 bright purple bags, 1 bright red bag.\nmuted magenta bags contain 1 clear violet bag, 5 muted lavender bags, 4 faded aqua bags.\nfaded silver bags contain 4 posh brown bags, 2 mirrored silver bags.\ndim teal bags contain 2 dim violet bags, 1 dark white bag, 2 dotted black bags.\nstriped maroon bags contain 5 shiny white bags.\ndark maroon bags contain 2 plaid silver bags, 1 dull red bag, 2 shiny coral bags, 5 bright white bags.\nclear crimson bags contain 4 muted salmon bags, 5 clear green bags, 1 light blue bag, 5 posh magenta bags.\ndotted yellow bags contain 3 vibrant coral bags.\nlight tomato bags contain 4 dim chartreuse bags, 4 light gold bags, 5 dark white bags.\nshiny purple bags contain 3 dark turquoise bags.\nbright green bags contain 1 light chartreuse bag.\nmirrored yellow bags contain 4 striped white bags.\nlight lavender bags contain 1 wavy crimson bag, 3 dim yellow bags, 1 plaid olive bag, 5 wavy white bags.\nmuted crimson bags contain 2 dark beige bags, 1 dull green bag.\nmuted blue bags contain 3 shiny aqua bags, 5 dark turquoise bags, 1 dotted silver bag.\nstriped coral bags contain 2 dark red bags, 1 drab blue bag, 2 light aqua bags, 1 striped lavender bag.\nlight brown bags contain 4 plaid yellow bags.\nclear aqua bags contain 1 plaid olive bag, 1 plaid gold bag, 1 muted tan bag.\ndotted gold bags contain 2 dark white bags.\nplaid blue bags contain 5 dotted coral bags, 3 muted blue bags.\nmirrored cyan bags contain 3 dark white bags, 1 striped turquoise bag, 3 light coral bags.\nfaded red bags contain 3 clear tan bags, 5 striped brown bags, 3 shiny cyan bags.\nclear lime bags contain 4 clear silver bags.\ndim lime bags contain 2 light teal bags, 1 posh turquoise bag, 3 dotted silver bags, 1 drab lavender bag.\ndull teal bags contain 1 light maroon bag, 4 bright coral bags.\nlight gray bags contain 5 mirrored lime bags, 3 light violet bags, 1 muted olive bag, 4 striped brown bags.\ndotted white bags contain 3 wavy white bags, 1 dotted beige bag, 5 clear green bags.\nshiny crimson bags contain 3 pale salmon bags, 3 dark lime bags, 4 dull blue bags, 1 vibrant chartreuse bag.\ndim brown bags contain 5 mirrored beige bags, 5 light orange bags, 2 faded crimson bags.\ndim blue bags contain 5 pale gray bags.\nstriped black bags contain 2 vibrant purple bags, 4 vibrant salmon bags, 2 clear gold bags, 3 shiny yellow bags.\nstriped fuchsia bags contain 3 plaid fuchsia bags, 4 posh teal bags, 5 drab tomato bags, 3 dim turquoise bags.\nshiny black bags contain 2 striped tomato bags.\nvibrant maroon bags contain 5 bright aqua bags, 1 posh white bag, 1 pale silver bag, 2 muted tan bags.\nposh coral bags contain 2 mirrored violet bags, 2 mirrored beige bags, 4 striped tomato bags, 2 drab white bags.\nwavy chartreuse bags contain 5 muted blue bags, 1 bright crimson bag, 1 pale gray bag, 1 shiny silver bag.\nbright chartreuse bags contain 5 striped brown bags.\nbright gray bags contain 3 drab gray bags, 4 plaid cyan bags, 1 drab maroon bag.\ndark lime bags contain 4 clear green bags, 4 dotted white bags.\nfaded maroon bags contain 5 shiny gold bags, 4 dotted green bags, 2 striped brown bags.\ndim silver bags contain 5 muted tomato bags, 5 mirrored violet bags.\nfaded chartreuse bags contain 2 pale gray bags, 3 striped cyan bags.\nposh beige bags contain 3 faded blue bags.\nstriped aqua bags contain 5 bright gray bags, 4 shiny aqua bags, 3 shiny gray bags.\ndull tan bags contain 2 dotted green bags, 3 light crimson bags, 3 mirrored fuchsia bags, 5 shiny cyan bags.\ndark green bags contain 2 drab yellow bags.\nwavy fuchsia bags contain 2 wavy gray bags, 1 faded fuchsia bag, 5 bright maroon bags.\nvibrant indigo bags contain 5 dotted tomato bags, 4 light coral bags, 1 dark silver bag.\ndrab indigo bags contain 5 pale coral bags.\nfaded indigo bags contain 5 vibrant fuchsia bags, 1 wavy coral bag, 3 striped teal bags.\npale violet bags contain 3 pale lime bags, 2 posh indigo bags, 5 muted blue bags, 2 plaid cyan bags.\ndrab blue bags contain 3 dull silver bags, 2 dotted beige bags, 1 muted aqua bag, 3 dotted orange bags.\ndull crimson bags contain 2 dim brown bags, 1 mirrored black bag.\nmirrored lavender bags contain 2 posh chartreuse bags, 1 vibrant blue bag, 5 dull magenta bags.\nlight olive bags contain 5 dotted silver bags, 5 dim white bags, 5 pale teal bags.\nvibrant blue bags contain 1 dark fuchsia bag, 5 dim teal bags.\ndim chartreuse bags contain no other bags.\nbright black bags contain 1 dull lavender bag, 3 dark teal bags, 2 plaid blue bags, 5 dark white bags.\ndark cyan bags contain 5 light beige bags, 5 bright orange bags.\nlight yellow bags contain 5 striped silver bags, 2 dark brown bags, 2 dotted salmon bags, 4 dim violet bags.\ndotted bronze bags contain 5 dim blue bags, 2 dark chartreuse bags.\nfaded yellow bags contain 1 faded fuchsia bag, 4 dark brown bags, 1 muted salmon bag.\ndull fuchsia bags contain 1 bright turquoise bag, 1 drab green bag.\nfaded blue bags contain 5 dull chartreuse bags, 1 shiny violet bag.\nstriped gold bags contain 2 dull silver bags, 4 dotted black bags.\nmirrored black bags contain 1 wavy tomato bag, 3 posh violet bags, 4 vibrant crimson bags, 1 dull lime bag.\nposh tan bags contain 2 plaid olive bags, 5 dotted white bags.\nvibrant black bags contain 1 light chartreuse bag, 2 dark orange bags.\ndim indigo bags contain 1 plaid crimson bag.\nmirrored red bags contain 4 faded maroon bags.\nvibrant beige bags contain 5 faded teal bags, 5 shiny coral bags, 4 drab teal bags.\ndrab gray bags contain 4 light teal bags, 1 dull white bag.\npale blue bags contain 1 posh purple bag, 4 light cyan bags.\nposh indigo bags contain 4 dim gray bags, 2 striped maroon bags, 4 drab white bags, 3 light tomato bags.\ndim maroon bags contain 3 pale white bags.\nfaded aqua bags contain 2 drab white bags, 3 faded purple bags, 4 striped maroon bags.\nplaid aqua bags contain 1 striped turquoise bag, 4 light bronze bags, 3 pale chartreuse bags.\ndull lavender bags contain 5 striped plum bags, 1 dotted white bag, 2 dotted salmon bags, 5 dull silver bags.\nlight magenta bags contain 2 drab violet bags, 5 drab coral bags, 2 vibrant lavender bags, 3 dull olive bags.\nfaded lime bags contain 3 mirrored coral bags, 2 wavy lavender bags, 3 light yellow bags, 1 shiny silver bag.\nwavy white bags contain 4 drab white bags.\nclear indigo bags contain 3 dim cyan bags.\nplaid turquoise bags contain 4 drab white bags, 3 dark teal bags, 2 plaid fuchsia bags.\nplaid tomato bags contain 3 drab violet bags, 5 striped salmon bags.\nbright beige bags contain 5 shiny black bags, 5 posh salmon bags, 4 striped bronze bags, 3 pale plum bags.\nvibrant red bags contain 4 pale fuchsia bags.\nposh green bags contain 1 drab red bag.\nfaded plum bags contain 5 plaid chartreuse bags, 5 bright bronze bags, 4 dark blue bags, 3 clear bronze bags.\ndim turquoise bags contain 3 light chartreuse bags.\nclear red bags contain 1 drab blue bag, 5 striped fuchsia bags, 5 striped brown bags, 3 clear silver bags.\npale gray bags contain 1 dull green bag, 2 dotted orange bags, 2 dark turquoise bags.\nplaid purple bags contain 1 dim cyan bag, 4 striped lime bags, 3 drab violet bags.\nclear teal bags contain 2 dull cyan bags, 1 wavy cyan bag, 2 light blue bags.\nmirrored brown bags contain 5 mirrored red bags.\nlight bronze bags contain 1 wavy white bag.\nmuted gray bags contain 5 faded lime bags, 1 pale beige bag, 1 shiny indigo bag, 1 faded tan bag.\nstriped salmon bags contain 5 dim teal bags, 5 dotted silver bags, 5 dim gray bags.\nbright indigo bags contain 3 drab beige bags, 1 shiny red bag, 4 vibrant silver bags, 4 clear plum bags.\npale coral bags contain 5 wavy plum bags, 2 clear beige bags.\nfaded olive bags contain 2 bright crimson bags, 5 dotted green bags, 5 dull bronze bags, 2 posh turquoise bags.\nwavy maroon bags contain 5 mirrored fuchsia bags, 5 dim olive bags.\nplaid indigo bags contain 5 posh magenta bags, 1 dim bronze bag, 1 light blue bag.\nposh aqua bags contain 5 clear beige bags, 3 dark lime bags.\nfaded cyan bags contain 1 drab tomato bag, 4 posh crimson bags, 5 pale chartreuse bags, 3 faded tan bags.\nplaid yellow bags contain 3 wavy cyan bags, 3 striped black bags.\nfaded magenta bags contain 4 bright coral bags.\ndull cyan bags contain 4 mirrored magenta bags, 3 clear chartreuse bags.\nvibrant coral bags contain 2 dotted aqua bags, 1 bright cyan bag.\nmirrored gold bags contain 2 shiny purple bags.\nmirrored purple bags contain 3 dark beige bags.\npale yellow bags contain 5 plaid coral bags, 3 wavy silver bags, 1 mirrored salmon bag, 3 light lime bags.\ndark tan bags contain 1 light yellow bag, 5 plaid turquoise bags, 4 shiny gold bags.\nfaded bronze bags contain 5 striped gold bags, 1 posh teal bag.\nlight black bags contain 2 shiny black bags, 2 mirrored coral bags.\nvibrant gray bags contain 5 dark teal bags, 3 muted aqua bags, 4 shiny violet bags, 5 dark bronze bags.\nwavy beige bags contain 2 pale maroon bags.\nmuted silver bags contain 4 plaid orange bags, 1 shiny chartreuse bag.\nplaid magenta bags contain 1 dotted tan bag, 3 striped fuchsia bags, 5 light olive bags.\ndrab fuchsia bags contain 5 dark violet bags, 1 shiny gold bag, 3 pale cyan bags.\nshiny chartreuse bags contain 5 dotted violet bags.\npale crimson bags contain 3 pale aqua bags.\ndull white bags contain no other bags.\npale green bags contain 4 bright green bags, 2 dull lime bags, 1 striped lime bag.\nmuted bronze bags contain 5 bright tomato bags, 5 light red bags, 2 shiny yellow bags, 2 dim teal bags.\nmirrored aqua bags contain 3 dim tomato bags, 1 mirrored crimson bag, 1 wavy silver bag.\nvibrant magenta bags contain 2 dark lime bags."},"41ba":function(n,e,a){"use strict";a.r(e),e["default"]="With the toboggan login problems resolved, you set off toward the airport. While travel by toboggan might be easy, it's certainly not safe: there's very minimal steering and the area is covered in trees. You'll need to see which angles will take you near the fewest trees.\n\nDue to the local geology, trees in this area only grow on exact integer coordinates in a grid. You make a map (your puzzle input) of the open squares (`.`) and trees (`#`) you can see. For example:\n\n```\n..##.......\n#...#...#..\n.#....#..#.\n..#.#...#.#\n.#...##..#.\n..#.##.....\n.#.#.#....#\n.#........#\n#.##...#...\n#...##....#\n.#..#...#.#\n```\n\nThese aren't the only trees, though; due to something you read about once involving arboreal genetics and biome stability, the same pattern repeats to the right many times:\n\n```\n..##.........##.........##.........##.........##.........##.......  ---\x3e\n#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..\n.#....#..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.\n..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#\n.#...##..#..#...##..#..#...##..#..#...##..#..#...##..#..#...##..#.\n..#.##.......#.##.......#.##.......#.##.......#.##.......#.##.....  ---\x3e\n.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#\n.#........#.#........#.#........#.#........#.#........#.#........#\n#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...\n#...##....##...##....##...##....##...##....##...##....##...##....#\n.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#  ---\x3e\n```\n\nYou start on the open square (`.`) in the top-left corner and need to reach the bottom (below the bottom-most row on your map).\n\nThe toboggan can only follow a few specific slopes (you opted for a cheaper model that prefers rational numbers); start by **counting all the trees** you would encounter for the slope **right `3`, down `1`**:\n\nFrom your starting position at the top-left, check the position that is right `3` and down `1`. Then, check the position that is right `3` and down `1` from there, and so on until you go past the bottom of the map.\n\nThe locations you'd check in the above example are marked here with `O` where there was an open square and `X` where there was a tree:\n\n```\n..##.........##.........##.........##.........##.........##.......  ---\x3e\n#..O#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..\n.#....X..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.\n..#.#...#O#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#\n.#...##..#..X...##..#..#...##..#..#...##..#..#...##..#..#...##..#.\n..#.##.......#.X#.......#.##.......#.##.......#.##.......#.##.....  ---\x3e\n.#.#.#....#.#.#.#.O..#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#\n.#........#.#........X.#........#.#........#.#........#.#........#\n#.##...#...#.##...#...#.X#...#...#.##...#...#.##...#...#.##...#...\n#...##....##...##....##...#X....##...##....##...##....##...##....#\n.#..#...#.#.#..#...#.#.#..#...X.#.#..#...#.#.#..#...#.#.#..#...#.#  ---\x3e\n```\n\nIn this example, traversing the map using this slope would cause you to encounter `7` trees.\n\nStarting at the top-left corner of your map and following a slope of right `3` and down `1`, **how many trees would you encounter**?"},"42d8":function(n,e,a){"use strict";a.r(e),e["default"]="Now that you've identified which tickets contain invalid values, **discard those tickets entirely**. Use the remaining valid tickets to determine which field is which.\n\nUsing the valid ranges for each field, determine what order the fields appear on the tickets. The order is consistent between all tickets: if `seat` is the third field, it is the third field on every ticket, including **your ticket**.\n\nFor example, suppose you have the following notes:\n\n```\nclass: 0-1 or 4-19\nrow: 0-5 or 8-19\nseat: 0-13 or 16-19\n\nyour ticket:\n11,12,13\n\nnearby tickets:\n3,9,18\n15,1,5\n5,14,9\n```\n\nBased on the **nearby tickets** in the above example, the first position must be `row`, the second position must be `class`, and the third position must be `seat`; you can conclude that in **your ticket**, `class` is `12`, `row` is `11`, and `seat` is `13`.\n\nOnce you work out which field is which, look for the six fields on **your ticket** that start with the word `departure`. **What do you get if you multiply those six values together?**"},4354:function(n,e,a){"use strict";a.r(e),e["default"]="The line is moving more quickly now, but you overhear airport security talking about how passports with invalid data are getting through. Better add some data validation, quick!\n\nYou can continue to ignore the cid field, but each other field has strict rules about what values are valid for automatic validation:\n\n- `byr` (Birth Year) - four digits; at least `1920` and at most `2002`.\n- `iyr` (Issue Year) - four digits; at least `2010` and at most `2020`.\n- `eyr` (Expiration Year) - four digits; at least `2020` and at most `2030`.\n- `hgt` (Height) - a number followed by either `cm` or `in`:\n  - If `cm`, the number must be at least `150` and at most `193`.\n  - If `in`, the number must be at least `59` and at most `76`.\n- `hcl` (Hair Color) - a # followed by exactly six characters `0-9` or `a-f`.\n- `ecl` (Eye Color) - exactly one of: `amb` `blu` `brn` `gry` `grn` `hzl` `oth`.\n- `pid` (Passport ID) - a nine-digit number, including leading zeroes.\n- `cid` (Country ID) - ignored, missing or not.\n\nYour job is to count the passports where all required fields are both **present** and **valid** according to the above rules. Here are some example values:\n\n```\nbyr valid:   2002\nbyr invalid: 2003\n\nhgt valid:   60in\nhgt valid:   190cm\nhgt invalid: 190in\nhgt invalid: 190\n\nhcl valid:   #123abc\nhcl invalid: #123abz\nhcl invalid: 123abc\n\necl valid:   brn\necl invalid: wat\n\npid valid:   000000001\npid invalid: 0123456789\n```\n\nHere are some invalid passports:\n\n```\neyr:1972 cid:100\nhcl:#18171d ecl:amb hgt:170 pid:186cm iyr:2018 byr:1926\n\niyr:2019\nhcl:#602927 eyr:1967 hgt:170cm\necl:grn pid:012533040 byr:1946\n\nhcl:dab227 iyr:2012\necl:brn hgt:182cm pid:021572410 eyr:2020 byr:1992 cid:277\n\nhgt:59cm ecl:zzz\neyr:2038 hcl:74454a iyr:2023\npid:3556412378 byr:2007\nHere are some valid passports:\n\npid:087499704 hgt:74in ecl:grn iyr:2012 eyr:2030 byr:1980\nhcl:#623a2f\n\neyr:2029 ecl:blu cid:129 byr:1989\niyr:2014 pid:896056539 hcl:#a97842 hgt:165cm\n\nhcl:#888785\nhgt:164cm byr:2001 iyr:2015 cid:88\npid:545766238 ecl:hzl\neyr:2022\n\niyr:2010 hgt:158cm hcl:#b6652a ecl:blu byr:1944 eyr:2021 pid:093154719\n```\n\nCount the number of **valid** passports - those that have all required fields and valid values. Continue to treat cid as optional. **In your batch file, how many passports are valid?**"},"44e7":function(n,e,a){var s=a("861d"),t=a("c6b6"),b=a("b622"),i=b("match");n.exports=function(n){var e;return s(n)&&(void 0!==(e=n[i])?!!e:"RegExp"==t(n))}},"456d":function(n,e,a){"use strict";a.r(e),e["default"]="You land at the regional airport in time for your next flight. In fact, it looks like you'll even have time to grab some food: all flights are currently delayed due to **issues in luggage processing**.\n\nDue to recent aviation regulations, many rules (your puzzle input) are being enforced about bags and their contents; bags must be color-coded and must contain specific quantities of other color-coded bags. Apparently, nobody responsible for these regulations considered how long they would take to enforce!\n\nFor example, consider the following rules:\n\n```\nlight red bags contain 1 bright white bag, 2 muted yellow bags.\ndark orange bags contain 3 bright white bags, 4 muted yellow bags.\nbright white bags contain 1 shiny gold bag.\nmuted yellow bags contain 2 shiny gold bags, 9 faded blue bags.\nshiny gold bags contain 1 dark olive bag, 2 vibrant plum bags.\ndark olive bags contain 3 faded blue bags, 4 dotted black bags.\nvibrant plum bags contain 5 faded blue bags, 6 dotted black bags.\nfaded blue bags contain no other bags.\ndotted black bags contain no other bags.\n```\n\nThese rules specify the required contents for `9` bag types. In this example, every `faded blue` bag is empty, every `vibrant plum` bag contains 11 bags (5 `faded blue` and 6 `dotted black`), and so on.\n\nYou have a **`shiny gold`** bag. If you wanted to carry it in at least one other bag, how many different bag colors would be valid for the outermost bag? (In other words: how many colors can, eventually, contain at least one shiny gold bag?)\n\nIn the above rules, the following options would be available to you:\n\n- A `bright white` bag, which can hold your `shiny gold` bag directly.\n- A `muted yellow` bag, which can hold your `shiny gold` bag directly, plus some other bags.\n- A `dark orange` bag, which can hold `bright white` and `muted yellow` bags, either of which could then hold your `shiny gold` bag.\n- A `light red` bag, which can hold `bright white` and muted `yellow bags`, either of which could then hold your `shiny gold` bag.\n\nSo, in this example, the number of bag colors that can eventually contain at least one `shiny gold` bag is **`4`**.\n\n**How many bag colors can eventually contain at least one `shiny gold` bag?** (The list of rules is quite long; make sure you get all of it.)"},"46da":function(n,e,a){"use strict";a.r(e),e["default"]="You lost to the small crab! Fortunately, crabs aren't very good at recursion. To defend your honor as a Raft Captain, you challenge the small crab to a game of **Recursive Combat**.\n\nRecursive Combat still starts by splitting the cards into two decks (you offer to play with the same starting decks as before - it's only fair). Then, the game consists of a series of **rounds** with a few changes:\n\n- Before either player deals a card, if there was a previous round in this game that had exactly the same cards in the same order in the same players' decks, the **game** instantly ends in a win for player 1. Previous rounds from other games are not considered. (This prevents infinite games of Recursive Combat, which everyone agrees is a bad idea.)\n- Otherwise, this round's cards must be in a new configuration; the players begin the round by each drawing the top card of their deck as normal.\n- If both players have at least as many cards remaining in their deck as the value of the card they just drew, the winner of the round is determined by playing a new game of Recursive Combat (see below).\n- Otherwise, at least one player must not have enough cards left in their deck to recurse; the winner of the round is the player with the higher-value card.\n\nAs in regular Combat, the winner of the round (even if they won the round by winning a sub-game) takes the two cards dealt at the beginning of the round and places them on the bottom of their own deck (again so that the winner's card is above the other card). Note that the winner's card might be **the lower-valued of the two cards** if they won the round due to winning a sub-game. If collecting cards by winning the round causes a player to have all of the cards, they win, and the game ends.\n\nHere is an example of a small game that would loop forever without the infinite game prevention rule:\n\n```\nPlayer 1:\n43\n19\n\nPlayer 2:\n2\n29\n14\n```\n\nDuring a round of Recursive Combat, if both players have at least as many cards in their own decks as the number on the card they just dealt, the winner of the round is determined by recursing into a sub-game of Recursive Combat. (For example, if player 1 draws the `3` card, and player 2 draws the `7` card, this would occur if player 1 has at least 3 cards left and player 2 has at least 7 cards left, not counting the `3` and `7` cards that were drawn.)\n\nTo play a sub-game of Recursive Combat, each player creates a new deck by making a **copy** of the next cards in their deck (the quantity of cards copied is equal to the number on the card they drew to trigger the sub-game). During this sub-game, the game that triggered it is on hold and completely unaffected; no cards are removed from players' decks to form the sub-game. (For example, if player 1 drew the 3 card, their deck in the sub-game would be **copies** of the next three cards in their deck.)\n\nHere is a complete example of gameplay, where `Game 1` is the primary game of Recursive Combat:\n\n```\n=== Game 1 ===\n\n-- Round 1 (Game 1) --\nPlayer 1's deck: 9, 2, 6, 3, 1\nPlayer 2's deck: 5, 8, 4, 7, 10\nPlayer 1 plays: 9\nPlayer 2 plays: 5\nPlayer 1 wins round 1 of game 1!\n\n-- Round 2 (Game 1) --\nPlayer 1's deck: 2, 6, 3, 1, 9, 5\nPlayer 2's deck: 8, 4, 7, 10\nPlayer 1 plays: 2\nPlayer 2 plays: 8\nPlayer 2 wins round 2 of game 1!\n\n-- Round 3 (Game 1) --\nPlayer 1's deck: 6, 3, 1, 9, 5\nPlayer 2's deck: 4, 7, 10, 8, 2\nPlayer 1 plays: 6\nPlayer 2 plays: 4\nPlayer 1 wins round 3 of game 1!\n\n-- Round 4 (Game 1) --\nPlayer 1's deck: 3, 1, 9, 5, 6, 4\nPlayer 2's deck: 7, 10, 8, 2\nPlayer 1 plays: 3\nPlayer 2 plays: 7\nPlayer 2 wins round 4 of game 1!\n\n-- Round 5 (Game 1) --\nPlayer 1's deck: 1, 9, 5, 6, 4\nPlayer 2's deck: 10, 8, 2, 7, 3\nPlayer 1 plays: 1\nPlayer 2 plays: 10\nPlayer 2 wins round 5 of game 1!\n\n-- Round 6 (Game 1) --\nPlayer 1's deck: 9, 5, 6, 4\nPlayer 2's deck: 8, 2, 7, 3, 10, 1\nPlayer 1 plays: 9\nPlayer 2 plays: 8\nPlayer 1 wins round 6 of game 1!\n\n-- Round 7 (Game 1) --\nPlayer 1's deck: 5, 6, 4, 9, 8\nPlayer 2's deck: 2, 7, 3, 10, 1\nPlayer 1 plays: 5\nPlayer 2 plays: 2\nPlayer 1 wins round 7 of game 1!\n\n-- Round 8 (Game 1) --\nPlayer 1's deck: 6, 4, 9, 8, 5, 2\nPlayer 2's deck: 7, 3, 10, 1\nPlayer 1 plays: 6\nPlayer 2 plays: 7\nPlayer 2 wins round 8 of game 1!\n\n-- Round 9 (Game 1) --\nPlayer 1's deck: 4, 9, 8, 5, 2\nPlayer 2's deck: 3, 10, 1, 7, 6\nPlayer 1 plays: 4\nPlayer 2 plays: 3\nPlaying a sub-game to determine the winner...\n\n=== Game 2 ===\n\n-- Round 1 (Game 2) --\nPlayer 1's deck: 9, 8, 5, 2\nPlayer 2's deck: 10, 1, 7\nPlayer 1 plays: 9\nPlayer 2 plays: 10\nPlayer 2 wins round 1 of game 2!\n\n-- Round 2 (Game 2) --\nPlayer 1's deck: 8, 5, 2\nPlayer 2's deck: 1, 7, 10, 9\nPlayer 1 plays: 8\nPlayer 2 plays: 1\nPlayer 1 wins round 2 of game 2!\n\n-- Round 3 (Game 2) --\nPlayer 1's deck: 5, 2, 8, 1\nPlayer 2's deck: 7, 10, 9\nPlayer 1 plays: 5\nPlayer 2 plays: 7\nPlayer 2 wins round 3 of game 2!\n\n-- Round 4 (Game 2) --\nPlayer 1's deck: 2, 8, 1\nPlayer 2's deck: 10, 9, 7, 5\nPlayer 1 plays: 2\nPlayer 2 plays: 10\nPlayer 2 wins round 4 of game 2!\n\n-- Round 5 (Game 2) --\nPlayer 1's deck: 8, 1\nPlayer 2's deck: 9, 7, 5, 10, 2\nPlayer 1 plays: 8\nPlayer 2 plays: 9\nPlayer 2 wins round 5 of game 2!\n\n-- Round 6 (Game 2) --\nPlayer 1's deck: 1\nPlayer 2's deck: 7, 5, 10, 2, 9, 8\nPlayer 1 plays: 1\nPlayer 2 plays: 7\nPlayer 2 wins round 6 of game 2!\nThe winner of game 2 is player 2!\n\n...anyway, back to game 1.\nPlayer 2 wins round 9 of game 1!\n\n-- Round 10 (Game 1) --\nPlayer 1's deck: 9, 8, 5, 2\nPlayer 2's deck: 10, 1, 7, 6, 3, 4\nPlayer 1 plays: 9\nPlayer 2 plays: 10\nPlayer 2 wins round 10 of game 1!\n\n-- Round 11 (Game 1) --\nPlayer 1's deck: 8, 5, 2\nPlayer 2's deck: 1, 7, 6, 3, 4, 10, 9\nPlayer 1 plays: 8\nPlayer 2 plays: 1\nPlayer 1 wins round 11 of game 1!\n\n-- Round 12 (Game 1) --\nPlayer 1's deck: 5, 2, 8, 1\nPlayer 2's deck: 7, 6, 3, 4, 10, 9\nPlayer 1 plays: 5\nPlayer 2 plays: 7\nPlayer 2 wins round 12 of game 1!\n\n-- Round 13 (Game 1) --\nPlayer 1's deck: 2, 8, 1\nPlayer 2's deck: 6, 3, 4, 10, 9, 7, 5\nPlayer 1 plays: 2\nPlayer 2 plays: 6\nPlaying a sub-game to determine the winner...\n\n=== Game 3 ===\n\n-- Round 1 (Game 3) --\nPlayer 1's deck: 8, 1\nPlayer 2's deck: 3, 4, 10, 9, 7, 5\nPlayer 1 plays: 8\nPlayer 2 plays: 3\nPlayer 1 wins round 1 of game 3!\n\n-- Round 2 (Game 3) --\nPlayer 1's deck: 1, 8, 3\nPlayer 2's deck: 4, 10, 9, 7, 5\nPlayer 1 plays: 1\nPlayer 2 plays: 4\nPlaying a sub-game to determine the winner...\n\n=== Game 4 ===\n\n-- Round 1 (Game 4) --\nPlayer 1's deck: 8\nPlayer 2's deck: 10, 9, 7, 5\nPlayer 1 plays: 8\nPlayer 2 plays: 10\nPlayer 2 wins round 1 of game 4!\nThe winner of game 4 is player 2!\n\n...anyway, back to game 3.\nPlayer 2 wins round 2 of game 3!\n\n-- Round 3 (Game 3) --\nPlayer 1's deck: 8, 3\nPlayer 2's deck: 10, 9, 7, 5, 4, 1\nPlayer 1 plays: 8\nPlayer 2 plays: 10\nPlayer 2 wins round 3 of game 3!\n\n-- Round 4 (Game 3) --\nPlayer 1's deck: 3\nPlayer 2's deck: 9, 7, 5, 4, 1, 10, 8\nPlayer 1 plays: 3\nPlayer 2 plays: 9\nPlayer 2 wins round 4 of game 3!\nThe winner of game 3 is player 2!\n\n...anyway, back to game 1.\nPlayer 2 wins round 13 of game 1!\n\n-- Round 14 (Game 1) --\nPlayer 1's deck: 8, 1\nPlayer 2's deck: 3, 4, 10, 9, 7, 5, 6, 2\nPlayer 1 plays: 8\nPlayer 2 plays: 3\nPlayer 1 wins round 14 of game 1!\n\n-- Round 15 (Game 1) --\nPlayer 1's deck: 1, 8, 3\nPlayer 2's deck: 4, 10, 9, 7, 5, 6, 2\nPlayer 1 plays: 1\nPlayer 2 plays: 4\nPlaying a sub-game to determine the winner...\n\n=== Game 5 ===\n\n-- Round 1 (Game 5) --\nPlayer 1's deck: 8\nPlayer 2's deck: 10, 9, 7, 5\nPlayer 1 plays: 8\nPlayer 2 plays: 10\nPlayer 2 wins round 1 of game 5!\nThe winner of game 5 is player 2!\n\n...anyway, back to game 1.\nPlayer 2 wins round 15 of game 1!\n\n-- Round 16 (Game 1) --\nPlayer 1's deck: 8, 3\nPlayer 2's deck: 10, 9, 7, 5, 6, 2, 4, 1\nPlayer 1 plays: 8\nPlayer 2 plays: 10\nPlayer 2 wins round 16 of game 1!\n\n-- Round 17 (Game 1) --\nPlayer 1's deck: 3\nPlayer 2's deck: 9, 7, 5, 6, 2, 4, 1, 10, 8\nPlayer 1 plays: 3\nPlayer 2 plays: 9\nPlayer 2 wins round 17 of game 1!\nThe winner of game 1 is player 2!\n\n\n== Post-game results ==\nPlayer 1's deck: \nPlayer 2's deck: 7, 5, 6, 2, 4, 1, 10, 8, 9, 3\n```\n\nAfter the game, the winning player's score is calculated from the cards they have in their original deck using the same rules as regular Combat. In the above game, the winning player's score is **`291`**.\n\nDefend your honor as Raft Captain by playing the small crab in a game of Recursive Combat using the same two decks as before. **What is the winning player's score?**"},"46e1":function(n,e,a){"use strict";a.r(e),e["default"]="As soon as people start to arrive, you realize your mistake. People don't just care about adjacent seats - they care about **the first seat they can see** in each of those eight directions!\n\nNow, instead of considering just the eight immediately adjacent seats, consider the **first seat** in each of those eight directions. For example, the empty seat below would see **eight** occupied seats:\n\n```\n.......#.\n...#.....\n.#.......\n.........\n..#L....#\n....#....\n.........\n#........\n...#.....\n```\n\nThe leftmost empty seat below would only see **one** empty seat, but cannot see any of the occupied ones:\n\n```\n.............\n.L.L.#.#.#.#.\n.............\n```\n\nThe empty seat below would see **no** occupied seats:\n\n```\n.##.##.\n#.#.#.#\n##...##\n...L...\n##...##\n#.#.#.#\n.##.##.\n```\n\nAlso, people seem to be more tolerant than you expected: it now takes **five or more** visible occupied seats for an occupied seat to become empty (rather than **four or more** from the previous rules). The other rules still apply: empty seats that see no occupied seats become occupied, seats matching no rule don't change, and floor never changes.\n\nGiven the same starting layout as above, these new rules cause the seating area to shift around as follows:\n\n```\nL.LL.LL.LL\nLLLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLLL\nL.LLLLLL.L\nL.LLLLL.LL\n```\n\n```\n#.##.##.##\n#######.##\n#.#.#..#..\n####.##.##\n#.##.##.##\n#.#####.##\n..#.#.....\n##########\n#.######.#\n#.#####.##\n```\n\n```\n#.LL.LL.L#\n#LLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLL#\n#.LLLLLL.L\n#.LLLLL.L#\n```\n\n```\n#.L#.##.L#\n#L#####.LL\nL.#.#..#..\n##L#.##.##\n#.##.#L.##\n#.#####.#L\n..#.#.....\nLLL####LL#\n#.L#####.L\n#.L####.L#\n```\n\n```\n#.L#.L#.L#\n#LLLLLL.LL\nL.L.L..#..\n##LL.LL.L#\nL.LL.LL.L#\n#.LLLLL.LL\n..L.L.....\nLLLLLLLLL#\n#.LLLLL#.L\n#.L#LL#.L#\n```\n\n```\n#.L#.L#.L#\n#LLLLLL.LL\nL.L.L..#..\n##L#.#L.L#\nL.L#.#L.L#\n#.L####.LL\n..#.#.....\nLLL###LLL#\n#.LLLLL#.L\n#.L#LL#.L#\n```\n\n```\n#.L#.L#.L#\n#LLLLLL.LL\nL.L.L..#..\n##L#.#L.L#\nL.L#.LL.L#\n#.LLLL#.LL\n..#.L.....\nLLL###LLL#\n#.LLLLL#.L\n#.L#LL#.L#\n```\n\nAgain, at this point, people stop shifting around and the seating area reaches equilibrium. Once this occurs, you count **`26`** occupied seats.\n\nGiven the new visibility method and the rule change for occupied seats becoming empty, once equilibrium is reached, **how many seats end up occupied?**"},"4a79":function(n,e,a){"use strict";a.r(e),e["default"]="Your raft makes it to the tropical island; it turns out that the small crab was an excellent navigator. You make your way to the resort.\n\nAs you enter the lobby, you discover a small problem: the floor is being renovated. You can't even reach the check-in desk until they've finished installing the **new tile floor**.\n\nThe tiles are all **hexagonal**; they need to be arranged in a [hex grid](https://en.wikipedia.org/wiki/Hexagonal_tiling) with a very specific color pattern. Not in the mood to wait, you offer to help figure out the pattern.\n\nThe tiles are all **white** on one side and **black** on the other. They start with the white side facing up. The lobby is large enough to fit whatever pattern might need to appear there.\n\nA member of the renovation crew gives you a **list of the tiles that need to be flipped over** (your puzzle input). Each line in the list identifies a single tile that needs to be flipped by giving a series of steps starting from a **reference tile** in the very center of the room. (Every line starts from the same reference tile.)\n\nBecause the tiles are hexagonal, every tile has six **neighbors**: east, southeast, southwest, west, northwest, and northeast. These directions are given in your list, respectively, as `e`, `se`, `sw`, `w`, `nw`, and `ne`. A tile is identified by a series of these directions with **no delimiters**; for example, `esenee` identifies the tile you land on if you start at the reference tile and then move one tile east, one tile southeast, one tile northeast, and one tile east.\n\nEach time a tile is identified, it flips from white to black or from black to white. Tiles might be flipped more than once. For example, a line like `esew` flips a tile immediately adjacent to the reference tile, and a line like `nwwswee` flips the reference tile itself.\n\nHere is a larger example:\n\n```\nsesenwnenenewseeswwswswwnenewsewsw\nneeenesenwnwwswnenewnwwsewnenwseswesw\nseswneswswsenwwnwse\nnwnwneseeswswnenewneswwnewseswneseene\nswweswneswnenwsewnwneneseenw\neesenwseswswnenwswnwnwsewwnwsene\nsewnenenenesenwsewnenwwwse\nwenwwweseeeweswwwnwwe\nwsweesenenewnwwnwsenewsenwwsesesenwne\nneeswseenwwswnwswswnw\nnenwswwsewswnenenewsenwsenwnesesenew\nenewnwewneswsewnwswenweswnenwsenwsw\nsweneswneswneneenwnewenewwneswswnese\nswwesenesewenwneswnwwneseswwne\nenesenwswwswneneswsenwnewswseenwsese\nwnwnesenesenenwwnenwsewesewsesesew\nnenewswnwewswnenesenwnesewesw\neneswnwswnwsenenwnwnwwseeswneewsenese\nneswnwewnwnwseenwseesewsenwsweewe\nwseweeenwnesenwwwswnew\n```\n\nIn the above example, 10 tiles are flipped once (to black), and 5 more are flipped twice (to black, then back to white). After all of these instructions have been followed, a total of **`10`** tiles are **black**.\n\nGo through the renovation crew's list and determine which tiles they need to flip. After all of the instructions have been followed, **how many tiles are left with the black side up?**"},"4a87":function(n,e,a){"use strict";a.r(e);var s=function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"mb-3"},[a("h1",[n._v("Day "+n._s(n.day))]),n.markdown&&n.markdown.partOne?a("div",{staticClass:"mb-3"},[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.part-one",modifiers:{"part-one":!0}}]},[n._v("Show Part 1")]),a("b-collapse",{attrs:{id:"part-one"}},[a("vue-markdown",{attrs:{source:n.markdown.partOne}})],1)],1):n._e(),n.markdown&&n.markdown.partTwo?a("div",{staticClass:"mb-3"},[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.part-two",modifiers:{"part-two":!0}}]},[n._v("Show Part 2")]),a("b-collapse",{attrs:{id:"part-two"}},[a("vue-markdown",{attrs:{source:n.markdown.partTwo}})],1)],1):n._e(),a("h2",[n._v("Input")]),a("b-form",{on:{submit:function(e){return e.preventDefault(),n.onSubmit(e)}}},[a("b-form-group",{attrs:{label:"Task input",description:"The task input provided for this day.","label-for":"task-input"}},[a("b-form-textarea",{attrs:{rows:"8",id:"task-input",wrap:"soft",disabled:!n.editingEnabled},model:{value:n.input,callback:function(e){n.input=e},expression:"input"}})],1),a("b-button",{attrs:{type:"submit"},on:{click:function(e){return e.preventDefault(),n.onSubmit(e)}}},[n._v("Run")])],1),void 0!==n.solutions.partOne&&null!==n.solutions.partOne?[a("h2",{staticClass:"mt-3"},[n._v("Solution Part 1")]),n._t("partOne"),a("b-form-input",{staticClass:"mb-3",attrs:{readonly:"",value:n.solutions.partOne},on:{focus:function(n){return n.target.select()}}})]:n._e(),void 0!==n.solutions.partTwo&&null!==n.solutions.partTwo?[a("h2",[n._v("Solution Part 2")]),n._t("partTwo"),a("b-form-input",{staticClass:"mb-3",attrs:{readonly:"",value:n.solutions.partTwo},on:{focus:function(n){return n.target.select()}}})]:n._e()],2)},t=[],b=(a("99af"),a("a9e3"),a("ac1f"),a("1276"),a("5530")),i=a("2f62"),r={props:{day:{type:Number,default:1},year:{type:Number,default:2020},solutions:{type:Object,default:function(){return{partOne:null,partTwo:null}}}},data:function(){return{input:null}},computed:Object(b["a"])(Object(b["a"])({},Object(i["b"])(["editingEnabled"])),{},{taskInput:function(){try{return a("9820")("./".concat(this.year,"/Day-").concat(this.day,".txt")).default}catch(n){return null}},markdown:function(){var n,e;try{n=a("9dc8")("./".concat(this.year,"/Day-").concat(this.day,".1.md"))}catch(s){}try{e=a("87df")("./".concat(this.year,"/Day-").concat(this.day,".2.md"))}catch(s){}return{partOne:n?n.default:null,partTwo:e?e.default:null}},splitData:function(){return this.input?this.input.split(/\r?\n/):null}}),methods:{onSubmit:function(){this.$emit("input-changed",this.splitData)}},mounted:function(){this.taskInput&&(this.input=this.taskInput)}},o=r,l=(a("05f3"),a("2877")),w=Object(l["a"])(o,s,t,!1,null,null,null);e["default"]=w.exports},"4f5a":function(n,e,a){"use strict";a.r(e),e["default"]="Good thing you didn't have to wait, because that would have taken a long time - much longer than the **`3`** seconds in the example above.\n\nImpressed by your sub-hour communication capabilities, the Elves are curious: **exactly how many seconds would they have needed to wait for that message to appear?**"},5231:function(n,e,a){"use strict";a.r(e),e["default"]="You've managed to sneak in to the prototype suit manufacturing lab. The Elves are making decent progress, but are still struggling with the suit's size reduction capabilities.\n\nWhile the very latest in 1518 alchemical technology might have solved their problem eventually, you can do better. You scan the chemical composition of the suit's material and discover that it is formed by extremely long [polymers](https://en.wikipedia.org/wiki/Polymer) (one of which is available as your puzzle input).\n\nThe polymer is formed by smaller **units** which, when triggered, react with each other such that two adjacent units of the same type and opposite polarity are destroyed. Units' types are represented by letters; units' polarity is represented by capitalization. For instance, r and R are units with the same type but opposite polarity, whereas r and s are entirely different types and do not react.\n\nFor example:\n\n- In `aA`, `a` and `A` react, leaving nothing behind.\n- In `abBA`, `bB` destroys itself, leaving `aA`. As above, this then destroys itself, leaving nothing.\n- In `abAB`, no two adjacent units are of the same type, and so nothing happens.\n- In `aabAAB`, even though `aa` and `AA` are of the same type, their polarities match, and so nothing happens.\n\nNow, consider a larger example, `dabAcCaCBAcCcaDA`:\n\n```\ndabAcCaCBAcCcaDA  The first 'cC' is removed.\ndabAaCBAcCcaDA    This creates 'Aa', which is removed.\ndabCBAcCcaDA      Either 'cC' or 'Cc' are removed (the result is the same).\ndabCBAcaDA        No further actions can be taken.\n```\n\nAfter all possible reactions, the resulting polymer contains **10 units**.\n\n**How many units remain after fully reacting the polymer you scanned?** *(Note: in this puzzle and others, the input is large; if you copy/paste your input, make sure you get the whole thing.)*"},5430:function(n,e,a){"use strict";a.r(e),e["default"]="9 11 6 3 4 4 3 5 1 9 0 10 1 7 2 6 3 2 8 4 6 3 3 1 1 2 2 3 1 3 1 1 8 0 9 1 1 8 5 2 5 6 6 4 3 1 3 2 2 1 1 1 1 8 0 6 1 3 5 8 4 3 1 1 2 3 1 3 2 3 3 4 1 4 5 3 4 1 8 0 7 9 1 6 4 2 7 9 1 1 1 1 2 2 1 1 1 5 0 6 3 5 1 6 1 3 2 2 1 3 2 1 9 0 11 1 2 8 9 6 7 7 1 1 3 4 1 2 1 1 2 3 3 1 3 2 2 5 2 3 5 1 5 0 7 6 3 1 3 7 7 3 2 1 2 2 1 1 7 0 9 7 6 4 9 1 7 9 1 5 2 2 1 2 3 1 3 1 9 0 6 1 6 3 2 8 1 3 3 1 3 1 3 1 3 1 1 2 5 3 2 3 4 1 7 0 7 7 4 1 7 3 9 8 3 1 1 1 3 2 2 1 6 0 8 1 4 5 4 4 1 1 3 3 1 2 1 1 2 1 5 0 8 8 7 3 8 4 3 9 1 1 3 1 3 1 4 1 3 1 4 5 4 6 5 3 3 5 1 8 0 11 8 4 3 5 3 1 4 1 8 8 7 3 3 1 1 1 2 3 3 1 7 0 11 3 4 2 6 6 4 4 6 2 5 1 3 1 3 2 1 1 3 1 5 0 9 7 2 4 1 1 2 3 5 9 3 2 1 2 1 3 5 1 1 3 3 6 1 9 0 7 3 7 4 1 3 4 9 1 1 3 1 1 3 2 2 1 1 5 0 6 6 1 8 9 9 7 2 3 2 1 3 1 8 0 6 6 3 4 9 1 4 1 1 3 3 2 3 1 2 4 5 1 4 5 3 3 4 1 9 0 7 3 4 4 5 9 1 1 1 1 2 1 1 2 2 1 1 1 6 0 10 7 1 9 8 8 5 7 8 7 5 1 3 2 3 1 3 1 9 0 9 1 3 2 1 1 6 8 1 1 1 1 2 1 2 3 3 2 1 2 3 1 2 3 6 1 6 0 7 4 1 9 1 9 2 9 3 1 1 1 1 2 1 6 0 9 1 9 7 1 6 1 2 3 5 1 3 3 2 1 1 1 5 0 9 2 9 5 1 1 7 6 6 1 3 3 3 1 2 3 3 2 4 1 1 3 6 1 9 0 9 7 6 1 1 8 3 2 2 1 1 3 2 3 2 2 3 3 3 1 6 0 7 1 7 6 2 2 4 7 2 1 3 1 3 1 1 5 0 11 7 3 5 1 4 3 2 3 8 8 7 3 1 1 2 1 5 4 5 3 1 5 2 5 6 4 3 3 7 1 8 0 8 1 6 8 6 7 9 7 1 1 1 1 2 1 2 2 2 1 8 0 7 1 8 4 1 9 7 1 1 3 1 2 2 1 3 1 1 9 0 8 9 3 7 8 6 1 1 4 2 3 1 3 1 2 2 2 1 3 1 5 4 4 1 2 3 7 1 5 0 11 2 3 4 5 7 4 3 9 1 2 1 3 2 1 3 1 1 7 0 11 9 1 1 7 6 6 6 2 6 1 1 2 2 1 3 1 3 1 1 5 0 7 4 9 2 1 7 7 3 1 2 1 2 1 5 2 5 5 2 5 3 3 5 1 8 0 8 4 8 3 9 4 5 3 1 1 2 3 3 1 3 3 2 1 5 0 7 2 1 8 6 2 4 9 1 2 1 2 1 1 6 0 6 9 1 8 5 8 1 1 2 3 2 1 1 5 1 1 4 1 3 6 1 5 0 11 6 2 1 9 8 9 7 6 2 6 5 3 2 1 1 1 1 8 0 9 1 5 6 2 9 2 8 4 8 2 2 2 2 2 1 1 3 1 9 0 9 6 2 6 8 1 4 4 9 4 1 2 1 2 3 3 3 1 3 5 2 2 2 1 3 4 1 4 5 3 3 5 1 8 0 8 2 1 2 3 1 2 5 8 2 2 2 1 1 1 3 2 1 8 0 6 4 3 9 8 1 9 3 2 2 1 3 2 3 1 1 7 0 7 1 3 1 7 4 7 3 1 1 2 2 2 1 1 4 3 1 2 2 3 4 1 9 0 9 3 1 1 9 5 1 4 6 7 3 2 1 2 1 2 2 1 1 1 6 0 11 2 1 5 4 4 1 3 7 3 5 1 2 1 3 3 1 3 1 9 0 7 6 1 8 8 7 3 4 3 2 2 3 2 1 2 2 3 5 1 4 3 3 6 1 7 0 11 1 9 6 3 4 1 2 7 2 1 3 1 2 1 3 3 1 1 1 9 0 10 7 5 7 6 1 3 6 8 8 1 3 1 3 1 3 3 3 2 2 1 9 0 6 1 6 2 5 4 1 2 1 2 3 2 3 2 3 1 5 2 2 5 1 5 3 4 1 8 0 9 4 5 1 6 2 8 3 7 1 3 3 1 1 3 3 2 1 1 8 0 11 2 1 1 7 3 3 7 9 7 1 2 2 3 2 3 1 1 2 1 1 7 0 10 7 3 2 3 3 3 1 9 2 6 2 2 1 2 1 1 2 5 2 2 5 3 7 1 9 0 6 8 5 1 9 6 5 2 2 1 1 2 1 3 2 1 1 8 0 11 6 3 7 8 2 2 9 1 7 1 5 3 1 3 2 1 3 1 2 1 7 0 7 8 9 1 2 4 8 1 3 2 1 1 1 1 1 3 1 2 3 3 5 3 4 2 2 4 4 3 6 1 5 0 9 9 7 5 1 8 1 2 5 8 1 3 2 2 1 1 7 0 6 1 3 5 3 3 4 2 1 2 1 1 1 1 1 6 0 11 1 7 2 8 3 1 3 2 9 7 6 1 3 1 3 1 2 3 2 5 4 3 2 3 5 1 8 0 6 3 3 4 7 6 1 2 1 2 1 2 1 3 2 1 6 0 6 6 1 6 5 2 6 2 2 1 3 2 1 1 6 0 11 5 3 7 9 7 2 8 1 2 3 3 1 1 2 3 2 3 3 5 2 2 4 3 6 1 5 0 9 2 1 4 1 6 3 4 4 1 1 1 1 3 2 1 9 0 9 4 2 6 1 3 8 1 8 5 2 2 1 2 2 1 3 3 1 1 8 0 11 1 6 8 9 4 4 1 1 6 7 1 2 2 2 3 2 1 1 1 5 1 1 2 4 3 3 6 1 6 0 8 1 9 6 3 7 9 2 1 3 1 3 2 2 2 1 9 0 6 1 8 4 1 1 1 1 3 2 2 1 1 3 2 2 1 6 0 11 1 1 2 7 7 1 4 6 6 8 9 1 3 2 3 1 3 5 2 2 2 3 2 1 6 4 2 5 4 3 4 1 9 0 8 8 9 4 1 1 9 9 3 3 1 3 2 3 3 3 2 2 1 5 0 11 3 7 5 6 1 1 7 3 1 2 6 2 1 1 3 1 1 6 0 6 1 1 4 2 5 7 1 1 1 2 1 1 5 2 3 2 3 5 1 9 0 6 5 1 1 3 3 1 3 1 1 2 2 2 2 1 2 1 5 0 9 4 3 1 8 1 3 5 1 6 2 3 2 1 1 1 5 0 10 8 6 4 9 4 3 9 1 8 9 1 2 1 1 2 1 1 2 4 2 3 4 1 9 0 9 1 9 2 1 1 3 5 6 5 3 3 3 3 2 1 3 2 2 1 6 0 11 1 4 3 2 1 3 6 7 3 9 9 1 1 1 2 3 2 1 5 0 11 8 7 5 3 2 4 6 7 8 5 1 1 2 2 1 3 1 2 2 1 3 6 1 6 0 9 1 8 8 9 1 4 2 2 4 1 1 3 1 2 2 1 7 0 9 1 1 3 1 1 9 7 1 3 1 1 1 2 2 3 2 1 7 0 6 4 9 3 1 7 7 1 1 2 2 2 3 2 4 2 2 4 5 4 3 7 1 6 0 11 9 7 2 4 4 5 1 8 6 7 7 2 3 3 2 1 1 1 6 0 6 7 8 1 6 1 9 3 1 1 3 1 1 1 6 0 8 8 5 2 5 5 9 4 1 2 1 1 2 3 3 4 5 1 3 4 2 1 4 5 1 7 2 6 2 6 3 5 4 3 6 1 5 0 9 3 4 9 5 9 1 7 5 4 1 1 1 3 1 1 8 0 10 3 6 7 4 6 5 1 1 4 1 1 2 1 1 1 3 3 2 1 7 0 7 1 4 9 7 3 5 3 1 3 3 1 1 1 3 1 2 4 1 3 3 3 6 1 8 0 9 9 1 7 1 8 1 2 8 4 3 2 2 2 1 3 3 1 1 6 0 7 7 8 9 1 7 8 6 2 1 1 1 2 2 1 5 0 8 2 2 4 2 4 5 2 1 1 1 2 3 3 1 1 3 3 1 1 3 4 1 8 0 6 6 1 4 2 4 9 1 3 1 2 1 2 1 2 1 5 0 6 1 4 4 1 7 7 2 1 1 3 2 1 5 0 6 8 1 4 5 7 9 2 1 1 2 1 5 2 5 1 3 4 1 7 0 8 1 1 1 1 5 4 7 9 3 1 1 3 1 3 3 1 9 0 10 1 1 2 6 7 2 1 1 4 6 3 2 1 2 1 1 1 3 2 1 7 0 8 3 1 8 7 5 8 4 8 1 2 1 1 3 1 2 4 5 1 2 3 7 1 6 0 6 9 1 5 4 2 4 1 1 1 1 2 2 1 5 0 7 5 1 2 2 5 6 2 1 1 3 2 2 1 6 0 11 7 8 1 4 2 9 1 1 3 3 3 3 1 1 2 1 1 3 4 5 1 1 5 1 3 1 5 4 5 4 3 4 1 6 0 6 3 4 2 1 9 6 1 2 3 2 1 1 1 8 0 6 2 5 1 1 1 4 1 2 2 1 1 2 1 2 1 9 0 6 1 5 2 4 1 1 3 1 1 2 3 2 1 3 2 3 3 1 2 3 4 1 7 0 11 7 7 7 4 7 8 8 1 3 5 1 1 3 1 2 3 2 1 1 8 0 6 9 7 8 6 1 6 1 3 1 3 2 2 1 1 1 8 0 9 9 1 2 5 3 3 9 5 8 2 3 1 1 1 1 3 1 2 5 5 3 3 6 1 9 0 7 1 1 3 5 2 4 8 3 2 1 3 3 1 2 1 1 1 9 0 10 1 9 8 5 5 8 9 4 5 5 1 1 1 3 3 3 1 3 1 1 8 0 9 1 2 5 7 8 5 6 1 6 1 1 3 2 1 2 1 3 4 3 3 1 1 2 3 5 1 8 0 7 9 1 3 8 1 2 4 2 2 2 2 2 1 1 2 1 9 0 8 4 4 9 8 9 2 7 1 3 3 1 1 2 3 1 1 3 1 5 0 6 1 6 5 3 9 5 3 2 3 3 1 5 1 1 4 5 3 5 1 8 0 7 5 3 9 3 3 2 1 3 1 1 3 1 2 2 2 1 5 0 9 4 2 3 7 1 4 8 5 3 1 1 3 2 2 1 6 0 6 9 6 4 7 9 1 1 1 2 3 2 1 3 1 2 4 4 5 1 1 1 5 4 3 4 1 5 0 10 1 4 8 6 4 7 5 3 8 5 2 1 3 2 2 1 7 0 6 3 1 8 1 9 3 2 2 1 2 1 3 2 1 9 0 9 4 7 2 3 1 1 7 7 7 1 1 1 1 1 1 2 2 3 2 3 5 1 3 6 1 8 0 7 4 6 5 1 8 9 2 2 3 2 1 2 1 1 2 1 5 0 11 6 5 9 5 7 8 5 3 1 6 6 1 3 1 1 3 1 5 0 9 4 3 3 4 4 4 1 1 4 2 3 2 1 3 4 1 2 3 5 1 3 7 1 6 0 7 7 2 6 3 1 5 6 1 1 1 1 3 2 1 5 0 8 7 6 2 5 2 7 1 4 3 1 2 1 3 1 9 0 8 7 9 9 7 6 7 1 4 1 3 1 2 3 3 2 1 3 1 3 5 5 2 5 2 3 4 1 5 0 9 7 7 2 3 3 1 5 1 9 2 1 3 1 2 1 7 0 7 2 7 3 7 3 1 2 1 3 3 2 2 3 3 1 7 0 10 8 6 9 9 3 5 4 3 1 5 3 3 1 3 1 3 1 5 4 2 2 3 6 1 7 0 8 5 1 8 6 8 5 2 4 1 1 1 1 2 2 1 1 9 0 9 5 1 1 7 1 8 5 7 6 1 1 3 3 1 1 3 1 1 1 7 0 7 5 6 1 9 1 5 6 2 1 2 1 1 1 1 5 2 3 5 3 3 6 5 4 1 4 4 3 6 1 7 0 6 3 2 7 9 1 5 1 1 2 3 3 1 3 1 8 0 6 1 8 8 1 4 4 2 2 3 3 1 3 2 1 1 5 0 10 8 2 9 1 7 4 1 4 8 5 1 2 3 1 1 1 3 4 3 5 1 3 7 1 6 0 9 4 4 9 6 6 1 5 5 1 1 2 2 1 1 3 1 7 0 9 9 1 2 2 7 3 7 7 8 1 2 3 1 1 1 3 1 5 0 6 2 3 1 4 7 1 1 1 3 1 3 1 5 1 4 5 1 3 3 6 1 7 0 6 5 3 1 2 6 3 1 2 3 2 3 2 1 1 6 0 6 9 1 6 1 2 8 1 3 1 1 2 1 1 6 0 10 1 9 9 9 7 5 3 4 5 4 1 1 2 2 3 2 2 2 5 2 2 1 3 5 1 5 0 7 6 3 4 6 1 3 9 2 1 2 3 1 1 7 0 11 1 1 1 1 7 9 5 3 5 1 9 1 3 1 3 1 3 3 1 6 0 7 1 4 1 3 2 7 5 1 1 2 2 3 1 2 1 3 5 5 3 1 1 4 5 4 3 4 1 8 0 9 8 6 8 2 7 9 1 2 9 3 3 2 3 1 1 3 3 1 8 0 7 7 6 9 2 1 2 3 2 1 2 1 3 3 1 2 1 5 0 8 9 2 8 1 9 5 8 3 2 1 2 2 1 3 5 3 5 3 5 1 6 0 6 3 6 8 5 1 1 1 2 2 2 2 2 1 6 0 8 9 1 3 7 3 3 1 9 1 2 2 3 3 1 1 7 0 9 7 8 7 5 1 4 7 4 8 3 1 1 2 1 1 1 4 5 1 2 4 3 7 1 6 0 10 7 8 6 1 3 3 9 5 6 1 2 1 1 3 3 1 1 8 0 9 8 1 9 1 1 8 3 3 6 3 1 1 3 3 2 1 1 1 7 0 7 1 2 1 1 9 7 2 2 3 1 3 3 3 3 3 2 1 3 3 5 3 3 7 1 7 0 11 4 5 1 6 3 5 6 8 6 8 6 2 2 1 2 1 2 2 1 9 0 10 5 3 1 8 6 6 8 6 3 7 1 3 2 1 2 2 3 3 3 1 6 0 7 9 6 8 9 1 6 3 3 2 1 2 3 1 1 5 1 5 5 4 1 3 4 1 8 0 6 3 3 7 2 7 1 2 1 3 2 3 3 2 3 1 5 0 7 8 9 9 1 1 8 1 2 1 2 1 2 1 8 0 6 5 2 9 1 3 9 2 1 1 3 3 2 2 3 2 5 3 5 3 3 6 1 5 5 3 4 1 8 0 6 1 9 9 1 3 9 2 3 1 3 1 3 3 2 1 6 0 8 9 3 1 2 1 6 5 5 1 3 1 3 1 2 1 9 0 6 1 1 4 6 9 9 2 1 3 1 2 1 1 2 1 1 2 1 2 3 7 1 9 0 10 7 9 1 7 5 1 6 7 9 3 1 2 1 1 3 3 2 2 1 1 5 0 8 3 1 6 1 3 5 1 1 1 3 3 1 3 1 5 0 7 1 2 6 3 9 2 2 3 1 2 1 3 1 4 3 2 1 4 1 3 6 1 9 0 6 1 4 1 5 7 7 3 1 1 2 3 3 2 2 1 1 7 0 10 8 1 2 7 7 5 8 8 1 6 3 2 3 3 1 1 3 1 7 0 7 4 1 3 7 8 3 6 1 2 3 1 1 2 1 2 3 5 2 2 5 3 6 1 6 0 10 7 1 9 1 4 1 1 2 3 8 1 3 3 1 2 3 1 8 0 7 9 4 5 6 5 4 1 1 1 3 3 2 3 3 3 1 8 0 6 9 1 1 1 3 1 2 2 1 3 3 1 3 2 1 2 5 3 1 2 3 4 1 9 0 10 1 5 5 2 1 2 3 9 2 6 3 3 1 2 1 1 3 2 1 1 9 0 11 9 6 4 6 5 8 3 5 1 1 9 3 3 2 1 1 3 2 3 2 1 6 0 11 6 6 2 7 9 1 8 4 5 4 2 1 1 3 2 2 1 3 1 5 1 6 2 2 3 3 1 3 4 7 3 5 4 3 6 1 5 0 6 3 5 7 8 1 3 1 3 1 1 2 1 5 0 11 9 9 3 7 1 6 1 3 1 9 8 1 2 3 2 1 1 8 0 10 5 4 1 1 4 6 9 3 9 6 3 1 3 1 1 1 3 3 1 3 2 3 3 1 3 7 1 8 0 8 4 1 6 6 9 1 1 1 1 3 3 2 3 2 1 2 1 6 0 8 3 8 3 1 4 9 9 1 2 1 3 1 1 1 1 8 0 11 7 7 1 7 4 8 6 6 8 3 6 2 3 1 1 1 2 3 3 4 3 4 4 2 3 2 3 5 1 9 0 11 3 2 1 2 7 4 2 2 1 7 4 3 3 3 1 3 2 1 2 3 1 5 0 11 4 8 3 4 3 6 7 9 4 1 6 2 3 1 2 2 1 6 0 7 6 8 7 7 9 1 8 3 1 1 3 2 3 1 3 1 1 3 3 6 1 8 0 7 1 6 3 7 1 5 3 1 1 2 2 2 3 3 1 1 6 0 11 3 7 9 1 9 1 4 3 2 1 5 1 2 2 2 1 3 1 7 0 6 4 3 3 7 9 1 3 3 2 1 3 1 1 1 1 4 2 2 4 3 6 1 9 0 8 5 6 9 8 4 9 7 1 1 2 1 1 2 1 1 3 3 1 6 0 8 3 3 8 1 6 1 1 8 3 3 1 1 2 1 1 7 0 8 8 4 9 7 7 8 1 8 2 2 1 1 1 3 1 1 1 2 3 1 5 7 1 6 1 5 3 3 6 1 9 0 7 8 1 2 8 1 8 8 1 2 2 2 1 2 1 1 1 1 6 0 11 1 8 8 1 5 5 7 5 2 2 2 2 1 1 3 1 1 1 6 0 10 6 6 4 4 9 1 7 6 2 2 3 1 3 1 2 1 3 3 1 1 5 4 3 7 1 5 0 11 7 6 3 2 1 5 6 1 4 7 4 1 3 2 1 2 1 6 0 7 6 1 5 1 5 7 8 2 1 1 2 3 2 1 9 0 9 2 3 8 1 4 4 9 8 3 2 1 2 2 1 2 3 2 1 3 1 1 1 4 3 2 3 6 1 9 0 7 6 6 1 1 5 3 5 1 1 2 2 3 1 2 3 3 1 5 0 10 4 2 6 5 7 5 7 1 9 4 1 3 1 1 1 1 8 0 7 1 7 1 2 6 6 8 1 1 3 3 1 1 1 1 2 4 1 1 1 1 3 7 1 5 0 8 8 1 2 3 9 3 8 6 2 1 1 1 3 1 9 0 6 9 6 7 2 9 1 3 3 2 1 1 1 2 1 2 1 9 0 8 4 8 1 2 9 6 9 8 2 3 3 2 2 2 1 1 1 3 3 1 1 5 3 4 3 4 1 6 0 7 9 1 9 7 9 4 3 1 3 2 1 1 3 1 6 0 6 9 1 5 9 5 7 1 1 2 1 3 3 1 9 0 9 5 9 3 4 4 5 1 6 3 2 1 1 3 3 1 1 3 2 1 5 5 3 4 4 6 4 4 3 4 1 5 0 10 6 5 1 2 8 6 8 1 5 5 2 3 3 3 1 1 9 0 11 8 9 5 8 6 9 3 6 1 9 1 1 1 1 2 1 3 3 3 2 1 6 0 10 5 8 9 2 9 2 1 4 1 1 3 2 1 1 1 2 4 1 2 5 3 7 1 6 0 10 4 5 7 8 4 1 8 7 4 3 1 3 1 3 2 2 1 5 0 10 1 7 2 3 1 4 2 8 3 7 1 1 1 2 2 1 7 0 7 1 2 2 2 9 4 9 2 2 2 2 1 1 1 5 5 2 2 2 1 5 3 5 1 5 0 10 5 1 4 5 4 9 3 6 7 5 2 3 1 1 2 1 9 0 9 8 6 8 1 9 5 7 8 3 3 2 1 2 3 2 1 3 2 1 6 0 6 5 4 9 1 8 1 2 1 2 1 2 2 4 2 5 2 4 3 6 1 8 0 11 8 9 7 2 6 9 8 4 3 1 5 1 2 1 1 2 1 1 2 1 7 0 10 1 3 4 5 1 7 9 9 5 3 2 1 1 3 2 3 2 1 5 0 10 7 3 9 9 4 3 7 1 6 5 1 1 3 1 1 2 3 5 2 4 2 6 5 2 4 5 3 3 5 1 8 0 10 9 5 9 2 8 1 2 1 2 7 2 1 2 1 1 1 3 2 1 9 0 8 5 8 7 9 3 1 1 4 2 2 1 1 1 3 2 1 3 1 8 0 11 9 2 1 8 9 5 8 9 4 1 3 1 2 1 2 1 1 1 3 2 1 3 1 3 3 7 1 9 0 7 6 3 5 1 5 4 1 1 1 3 1 2 1 1 3 2 1 9 0 10 4 8 9 2 1 3 8 1 5 6 2 2 3 2 1 3 1 3 3 1 8 0 8 3 4 7 6 9 8 1 4 2 2 1 1 3 3 3 3 2 5 5 1 1 4 5 3 7 1 5 0 9 9 3 6 7 4 1 9 5 8 2 1 3 1 3 1 8 0 8 6 1 5 2 1 1 9 8 1 2 1 1 2 2 1 3 1 9 0 10 6 8 4 7 1 7 4 7 6 7 1 3 2 2 1 1 3 1 2 4 5 2 2 1 1 2 3 5 1 6 0 6 7 1 6 1 5 2 3 2 3 3 1 1 1 5 0 7 6 8 2 7 1 2 6 2 2 3 3 1 1 9 0 10 1 7 1 8 1 1 4 6 6 2 2 1 3 3 3 1 1 1 3 1 5 1 4 4 3 5 1 6 0 11 1 4 1 7 3 5 4 9 9 3 6 3 1 2 2 1 1 1 7 0 9 6 9 1 6 8 6 3 2 9 2 1 2 1 2 1 3 1 8 0 11 5 8 1 9 4 5 2 8 7 8 1 3 1 1 1 3 1 1 1 1 2 2 3 4 2 4 3 5 3 3 4 1 5 0 8 4 4 4 7 2 1 2 6 2 2 2 1 1 1 9 0 10 7 6 1 3 1 6 1 1 9 2 3 1 3 2 3 1 3 1 2 1 8 0 9 4 6 1 1 9 3 2 4 6 2 2 2 2 2 1 2 3 2 4 2 5 3 6 1 9 0 6 5 1 8 2 8 6 2 1 1 3 1 3 3 1 2 1 9 0 10 9 8 7 8 6 7 3 4 1 7 2 2 3 1 2 1 3 2 2 1 8 0 11 6 7 4 4 9 1 7 5 1 7 2 1 1 1 1 2 2 1 1 3 3 1 3 5 4 3 4 1 7 0 10 4 3 5 3 7 7 5 4 7 1 2 1 3 1 2 3 3 1 8 0 10 1 3 4 4 5 1 3 9 8 4 2 2 1 1 1 1 1 3 1 6 0 11 8 2 5 1 7 1 8 4 5 6 2 1 1 1 1 1 2 1 2 4 4 3 5 1 5 0 8 1 1 8 6 2 3 7 1 1 1 2 3 1 1 6 0 7 1 1 2 1 9 3 4 3 1 2 1 1 3 1 9 0 11 1 1 8 9 4 8 7 2 6 6 7 1 2 2 3 3 1 2 1 2 3 4 4 1 3 3 5 1 5 0 9 8 6 8 7 1 7 8 8 1 2 1 1 2 2 1 7 0 11 1 6 8 1 1 7 8 1 1 8 9 3 1 3 1 1 1 3 1 8 0 10 9 9 3 1 7 8 2 9 9 5 2 3 2 3 1 1 1 2 2 3 3 5 1 7 4 4 4 5 3 4 1 6 0 6 4 7 4 4 1 8 1 3 1 1 2 3 1 9 0 7 7 5 8 1 1 2 4 3 1 3 1 2 2 2 1 2 1 9 0 9 9 9 2 5 7 1 5 1 9 1 2 1 2 1 1 2 2 2 2 1 4 5 3 5 1 6 0 11 6 3 9 1 6 1 7 1 9 5 8 2 1 3 2 1 1 1 8 0 10 9 7 8 6 9 9 1 8 1 4 3 1 2 3 1 1 1 2 1 6 0 7 1 3 3 1 8 5 4 1 2 1 1 1 2 2 3 2 3 1 3 4 1 8 0 9 5 2 1 4 5 3 2 2 4 2 2 2 3 3 3 1 1 1 6 0 7 1 6 6 4 7 7 7 1 1 1 1 1 1 1 8 0 7 2 8 1 3 8 9 6 1 1 2 3 3 1 3 1 2 3 4 5 3 5 1 8 0 10 1 5 2 7 3 5 8 4 1 7 1 3 2 3 2 1 1 1 1 7 0 8 9 1 2 6 1 6 6 4 1 2 1 1 1 3 3 1 5 0 6 1 5 8 1 6 9 2 1 3 1 2 2 1 3 1 3 5 4 4 5 1 5 5 3 5 1 7 0 6 8 9 3 5 1 2 2 3 2 2 3 1 2 1 9 0 6 9 4 1 7 1 2 2 2 2 1 2 3 1 3 2 1 6 0 7 7 5 3 9 1 3 7 1 1 3 1 3 1 3 4 1 2 4 3 6 1 5 0 10 1 9 2 5 4 8 1 7 6 5 3 1 2 1 3 1 9 0 11 8 2 6 7 7 2 4 1 4 2 5 3 2 1 2 1 3 2 2 1 1 7 0 8 1 8 2 9 6 4 6 9 1 2 3 3 2 1 1 5 4 3 1 1 3 3 5 1 9 0 9 2 9 4 1 1 9 1 9 6 1 2 1 3 1 2 3 2 1 1 9 0 10 1 7 6 8 8 8 8 7 9 9 1 2 1 2 1 3 3 3 2 1 8 0 6 9 8 8 5 7 1 2 1 3 1 3 3 1 1 1 2 5 4 3 3 7 1 8 0 7 3 3 5 8 1 6 1 1 3 3 3 1 2 2 1 1 7 0 6 8 1 1 4 4 7 2 1 3 1 2 2 1 1 5 0 7 9 3 8 1 8 9 1 1 3 2 1 2 3 3 4 1 4 1 2 3 7 1 7 0 10 9 8 5 5 8 4 1 1 2 3 3 3 3 3 2 3 1 1 6 0 6 1 2 3 9 9 3 3 3 2 1 3 1 1 6 0 9 3 2 1 1 2 6 2 1 2 1 2 1 1 1 1 5 2 4 3 4 2 2 2 3 4 6 7 3 4 3 6 2 5 5 3 4 1 5 0 9 8 7 2 6 2 8 1 9 7 2 1 3 3 3 1 8 0 6 9 4 1 1 8 7 1 2 1 2 1 2 2 1 1 7 0 9 3 8 2 3 5 7 7 7 1 3 2 1 3 1 3 2 5 3 4 1 3 5 1 9 0 11 3 9 1 2 1 4 2 2 1 9 5 1 2 3 3 1 2 2 2 1 1 5 0 11 9 2 7 1 5 4 3 7 8 4 5 2 1 3 3 1 1 7 0 9 5 8 5 7 1 4 9 2 6 3 3 3 3 3 1 2 2 2 2 4 5 3 4 1 7 0 6 5 1 7 1 6 9 3 2 1 1 3 2 1 1 5 0 9 5 6 1 5 6 2 5 8 7 3 3 3 2 1 1 5 0 7 7 3 5 5 3 1 9 2 3 1 1 2 2 5 2 4 3 4 1 9 0 8 7 6 8 2 9 9 7 1 3 1 1 2 2 1 1 2 1 1 7 0 9 6 5 9 6 7 1 9 6 2 3 1 1 3 1 1 3 1 5 0 7 1 4 7 7 5 5 5 3 3 2 1 1 1 5 1 1 3 7 1 8 0 10 7 5 2 1 9 4 5 3 6 1 3 2 3 3 1 2 1 3 1 8 0 10 7 1 7 1 2 5 8 3 2 7 2 1 3 1 1 3 3 2 1 8 0 11 6 2 7 7 1 6 8 1 1 1 6 2 1 2 3 1 2 1 1 3 2 2 3 4 2 1 2 6 1 4 2 5 5 3 5 1 7 0 7 7 1 3 1 9 2 3 1 1 2 2 3 2 1 1 6 0 8 1 8 3 5 2 3 3 6 3 3 3 2 1 1 1 5 0 9 6 8 5 8 1 1 7 7 1 1 3 2 2 1 1 4 2 4 3 3 7 1 8 0 7 9 3 7 1 8 1 7 1 1 2 1 2 1 1 2 1 9 0 9 4 1 6 2 9 1 8 5 1 1 3 3 2 1 3 3 2 1 1 9 0 11 8 7 1 7 9 4 9 7 4 5 9 3 3 3 2 2 1 2 3 2 5 3 1 2 1 4 4 3 5 1 7 0 8 1 5 5 9 7 3 1 2 1 3 1 1 2 2 1 1 8 0 6 2 7 7 9 1 2 2 1 2 2 1 1 2 1 1 5 0 6 4 1 1 4 9 4 1 1 3 3 2 1 3 3 1 2 3 6 1 8 0 7 3 6 6 4 2 1 6 3 3 2 1 2 2 1 2 1 6 0 10 4 6 8 5 9 9 4 5 1 7 3 3 2 3 1 3 1 9 0 7 8 7 7 5 1 9 4 1 3 1 2 1 2 1 1 3 4 4 3 3 4 1 3 6 1 8 0 7 4 1 6 5 3 5 5 1 1 1 3 1 2 2 1 1 7 0 10 6 5 5 6 5 7 1 4 3 6 3 3 3 1 1 3 1 1 9 0 11 1 2 3 5 8 2 2 6 1 6 5 1 3 2 1 1 1 1 1 1 2 1 1 1 3 2 6 3 5 2 7 5 5 3 5 1 9 0 6 6 8 5 1 2 1 2 1 1 1 2 3 2 2 1 1 8 0 6 6 3 7 4 7 1 2 1 1 1 1 1 2 2 1 6 0 8 7 8 2 1 4 7 2 7 3 1 1 2 2 3 5 1 3 5 5 3 7 1 6 0 8 3 8 5 2 7 5 1 6 1 3 3 2 3 1 1 9 0 8 1 1 3 2 1 8 8 5 3 1 1 1 2 3 1 2 2 1 7 0 9 3 1 8 5 4 3 4 6 3 3 3 2 2 3 1 1 1 2 1 3 1 3 3 3 6 1 6 0 6 1 4 3 3 9 9 2 1 2 1 1 1 1 6 0 6 1 2 9 5 6 4 1 1 3 1 2 3 1 6 0 9 2 1 8 1 8 5 2 7 7 2 3 2 1 3 1 1 4 4 1 5 1 3 6 1 8 0 7 4 4 5 1 2 3 7 3 1 1 1 2 2 2 2 1 5 0 9 1 1 9 6 3 9 5 7 5 2 1 3 2 1 1 5 0 11 3 3 7 7 1 5 1 2 8 7 1 1 1 2 1 1 1 2 2 5 5 2 3 7 1 7 0 11 6 1 3 4 8 3 8 1 1 8 9 3 3 1 3 2 2 3 1 8 0 11 9 8 5 7 1 8 7 2 6 5 5 1 2 3 1 1 2 1 1 1 8 0 9 3 5 5 7 1 9 5 5 6 2 3 2 1 2 1 2 2 1 2 5 2 3 3 1 1 5 4 3 7 4 5 3 5 1 5 0 11 1 9 9 2 9 2 7 2 2 9 7 3 3 1 3 2 1 9 0 8 4 2 6 1 8 8 2 9 1 1 1 1 2 1 1 2 3 1 8 0 11 3 9 6 3 6 4 9 2 1 7 1 2 3 2 3 1 2 3 1 3 3 2 3 2 3 6 1 9 0 7 9 8 2 9 7 1 3 3 3 2 1 1 1 1 3 1 1 5 0 6 6 2 1 6 1 6 1 1 1 1 1 1 5 0 10 7 5 5 5 7 6 1 1 2 1 2 2 2 1 3 5 1 3 4 3 3 3 6 1 7 0 7 1 4 2 9 9 1 5 1 2 3 2 2 1 3 1 6 0 8 8 6 7 8 4 1 9 3 2 1 2 2 1 1 1 9 0 10 8 1 5 5 6 9 7 5 5 8 2 1 3 2 1 3 1 2 2 3 5 3 1 1 3 3 4 1 8 0 7 4 6 1 7 2 4 6 2 2 1 1 3 3 2 2 1 7 0 11 2 8 1 5 2 5 8 7 9 1 7 3 1 3 3 3 2 1 1 5 0 9 6 5 6 9 1 5 6 9 2 2 1 3 3 1 1 3 4 3 3 6 6 6 3 5 4 3 5 1 7 0 6 7 1 6 1 2 2 1 1 1 1 3 2 2 1 7 0 10 6 2 2 3 8 4 1 4 3 7 1 1 1 2 1 3 3 1 7 0 9 1 5 9 2 7 8 2 9 7 2 3 2 1 3 2 1 2 3 2 1 4 3 5 1 8 0 11 7 9 7 3 9 8 6 5 3 1 3 3 1 1 2 2 1 3 3 1 6 0 6 1 1 5 4 1 1 3 1 1 2 2 1 1 7 0 9 8 3 5 4 6 9 1 6 3 2 3 1 1 2 2 2 5 1 1 2 1 3 6 1 7 0 11 3 1 6 3 3 9 8 7 9 7 3 1 3 3 2 2 3 3 1 9 0 8 1 5 1 4 2 3 3 3 1 2 2 1 1 3 1 1 1 1 6 0 8 3 8 3 1 5 6 3 2 1 1 2 2 3 3 1 3 2 4 4 5 3 5 1 8 0 6 9 6 5 9 9 1 3 2 3 1 3 2 2 3 1 6 0 7 5 5 2 8 1 2 6 1 1 1 3 1 2 1 5 0 6 1 4 1 2 1 4 2 1 1 3 2 4 5 3 1 4 3 6 1 6 0 7 1 9 7 7 5 1 3 2 3 1 1 3 3 1 7 0 10 2 3 2 1 3 9 2 6 4 1 1 1 3 2 1 3 2 1 7 0 7 8 1 1 6 1 5 2 1 2 2 3 2 1 3 2 1 5 2 2 5 2 4 5 4 5 5 3 4 1 5 0 9 5 7 8 1 8 9 1 6 1 3 3 2 2 1 1 9 0 8 3 5 1 5 1 8 9 7 3 1 2 3 1 2 1 3 1 1 8 0 8 1 2 5 5 7 4 5 9 2 1 1 1 2 1 3 1 4 5 1 1 3 5 1 6 0 7 9 5 1 1 6 2 3 1 1 3 1 1 3 1 8 0 9 6 7 4 2 8 1 6 6 7 1 2 2 2 1 2 1 1 1 7 0 8 2 2 5 6 7 5 3 1 2 3 1 2 1 3 2 2 2 2 3 3 3 5 1 5 0 10 3 7 8 3 1 3 7 8 8 7 2 1 2 3 1 1 9 0 8 4 3 1 4 7 3 1 3 3 3 3 1 3 1 3 1 1 1 9 0 11 1 6 6 5 1 8 2 9 1 5 9 3 2 3 2 1 3 2 3 1 2 1 3 5 1 3 5 1 8 0 7 9 4 5 3 1 3 7 1 1 1 2 1 1 3 3 1 9 0 11 6 1 4 8 8 4 9 8 1 9 5 1 3 1 1 1 1 2 3 2 1 7 0 7 9 1 9 1 2 8 4 1 2 1 2 2 3 1 3 4 5 2 1 3 4 1 5 0 10 8 3 8 9 6 5 5 1 2 8 3 1 3 2 1 1 9 0 10 9 9 1 1 4 8 1 6 5 4 2 3 3 2 1 1 3 2 1 1 7 0 9 3 2 2 1 8 1 5 4 2 1 2 3 1 3 1 1 3 1 3 1 5 7 5 5 6 1 3 7 2 4 3 3 6 1 9 0 7 6 8 9 2 1 3 3 2 3 1 3 1 2 3 1 2 1 6 0 8 8 4 3 1 9 9 7 7 3 2 3 1 1 1 1 6 0 9 6 5 1 6 1 5 8 3 3 1 1 1 1 3 1 2 3 2 5 2 2 3 6 1 9 0 9 1 6 7 2 4 1 6 1 9 2 1 2 3 3 2 3 2 2 1 6 0 7 8 9 1 3 8 1 8 3 1 2 2 2 1 1 7 0 10 8 9 3 3 9 2 3 1 8 4 1 3 1 3 3 1 2 3 5 3 1 1 1 3 5 1 9 0 7 2 7 1 8 5 7 9 3 3 3 2 3 1 2 2 1 1 9 0 10 8 4 7 6 1 8 5 9 8 1 2 1 3 3 2 2 3 3 1 1 6 0 11 5 4 3 4 6 1 3 9 6 7 1 3 1 1 1 2 1 5 1 2 2 2 3 5 1 8 0 8 1 5 8 8 2 1 1 8 2 2 1 3 1 1 1 1 1 6 0 7 1 9 8 1 5 4 7 2 3 3 1 3 2 1 9 0 6 6 7 9 7 2 1 3 3 1 2 2 2 2 2 3 3 1 1 3 1 1 5 2 4 3 3 4 1 5 0 11 1 3 6 2 1 8 1 5 2 3 6 3 1 2 1 1 1 8 0 9 1 1 7 9 1 3 8 1 7 2 3 2 2 1 1 3 3 1 7 0 10 4 8 3 9 5 8 1 2 4 5 1 3 1 2 3 2 3 2 5 5 2 3 4 1 5 0 8 7 1 9 8 8 8 3 9 2 2 1 1 3 1 5 0 9 9 4 7 1 8 2 1 1 5 1 2 3 2 3 1 6 0 11 5 8 1 9 8 1 1 5 3 5 2 1 3 1 2 2 2 4 3 4 1 3 6 1 8 0 10 7 1 3 1 5 9 2 5 9 1 2 1 2 1 1 2 3 3 1 9 0 9 5 1 8 5 6 8 9 1 4 1 1 3 3 3 1 3 3 2 1 6 0 9 3 1 8 6 7 1 1 9 9 2 2 2 1 2 1 5 5 5 2 3 5 3 7 1 8 0 6 4 9 4 4 1 3 3 2 2 3 2 3 1 1 1 5 0 6 4 5 1 7 4 7 1 2 3 3 2 1 7 0 8 2 5 7 5 8 6 2 1 1 3 2 1 3 1 3 2 4 4 4 4 3 5 3 2 4 5 5 3 7 1 7 0 10 1 5 3 2 3 6 1 1 1 4 1 1 3 1 1 2 1 1 8 0 6 2 3 3 1 1 9 1 1 2 3 3 3 1 2 1 8 0 6 2 1 8 5 3 2 1 1 3 2 1 2 1 1 5 5 1 2 5 5 4 3 4 1 6 0 6 1 9 7 5 1 4 2 3 3 3 1 1 1 8 0 11 3 3 3 2 2 1 4 9 3 2 4 3 1 3 3 1 1 2 2 1 8 0 7 1 8 3 9 3 4 3 1 3 2 2 1 1 3 2 1 5 3 2 3 6 1 9 0 6 2 1 6 3 3 5 2 1 1 3 2 2 2 2 1 1 8 0 9 2 6 1 5 6 7 4 5 3 3 1 1 1 3 3 3 3 1 5 0 11 7 4 4 4 1 9 9 8 1 2 9 1 1 1 1 2 2 1 3 2 4 3 3 7 1 8 0 9 4 6 7 6 9 1 3 2 9 1 1 1 1 1 3 2 3 1 5 0 6 1 4 7 8 6 2 2 2 1 2 1 1 6 0 11 2 7 2 2 1 5 9 6 9 1 1 1 3 2 3 1 1 3 1 2 3 3 4 4 3 7 1 8 0 6 8 4 8 6 2 1 3 3 1 3 2 3 2 1 1 5 0 9 4 7 9 2 1 2 5 6 1 1 2 1 3 1 1 6 0 6 4 1 9 9 8 2 1 3 3 3 1 1 1 1 5 3 3 1 1 1 1 3 1 1 4 4 3 5 1 7 0 7 4 2 3 1 2 9 8 2 3 3 1 1 3 1 1 7 0 6 1 2 1 5 2 3 1 1 1 3 1 2 2 1 7 0 8 1 9 4 5 1 5 9 4 1 2 2 1 1 3 1 1 1 5 2 1 3 7 1 7 0 8 9 1 7 1 7 3 3 5 1 1 2 3 1 1 1 1 6 0 11 6 1 8 5 3 6 9 7 1 8 5 1 1 1 1 3 3 1 6 0 9 2 3 7 9 7 1 5 3 1 2 2 1 1 3 3 5 4 5 4 1 1 4 3 4 1 7 0 6 3 7 7 5 4 1 1 1 2 3 3 1 2 1 6 0 10 7 1 5 2 3 6 6 5 8 4 1 2 1 2 1 1 1 9 0 10 7 3 8 3 5 5 3 1 1 9 1 1 3 3 3 2 1 1 1 3 1 2 3 3 4 1 8 0 10 7 6 2 8 7 1 6 6 6 4 3 1 2 2 3 3 2 3 1 6 0 7 1 7 2 9 4 4 1 3 1 3 2 1 3 1 7 0 11 2 1 3 5 7 9 1 7 6 7 9 2 3 3 3 1 1 1 3 4 1 2 3 2 3 5 5 3 3 4 1 9 0 7 9 6 8 9 1 4 7 3 3 1 3 1 2 3 1 1 1 9 0 7 8 9 1 1 5 1 8 3 2 2 1 3 1 3 1 2 1 5 0 8 5 8 1 6 5 1 8 1 1 3 1 3 1 1 4 3 4 3 6 1 5 0 6 8 8 5 7 1 1 2 1 2 1 1 1 7 0 9 1 2 2 3 9 2 2 1 3 3 1 1 2 3 1 2 1 5 0 9 6 5 1 1 9 4 4 3 2 1 1 2 3 1 4 5 5 3 3 3 3 4 1 9 0 8 2 5 2 1 5 1 6 6 2 3 1 2 3 2 3 1 2 1 9 0 6 1 5 6 1 1 1 2 1 1 1 1 1 1 1 1 1 9 0 9 2 2 8 5 4 5 7 4 1 3 1 3 1 1 3 2 2 3 2 1 4 1 3 5 1 9 0 11 6 9 5 4 1 8 3 8 3 9 6 1 1 3 3 2 1 1 1 3 1 7 0 10 1 1 2 6 8 1 3 1 6 8 2 1 1 3 1 1 3 1 8 0 11 5 1 9 1 1 1 9 2 5 3 9 2 2 1 1 2 2 1 3 1 1 1 4 5 3 5 1 8 0 8 1 3 2 3 7 1 2 9 3 2 2 2 1 2 1 1 1 6 0 10 2 6 1 1 6 7 1 6 7 2 3 1 1 3 2 1 1 8 0 11 8 7 1 9 2 4 4 6 8 8 2 2 3 1 3 2 3 1 2 1 3 1 5 1 2 5 2 4 4 3 7 1 7 0 8 2 1 8 2 9 5 2 1 1 2 2 2 2 3 1 1 7 0 8 9 7 3 6 5 6 1 4 1 1 1 3 1 2 3 1 7 0 7 3 6 1 9 1 8 7 2 1 1 2 1 2 1 4 4 3 3 1 3 2 3 7 1 8 0 10 5 6 3 1 3 9 1 3 5 4 3 2 2 3 1 1 3 1 1 5 0 6 1 1 5 2 7 2 1 1 2 1 1 1 7 0 8 3 6 1 4 2 8 2 4 1 1 2 1 3 1 1 3 5 2 2 5 1 2 3 4 1 8 0 11 1 6 1 5 7 5 6 1 8 4 5 1 2 2 1 1 1 1 3 1 8 0 8 1 7 9 7 4 3 5 9 2 1 2 3 1 3 1 1 1 8 0 7 4 5 1 8 1 9 4 1 2 3 2 2 1 1 1 4 3 3 1 3 7 1 5 0 7 9 1 1 9 5 1 8 3 3 2 1 2 1 8 0 10 9 8 8 5 7 3 3 1 5 7 2 2 3 3 1 1 1 2 1 8 0 10 4 1 1 4 9 6 9 3 3 9 3 1 3 2 1 1 3 3 1 1 1 1 2 5 1 3 2 5 6 4 3 3 5 1 6 0 6 3 1 6 2 2 1 1 1 3 3 3 3 1 7 0 9 3 8 6 8 8 8 1 6 2 2 3 3 1 2 2 1 1 6 0 9 5 8 4 2 3 4 1 2 3 2 2 2 3 1 1 3 2 2 5 1 3 7 1 7 0 7 9 9 9 5 4 7 1 2 1 2 1 2 2 1 1 5 0 10 3 6 1 1 2 1 2 1 7 6 3 3 1 3 2 1 5 0 8 1 9 7 1 3 3 1 3 1 3 3 1 3 3 1 2 2 3 1 3 3 6 1 6 0 8 4 1 5 4 3 1 8 4 2 3 1 1 3 2 1 7 0 7 3 9 1 9 1 3 2 1 2 3 2 1 1 1 1 8 0 11 8 7 6 1 1 4 6 9 5 9 5 2 2 3 2 3 3 2 1 5 5 1 1 1 5 3 4 1 8 0 7 3 4 1 9 7 3 4 2 3 1 3 2 1 1 2 1 7 0 11 1 1 1 8 8 5 3 4 8 9 5 1 2 1 3 3 2 3 1 9 0 10 7 4 1 1 7 7 9 1 2 2 3 2 1 1 3 3 1 3 1 5 1 5 3 3 2 5 3 4 7 2 5 5 3 7 1 5 0 9 1 1 2 4 3 9 4 1 8 3 1 3 2 3 1 9 0 8 1 4 3 5 3 1 3 7 2 1 1 3 2 3 1 2 2 1 9 0 10 9 6 5 9 7 1 1 3 9 5 3 1 1 2 3 1 2 2 2 1 2 3 2 5 3 4 3 5 1 7 0 9 5 3 9 1 7 7 9 7 1 1 1 2 3 1 2 2 1 6 0 10 8 5 3 4 1 1 1 7 8 6 1 2 2 2 2 3 1 6 0 6 2 1 6 4 8 7 2 2 1 3 1 2 3 5 2 4 3 3 6 1 9 0 11 8 9 1 8 1 4 2 5 3 3 4 2 2 2 3 2 3 2 2 1 1 8 0 8 4 5 6 1 1 9 1 9 3 1 1 1 1 3 2 1 1 7 0 6 1 7 6 5 2 4 2 3 1 3 1 2 1 4 1 4 2 1 4 3 4 1 7 0 6 3 6 6 1 2 1 1 3 1 1 2 2 3 1 7 0 8 3 7 6 3 1 6 1 7 3 1 1 3 1 1 3 1 9 0 9 5 3 3 6 3 3 9 6 1 1 1 1 1 3 2 1 3 1 2 3 1 1 3 6 1 9 0 6 2 7 2 1 9 4 1 1 1 3 1 2 1 1 2 1 9 0 6 1 1 2 8 5 8 1 3 1 1 1 2 1 1 3 1 5 0 9 4 7 7 9 4 7 1 9 2 3 1 2 2 2 1 4 3 5 4 3 5 3 5 1 4 4 4 3 5 1 7 0 8 2 3 1 1 8 5 9 5 1 3 2 1 2 3 1 1 7 0 9 8 5 1 1 7 1 1 5 3 1 1 1 3 3 1 3 1 6 0 7 1 1 1 5 6 5 4 3 3 1 3 3 1 5 2 4 5 1 3 6 1 5 0 11 5 9 1 1 2 2 9 1 7 4 6 1 2 1 1 2 1 6 0 6 9 1 6 5 2 8 2 2 2 3 1 1 1 8 0 7 4 6 4 2 4 3 1 1 1 3 2 3 2 3 1 3 4 2 4 2 1 3 4 1 7 0 10 8 6 6 6 1 1 8 8 5 5 3 1 3 1 3 1 3 1 8 0 8 7 1 7 4 9 2 4 8 2 1 1 1 1 3 1 3 1 7 0 11 1 1 1 8 6 2 3 8 1 8 3 1 1 1 2 3 1 3 2 4 3 3 3 6 1 6 0 6 3 9 5 5 1 5 3 3 1 1 1 1 1 6 0 11 2 1 6 8 5 8 9 8 7 1 8 1 1 1 3 3 3 1 8 0 6 6 9 7 7 1 4 3 1 3 3 2 1 1 1 3 5 3 1 3 2 3 2 1 3 4 5 3 6 1 9 0 6 4 3 7 7 1 2 3 3 1 1 3 3 2 3 3 1 8 0 11 1 4 2 5 9 3 2 1 3 3 5 2 3 1 1 2 2 1 1 1 5 0 9 1 4 9 8 1 7 7 8 5 3 1 2 3 1 4 5 5 2 4 4 3 4 1 8 0 6 6 2 1 9 5 9 3 1 1 1 1 1 3 3 1 5 0 9 2 4 6 8 2 8 1 8 7 1 3 1 3 1 1 9 0 6 7 1 8 7 9 4 1 1 1 3 1 2 1 3 2 1 2 2 1 3 6 1 6 0 11 6 3 8 3 6 9 2 4 6 8 1 1 3 2 1 3 2 1 6 0 7 7 3 4 9 3 1 1 3 2 2 1 3 1 1 7 0 6 2 9 6 1 4 8 2 1 3 1 1 2 2 4 1 1 3 5 3 3 7 1 7 0 6 2 1 1 6 6 4 2 1 1 3 3 2 1 1 9 0 7 5 7 9 1 7 5 1 1 1 2 2 2 1 3 1 2 1 8 0 11 1 3 7 9 2 1 6 4 2 1 4 3 2 3 2 1 2 1 2 4 1 1 4 4 3 4 1 4 2 5 3 4 5 3 4 1 5 0 6 2 8 5 1 9 7 3 1 1 3 2 1 8 0 11 7 8 4 4 3 5 8 8 1 2 7 2 1 1 1 3 1 3 3 1 7 0 6 3 4 2 1 3 5 1 1 3 2 1 3 3 3 3 2 5 3 6 1 5 0 6 1 9 6 3 9 1 1 3 2 1 1 1 7 0 9 9 8 1 8 1 9 8 8 9 2 3 1 3 1 3 3 1 5 0 9 1 8 1 9 1 6 7 6 9 1 1 1 2 2 3 2 2 4 1 5 3 6 1 5 0 7 2 3 7 1 3 1 3 3 3 3 1 3 1 7 0 8 2 9 1 5 6 2 7 6 1 1 2 1 1 3 2 1 6 0 9 1 5 8 4 6 4 6 1 5 3 1 3 2 1 1 3 2 4 3 5 5 3 5 1 7 0 8 6 8 9 4 4 2 1 6 1 1 3 2 3 1 1 1 6 0 7 4 5 5 7 8 1 4 3 2 3 1 3 1 1 9 0 8 3 1 5 6 2 4 9 4 2 3 1 1 2 2 2 1 2 2 1 2 1 3 3 3 4 1 5 4 5 3 6 1 5 0 9 9 2 5 6 1 5 5 7 4 3 2 1 1 2 1 8 0 10 9 9 1 4 2 2 4 2 6 1 1 1 3 3 2 2 3 1 1 9 0 8 5 9 8 6 1 6 6 1 1 3 3 1 1 1 1 2 1 5 4 4 1 3 3 3 4 1 7 0 8 6 8 5 8 3 2 9 1 1 3 1 2 2 1 1 1 6 0 8 1 5 3 4 5 2 1 1 1 1 2 2 1 3 1 5 0 9 1 1 2 9 1 1 4 7 6 1 2 1 1 1 4 1 2 1 3 4 1 9 0 11 4 9 8 4 1 2 3 8 3 8 3 1 1 1 1 2 1 3 1 2 1 6 0 10 3 9 1 7 8 5 1 8 7 6 3 2 1 1 3 1 1 7 0 7 7 1 4 4 7 4 7 2 2 2 3 3 1 2 2 5 1 3 3 4 1 9 0 6 5 1 3 1 9 9 1 3 2 1 3 1 2 3 2 1 6 0 9 6 4 1 5 4 7 5 9 7 3 2 1 3 1 1 1 7 0 10 7 3 3 6 4 1 1 1 7 6 2 1 3 2 1 2 3 5 3 1 3 2 6 2 5 4 5 4 3 4 1 5 0 11 9 9 7 1 5 4 6 5 8 3 4 2 2 1 1 1 1 5 0 11 6 1 9 9 1 3 7 5 4 4 1 2 2 3 1 1 1 9 0 11 9 1 4 6 5 2 1 4 9 2 5 1 2 3 1 1 2 3 2 3 1 2 4 3 3 6 1 9 0 7 6 5 8 5 1 7 4 1 3 3 1 2 3 1 2 1 1 7 0 10 2 8 9 7 3 2 1 2 4 1 3 1 2 3 3 2 3 1 8 0 8 6 2 4 6 1 1 8 5 2 1 3 3 3 1 1 3 3 1 1 5 1 4 3 5 1 6 0 7 2 9 7 1 8 6 8 1 1 1 3 3 1 1 5 0 10 9 4 8 4 4 1 7 8 4 2 1 1 3 2 2 1 8 0 6 5 7 7 3 1 3 2 3 1 3 2 1 1 1 1 3 2 3 5 3 6 1 5 0 9 5 7 2 5 8 2 4 2 1 2 1 1 2 1 1 8 0 8 7 9 9 9 2 1 4 1 1 1 2 3 1 1 1 1 1 5 0 8 1 5 5 2 3 6 1 1 3 2 3 1 1 5 1 5 4 2 4 3 7 1 5 0 11 2 8 6 1 1 8 4 1 3 8 9 3 2 1 2 1 1 8 0 10 4 8 2 7 2 7 8 4 1 9 3 3 3 1 2 2 1 2 1 6 0 8 5 9 9 7 1 1 4 5 1 3 3 1 1 1 1 2 1 4 5 5 3 1 2 2 1 5 5 3 6 1 8 0 11 3 2 7 8 7 6 1 8 8 5 6 1 2 3 1 1 2 3 1 1 9 0 10 3 3 3 2 2 9 2 4 5 1 1 1 3 1 1 1 2 2 3 1 9 0 7 2 3 1 6 8 2 6 1 3 1 3 1 1 2 1 2 1 3 2 3 2 3 3 7 1 8 0 6 3 9 3 9 1 9 1 1 1 3 1 3 2 3 1 9 0 10 4 8 8 8 6 6 9 1 6 3 1 2 3 3 2 3 1 3 3 1 7 0 10 1 2 2 6 3 3 6 5 1 1 2 1 2 3 1 3 1 1 2 5 1 4 3 4 3 4 1 5 0 9 2 8 6 9 2 1 6 6 2 2 2 3 1 2 1 8 0 10 4 1 7 4 6 6 8 7 2 2 1 2 1 3 1 2 2 1 1 9 0 10 1 5 4 5 2 8 6 6 6 4 2 2 1 3 3 3 1 1 1 3 4 3 5 3 6 1 6 0 9 6 4 6 4 1 1 1 5 9 2 1 2 2 3 2 1 6 0 8 2 7 8 1 8 9 2 7 3 1 3 1 3 1 1 6 0 7 3 2 5 3 2 1 1 1 2 1 3 3 3 5 5 3 5 2 2 3 5 1 9 0 6 2 7 7 1 7 4 2 3 2 1 3 1 1 1 1 1 6 0 6 6 5 7 2 5 1 2 3 1 1 1 1 1 5 0 11 2 4 2 5 3 6 1 4 1 2 5 1 3 3 2 1 2 2 5 1 1 5 1 4 5 4 3 5 6 3 5 4 3 4 1 8 0 6 1 7 9 9 6 9 2 3 1 1 3 1 1 3 1 7 0 8 5 7 1 7 3 6 4 7 3 2 1 3 2 3 1 1 5 0 8 1 7 1 4 7 3 9 4 2 1 2 2 2 1 5 4 3 3 6 1 9 0 8 4 8 6 7 2 1 4 8 1 3 3 2 3 3 3 2 1 1 8 0 9 9 1 3 1 1 7 8 8 3 1 1 3 3 2 1 1 3 1 6 0 11 2 5 8 9 4 7 1 4 8 7 1 3 1 3 2 1 1 5 4 5 2 5 3 3 7 1 7 0 6 1 7 8 3 7 7 2 3 1 1 3 1 1 1 7 0 6 6 7 8 1 8 5 2 1 3 2 1 1 3 1 9 0 8 1 5 3 6 1 1 8 1 3 3 3 1 2 2 3 1 1 4 1 3 5 3 1 5 3 6 1 6 0 6 3 4 8 8 1 5 1 1 3 2 3 1 1 8 0 11 6 5 6 1 4 3 5 4 5 4 4 2 1 1 2 3 1 1 3 1 6 0 7 2 9 3 2 3 1 3 1 2 1 1 1 3 4 5 1 1 3 4 3 6 1 9 0 10 8 5 1 1 5 9 7 3 3 7 1 3 2 1 2 1 2 1 3 1 7 0 11 1 9 2 2 8 9 7 2 2 3 4 2 1 1 1 2 2 3 1 8 0 9 1 4 1 4 8 2 8 1 6 3 3 2 1 2 1 3 3 2 3 5 4 1 4 5 1 5 4 4 3 3 4 1 6 0 8 1 9 1 4 4 9 5 3 1 1 1 2 1 3 1 7 0 8 5 1 1 8 5 2 9 4 1 1 3 3 1 3 1 1 5 0 9 1 9 7 3 8 7 8 8 2 1 1 2 2 1 2 5 4 1 3 7 1 8 0 8 8 8 4 5 5 8 5 1 2 3 3 3 2 1 2 3 1 8 0 6 9 1 1 4 8 3 1 2 1 2 3 3 2 3 1 5 0 7 8 1 6 5 8 1 2 2 1 2 1 2 3 1 5 3 2 5 5 3 6 1 9 0 7 3 5 9 4 9 1 1 1 2 3 1 2 1 1 1 3 1 7 0 9 8 1 7 3 3 1 2 5 8 2 3 3 1 3 1 3 1 9 0 6 8 6 1 7 3 4 1 1 2 3 3 2 3 1 3 4 1 4 3 5 3 3 5 1 5 0 11 1 4 8 4 7 2 5 7 1 4 5 1 1 1 3 3 1 7 0 10 5 4 6 5 6 9 1 2 4 1 3 1 1 2 3 3 1 1 7 0 11 7 7 8 1 1 8 3 6 3 2 2 1 3 1 3 3 2 1 3 1 3 1 3 2 4 4 4 3 3 7 1 5 0 8 5 3 8 8 2 1 1 4 3 2 1 1 1 1 9 0 7 6 7 6 1 2 6 4 1 3 2 1 2 1 3 1 3 1 6 0 7 7 6 1 7 4 2 9 2 3 1 2 3 3 5 4 3 3 3 1 1 3 7 1 5 0 10 9 8 9 6 2 2 1 3 1 1 1 1 2 2 1 1 7 0 11 4 7 4 5 4 1 4 1 2 8 7 3 3 2 1 1 2 3 1 7 0 10 1 8 1 1 1 5 1 9 5 4 2 1 1 2 3 1 3 5 1 4 3 5 5 5 3 7 1 9 0 10 7 3 2 1 7 2 3 7 7 1 1 1 2 3 1 2 3 2 1 1 8 0 7 1 1 1 2 2 3 9 2 2 1 1 2 1 3 2 1 6 0 10 2 2 8 1 7 9 6 6 2 8 1 3 1 3 2 1 1 3 1 1 4 1 5 3 5 1 8 0 11 7 9 1 3 9 2 6 1 1 1 3 1 2 1 1 2 1 2 2 1 8 0 9 8 9 2 8 2 5 4 1 7 1 1 2 3 2 2 1 3 1 9 0 7 1 1 6 4 1 4 8 3 2 1 3 1 3 3 3 2 3 2 1 1 4 4 4 4 4 3 3 4 1 9 0 11 9 1 9 3 5 1 5 5 7 5 5 1 2 2 1 3 3 1 2 1 1 9 0 8 6 9 1 7 8 1 9 2 1 2 3 2 1 2 3 3 3 1 9 0 10 8 9 1 4 5 7 1 7 1 7 1 1 3 1 2 1 3 1 2 5 4 1 2 3 5 1 9 0 9 9 7 3 1 1 8 8 6 6 1 2 2 3 2 3 3 1 2 1 6 0 7 7 1 6 5 5 8 6 3 1 1 3 1 2 1 6 0 7 2 2 1 3 6 4 6 1 3 3 3 2 2 1 1 4 1 1 3 5 1 5 0 9 2 9 2 2 3 1 2 9 8 1 1 3 1 1 1 9 0 9 2 5 2 4 7 4 1 5 1 2 1 1 1 1 3 3 1 1 1 5 0 9 9 8 4 4 5 2 6 6 1 1 2 3 3 2 3 1 1 5 3 3 7 1 7 0 11 5 6 7 5 1 4 1 9 2 1 4 1 2 2 2 3 1 1 1 9 0 11 8 6 3 5 4 1 9 8 4 4 6 3 2 2 1 1 2 3 3 3 1 7 0 11 8 5 3 9 8 2 1 4 4 8 2 1 3 3 2 3 1 1 5 2 3 1 1 2 5 4 1 3 5 5 3 5 1 9 0 9 8 5 1 1 2 2 8 1 2 2 1 1 1 2 3 1 2 2 1 8 0 11 3 1 5 8 1 4 6 7 1 2 6 2 1 1 3 1 1 2 1 1 9 0 9 1 5 2 5 5 1 2 8 7 1 3 1 1 3 3 2 3 3 5 4 5 1 1 3 7 1 6 0 7 5 6 1 9 7 1 8 1 1 3 1 3 3 1 5 0 6 4 6 1 8 2 2 1 3 1 3 1 1 5 0 10 9 9 7 7 8 1 1 8 9 4 1 2 3 1 1 5 1 1 4 2 1 3 3 6 1 6 0 8 9 4 2 7 4 5 1 7 1 3 2 3 3 1 1 7 0 8 6 6 1 9 8 7 2 2 3 3 2 3 1 3 1 1 6 0 6 4 6 8 1 6 2 2 2 1 1 1 2 3 4 4 2 2 1 3 4 1 7 0 8 3 2 8 9 1 5 1 5 1 2 3 2 3 3 1 1 8 0 11 4 2 1 3 5 4 5 2 4 1 6 1 2 3 3 3 1 1 1 1 7 0 8 6 8 4 1 9 2 9 5 2 1 3 1 1 1 3 3 2 2 1 3 5 1 5 0 6 8 1 7 9 8 2 1 2 1 1 1 1 9 0 9 2 1 7 8 1 9 2 2 9 3 1 2 1 3 1 2 1 1 1 5 0 9 3 7 5 3 7 1 3 4 5 1 3 3 3 1 5 2 1 1 1 1 7 4 2 4 4 4 3 4 1 5 0 8 1 5 1 2 6 8 2 3 2 1 2 2 1 1 6 0 8 1 4 7 3 7 1 4 7 3 1 1 1 2 1 1 7 0 10 6 4 3 6 5 1 5 9 3 8 1 1 3 2 3 3 1 5 4 2 3 3 4 1 5 0 7 9 1 8 9 2 5 2 1 3 3 3 1 1 9 0 11 9 1 7 2 6 7 9 9 2 4 9 3 1 3 1 3 1 3 2 1 1 5 0 7 1 5 1 5 1 7 3 2 1 1 2 1 1 2 2 5 3 5 1 7 0 10 8 1 7 7 1 7 3 3 7 3 3 3 1 3 1 3 2 1 7 0 7 9 3 4 1 6 4 1 3 1 2 1 3 1 2 1 7 0 8 8 6 1 3 3 4 8 3 3 3 2 2 1 1 1 3 1 3 4 4 3 7 1 9 0 11 1 5 9 5 7 9 2 8 6 1 4 1 3 2 2 3 1 2 1 1 1 5 0 9 5 5 6 8 5 2 3 1 2 1 3 3 1 1 1 7 0 8 1 6 2 5 4 1 2 1 1 2 1 2 1 3 2 5 4 3 3 1 2 4 3 3 1 3 5 4 3 6 2 5 5 3 7 1 6 0 6 7 1 1 5 3 9 1 2 1 2 1 1 1 7 0 7 3 1 1 3 7 3 6 1 3 3 1 3 1 2 1 7 0 11 2 6 2 4 6 8 2 6 6 7 1 1 1 3 3 2 3 1 3 2 3 1 1 3 2 3 4 1 7 0 11 6 5 4 7 7 6 1 8 6 6 9 1 3 2 1 1 1 2 1 5 0 11 4 6 6 3 8 7 9 1 1 2 1 2 1 2 1 2 1 7 0 8 8 1 6 8 1 5 2 1 1 1 1 3 1 2 1 3 5 1 2 3 6 1 8 0 7 6 5 3 1 5 4 3 1 2 1 3 2 3 1 1 1 6 0 7 1 1 5 5 3 2 8 1 2 2 1 3 1 1 8 0 8 1 1 4 8 2 1 9 8 2 3 3 1 1 3 1 3 1 2 5 2 2 2 3 4 1 5 0 9 7 4 5 8 1 2 4 7 4 3 1 3 2 2 1 9 0 6 6 9 1 9 4 6 2 1 2 3 1 2 1 2 3 1 5 0 10 1 6 2 5 6 3 6 5 9 9 1 2 1 3 3 1 1 1 2 3 7 1 5 0 8 9 1 2 5 8 1 1 6 1 1 1 3 3 1 6 0 10 4 6 7 6 9 4 8 1 3 9 3 2 1 3 1 1 1 6 0 6 5 2 6 1 9 8 1 1 1 1 1 3 1 2 1 1 2 3 2 3 6 5 2 4 5 5 3 6 1 7 0 6 1 3 7 5 3 1 3 3 3 2 2 3 1 1 5 0 10 6 1 7 6 9 6 9 4 5 8 2 1 1 2 3 1 7 0 10 2 9 5 9 2 4 7 8 1 5 1 3 1 3 1 3 1 2 2 3 5 3 3 3 4 1 9 0 7 9 9 1 4 9 5 1 1 1 1 1 1 1 2 3 2 1 5 0 8 6 8 4 6 3 7 1 2 1 1 2 3 2 1 7 0 11 5 5 3 7 1 9 5 7 6 4 4 2 3 2 2 2 3 1 5 3 3 2 3 5 1 5 0 10 1 4 1 8 2 2 5 6 4 7 1 3 2 2 3 1 7 0 10 3 4 7 9 1 2 8 2 3 4 1 3 1 2 3 1 3 1 6 0 9 1 3 3 6 7 2 3 3 3 1 1 1 2 2 1 2 3 2 5 3 3 6 1 7 0 6 9 1 6 2 3 1 1 3 1 2 2 3 1 1 5 0 7 5 6 5 5 2 4 1 1 1 1 2 1 1 8 0 8 5 4 3 3 1 4 5 2 1 3 3 1 1 1 1 3 5 5 3 3 2 4 3 6 1 6 0 9 3 9 5 5 1 4 4 8 8 3 3 2 2 3 1 1 9 0 9 2 9 9 1 5 1 1 4 7 1 3 3 3 3 1 2 3 3 1 8 0 6 8 1 1 3 5 7 2 1 1 2 1 1 2 2 1 4 2 2 2 5 6 4 4 5 3 4 5 3 4 1 5 0 9 8 9 7 1 1 9 5 3 8 3 1 1 2 2 1 6 0 11 5 6 1 1 2 1 5 9 8 7 6 3 3 3 3 1 2 1 8 0 9 9 5 4 5 7 4 4 1 8 1 2 3 3 2 2 3 2 2 2 5 2 3 7 1 5 0 6 6 2 3 9 4 1 2 3 3 3 1 1 6 0 8 5 5 7 7 5 1 9 1 2 3 3 1 2 2 1 5 0 10 3 2 8 4 1 7 7 1 6 5 1 2 1 2 1 1 5 2 2 3 1 1 3 4 1 7 0 10 9 5 1 2 5 3 2 9 6 4 1 2 1 1 1 3 1 1 5 0 9 1 1 2 1 1 4 8 8 7 1 2 3 3 1 1 9 0 11 5 7 1 9 2 4 5 3 4 3 8 1 2 2 1 2 1 3 1 1 1 3 3 1 3 7 1 9 0 7 1 6 1 8 8 5 3 3 2 1 1 2 1 2 2 3 1 6 0 8 1 7 4 2 9 1 9 5 1 2 2 3 3 2 1 6 0 11 1 3 3 4 7 4 6 3 6 9 9 3 1 2 3 3 2 3 3 1 2 2 4 1 6 5 1 5 2 4 3 3 7 1 8 0 9 1 1 2 3 3 9 9 7 8 3 1 2 2 3 2 3 1 1 9 0 9 8 9 3 7 2 1 1 5 5 3 3 2 2 1 1 2 3 1 1 7 0 11 8 1 3 6 2 8 1 4 4 2 5 1 3 3 1 2 1 1 3 1 4 2 2 2 2 3 5 1 9 0 9 6 3 7 9 6 1 6 2 6 3 3 2 1 2 1 2 3 1 1 7 0 8 4 1 9 1 9 3 7 1 2 3 2 1 2 1 1 1 7 0 6 8 6 1 8 1 5 3 1 3 2 3 2 1 2 5 1 3 3 3 5 1 7 0 10 6 2 8 6 1 1 8 5 4 9 2 3 1 3 1 1 3 1 9 0 7 3 3 1 8 6 5 1 3 1 2 3 3 1 1 2 2 1 8 0 10 9 7 9 8 4 2 4 1 4 8 1 2 1 1 1 1 2 3 5 1 2 2 1 3 4 1 8 0 10 8 3 1 6 4 5 8 9 8 8 3 1 2 1 3 2 1 2 1 9 0 6 9 1 1 1 1 5 2 3 1 1 3 3 3 2 2 1 8 0 8 1 3 3 9 2 3 3 7 2 1 3 1 3 3 2 3 3 2 1 3 3 4 3 5 5 3 4 1 5 0 11 7 7 5 8 8 1 7 8 4 7 9 3 1 3 3 2 1 6 0 9 8 7 4 9 1 1 1 4 2 3 1 1 1 2 1 1 9 0 6 8 8 2 5 2 1 2 1 1 3 1 2 1 2 1 3 1 4 1 3 4 1 7 0 11 1 1 4 7 3 8 9 7 5 7 5 2 2 3 1 2 3 1 1 7 0 7 5 5 1 6 1 2 1 2 1 3 2 2 1 2 1 5 0 11 1 9 8 6 5 9 4 5 7 5 7 1 1 2 3 1 1 3 4 2 3 5 1 9 0 11 4 5 2 4 1 6 9 7 6 9 1 1 2 1 1 1 1 3 1 1 1 5 0 9 5 2 4 4 9 7 1 9 9 3 3 1 1 2 1 5 0 6 1 9 8 4 1 7 1 3 1 1 2 3 3 3 3 1 3 6 1 8 0 6 5 1 7 4 2 9 3 1 1 3 3 3 3 1 1 9 0 10 1 5 4 2 6 6 7 4 2 1 2 1 1 3 3 3 2 2 1 1 5 0 6 2 9 1 5 5 8 1 2 3 1 1 2 4 1 1 3 4 3 5 1 8 0 7 9 5 1 1 2 1 7 3 2 2 1 2 3 2 3 1 5 0 11 3 1 1 9 5 2 6 5 1 2 7 3 3 3 3 1 1 8 0 6 4 7 7 2 7 1 1 3 2 3 2 2 2 3 1 1 3 4 2 4 1 5 4 3 5 3 3 6 1 6 0 10 1 7 1 6 4 7 9 9 1 4 2 2 1 3 2 2 1 8 0 9 1 3 1 4 5 6 8 6 1 2 1 2 3 2 1 3 2 1 9 0 8 4 2 6 1 8 8 1 2 2 2 2 1 1 2 2 1 1 5 3 3 1 5 2 3 6 1 9 0 10 4 6 2 2 1 7 6 4 8 7 3 1 2 2 3 1 2 1 1 1 5 0 9 1 8 3 4 7 3 8 1 4 1 3 2 1 2 1 8 0 7 9 6 8 1 5 5 1 3 2 3 2 1 2 1 1 4 3 1 1 3 1 3 5 1 6 0 8 9 4 1 9 9 5 4 6 2 2 1 1 2 3 1 6 0 7 4 7 6 6 4 1 1 1 1 2 2 1 2 1 9 0 8 5 6 9 1 8 7 9 2 3 2 2 3 2 2 1 1 1 3 3 5 4 2 3 6 1 7 0 9 1 1 5 6 3 3 4 6 7 3 2 3 2 2 3 1 1 5 0 6 7 7 3 1 5 1 3 2 2 2 1 1 7 0 8 2 6 1 5 4 3 6 4 1 1 1 2 1 3 1 4 4 1 2 2 3 3 7 1 9 0 11 7 5 2 1 1 7 3 6 4 9 6 1 1 1 1 2 1 2 2 2 1 8 0 9 7 2 9 4 1 2 2 4 5 2 3 2 3 3 3 2 1 1 6 0 10 4 1 4 7 7 5 3 3 6 1 1 3 1 1 2 2 1 5 3 3 4 1 3 7 6 2 2 3 6 2 5 5 3 4 1 6 0 9 2 8 5 9 1 6 2 6 5 1 1 3 1 3 1 1 8 0 8 5 7 3 2 1 7 4 5 3 3 1 2 1 3 3 2 1 9 0 6 1 5 3 3 5 6 2 3 1 2 1 2 3 1 1 2 1 2 1 3 7 1 7 0 9 2 1 4 9 1 4 3 1 1 1 3 2 3 1 3 1 1 6 0 7 5 9 1 2 1 2 4 1 1 2 1 1 1 1 8 0 7 1 4 6 9 3 5 9 1 2 2 1 1 3 3 2 3 3 5 5 3 2 2 3 5 1 7 0 10 2 9 4 6 2 4 1 2 5 8 1 1 1 3 1 3 2 1 7 0 7 9 9 1 1 2 5 3 2 1 3 1 2 1 1 1 9 0 6 5 3 1 3 3 2 2 2 2 1 3 1 2 1 3 2 5 2 2 1 3 6 1 6 0 11 6 6 6 4 2 1 5 2 1 4 3 1 1 2 2 1 3 1 5 0 9 7 4 1 1 5 4 5 5 1 1 3 3 1 3 1 5 0 10 3 9 3 3 9 1 5 4 3 8 2 1 2 3 2 1 4 4 1 2 3 3 6 1 8 0 11 7 5 8 2 5 2 1 8 6 2 8 1 3 3 2 3 3 3 2 1 6 0 8 1 2 1 7 8 3 7 3 1 2 1 1 3 1 1 5 0 11 2 1 8 1 4 2 1 5 8 9 6 1 3 1 1 2 2 5 2 5 4 3 2 3 7 7 1 5 4 3 5 1 6 0 10 4 8 2 5 9 6 5 1 4 6 3 1 3 1 3 2 1 5 0 7 3 2 1 6 9 4 1 2 2 1 2 1 1 7 0 8 8 6 8 5 4 1 2 2 1 3 3 1 3 3 2 4 5 2 3 5 3 4 1 5 0 8 8 7 3 1 3 4 4 6 3 3 2 2 1 1 8 0 6 9 1 4 1 8 8 2 1 1 1 3 2 2 1 1 9 0 9 4 4 2 3 1 8 3 8 9 3 1 3 2 2 1 2 1 3 2 2 3 3 3 4 1 9 0 10 8 1 2 9 2 2 5 9 2 1 1 1 1 2 3 1 1 2 2 1 9 0 6 7 1 6 1 3 7 2 1 2 2 1 1 1 2 1 1 5 0 10 6 9 6 9 8 5 1 8 1 4 1 3 1 1 2 2 3 5 3 3 5 1 7 0 8 6 1 7 8 6 8 3 2 2 3 1 1 1 2 1 1 7 0 9 1 7 9 7 4 2 7 8 2 3 3 2 1 3 3 3 1 8 0 7 7 3 1 3 6 7 2 3 1 1 3 1 1 2 1 2 3 4 1 3 3 6 1 9 0 10 4 1 2 9 7 6 9 3 5 1 1 1 3 1 2 1 1 3 3 1 6 0 7 9 9 9 1 6 7 1 1 3 3 3 2 1 1 5 0 11 7 2 9 2 9 2 7 1 9 5 9 1 2 2 1 1 3 4 3 3 5 2 3 4 6 1 5 3 3 4 1 5 0 10 1 2 9 2 8 6 4 4 5 8 2 2 1 1 1 1 5 0 7 1 9 4 2 6 8 5 1 3 3 1 1 1 8 0 10 1 5 5 3 7 7 8 3 1 1 3 2 1 3 2 1 1 1 2 4 5 5 3 6 1 7 0 6 1 4 3 1 2 8 2 3 3 1 1 1 3 1 5 0 8 1 6 9 4 9 3 7 2 2 2 1 3 1 1 9 0 7 5 6 1 4 4 9 3 3 2 1 1 2 1 2 2 1 5 5 2 1 4 4 3 4 1 9 0 7 3 5 1 3 9 8 7 2 1 2 3 2 1 1 3 2 1 7 0 6 1 6 6 5 5 7 2 1 3 3 2 3 1 1 5 0 9 1 9 5 9 7 7 8 9 4 2 3 1 2 3 3 2 1 3 3 5 1 5 0 9 9 4 4 1 9 8 9 5 3 2 2 1 1 1 1 7 0 10 8 8 4 4 3 1 6 3 2 1 1 2 2 1 3 2 2 1 7 0 10 7 5 1 5 3 4 5 3 2 8 1 3 3 3 3 1 1 5 1 1 5 3 3 6 1 7 0 6 1 8 8 1 2 2 3 2 1 2 1 3 2 1 9 0 8 1 2 4 4 5 8 2 4 1 1 1 1 1 3 2 1 2 1 7 0 9 6 7 2 3 4 2 1 5 5 3 1 2 1 3 2 1 5 1 1 1 1 2 2 4 1 5 3 3 7 1 7 0 6 9 1 8 8 3 9 1 1 1 2 1 2 1 1 9 0 10 8 9 3 2 2 1 3 5 1 7 3 1 3 2 2 1 1 1 1 1 6 0 8 2 3 4 4 9 8 1 7 1 1 2 2 1 1 1 5 1 2 2 2 5 3 4 1 7 0 6 3 2 1 7 3 8 3 1 2 1 2 1 2 1 5 0 7 1 3 8 5 1 8 1 3 2 2 1 2 1 9 0 7 1 2 9 9 1 3 1 2 3 1 1 2 1 3 2 2 1 3 2 4 3 4 1 8 0 9 7 9 1 8 7 5 2 7 9 3 1 2 2 1 2 2 1 1 6 0 8 5 7 5 1 1 3 2 8 1 3 1 1 1 3 1 6 0 8 5 1 3 2 1 8 2 9 2 1 3 2 3 3 1 2 5 2 3 7 1 8 0 10 6 6 5 6 1 6 5 1 7 6 1 3 1 1 1 1 3 3 1 7 0 9 4 1 9 1 1 9 4 8 6 2 2 1 2 2 3 1 1 9 0 11 1 9 5 6 5 4 5 2 2 8 6 1 2 2 1 1 3 1 2 1 5 4 2 3 1 4 3 3 4 1 6 0 6 2 4 4 1 3 8 1 3 1 3 3 1 1 9 0 10 1 7 7 1 2 8 7 3 4 4 3 2 2 1 1 2 1 2 1 1 7 0 10 1 3 7 6 6 9 7 5 1 3 3 1 3 3 1 2 3 2 1 1 5 2 7 2 5 5 3 6 1 8 0 9 5 4 5 7 1 7 4 4 8 1 3 2 2 1 1 1 1 1 5 0 10 3 3 6 1 3 8 8 6 8 9 1 3 2 3 1 1 9 0 8 2 6 5 8 7 1 1 1 3 1 2 3 3 1 3 1 2 4 2 1 2 2 3 3 5 1 7 0 8 7 1 2 6 4 9 6 6 1 1 3 1 3 1 1 1 9 0 9 1 9 8 2 8 2 1 9 1 2 2 1 3 3 2 3 2 1 1 6 0 7 2 5 5 1 8 1 1 1 1 1 2 2 2 1 1 2 5 2 3 6 1 8 0 11 2 1 2 8 8 3 6 7 9 4 4 3 3 1 3 2 2 1 1 1 6 0 7 9 5 1 1 3 6 2 1 2 2 2 1 3 1 5 0 8 1 6 6 9 1 7 1 5 1 1 3 2 3 3 2 2 4 3 5 3 7 1 9 0 10 9 9 6 4 3 5 1 9 8 2 3 1 1 2 2 3 1 3 1 1 9 0 8 2 9 1 1 5 7 7 7 1 1 2 1 1 1 1 1 2 1 9 0 9 3 1 3 2 9 8 5 3 8 1 3 3 1 1 1 2 1 2 2 2 3 5 2 5 2 3 5 1 5 0 9 7 7 9 6 1 8 8 4 6 3 2 3 3 1 1 8 0 11 1 7 8 8 4 7 8 8 1 1 1 3 2 1 3 3 2 1 2 1 8 0 9 4 2 1 8 4 7 4 5 1 2 1 3 2 1 1 1 3 1 1 4 5 2 7 5 3 6 2 4 5 3 7 1 5 0 10 1 5 5 8 9 3 9 6 1 5 1 2 1 3 1 1 9 0 10 8 7 6 6 9 5 3 7 4 1 3 1 1 2 3 2 2 1 3 1 6 0 9 9 7 1 7 2 5 6 1 6 1 2 3 3 1 3 3 4 2 5 4 2 5 3 5 1 8 0 8 8 7 2 2 1 7 9 8 3 2 1 2 3 3 3 3 1 7 0 10 1 7 1 7 6 7 8 1 8 5 1 2 1 1 3 3 1 1 6 0 6 7 1 7 1 3 5 2 2 3 1 1 2 1 4 5 2 2 3 6 1 7 0 8 6 1 8 2 3 6 9 6 1 3 3 1 1 1 2 1 9 0 11 4 4 3 3 3 1 6 6 4 1 7 1 3 2 3 2 3 1 1 1 1 6 0 9 4 6 2 9 8 1 1 1 6 1 2 2 3 2 1 3 3 3 1 2 1 3 6 1 9 0 7 9 2 3 5 9 8 1 3 1 1 2 1 1 2 2 1 1 6 0 7 1 2 3 5 4 2 4 1 3 1 2 1 2 1 7 0 6 5 1 5 2 3 9 3 2 3 1 3 3 1 4 5 2 2 3 1 1 2 1 3 5 7 4 8 7 10 1 9 2 7 9 9 11 5"},5512:function(n,e,a){"use strict";a.r(e),e["default"]='While it appears you validated the passwords correctly, they don\'t seem to be what the Official Toboggan Corporate Authentication System is expecting.\n\nThe shopkeeper suddenly realizes that he just accidentally explained the password policy rules from his old job at the sled rental place down the street! The Official Toboggan Corporate Policy actually works a little differently.\n\nEach policy actually describes two **positions in the password**, where `1` means the first character, `2` means the second character, and so on. (Be careful; Toboggan Corporate Policies have no concept of "index zero"!) **Exactly one of these positions** must contain the given letter. Other occurrences of the letter are irrelevant for the purposes of policy enforcement.\n\nGiven the same example list from above:\n\n- `1-3 a`: `abcde` is **valid**: position `1` contains `a` and position `3` does not.\n- `1-3 b`: `cdefg` is **invalid**: neither position `1` nor position `3` contains `b`.\n- `2-9 c`: `ccccccccc` is **invalid**: both position `2` and position `9` contain `c`.\n\n**How many passwords are valid** according to the new interpretation of the policies?\n\n'},5522:function(n,e,a){"use strict";a.r(e),e["default"]="mask = 1001X0X00110011X01X1000110100011000X\nmem[5228] = 409649\nmem[64037] = 474625\nmask = 1X0110X0X110000100X01100000011101111\nmem[62395] = 48627\nmem[32253] = 16724249\nmem[29843] = 241166\nmask = 100X100X110001111101X0X0010100111X10\nmem[9042] = 12448\nmem[36389] = 14915399\nmem[53378] = 2004566\nmem[60022] = 121815\nmem[46937] = 1238\nmask = X001X0X101X10X10101X0000001110100011\nmem[55791] = 2998\nmem[16538] = 4120048\nmem[36864] = 183554\nmem[38989] = 7774725\nmem[43983] = 18397304\nmem[26551] = 1232\nmask = 1111X0110110X0010110000010X1X1X10X1X\nmem[28101] = 14619727\nmem[35256] = 29030667\nmem[63194] = 146129065\nmem[44798] = 189\nmem[2426] = 16693877\nmem[695] = 30070848\nmem[45241] = 4271881\nmask = 1001X011X1100X01XX101X110001X110X101\nmem[17482] = 7601\nmem[35168] = 164940\nmem[50171] = 1047374131\nmask = X0010X101X00111X11100111110110X11X01\nmem[55397] = 6883232\nmem[36276] = 460553\nmem[28164] = 6184\nmem[32800] = 3846\nmask = 100110X1X1100X110110XXX00X00101X010X\nmem[34061] = 8335\nmem[19672] = 806\nmem[20346] = 45051423\nmem[36909] = 75717\nmem[14949] = 12484\nmask = X00XX1100100111X00X11XX00000110X1010\nmem[32991] = 13151\nmem[26489] = 54180147\nmem[55564] = 5690\nmem[7187] = 807798\nmem[4660] = 21323\nmask = 0001X01001100111101X0111101X1110001X\nmem[53378] = 33491\nmem[11625] = 23905844\nmem[11286] = 226133438\nmem[59562] = 61\nmem[39496] = 45492350\nmem[35168] = 1063\nmem[35116] = 1135415\nmask = 1X011X100X1001X1111011011XX000010100\nmem[14949] = 7088\nmem[27179] = 249426\nmem[12840] = 3398667\nmask = 100110X0X1X0011111011X0001XX00111X1X\nmem[9310] = 377264021\nmem[39496] = 5310\nmask = 1X0111100X0011X10001100X00X0X1X0X01X\nmem[23624] = 3559669\nmem[4358] = 25901\nmask = X0X1111001X0111X11011X00110000000X10\nmem[41470] = 74601\nmem[46470] = 28860028\nmem[28699] = 579\nmem[50915] = 8018491\nmem[9582] = 512\nmem[17809] = 2468\nmem[19264] = 382929593\nmask = 1X01X01001X001X1XX100111X0000X110000\nmem[53852] = 671\nmem[829] = 14607863\nmem[59475] = 42176426\nmem[50352] = 917431806\nmem[25565] = 2735024\nmem[31268] = 8203\nmem[63568] = 18725\nmask = 1011X01101X0X0X1X1X0X0110X0100001110\nmem[14581] = 534274885\nmem[60208] = 23685066\nmem[59262] = 268487956\nmem[243] = 75944\nmask = 1001XX0001X01111001XX1X0X01000X10X11\nmem[53831] = 4237440\nmem[24052] = 1451049\nmem[64125] = 432782904\nmem[8892] = 15419\nmask = 10X0101101000X1XX010100X110001XXX11X\nmem[47441] = 9514\nmem[24633] = 4407646\nmem[40184] = 15477\nmem[1696] = 106342632\nmem[36011] = 606150\nmem[14545] = 874\nmask = 100X1XX11110X001X1X011000X0011010100\nmem[18822] = 1345\nmem[31329] = 49781332\nmem[1256] = 23323\nmem[47095] = 360\nmem[28233] = 122942\nmask = 1X01XX100100X1110X1110X10001X100X00X\nmem[20346] = 6255\nmem[2088] = 10531698\nmem[19802] = 23124041\nmem[13152] = 64318\nmask = 1XX110100X100011011000XX10X00XX10X00\nmem[55530] = 462159\nmem[53302] = 4050\nmask = 11X1X01X00X0X011X1101100100X101X100X\nmem[32170] = 2300\nmem[60379] = 1946048\nmem[38974] = 935362865\nmem[30527] = 38214\nmem[39317] = 309\nmask = 0X0XX11011X001X11X101011111X01100101\nmem[6761] = 3363\nmem[30072] = 488192925\nmem[30577] = 5587652\nmem[36815] = 820921800\nmem[48185] = 90597685\nmem[45346] = 14766\nmask = 10XX000X0100000X011000X1X1X0X1X00101\nmem[65328] = 277939257\nmem[32705] = 259305\nmem[8201] = 1708\nmask = 100110X101100X01X110X011X001101X1101\nmem[1321] = 133255266\nmem[33628] = 464\nmem[58727] = 673\nmask = 1001101001X001010XX0X00001X0X0100000\nmem[19034] = 17040206\nmem[34637] = 15994570\nmem[58564] = 7623\nmask = 1001101101100101011X11110000X1001XX0\nmem[23305] = 8044\nmem[64547] = 395\nmem[37420] = 27907889\nmem[27608] = 612\nmem[7901] = 680129\nmem[2047] = 829469\nmask = 1X0X0X100100111100011011100111XX1100\nmem[55530] = 17794\nmem[35214] = 6843366\nmem[55948] = 325722\nmem[50625] = 1010688\nmem[1409] = 7196\nmem[61824] = 484817479\nmem[18803] = 12612636\nmask = 1001X01XX1X0X1111X1001110X110X011101\nmem[28127] = 1963295\nmem[11625] = 1018106\nmem[30920] = 1636\nmem[15448] = 10027\nmem[13104] = 13415208\nmask = 11011010011101111X100000X0X110XXX101\nmem[32426] = 26317976\nmem[33610] = 953396121\nmem[18997] = 205749058\nmask = 1001101XX1100XX1011010XXXX00011X1100\nmem[16512] = 115996365\nmem[9541] = 816\nmem[2017] = 47814977\nmem[48769] = 6960\nmem[57904] = 17542395\nmem[31268] = 536187\nmask = 100X101011X0X1X100100010101000X1100X\nmem[12315] = 151687693\nmem[2426] = 585162\nmem[58101] = 840013\nmask = X00110000100111100X1001001000XX00XXX\nmem[61146] = 100666431\nmem[64619] = 4637046\nmem[27122] = 237312\nmem[43315] = 2538822\nmem[6097] = 889148\nmask = 101110100X10X0110110111X1X001000X110\nmem[59937] = 1039821042\nmem[5228] = 20695323\nmem[16793] = 1847174\nmem[58963] = 11095\nmem[22680] = 5166227\nmem[44856] = 15083\nmask = X001X0111X10X0110X10X1X0010110010100\nmem[60974] = 391897\nmem[54413] = 376986\nmem[16685] = 488\nmask = 1X0X0X00X0000111X00110X10X000110X000\nmem[16055] = 28402351\nmem[30402] = 379124674\nmem[34946] = 13507\nmem[52357] = 5299\nmem[64564] = 106012728\nmem[2719] = 45355693\nmem[12] = 89762\nmask = XX011X1111X00011X1X0010000001101X101\nmem[29208] = 29115\nmem[18551] = 426909992\nmem[23699] = 15195667\nmem[3422] = 11107\nmem[34134] = 15916\nmem[18069] = 1238938\nmem[50734] = 4062867\nmask = 1001X000XX00011100X100X1100XX11000X0\nmem[62530] = 18469859\nmem[54219] = 239365\nmem[43155] = 3473\nmem[38944] = 358650\nmask = 1X01001X11001110X11X1010X0X111X010XX\nmem[10724] = 2916217\nmem[44147] = 416\nmem[4105] = 2413\nmem[38699] = 1661\nmem[64725] = 1933034\nmem[20996] = 13732\nmem[63194] = 484290\nmask = 1001X010110X1111X11111110011X0010000\nmem[56756] = 53912\nmem[55265] = 2802\nmem[55521] = 61411987\nmem[43040] = 1167\nmask = 1XX1111101001X11001001111110101X1011\nmem[29769] = 87000096\nmem[15343] = 480461\nmem[16428] = 51254247\nmem[13162] = 53048239\nmask = 100100100100XX010X1001XX1XXXX0100100\nmem[13117] = 136\nmem[63074] = 35112135\nmask = 1101101001XX01110010111X100XX11X1XX0\nmem[21012] = 2037\nmem[54144] = 3133068\nmem[63961] = 14080353\nmask = 1001X11X01101111110X10X1010001000X0X\nmem[62471] = 12508052\nmem[14338] = 435627\nmem[318] = 3687092\nmem[64508] = 2664\nmem[58433] = 14556\nmem[8995] = 938\nmem[32875] = 1012574980\nmask = 1X01XX100X10011101X01001011X11011X01\nmem[26989] = 97197022\nmem[9541] = 150895995\nmem[36956] = 174431384\nmem[43247] = 2881\nmem[6758] = 18074756\nmem[35444] = 3197755\nmem[42854] = 28212\nmask = 100X101X0X00X1110010100011X0X01X1010\nmem[17239] = 76342363\nmem[48185] = 30296621\nmem[26693] = 55049\nmem[30110] = 28232858\nmem[40609] = 197705858\nmem[63074] = 1491954\nmask = 100X1X1XX100111100XXX01110X00000101X\nmem[28233] = 16456060\nmem[37936] = 1485\nmem[60589] = 1108\nmem[58201] = 178477087\nmem[35353] = 5172\nmem[58317] = 582\nmem[3707] = 124900\nmask = 1001X0110XXXX11X1X100101101X000X1011\nmem[6853] = 53203870\nmem[10134] = 15607855\nmem[55789] = 65720\nmem[40948] = 26255\nmem[23925] = 247\nmask = 10XX00X001X0X11101100101100X0XX1X011\nmem[21991] = 12365\nmem[60284] = 475281124\nmem[27156] = 712381\nmem[40992] = 32030028\nmem[55639] = 459820\nmask = XX0110000100011X1X011101111X0X0001X1\nmem[21777] = 23804\nmem[18660] = 16096160\nmem[13001] = 133879324\nmem[55679] = 16534\nmem[35334] = 95963075\nmask = 1111X01X01100X01X1X00101000010101X01\nmem[42543] = 830\nmem[35104] = 119069\nmem[30672] = 237624\nmem[57513] = 11273\nmem[24425] = 8038\nmem[15062] = 880\nmem[3370] = 1147051\nmask = 100110X00100X111001X10X100XX0010X0X0\nmem[34880] = 47552929\nmem[56463] = 1311038\nmem[34134] = 48583\nmem[26841] = 28022630\nmem[34391] = 238829624\nmem[61488] = 64163\nmask = 100110100X000X11001000111000X1X00000\nmem[64564] = 9373265\nmem[45253] = 516852473\nmem[54102] = 7680\nmem[56373] = 6272\nmem[32800] = 20520227\nmask = 100XX0X00100011100110001X00X01X00000\nmem[11445] = 17299797\nmem[45739] = 26477\nmem[35104] = 8020\nmem[44856] = 5098\nmask = 100110100XXX0111001010XX0100001100X0\nmem[31855] = 4562526\nmem[37196] = 49264053\nmask = 10011X1011X0011X1X010X00000000100X11\nmem[51356] = 2533530\nmem[21991] = 617827134\nmem[59007] = 146920\nmask = 10X11010001000110110001010XX101X1110\nmem[17438] = 724\nmem[40037] = 26066923\nmem[62740] = 64849289\nmem[51356] = 362548959\nmask = 1001111XX000X1010001X1X1X010X1X00001\nmem[62654] = 495\nmem[13661] = 784\nmem[2201] = 825060967\nmem[56463] = 25468\nmem[11152] = 332175\nmem[11201] = 318547\nmem[56898] = 19359\nmask = 10011011111X011X01101010X00101001X11\nmem[39227] = 183088177\nmem[11942] = 18427\nmem[56845] = 74552997\nmem[9386] = 30899\nmem[7664] = 28246572\nmask = 1001101001100X11X11X100010X00X110XX0\nmem[18885] = 28794\nmem[1321] = 2616\nmem[31268] = 1924\nmem[26938] = 384173\nmem[12796] = 400542613\nmem[64037] = 104083\nmask = 1001X01101X001010110110X0110000011X0\nmem[47972] = 49309\nmem[45634] = 85099607\nmem[34920] = 28977\nmem[58564] = 2559\nmem[4311] = 700\nmem[60974] = 658\nmem[5228] = 4807\nmask = XX011X11X1100011011X010X100011000110\nmem[17753] = 70529\nmem[17324] = 248339160\nmem[60589] = 5812\nmask = 11011110010X0X110X111011X1000X0X10XX\nmem[35474] = 63093\nmem[35770] = 170945\nmem[31209] = 658557270\nmem[41345] = 3895120\nmem[28522] = 164751383\nmask = X0X11XX01100011111X1X0000100XX111000\nmem[8995] = 18206851\nmem[21601] = 756\nmem[64169] = 2372\nmem[54020] = 40408\nmask = 000111XX0100XX1100010000000010000110\nmem[32975] = 11379458\nmem[35264] = 191\nmem[48634] = 372213\nmem[37443] = 12419\nmem[11441] = 168862967\nmask = 1X0001100100X1X1XXXX100000X011101X01\nmem[60955] = 121774\nmem[33433] = 728\nmem[34602] = 174\nmem[41800] = 4552421\nmask = 10011010X11000X1XXX0111100001X111000\nmem[6773] = 15578957\nmem[28044] = 3493208\nmem[62407] = 169767\nmem[51334] = 52448434\nmem[53093] = 4752\nmem[14545] = 1251\nmask = 100110X01XX0X11111110110X01100110XXX\nmem[18935] = 231360\nmem[19721] = 876\nmem[63491] = 56496605\nmask = 10011010X110011X11X10X10101000010000\nmem[61488] = 115634\nmem[1321] = 19197\nmem[33154] = 31600682\nmask = 10011X1101X00111101X10X101X11010000X\nmem[31209] = 30697\nmem[30292] = 56770\nmem[46372] = 4474\nmem[22434] = 894\nmask = X1011X11XXXXX01101X0X100100001100011\nmem[33610] = 386\nmem[46743] = 9985\nmem[18581] = 25393973\nmask = 1XX100X101X000010X10X011X001101X0101\nmem[56281] = 2427\nmem[23013] = 124563907\nmem[41470] = 6819267\nmem[58727] = 5142531\nmem[63093] = 802798807\nmem[58709] = 88\nmask = 1001101X11100X011110010001XX010X01X0\nmem[35264] = 9076212\nmem[58092] = 3559173\nmem[48925] = 58523913\nmem[28101] = 402638054\nmask = 10011010011001010111100001XX0010X0X1\nmem[47972] = 128418944\nmem[62530] = 288\nmem[17179] = 77713212\nmask = X0011011X0100X010110100X000100011100\nmem[24524] = 107898\nmem[46010] = 82127781\nmem[45253] = 156159\nmask = X0011X000100X1110X11100110000XX01010\nmem[47222] = 15963\nmem[13206] = 184605823\nmem[34890] = 92193985\nmem[64547] = 606039\nmask = 1X0X101X011X011101101X111X000X1X0001\nmem[4144] = 85071\nmem[63340] = 3568335\nmem[42980] = 2223\nmem[65165] = 15723492\nmem[55303] = 228834\nmem[41409] = 120704\nmask = X0X11X1011X0XX1111100X0110110111X1X0\nmem[28969] = 5451626\nmem[23890] = 202\nmem[32579] = 893738\nmem[19768] = 9755\nmem[46679] = 4469\nmem[10572] = 2621\nmask = 1X01X010011X011111X001XX0001101X100X\nmem[13230] = 4177769\nmem[6789] = 1570\nmem[12814] = 6330042\nmem[19862] = 399947\nmask = 100X0110X1001111001111X10001X1100000\nmem[16428] = 62747997\nmem[57753] = 3812740\nmem[53818] = 2042073\nmem[57170] = 65402596\nmask = 00000110010X1X1X0011010000001X0X1X1X\nmem[39125] = 231032\nmem[41182] = 8309392\nmem[41659] = 69862358\nmem[2426] = 3954\nmem[29634] = 1877\nmask = 10011XX00X00110100X11X01100001X10000\nmem[3276] = 165739267\nmem[18985] = 215914582\nmem[51726] = 2911\nmem[1198] = 2689\nmem[25096] = 38217\nmem[65146] = 750396\nmask = 100X000X11100111X0111X111X010X0X0100\nmem[55354] = 71488486\nmem[26941] = 153429\nmem[27903] = 1242771\nmem[20076] = 13658750\nmask = 1X0X1X111100011110100X11XX0001X01101\nmem[8106] = 8655\nmem[13105] = 326089686\nmask = 11110011011000010110XX0X1X0111X0X1X1\nmem[47972] = 4628833\nmem[64742] = 108229\nmem[20310] = 234311\nmem[22525] = 1268681\nmem[57315] = 2293399\nmem[1415] = 309220\nmask = 1X01101001100X110X10X01110000X110001\nmem[63491] = 55284\nmem[6892] = 1776247\nmem[22680] = 10087682\nmask = 100110100X100111XX10X011100100101001\nmem[32836] = 529\nmem[60379] = 108710\nmem[3707] = 119489129\nmem[41220] = 407759\nmem[17438] = 4570597\nmem[18735] = 116991\nmem[45194] = 632\nmask = 10X100000X10111100100110001X01X000X0\nmem[29832] = 17415\nmem[18326] = 149774707\nmem[61969] = 27327701\nmask = 10011X100110X1X1X1X1101X000000X00X10\nmem[37977] = 32149847\nmem[10572] = 23418\nmem[21601] = 46807\nmem[3432] = 205866675\nmem[15290] = 52828\nmask = 1001X0X0010X111100101X100X0X000001X0\nmem[29496] = 3463669\nmem[22900] = 14028901\nmem[59821] = 26258\nmem[6007] = 3083265\nmem[26841] = 223727\nmask = 100110XX010001110001X000100X0X110X11\nmem[47185] = 37062\nmem[53497] = 486088\nmem[20646] = 1031395\nmem[51185] = 335\nmem[42320] = 2256917\nmask = X1011X1X0XX00101011010X10000XX010000\nmem[24688] = 536538\nmem[30782] = 45733\nmask = 100010110X0X00100X10100X01X01011110X\nmem[3691] = 61776413\nmem[37654] = 3873\nmem[32875] = 780114\nmask = 10011X001X1X011X1111X010X00X1X110001\nmem[54410] = 836\nmem[63661] = 970522\nmem[62471] = 1855\nmem[16994] = 201\nmem[27546] = 1249156\nmem[37773] = 220004102\nmem[39306] = 22122687\nmask = 10011011XX10010101101X0100X01X001000\nmem[16428] = 1095\nmem[56732] = 121853353\nmem[58092] = 234\nmask = X010X01X010011X101X001X11000X0XX1011\nmem[367] = 74756331\nmem[55921] = 529419\nmem[39160] = 278975\nmem[6758] = 920\nmem[32922] = 33406\nmem[59763] = 1563\nmem[10382] = 886\nmask = 10011X100XX0010110100011001X10010X01\nmem[25565] = 26956\nmem[23146] = 57605\nmem[28925] = 962\nmask = 1X11X100X100011X111XX010001110X01011\nmem[35334] = 92117904\nmem[34488] = 59287493\nmem[7861] = 64986498\nmask = X001X0XXX1X00111X01110111X0101100X00\nmem[50457] = 17353399\nmem[62959] = 16719393\nmem[49674] = 134654\nmem[55789] = 2243\nmem[22434] = 99455\nmem[8288] = 142594569\nmask = 10011010X11001111111110010X00X1X0001\nmem[37420] = 41618762\nmem[11560] = 48435\nmem[829] = 2389\nmem[40014] = 70681907\nmem[36217] = 715125593\nmem[30774] = 510\nmem[15212] = 10840"},"563a":function(n,e,a){"use strict";a.r(e),e["default"]="As you're about to begin construction, four of the Elves offer to help. \"The sun will set soon; it'll go faster if we work together.\" Now, you need to account for multiple people working on steps simultaneously. If multiple steps are available, workers should still begin them in alphabetical order.\n\nEach step takes 60 seconds plus an amount corresponding to its letter: A=1, B=2, C=3, and so on. So, step A takes `60+1=61` seconds, while step Z takes `60+26=86` seconds. No time is required between steps.\n\nTo simplify things for the example, however, suppose you only have help from one Elf (a total of two workers) and that each step takes 60 fewer seconds (so that step A takes 1 second and step Z takes 26 seconds). Then, using the same instructions as above, this is how each second would be spent:\n\n```\nSecond   Worker 1   Worker 2   Done\n   0        C          .        \n   1        C          .        \n   2        C          .        \n   3        A          F       C\n   4        B          F       CA\n   5        B          F       CA\n   6        D          F       CAB\n   7        D          F       CAB\n   8        D          F       CAB\n   9        D          .       CABF\n  10        E          .       CABFD\n  11        E          .       CABFD\n  12        E          .       CABFD\n  13        E          .       CABFD\n  14        E          .       CABFD\n  15        .          .       CABFDE\n```\n\nEach row represents one second of time. The Second column identifies how many seconds have passed as of the beginning of that second. Each worker column shows the step that worker is currently doing (or `.` if they are idle). The Done column shows completed steps.\n\nNote that the order of the steps has changed; this is because steps now take time to finish and multiple workers can begin multiple steps simultaneously.\n\nIn this example, it would take **`15`** seconds for two workers to complete these steps.\n\nWith **5** workers and the **60+ second** step durations described above, **how long will it take to complete all of the steps?**"},"574c":function(n,e,a){"use strict";a.r(e),e["default"]="hcl:5d90f0 cid:270 ecl:#66dc9c hgt:62cm byr:1945 pid:63201172 eyr:2026\n\necl:amb byr:1943 iyr:2014 eyr:2028\npid:333051831\n\nbyr:1971\neyr:2021 iyr:2015 pid:158388040 hcl:#18171d ecl:brn hgt:179cm\n\nbyr:1936\npid:707057570 iyr:2014 ecl:amb cid:299 eyr:2030\nhcl:#c0946f hgt:186cm\n\nhgt:163cm iyr:2013 ecl:gry hcl:#86e981 byr:1939\neyr:2020 pid:241741372 cid:203\n\necl:brn hcl:#341e13\npid:686617364 byr:1929 eyr:2029 hgt:160cm cid:280 iyr:2020\n\nbyr:2002 hcl:#623a2f\npid:253005469 iyr:2011 ecl:hzl hgt:184cm eyr:2027\n\necl:#bb984b eyr:2040\nhgt:188in\niyr:2005 hcl:c5be8e pid:174cm cid:161 byr:2004\n\necl:oth iyr:2010 cid:128 hgt:153cm byr:1991\npid:24061445 eyr:2025 hcl:#54d43e\n\nhcl:z\niyr:2023 pid:981178503 ecl:gmt eyr:2038 byr:2004\n\necl:gry eyr:2022 iyr:1981 pid:566993828\nbyr:1941 hcl:#341e13 hgt:176cm\n\neyr:2027 byr:1976\npid:350079989 ecl:blu iyr:2013 hgt:180cm hcl:#866857\n\neyr:2029 hcl:#ceb3a1\necl:lzr\niyr:2011 hgt:152cm byr:1986 pid:162999623\ncid:240\n\necl:gry iyr:2017 hcl:#18171d byr:1926\neyr:2027 hgt:68in\ncid:310 pid:560836007\n\necl:grn\ncid:307\npid:#cdc803\nbyr:1975 eyr:2039 hgt:75cm\nhcl:318b11 iyr:2022\n\necl:brn hgt:179cm eyr:2020 iyr:2016\npid:322103252 byr:1940 hcl:#b6652a\n\nhcl:#733820 hgt:188cm cid:70 eyr:2021 ecl:amb\nbyr:1996\niyr:2013 pid:412419084\n\nhgt:164cm iyr:2011 byr:1928 eyr:2020 hcl:#733820 pid:704914380 ecl:blu\n\necl:brn cid:267 eyr:2029 byr:2011\nhcl:z pid:467662306 iyr:2026 hgt:104\n\npid:224593036 eyr:2027\necl:brn hcl:#341e13 iyr:2014\nbyr:1997\nhgt:181cm\n\neyr:2005 pid:9756449964\nhcl:#fffffd byr:1999 ecl:dne hgt:152in iyr:2027\n\nbyr:1998\niyr:2017 pid:618350852 hgt:156cm cid:193 ecl:amb\nhcl:#602927 eyr:2029\n\nbyr:2021 pid:3395281192\nhcl:z hgt:167in ecl:grt eyr:2008 iyr:2025\n\ncid:206 pid:735212085 eyr:2020 byr:1950 hgt:153cm\necl:blu iyr:2019\nhcl:#733820\n\neyr:2021 pid:551149968 iyr:2020 hcl:#6b5442\nbyr:1948\necl:grn\nhgt:152cm\n\nhgt:76in cid:113 iyr:2019 eyr:2023 hcl:#888785 pid:131239468 ecl:grn\nbyr:1994\n\necl:oth cid:240 hcl:#bed757 byr:2027 eyr:2021 pid:#ffa971 iyr:2022\n\ncid:204 iyr:2011\necl:blu hgt:169cm byr:1985 eyr:2020 hcl:#18171d\n\necl:hzl iyr:2012 cid:344 hcl:#7d3b0c\nhgt:190cm pid:599490023 byr:1954 eyr:2023\n\ncid:333\neyr:1971 hgt:193cm\necl:#12421d hcl:#7d3b0c iyr:1991 pid:#7149ad byr:2008\n\niyr:2014\nhgt:151cm pid:190259199 eyr:2021 ecl:blu\nbyr:1975 hcl:#ceb3a1\n\nhgt:164cm ecl:oth hcl:#c0946f pid:427760590 eyr:2023 iyr:2012\nbyr:1979\n\nhgt:193cm iyr:2023 ecl:#213711 hcl:z\npid:23861701\nbyr:2020\neyr:1924\n\npid:450691994 cid:191\neyr:2028\nbyr:1972 ecl:oth hgt:168cm hcl:#888785\n\niyr:2013 hcl:#18171d hgt:170cm ecl:blu\npid:040253250 eyr:2024\nbyr:1954 cid:340\n\ncid:185 byr:1956 eyr:2029 pid:454637740 ecl:hzl hcl:#efcc98 iyr:2019 hgt:73in\n\nhcl:#efcc98\nhgt:176cm\necl:hzl cid:113 pid:747653564 iyr:2016\neyr:2020 byr:1945\n\nhgt:69in cid:264 byr:1971 hcl:#733820 ecl:amb pid:086130104\niyr:2011\neyr:2022\n\niyr:2010\neyr:2034\npid:501068596\nhgt:109 hcl:z byr:2018 cid:326 ecl:lzr\n\npid:955229652\neyr:2027 cid:175\nbyr:1950 iyr:2010 ecl:gry hcl:#866857 hgt:177cm\n\necl:amb hcl:#888785 eyr:2020\nhgt:172cm byr:1991\npid:556956304\n\nbyr:1930\neyr:2011\npid:734176827\necl:brn hgt:182cm\nhcl:z\n\nhcl:#a97842\npid:040278061 ecl:brn hgt:168cm cid:194\nbyr:1973\niyr:2016 eyr:2027\n\nhcl:#623a2f\neyr:2023\necl:blu iyr:2016 pid:844348663 byr:1997 hgt:179cm\n\nhgt:188cm hcl:#a97842 byr:1972\necl:hzl pid:912948357 eyr:2026 iyr:2025\n\niyr:2011 eyr:2025\ncid:286\npid:084736292\nbyr:1936\necl:oth hcl:#a97842 hgt:166cm\n\niyr:2012 ecl:blu hgt:159cm byr:1980 eyr:2024 pid:811644928 cid:105 hcl:#7d3b0c\n\npid:530452683 hcl:#341e13\niyr:2011\nhgt:163cm ecl:oth\ncid:309 byr:1940\n\necl:hzl\npid:144377866\nhcl:#18171d hgt:193cm\niyr:2013 eyr:2028\n\npid:868386570\necl:brn\nhgt:161cm hcl:#18171d\nbyr:1956\niyr:2017\ncid:307\n\niyr:2019 eyr:2026 ecl:brn\nhcl:#866857 byr:1993 cid:299\npid:603503348 hgt:186cm\n\niyr:2014\npid:852954158 hgt:73in byr:2021\neyr:2020 hcl:#a97842 cid:260 ecl:oth\n\nhgt:164cm eyr:2025 pid:113005290 byr:1955 ecl:blu iyr:2017 hcl:#b6652a\n\ncid:179 iyr:2015\npid:317467924 eyr:2025 ecl:gry byr:1996 hgt:180cm hcl:#a55f97\n\nhgt:172cm hcl:#efcc98 cid:53 ecl:grn iyr:2016\nbyr:1991 pid:337133478\neyr:2025\n\nhgt:150 iyr:2008\npid:#3e66a7 ecl:#8b3133 eyr:2040 byr:2012 hcl:802d16\n\npid:577607614 byr:1924 hgt:173cm hcl:#341e13 eyr:2026 ecl:amb\niyr:2013\n\neyr:2020 iyr:2011 hgt:175cm hcl:316607 pid:738554684\nbyr:2029 ecl:dne\n\nhgt:179cm iyr:2016\npid:178cm byr:2015\necl:gry\nhcl:#341e13\neyr:1986\n\nbyr:2005 iyr:2028 ecl:#7be9b8 eyr:1941 pid:#e7e9cb hgt:177in cid:67 hcl:#602927\n\necl:#0d50e6\npid:192cm iyr:2014 eyr:2027 hgt:73cm cid:162 hcl:93ea2f\nbyr:1958\n\nhcl:z\ncid:292 hgt:184in eyr:2001 pid:7218132701 byr:2020\necl:grt iyr:2014\n\necl:gry\nhcl:#fffffd\neyr:2026 iyr:2013\npid:117261833\n\npid:780384540 ecl:gry cid:52 eyr:2020 hgt:193cm hcl:#4ae223 iyr:2017\nbyr:1984\n\necl:hzl\npid:218314886 eyr:2030 byr:1948 hcl:#c0946f hgt:185cm iyr:2013\n\npid:175cm cid:340 ecl:blu hcl:#cfa07d eyr:2036 iyr:2018 byr:2018 hgt:70cm\n\nbyr:1953 hgt:164cm ecl:hzl\npid:488831953 iyr:2010\nhcl:#fffffd\n\nbyr:1961 hgt:165cm pid:506597451\ncid:122 eyr:2020 hcl:#cfa07d ecl:gry\niyr:2016\n\niyr:1970\neyr:2040\nbyr:2008\nhgt:188\necl:#b00a46 hcl:#fffffd\n\nhgt:179cm\nbyr:1972 eyr:2026\ncid:62 ecl:oth\npid:996355557 iyr:2013 hcl:#a97842\n\necl:amb eyr:2026 byr:1936 pid:812982189 hgt:158cm hcl:#888785 iyr:2010\n\niyr:2020\nhcl:#7d3b0c hgt:160cm\npid:336806720\neyr:2024 ecl:#7e0ae0 byr:1992\n\neyr:2036 pid:178cm hcl:z\nhgt:133 byr:2009 ecl:dne cid:127\n\nbyr:1938 hcl:#fd309a\ncid:104 iyr:2015 eyr:2022 pid:201047563\nhgt:160cm ecl:hzl\n\nbyr:2023 pid:25086180 hgt:160cm cid:180 hcl:z ecl:grt eyr:2038 iyr:2022\n\necl:grn hgt:167cm\nbyr:2023 iyr:2026 eyr:1928 hcl:z\n\nhcl:#efcc98 hgt:187cm byr:1925\necl:grn\npid:753746076 iyr:2017\neyr:2021\n\niyr:2017\nbyr:1934 ecl:grn eyr:2021 hgt:163cm\npid:688172460 hcl:#b6652a\n\nhcl:#c0946f iyr:2018 ecl:blu pid:676564085\nhgt:184cm cid:152 byr:1980 eyr:2023\n\necl:grt hgt:70cm iyr:2022 hcl:58716b byr:2010\npid:60834390 eyr:2037\n\niyr:2028 pid:270499403\necl:xry eyr:1947 hgt:152cm byr:2025\n\npid:091281559 hcl:#733820\nhgt:166cm\neyr:2021 ecl:grn cid:327 byr:1928\niyr:2014\n\neyr:2025 ecl:grn byr:1938 hcl:#ceb3a1\ncid:234\npid:549433891\nhgt:172cm iyr:2016\n\nhcl:#c0946f hgt:173cm iyr:2014 eyr:2030 ecl:blu byr:1965\npid:696577272\n\nhgt:154cm eyr:2030\npid:475642195 byr:1920 iyr:2013 hcl:#866857 ecl:blu\n\npid:518398763 iyr:2010\neyr:2020\nhgt:183cm\necl:brn byr:1921 hcl:#18171d\n\neyr:2023 pid:614116723 hcl:#7d3b0c ecl:hzl\niyr:2016 hgt:189cm byr:2000\n\necl:oth hgt:178cm hcl:#733820 byr:2001 pid:862420089 eyr:2023\n\npid:851985534 eyr:2028 hcl:#18171d ecl:oth cid:238 byr:2001\niyr:2019 hgt:166cm\n\nbyr:1927\nhgt:170cm\npid:246933107\necl:amb iyr:2015\ncid:166 eyr:2027 hcl:#b6652a\n\nbyr:1929\nhcl:#7d3b0c\ncid:263 pid:317156081 hgt:165cm eyr:2031 iyr:1980\n\nhcl:#866857 eyr:2021 hgt:179cm pid:206504353 cid:84 ecl:gry iyr:2012 byr:1952\n\nbyr:1986 ecl:hzl\nhcl:#a97842\niyr:2015 hgt:152cm pid:722601936 eyr:2025\n\nbyr:1921\npid:563550743 iyr:2015 ecl:hzl\neyr:2026 hcl:#fffd7b\n\necl:hzl\nhcl:#888785 cid:268 byr:1926 hgt:176cm pid:321394231 eyr:2021 iyr:2014\n\neyr:2021 cid:225\npid:770796086\necl:gry byr:1961\nhgt:154cm\nhcl:#6b5442\niyr:2011\n\neyr:2028 iyr:1961 byr:2016\ncid:98 pid:587360691 hgt:70cm ecl:#ceaf1f\nhcl:#c0b6db\n\nbyr:1978\neyr:2022 hgt:184cm hcl:#7d3b0c\ncid:271\necl:amb pid:235352975\niyr:2010\n\neyr:2026 pid:2844744\niyr:1958 byr:2017 hcl:z\nhgt:192in\necl:#971530\n\niyr:2020\nbyr:1960 eyr:2028 cid:162 pid:491912610 hcl:#fffffd hgt:59in\n\niyr:2012 pid:365229485 ecl:amb byr:1933 hcl:#18171d eyr:2024\n\nhgt:193cm pid:473100400\nhcl:#efcc98\ncid:201 eyr:2020 byr:1969 ecl:gry iyr:2016\n\neyr:2025 pid:137807160 iyr:2014\necl:grn byr:1944 hgt:168cm hcl:#ceb3a1\n\nbyr:2008 ecl:xry\niyr:2012 hcl:#efcc98 eyr:2028 pid:272344138\n\neyr:2024 pid:959415175 cid:148 hcl:#efcc98\nbyr:1977 hgt:179cm ecl:amb\n\npid:253742161 ecl:hzl hcl:#602927\neyr:2021 hgt:191cm byr:1925 iyr:2010\n\necl:amb hcl:#341e13\neyr:2024 iyr:2017\nbyr:1975\npid:838040028 hgt:172cm\n\nhgt:172in\npid:311113967 iyr:2015 cid:111 eyr:2023 ecl:oth byr:2003 hcl:#866857\n\nhcl:#888785 byr:1978 hgt:64in pid:442064310 eyr:2021\niyr:2011 ecl:hzl\n\neyr:2021 byr:1988 hcl:#a97842\npid:290578586 ecl:hzl hgt:174cm iyr:2020\n\nbyr:1998 iyr:2020 hgt:163cm ecl:oth eyr:2025\nhcl:#6b5442 pid:913461954\n\nhgt:173cm hcl:#18171d\neyr:2029 ecl:brn cid:313 byr:1980\niyr:2011 pid:810497375\n\nbyr:1975 hgt:153cm eyr:2027 hcl:#fffffd pid:857730031\necl:gry iyr:2020\n\nhcl:#18171d ecl:hzl\npid:185778821 hgt:178 iyr:2014 eyr:2028 byr:1974\n\niyr:2015 hgt:163in hcl:#c0946f ecl:#4844a6 byr:1979 pid:124626004\n\neyr:2024\npid:737015681 byr:1952\necl:hzl iyr:2019\nhgt:192cm hcl:#cfa07d\n\npid:2986469633 byr:2025 hgt:66cm hcl:z eyr:2011 iyr:2027 cid:311\n\nbyr:1962\neyr:2032\necl:lzr iyr:2014\nhgt:70cm pid:94309916\nhcl:#fffffd\n\ncid:350 hcl:#602927 iyr:2019 hgt:178cm\npid:172238204 byr:1949 ecl:hzl\neyr:2028\n\nhgt:153cm\nhcl:#ceb3a1\necl:grn\nbyr:1997\npid:266747822\niyr:2011 eyr:2022\n\npid:839681159 hgt:150cm eyr:2024 hcl:4d6414\necl:blu\niyr:2018 byr:1988\n\nbyr:1930 iyr:2011 pid:352711700 hgt:174cm cid:67 eyr:2020 ecl:hzl hcl:#6b5442\n\nbyr:1949 iyr:2013 hcl:#623a2f eyr:2030\nhgt:176cm\n\nhgt:164cm eyr:2026 hcl:#866857\niyr:2018 pid:922679610 byr:1974\necl:brn\ncid:114\n\neyr:2038 cid:317\nhgt:166in pid:0384056779 byr:2013 iyr:2021\necl:xry\n\ncid:83 hgt:166cm eyr:2026 iyr:2018 byr:1994 ecl:brn pid:858360477 hcl:#ceb3a1\n\nhgt:169cm eyr:2020\npid:110129489 byr:1958\necl:oth hcl:#7d3b0c\niyr:2011\n\ncid:279\niyr:2019 byr:1995 eyr:2026 ecl:hzl\nhcl:#7d3b0c hgt:185cm pid:085427066\n\nhcl:#c0946f\niyr:2011 eyr:2027\necl:amb\nbyr:1943 pid:060674566 hgt:183in\n\nhgt:156cm hcl:#c0946f pid:242827141\ncid:152\niyr:2018\neyr:2025 byr:1963\n\nbyr:1925 cid:168 eyr:2020 hcl:#cfa07d iyr:2011 ecl:brn hgt:150cm pid:740118192\n\necl:oth byr:1951 eyr:2025 cid:213\niyr:2020\nhgt:154cm\n\neyr:2025 iyr:2018 ecl:grn cid:91 byr:1925\nhgt:164cm hcl:#18171d\n\nbyr:1997\niyr:2018 eyr:2023 hcl:#602927 pid:251296833 ecl:blu\nhgt:185cm\n\nhgt:168cm pid:556895048\nhcl:#341e13 ecl:oth eyr:2020 cid:64 byr:1940\n\nbyr:1996 pid:821204904 cid:250 ecl:amb eyr:2026 hgt:185cm iyr:2019\n\necl:grn hcl:#b6652a iyr:2013\neyr:2028 hgt:157cm\nbyr:1925 pid:158cm\n\nhgt:190cm iyr:2019 ecl:oth eyr:2028 hcl:#341e13 cid:334 pid:258135663 byr:1972\n\nbyr:1936 hgt:76in pid:748344702 cid:335\neyr:2027 hcl:#a97842 ecl:amb iyr:2015\n\nhcl:z hgt:66cm eyr:2029\npid:#1589e0 iyr:2019 ecl:hzl\n\nhcl:#733820 ecl:amb\niyr:2013\nhgt:188cm byr:1955 pid:125663066 eyr:2020 cid:179\n\niyr:2017\nhgt:185cm ecl:grn\ncid:298 eyr:2030 hcl:#5b1c03\nbyr:1992 pid:092887457\n\neyr:2032 ecl:grn hgt:82 iyr:2022\npid:180cm byr:2003\ncid:55 hcl:z\n\npid:257666411 eyr:2023 byr:1982 hgt:179cm hcl:#18171d ecl:brn iyr:2010\n\niyr:2020\necl:amb hcl:#18171d\npid:971402454 eyr:2028\n\nhcl:#efcc98 byr:1964 pid:577424639 eyr:2030 iyr:2010 ecl:brn hgt:169cm\ncid:285\n\necl:amb byr:1958 hgt:159cm hcl:#efcc98 eyr:2024 iyr:2016\npid:029502840\n\nhcl:ac11eb\nbyr:2007 pid:0489471320 hgt:69cm iyr:2030 ecl:blu eyr:2033\n\npid:3785138563 eyr:2020 iyr:2020\nhcl:#966583 byr:2008 hgt:186cm ecl:gry\n\niyr:2014 pid:868785127 eyr:2029\ncid:220 hcl:#18171d ecl:blu byr:1948 hgt:171cm\n\nbyr:1936\npid:433437105\nhcl:#c0946f eyr:2020 iyr:2019 hgt:160cm ecl:brn\n\niyr:2015 eyr:2024 hgt:176cm ecl:hzl\nbyr:1995 pid:101835436 hcl:#ceb3a1\n\neyr:1959\nhcl:#cfa07d iyr:2010 pid:9214728\necl:#42fda0 hgt:71 byr:2022\n\nbyr:1998 iyr:2011 cid:275 ecl:oth\npid:924517068 eyr:2024 hgt:191cm\nhcl:#623a2f\n\nhgt:157 hcl:z\nbyr:1923 pid:#f6ce52 iyr:1975 ecl:lzr cid:100\n\npid:565022102\neyr:2021 hcl:#efcc98\nbyr:1988 ecl:gry iyr:2012\n\nhgt:156cm\nhcl:#b6652a eyr:2021 pid:969724332\ncid:126 iyr:2016\necl:hzl byr:1988\n\necl:blu hcl:#866857 hgt:153cm\npid:798083560\niyr:2015\nbyr:1981 eyr:2030\n\niyr:2013 cid:103 hcl:#efcc98 eyr:2022 byr:1964 ecl:gry\nhgt:161cm pid:950689613\n\npid:4316019547\necl:gmt\neyr:2029 byr:2011 iyr:2005 hgt:170cm cid:135\nhcl:567fd8\n\nhcl:#6b5442 pid:843348901 byr:1960\nhgt:156cm\neyr:2028 ecl:amb\n\neyr:2027\npid:286247733 byr:2000 hgt:191cm\niyr:2014\nhcl:#341e13 ecl:amb\n\necl:gmt byr:2005 hgt:182cm pid:376332625 hcl:z iyr:2021\neyr:1949\n\nhgt:184cm\nbyr:1940\ncid:260 eyr:2030 ecl:brn\niyr:2011 pid:792881807\n\niyr:1936 eyr:2021 cid:133 hcl:#623a2f byr:2003 pid:197167496\necl:#8896de\n\nhgt:67in cid:110\nbyr:1951\npid:389358116 eyr:2028 iyr:2017\necl:grn\n\nhgt:161cm\ncid:215\npid:116325531 iyr:2019\neyr:2025 hcl:#18171d ecl:blu\nbyr:1951\n\npid:787859682 hcl:#a97842 eyr:2020 byr:1948 hgt:190cm ecl:brn iyr:2020\n\npid:034440951 hgt:73cm hcl:803e55\ncid:350 byr:1985\necl:#a18487 eyr:2031\niyr:1973\n\nhcl:#40ee86 ecl:brn\niyr:2016 byr:1922 hgt:150cm pid:449374426\n\neyr:2040 hcl:260be4 pid:208681353 byr:2029 ecl:gry\nhgt:178cm\n\nhcl:#18171d hgt:162cm byr:1983 eyr:2020 pid:328556776 iyr:2017 ecl:grn\n\neyr:2029\nhcl:#a97842\npid:#7bd019 iyr:2015\nhgt:168cm byr:1926\necl:grn\n\necl:grt eyr:2034 pid:640680934 hgt:189in cid:276 byr:1969 hcl:511eed iyr:2023\n\neyr:2039 hgt:182in cid:145\nhcl:4a259b iyr:2026\nbyr:2004\necl:xry pid:#a3c9ea\n\nhcl:#866857\npid:615665716 ecl:blu hgt:164cm iyr:2020\nbyr:1948 eyr:2024 cid:286\n\nhcl:#b6652a hgt:59in eyr:2027\npid:752461325 ecl:oth\nbyr:1932 iyr:2019\n\neyr:2030 byr:1936 ecl:hzl\niyr:2010 cid:263 pid:186570962 hcl:#888785\nhgt:163cm\n\nbyr:1949 ecl:blu\npid:407719342\neyr:2030\nhcl:#b6652a iyr:2012\nhgt:186cm\n\npid:154cm ecl:amb byr:1944\neyr:2022\nhcl:z iyr:2017\n\nbyr:1980 hcl:#d2c954 iyr:2013 ecl:brn hgt:72in\neyr:2030\npid:017095362\n\nhgt:179cm\nhcl:#ceb3a1 cid:61 eyr:2026\niyr:2011\npid:897403026 byr:1984\necl:amb\n\ncid:150 hgt:181cm\neyr:2028 pid:894689339\nhcl:#602927 byr:1933 ecl:grn iyr:2018\n\npid:125553946 byr:1942 eyr:2026 hgt:193cm\niyr:2010 ecl:gry\nhcl:z\n\neyr:2013 pid:1213613355\necl:#b08dca hgt:190in\nhcl:06adb3 cid:303 iyr:2010\n\niyr:2019 pid:255938897\neyr:2022 hgt:152cm\nbyr:1956 ecl:grn hcl:#ceb3a1\n\neyr:2029\npid:670713784\niyr:2020 ecl:grn\nhgt:155cm hcl:#6b5442 byr:2002\n\nbyr:1925 hcl:#866857 pid:323449427 ecl:oth\neyr:2023 hgt:163cm iyr:2014\n\npid:841608722 byr:1955 hgt:150cm ecl:blu eyr:2029\nhcl:#6b5442\n\neyr:2023 hcl:#efcc98\nhgt:164cm ecl:gry\niyr:2018\nbyr:1993 pid:501920795\n\neyr:2030\niyr:2019 hgt:73in hcl:#bf908a\nbyr:1961 ecl:blu cid:86 pid:436811356\n\npid:#02516a hgt:131 iyr:1969 ecl:grt byr:2015\neyr:2010 hcl:z\n\necl:#25fb6c cid:239 pid:167cm iyr:2021\nbyr:2023 hgt:75cm\nhcl:z eyr:1931\n\npid:279251948\necl:oth hcl:#6b5442\nbyr:1943 iyr:2015 hgt:173cm eyr:2039\n\nbyr:1935\niyr:2013 hgt:151cm hcl:#b6652a\necl:grn\neyr:2023 pid:741958450\n\nhcl:6beab7 byr:1986\nhgt:85\niyr:2012 pid:#d98df3 eyr:2035\necl:dne\n\nbyr:1929\npid:764478810 ecl:grn\nhcl:#866857 iyr:2019 hgt:155cm eyr:2022 cid:277\n\nhgt:155cm pid:450816410 eyr:2030 cid:165 byr:1969 ecl:blu hcl:#866857 iyr:2019\n\ncid:330 pid:168777528 eyr:2024 ecl:blu hcl:#341e13\nhgt:178cm iyr:2013\nbyr:1921\n\neyr:2037 iyr:1973 hcl:a4ebf3\npid:161cm\necl:oth hgt:64cm cid:62\n\ncid:235\nhcl:538f8a hgt:70cm\niyr:1970 pid:177837127\necl:#95700d byr:2003\n\necl:hzl pid:375018246 hgt:161cm\niyr:2011 eyr:2029 hcl:#c0946f\nbyr:1956\n\nhcl:#888785\niyr:2016\npid:161cm byr:1977 ecl:#0188d8 eyr:2029\ncid:104 hgt:63in\n\nbyr:1979 eyr:2020 hcl:#ceb3a1 ecl:amb pid:752141341 hgt:150cm iyr:2010\n\ncid:274 byr:1928 iyr:2018 eyr:2023 hcl:#a97842 hgt:173cm pid:186060112 ecl:gry\n\nhcl:#341e13\necl:blu iyr:2011\nhgt:190cm cid:292 pid:974271891 eyr:2020 byr:1927\n\nhcl:#fffffd eyr:2025\necl:brn byr:1923 iyr:2011\npid:037981552\n\necl:blu pid:412817852 hgt:150cm iyr:2026\nbyr:2026\neyr:2020\n\necl:brn byr:1988 eyr:2026\nhgt:178cm pid:008152501\nhcl:#602927\niyr:2020\n\necl:brn pid:877401308 byr:1923 cid:154\nhgt:170cm\nhcl:#fffffd\niyr:2014\neyr:2022\n\ncid:56 hcl:ee020e pid:590581021 iyr:2018 hgt:72cm byr:2007\neyr:1964 ecl:oth\n\neyr:2029\niyr:2012 ecl:oth\nhgt:185cm cid:235\nbyr:2002\npid:064901580\n\nbyr:1956 hcl:#6c1a8c pid:497814257\neyr:1964 hgt:155cm ecl:gmt iyr:2030\n\nbyr:1935 hgt:171cm cid:253 pid:033393224 hcl:#c0946f iyr:2012\necl:blu eyr:2025\n\nbyr:1977 hcl:#602927 cid:175 iyr:2010\npid:9391986394 hgt:65in eyr:2026\necl:amb\n\niyr:2011 hgt:158cm ecl:#31cae1 byr:1958 hcl:b94ad1\neyr:2023 pid:#400a21\n\nhcl:e205b0 pid:84195182 byr:2012 eyr:2037 ecl:zzz hgt:75cm iyr:2030\n\npid:102379515\nbyr:1971\nhgt:169cm\necl:amb\neyr:2020 hcl:#cfa07d iyr:2017\n\npid:236611157\neyr:2020 hcl:#b6652a\niyr:2017 cid:194 byr:2001 hgt:169cm ecl:gry\n\niyr:2012 hcl:a256b5 eyr:2040 cid:62 hgt:177in byr:2010\n\neyr:2028 byr:2009 iyr:2020 ecl:brn\npid:12371575 hcl:#866857 hgt:190cm\n\nbyr:1965 eyr:2028\npid:402013776 hcl:#bc4e9e cid:183 hgt:150cm iyr:2015\n\npid:0269051559\nbyr:1936 hcl:z ecl:#ff0ab9\niyr:2014 eyr:2031\ncid:346 hgt:153in\n\nhcl:#18171d iyr:1929 hgt:157cm\neyr:2036 byr:1970\necl:amb\n\nhcl:#733820\neyr:2022\npid:096076686\niyr:2010\nhgt:192cm\nbyr:1957\n\nhcl:#ceb3a1 ecl:brn iyr:2013\neyr:2025\nbyr:1953 pid:751516675\nhgt:175cm\n\nbyr:1928\neyr:2027\ncid:85\nhgt:179cm ecl:oth\npid:169307999 hcl:#3e07af iyr:2010\n\nhgt:60cm byr:2008 hcl:z\neyr:1965 pid:167cm\ncid:106\niyr:1930\n\nhcl:#1099d9 ecl:amb pid:638820661 iyr:2014\nbyr:1998 eyr:2025\nhgt:162cm\n\necl:amb\neyr:2022 hcl:#623a2f byr:1956\nhgt:154cm\niyr:2010 pid:717452826\n\nhcl:fc9ba5\niyr:1928\neyr:2029 pid:54503219\nbyr:2020\necl:#d2155a hgt:124\n\neyr:2027\nhcl:#7d3b0c hgt:178 ecl:#63b8e6 iyr:2015 byr:1954\n\necl:oth byr:1970\npid:833178609 hcl:#c0946f iyr:2016 cid:81 eyr:1976\nhgt:69in\n\nhcl:#0cf4b8 pid:499271062 hgt:62in ecl:hzl iyr:2016 byr:1922\neyr:2022\n\nbyr:1994\neyr:2029 hgt:174cm hcl:#efcc98\necl:amb\niyr:2019 pid:297210449\n\necl:hzl\neyr:2026 iyr:2017 hcl:#a97842 hgt:162cm\nbyr:1950\n\npid:091886000 hgt:179cm byr:1975 eyr:2020 cid:326\necl:oth\niyr:2015 hcl:#a97842\n\nhcl:#efcc98 hgt:176cm byr:1940 iyr:2016 ecl:brn pid:514758507 eyr:2024 cid:313\n\neyr:2026 byr:1980\nhgt:155cm\niyr:2013 pid:367909831 ecl:oth\n\nbyr:1965\neyr:2021 iyr:2017\nhgt:185cm\nhcl:#a97842 ecl:hzl pid:238901177\n\nhgt:156cm pid:916654189\nbyr:1943 eyr:2022 ecl:amb hcl:#341e13 iyr:2016\n\ncid:305 iyr:2013\neyr:2029 hgt:163cm ecl:blu\nhcl:#fffffd pid:944033881\nbyr:1952\n\npid:638190538\nhcl:#866857 ecl:brn\neyr:2030 iyr:2016 cid:78 byr:1943 hgt:186cm\n\neyr:2024 iyr:2015\npid:231006970\ncid:312 byr:2000 hcl:#623a2f hgt:190cm ecl:brn\n\necl:#f89e87\nhcl:#fffffd hgt:166 cid:215\niyr:1961\neyr:2027 pid:314310197 byr:1977\n\nhcl:z eyr:1995 pid:951911095 hgt:154cm\necl:xry\ncid:154 byr:2023\n\nhgt:66in hcl:#866857\necl:brn\npid:328148585 byr:1984 eyr:2024\n\npid:456453839\neyr:2024 hcl:#fffffd byr:1990 ecl:amb\n\neyr:2030 cid:149 pid:983735096 hgt:179cm iyr:2014 byr:1957 ecl:gry hcl:#341e13\n\nbyr:2001 hgt:157cm\necl:hzl eyr:2021\nhcl:#ceb3a1\npid:558527031 iyr:2018\n\nhgt:122 ecl:oth hcl:z\npid:384664729\niyr:2012 cid:298 eyr:2023\n\necl:utc eyr:2024\nhgt:162in iyr:2018 pid:1722490341 byr:2027\nhcl:#18171d\n\necl:gry iyr:2017 hcl:#602927 cid:303 byr:1950\npid:509264482 eyr:2030\nhgt:164cm\n\nhgt:192cm pid:967128169 iyr:2019 ecl:blu eyr:2024 hcl:#fffffd byr:1949 cid:301\n\necl:blu\ncid:71 hgt:164cm eyr:2022 hcl:#cfa07d pid:750303088\nbyr:1949 iyr:2014\n\niyr:2014\npid:401425898 byr:1981\nhcl:#7d3b0c hgt:167cm eyr:2028\n\nhcl:#602927 hgt:160cm iyr:2014\neyr:2023 byr:1940 pid:748539736 ecl:amb\n\neyr:2025\nhcl:#c0946f pid:325296854 iyr:2020\nhgt:76cm ecl:amb byr:1921\n\nhgt:190cm\niyr:2011 pid:082777116\nbyr:1979 cid:73 ecl:oth hcl:#6b5442 eyr:2021\n\neyr:2029 ecl:amb hgt:151cm pid:144881592 byr:1964 hcl:#efcc98 iyr:2012\n\nhcl:#efcc98\niyr:2019\neyr:2023 byr:1999 pid:645291123\necl:brn\n\neyr:2029 pid:922956941 hcl:#623a2f byr:1934\necl:grn hgt:151cm\niyr:2019\n\nbyr:1992 ecl:brn\nhcl:#a97842\npid:269079906 hgt:187cm\niyr:2016 cid:218\n\nbyr:1951 ecl:oth eyr:2026 hgt:185cm\ncid:82 hcl:#7d3b0c\niyr:2020 pid:052476816\n\neyr:2026\ncid:319 iyr:2020\necl:brn hcl:#888785\nhgt:172cm pid:327064207 byr:1956\n\nhgt:178cm\npid:638854420 byr:1995 eyr:2030 ecl:gry hcl:#7d3b0c iyr:2018\n\niyr:2026 hcl:#b6652a\nbyr:1946\nhgt:186in pid:622875187 eyr:2028 ecl:gry cid:140\n\nbyr:1931 ecl:oth eyr:2030\npid:437813485\nhgt:181cm\nhcl:#efcc98 iyr:2018\n\nbyr:1999\necl:amb\nhgt:160cm iyr:2013 hcl:#b6652a pid:043039693\neyr:2022\n\nbyr:2025\npid:#fd7ad7 eyr:2025 hgt:63in\necl:oth iyr:2010 hcl:#b6652a\n\necl:grn\nbyr:1939 eyr:2025 hgt:171cm cid:134 iyr:2020 pid:090346629\nhcl:#cfa07d\n\nhcl:z\neyr:2031 cid:74\npid:50216290 ecl:utc iyr:2030\nhgt:176in\n\nbyr:1971 ecl:brn hgt:190cm pid:791682756 hcl:#fffffd\niyr:2020 eyr:2027\n\niyr:1931 byr:2025 hgt:76cm pid:735796617 eyr:2040 ecl:utc hcl:#c0946f\n\nhgt:163cm\nhcl:#18171d\necl:hzl\npid:628854394 cid:311 iyr:2020 eyr:2027\n\nhcl:z\necl:amb pid:#a8f973 hgt:94\neyr:2027 byr:2020 iyr:2012 cid:202\n\npid:086190379 byr:1931 ecl:blu iyr:2010 eyr:2027 hgt:175cm\n\necl:#0dafcd byr:2025 iyr:2021 eyr:1970 hgt:63cm cid:260 hcl:75300a pid:208921120\n\npid:024722981 iyr:2011 hgt:193cm hcl:#efcc98 ecl:blu byr:2001\n\nbyr:2027\ncid:123\necl:xry hgt:183cm iyr:2019 eyr:2026\nhcl:#c0946f\npid:380513483\n\neyr:2028 pid:302044900 iyr:2011 byr:1938 hgt:190cm ecl:amb hcl:#c0946f\n\neyr:2024 pid:672033747 byr:1931\niyr:2020 hcl:#f01aed ecl:brn\n\nhgt:184cm hcl:#efcc98 pid:391597648\niyr:2020 ecl:gry\nbyr:1961\n\niyr:2013 hgt:191cm byr:1935 eyr:2028 hcl:#ceb3a1 cid:195 ecl:brn\n\neyr:2025 pid:322775528 hgt:155cm hcl:#efcc98 iyr:2015 byr:1996 ecl:oth\n\nbyr:1960\nhgt:183cm pid:764315947 eyr:2030\nhcl:#ceb3a1 ecl:brn\n\neyr:2029 hgt:168cm byr:1929 pid:800222003 ecl:gry hcl:#8f8aaa\niyr:2011\n\nhcl:#623a2f ecl:hzl hgt:168cm pid:795434985 eyr:2020 iyr:2020 cid:209\nbyr:1970\n\ncid:325\nbyr:2007 eyr:1933 hgt:188in\npid:713080083 ecl:#d624ca iyr:2030 hcl:z\n\nhcl:#7d3b0c pid:431742871\necl:hzl hgt:169cm cid:340\neyr:2023\niyr:2017 byr:1994"},5899:function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(n,e,a){var s=a("1d80"),t=a("5899"),b="["+t+"]",i=RegExp("^"+b+b+"*"),r=RegExp(b+b+"*$"),o=function(n){return function(e){var a=String(s(e));return 1&n&&(a=a.replace(i,"")),2&n&&(a=a.replace(r,"")),a}};n.exports={start:o(1),end:o(2),trim:o(3)}},"59cc":function(n,e,a){"use strict";a.r(e),e["default"]="You watch the Elves and their sleigh fade into the distance as they head toward the North Pole.\n\nActually, you're the one fading. The falling sensation returns.\n\nThe low fuel warning light is illuminated on your wrist-mounted device. Tapping it once causes it to project a hologram of the situation: a **300x300** grid of fuel cells and their current power levels, some negative. You're not sure what negative power means in the context of time travel, but it can't be good.\n\nEach fuel cell has a coordinate ranging **from 1 to 300** in both the X (horizontal) and Y (vertical) direction. In `X,Y` notation, the top-left cell is `1,1`, and the top-right cell is `300,1`.\n\nThe interface lets you select **any 3x3 square** of fuel cells. To increase your chances of getting to your destination, you decide to choose the 3x3 square with the **largest total power**.\n\nThe power level in a given fuel cell can be found through the following process:\n\n- Find the fuel cell's **rack ID**, which is its **X coordinate plus 10**.\n- Begin with a power level of the **rack ID** times the **Y coordinate**.\n- Increase the power level by the value of the **grid serial number** (your puzzle input).\n- Set the power level to itself multiplied by the **rack ID**.\n- Keep only the **hundreds digit** of the power level (so `12`**`3`**`45` becomes `3`; numbers with no hundreds digit become `0`).\n- **Subtract 5** from the power level.\n\nFor example, to find the power level of the fuel cell at `3,5` in a grid with serial number `8`:\n\n- The rack ID is `3 + 10 =` **`13`**.\n- The power level starts at `13 * 5 =` **`65`**.\n- Adding the serial number produces `65 + 8 =` **`73`**.\n- Multiplying by the rack ID produces `73 * 13 =` **`949`**.\n- The hundreds digit of **`9`**`49` is **`9`**.\n- Subtracting 5 produces `9 - 5 =` **`4`**.\n\nSo, the power level of this fuel cell is **`4`**.\n\nHere are some more example power levels:\n\n- Fuel cell at ` 122,79`, grid serial number `57`: power level `-5`.\n- Fuel cell at `217,196`, grid serial number `39`: power level ` 0`.\n- Fuel cell at `101,153`, grid serial number `71`: power level ` 4`.\n\nYour goal is to find the 3x3 square which has the largest total power. The square must be entirely within the 300x300 grid. Identify this square using the X,Y coordinate of its **top-left fuel cell**. For example:\n\nFor grid serial number 18, the largest total 3x3 square has a top-left corner of **`33,45`** (with a total power of 29); these fuel cells appear in the middle of this 5x5 region:\n\n```\n-2  -4   4   4   4\n-4   4   4   4  -5\n 4   3   3   4  -4\n 1   1   2   4  -3\n-1   0   2  -5  -2\n```\n\nFor grid serial number `42`, the largest 3x3 square's top-left is **`21,61`** (with a total power of 30); they are in the middle of this region:\n\n```\n-3   4   2   2   2\n-4   4   3   3   4\n-5   3   3   4  -4\n 4   3   3   4  -3\n 3   3   3  -5  -1\n```\n\n**What is the `X,Y` coordinate of the top-left fuel cell of the 3x3 square with the largest total power?**"},"5a0e":function(n,e,a){"use strict";a.r(e),e["default"]="Your ferry can make it safely to a nearby port, but it won't get much further. When you call to book another ship, you discover that no ships embark from that port to your vacation island. You'll need to get from the port to the nearest airport.\n\nFortunately, a shuttle bus service is available to bring you from the sea port to the airport! Each bus has an ID number that also indicates **how often the bus leaves for the airport.**\n\nBus schedules are defined based on a **timestamp** that measures the **number of minutes** since some fixed reference point in the past. At timestamp 0, every bus simultaneously departed from the sea port. After that, each bus travels to the airport, then various other locations, and finally returns to the sea port to repeat its journey forever.\n\nThe time this loop takes a particular bus is also its ID number: the bus with ID `5` departs from the sea port at timestamps `0`, `5`, `10`, `15`, and so on. The bus with ID `11` departs at `0`, `11`, `22`, `33`, and so on. If you are there when the bus departs, you can ride that bus to the airport!\n\nYour notes (your puzzle input) consist of two lines. The first line is your estimate of the **earliest timestamp you could depart on a bus**. The second line lists the bus IDs that are in service according to the shuttle company; entries that show x must be out of service, so you decide to ignore them.\n\nTo save time once you arrive, your goal is to figure out the **earliest bus you can take to the airport**. (There will be exactly one such bus.)\n\nFor example, suppose you have the following notes:\n\n```\n939\n7,13,x,x,59,x,31,19\n```\n\nHere, the earliest timestamp you could depart is `939`, and the bus IDs in service are `7`, `13`, `59`, `31`, and `19`. Near timestamp `939`, these bus IDs depart at the times marked D:\n\n```\ntime   bus 7   bus 13  bus 59  bus 31  bus 19\n929      .       .       .       .       .\n930      .       .       .       D       .\n931      D       .       .       .       D\n932      .       .       .       .       .\n933      .       .       .       .       .\n934      .       .       .       .       .\n935      .       .       .       .       .\n936      .       D       .       .       .\n937      .       .       .       .       .\n938      D       .       .       .       .\n939      .       .       .       .       .\n940      .       .       .       .       .\n941      .       .       .       .       .\n942      .       .       .       .       .\n943      .       .       .       .       .\n944      .       .       D       .       .\n945      D       .       .       .       .\n946      .       .       .       .       .\n947      .       .       .       .       .\n948      .       .       .       .       .\n949      .       D       .       .       .\n```\n\nThe earliest bus you could take is bus ID `59`. It doesn't depart until timestamp `944`, so you would need to wait `944 - 939 = 5` minutes before it departs. Multiplying the bus ID by the number of minutes you'd need to wait gives **`295`**.\n\n**What is the ID of the earliest bus you can take to the airport multiplied by the number of minutes you'll need to wait for that bus?**"},"5b27":function(n,e,a){},"5db3":function(n,e,a){"use strict";a.r(e),e["default"]="252, 125\n128, 333\n89, 324\n141, 171\n266, 338\n117, 175\n160, 236\n234, 202\n165, 192\n204, 232\n83, 192\n229, 178\n333, 57\n70, 243\n108, 350\n161, 63\n213, 277\n87, 299\n163, 68\n135, 312\n290, 87\n73, 246\n283, 146\n80, 357\n66, 312\n159, 214\n221, 158\n175, 54\n298, 342\n348, 162\n249, 90\n189, 322\n311, 181\n194, 244\n53, 295\n80, 301\n262, 332\n268, 180\n139, 287\n115, 53\n163, 146\n220, 268\n79, 85\n95, 112\n349, 296\n179, 274\n113, 132\n158, 264\n316, 175\n268, 215"},"5f1f":function(n,e,a){"use strict";a.r(e),e["default"]="The tile floor in the lobby is meant to be a living art exhibit. Every day, the tiles are all flipped according to the following rules:\n\n- Any **black** tile with **zero** or **more than 2** black tiles immediately adjacent to it is flipped to **white**.\n- Any **white** tile with **exactly 2** black tiles immediately adjacent to it is flipped to **black**.\n\nHere, **tiles immediately adjacent** means the six tiles directly touching the tile in question.\n\nThe rules are applied simultaneously to every tile; put another way, it is first determined which tiles need to be flipped, then they are all flipped at the same time.\n\nIn the above example, the number of black tiles that are facing up after the given number of days has passed is as follows:\n\n```\nDay 1: 15\nDay 2: 12\nDay 3: 25\nDay 4: 14\nDay 5: 23\nDay 6: 28\nDay 7: 41\nDay 8: 37\nDay 9: 49\nDay 10: 37\n\nDay 20: 132\nDay 30: 259\nDay 40: 406\nDay 50: 566\nDay 60: 788\nDay 70: 1106\nDay 80: 1373\nDay 90: 1844\nDay 100: 2208\n```\n\nAfter executing this process a total of 100 times, there would be **`2208`** black tiles facing up.\n\n**How many tiles will be black after 100 days?**"},"64ab":function(n,e,a){"use strict";a.r(e),e["default"]="362981754"},6547:function(n,e,a){var s=a("a691"),t=a("1d80"),b=function(n){return function(e,a){var b,i,r=String(t(e)),o=s(a),l=r.length;return o<0||o>=l?n?"":void 0:(b=r.charCodeAt(o),b<55296||b>56319||o+1===l||(i=r.charCodeAt(o+1))<56320||i>57343?n?r.charAt(o):b:n?r.slice(o,o+2):i-56320+(b-55296<<10)+65536)}};n.exports={codeAt:b(!1),charAt:b(!0)}},"6c3a":function(n,e,a){"use strict";a.r(e),e["default"]="Patched into the aircraft's data port, you discover weather forecasts of a massive tropical storm. Before you can figure out whether it will impact your vacation plans, however, your device suddenly turns off!\n\nIts battery is dead.\n\nYou'll need to plug it in. There's only one problem: the charging outlet near your seat produces the wrong number of **jolts**. Always prepared, you make a list of all of the joltage adapters in your bag.\n\nEach of your joltage adapters is rated for a specific **output joltage** (your puzzle input). Any given adapter can take an input `1`, `2`, or `3` jolts **lower** than its rating and still produce its rated output joltage.\n\nIn addition, your device has a built-in joltage adapter rated for `3` **jolts higher** than the highest-rated adapter in your bag. (If your adapter list were `3`, `9`, and `6`, your device's built-in adapter would be rated for `12` jolts.)\n\nTreat the charging outlet near your seat as having an effective joltage rating of `0`.\n\nSince you have some time to kill, you might as well test all of your adapters. Wouldn't want to get to your resort and realize you can't even charge your device!\n\nIf you **use every adapter in your bag** at once, what is the distribution of joltage differences between the charging outlet, the adapters, and your device?\n\nFor example, suppose that in your bag, you have adapters with the following joltage ratings:\n\n```\n16\n10\n15\n5\n1\n11\n7\n19\n6\n12\n4\n```\n\nWith these adapters, your device's built-in joltage adapter would be rated for `19 + 3 =` **`22`** jolts, 3 higher than the highest-rated adapter.\n\nBecause adapters can only connect to a source 1-3 jolts lower than its rating, in order to use every adapter, you'd need to choose them like this:\n\n- The charging outlet has an effective rating of `0` jolts, so the only adapters that could connect to it directly would need to have a joltage rating of `1`, `2`, or `3` jolts. Of these, only one you have is an adapter rated `1` jolt (difference of **`1`**).\n- From your `1`-jolt rated adapter, the only choice is your `4`-jolt rated adapter (difference of **`3`**).\n- From the `4`-jolt rated adapter, the adapters rated `5`, `6`, or `7` are valid choices. However, in order to not skip any adapters, you have to pick the adapter rated `5` jolts (difference of **`1`**).\n- Similarly, the next choices would need to be the adapter rated `6` and then the adapter rated `7` (with difference of **`1`** and **`1`**).\n- The only adapter that works with the `7`-jolt rated adapter is the one rated `10` jolts (difference of **`3`**).\n- From `10`, the choices are `11` or `12`; choose `11` (difference of **`1`**) and then `12` (difference of **`1`**).\n- After `12`, only valid adapter has a rating of `15` (difference of **`3`**), then `16` (difference of **`1`**), then `19` (difference of **`3`**).\n- Finally, your device's built-in adapter is always `3` higher than the highest adapter, so its rating is `22` jolts (always a difference of **`3`**).\n\nIn this example, when using every adapter, there are **`7`** differences of 1 jolt and **`5`** differences of 3 jolts.\n\nHere is a larger example:\n\n```\n28\n33\n18\n42\n31\n14\n46\n20\n48\n47\n24\n23\n49\n45\n19\n38\n39\n11\n1\n32\n25\n35\n8\n17\n7\n9\n4\n2\n34\n10\n3\n```\n\nIn this larger example, in a chain that uses all of the adapters, there are **`22`** differences of 1 jolt and **`10`** differences of 3 jolts.\n\nFind a chain that uses all of your adapters to connect the charging outlet to your device's built-in adapter and count the joltage differences between the charging outlet, the adapters, and your device. **What is the number of 1-jolt differences multiplied by the number of 3-jolt differences?**"},"6cd8":function(n,e,a){"use strict";a.r(e),e["default"]='You board your plane only to discover a new problem: you dropped your boarding pass! You aren\'t sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control.\n\nYou write a quick program to use your phone\'s camera to scan all of the nearby boarding passes (your puzzle input); perhaps you can find your seat through process of elimination.\n\nInstead of [zones or groups](https://www.youtube.com/watch?v=oAHbLRjF0vo), this airline uses **binary space partitioning** to seat people. A seat might be specified like `FBFBBFFRLR`, where `F` means "front", `B` means "back", `L` means "left", and `R` means "right".\n\nThe first 7 characters will either be F or B; these specify exactly one of the **128 rows** on the plane (numbered `0` through `127`). Each letter tells you which half of a region the given seat is in. Start with the whole list of rows; the first letter indicates whether the seat is in the **front** (0 through 63) or the **back** (64 through 127). The next letter indicates which half of that region the seat is in, and so on until you\'re left with exactly one row.\n\nFor example, consider just the first seven characters of `FBFBBFFRLR`:\n\n- Start by considering the whole range, rows `0` through `127`.\n- `F` means to take the lower half, keeping rows `0` through `63`.\n- `B` means to take the upper half, keeping rows `32` through `63`.\n- `F` means to take the lower half, keeping rows `32` through `47`.\n- `B` means to take the upper half, keeping rows `40` through `47`.\n- `B` keeps rows `44` through `47`.\n- `F` keeps rows `44` through `45`.\n- The final `F` keeps the lower of the two, row `44`.\n\nThe last three characters will be either `L` or `R`; these specify exactly one of the **8 columns** of seats on the plane (numbered `0` through `7`). The same process as above proceeds again, this time with only three steps. `L` means to keep the **lower half**, while `R` means to keep the **upper half**.\n\nFor example, consider just the last 3 characters of `FBFBBFFRLR`:\n\n- Start by considering the whole range, columns `0` through `7`.\n- `R` means to take the upper half, keeping columns `4` through `7`.\n- `L` means to take the lower half, keeping columns `4` through `5`.\n- The final `R` keeps the upper of the two, column `5`.\n\nSo, decoding `FBFBBFFRLR` reveals that it is the seat at **row `44`, column `5`**.\n\nEvery seat also has a unique **seat ID**: multiply the row by `8`, then add the column. In this example, the seat has ID `44 * 8 + 5 = 357`.\n\nHere are some other boarding passes:\n\n- `BFFFBBFRRR`: row `70`, column `7`, seat ID `567`.\n- `FFFBBBFRRR`: row `14`, column `7`, seat ID `119`.\n- `BBFFBBFRLL`: row `102`, column `4`, seat ID `820`.\n\nAs a sanity check, look through your list of boarding passes. **What is the highest seat ID on a boarding pass?**'},7156:function(n,e,a){var s=a("861d"),t=a("d2bb");n.exports=function(n,e,a){var b,i;return t&&"function"==typeof(b=e.constructor)&&b!==a&&s(i=b.prototype)&&i!==a.prototype&&t(n,i),n}},"71fa":function(n,e,a){"use strict";a.r(e),e["default"]="As your ferry approaches the sea port, the captain asks for your help again. The computer system that runs this port isn't compatible with the docking program on the ferry, so the docking parameters aren't being correctly initialized in the docking program's memory.\n\nAfter a brief inspection, you discover that the sea port's computer system uses a strange [bitmask](https://en.wikipedia.org/wiki/Mask_(computing)) system in its initialization program. Although you don't have the correct decoder chip handy, you can emulate it in software!\n\nThe initialization program (your puzzle input) can either update the bitmask or write a value to memory. Values and memory addresses are both 36-bit unsigned integers. For example, ignoring bitmasks for a moment, a line like `mem[8] = 11` would write the value `11` to memory address `8`.\n\nThe bitmask is always given as a string of 36 bits, written with the most significant bit (representing `2^35`) on the left and the least significant bit (`2^0`, that is, the `1`s bit) on the right. The current bitmask is applied to values immediately before they are written to memory: a `0` or `1` overwrites the corresponding bit in the value, while an `X` leaves the bit in the value unchanged.\n\nFor example, consider the following program:\n\n```\nmask = XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\nmem[8] = 11\nmem[7] = 101\nmem[8] = 0\n```\n\nThis program starts by specifying a bitmask (`mask = ....`). The mask it specifies will overwrite two bits in every written value: the `2`s bit is overwritten with `0`, and the `64`s bit is overwritten with `1`.\n\nThe program then attempts to write the value `11` to memory address `8`. By expanding everything out to individual bits, the mask is applied as follows:\n\n```\nvalue:  000000000000000000000000000000001011  (decimal 11)\nmask:   XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\nresult: 000000000000000000000000000001001001  (decimal 73)\n```\n\nSo, because of the mask, the value `73` is written to memory address `8` instead. Then, the program tries to write `101` to address `7`:\n\n```\nvalue:  000000000000000000000000000001100101  (decimal 101)\nmask:   XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\nresult: 000000000000000000000000000001100101  (decimal 101)\n```\n\nThis time, the mask has no effect, as the bits it overwrote were already the values the mask tried to set. Finally, the program tries to write `0` to address `8`:\n\n```\nvalue:  000000000000000000000000000000000000  (decimal 0)\nmask:   XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\nresult: 000000000000000000000000000001000000  (decimal 64)\n```\n\n`64` is written to address `8` instead, overwriting the value that was there previously.\n\nTo initialize your ferry's docking program, you need the sum of all values left in memory after the initialization program completes. (The entire 36-bit address space begins initialized to the value `0` at every address.) In the above example, only two values in memory are not zero - `101` (at address `7`) and `64` (at address `8`) - producing a sum of **`165`**.\n\nExecute the initialization program. **What is the sum of all values left in memory after it completes?**"},"76a8":function(n,e,a){"use strict";a.r(e),e["default"]="The shuttle company is running a contest: one gold coin for anyone that can find the earliest timestamp such that the first bus ID departs at that time and each subsequent listed bus ID departs at that subsequent minute. (The first line in your input is no longer relevant.)\n\nFor example, suppose you have the same list of bus IDs as above:\n```\n7,13,x,x,59,x,31,19\n```\n\nAn `x` in the schedule means there are no constraints on what bus IDs must depart at that time.\n\nThis means you are looking for the earliest timestamp (called `t`) such that:\n\n- Bus ID `7` departs at timestamp `t`.\n- Bus ID `13` departs one minute after timestamp `t`.\n- There are no requirements or restrictions on departures at two or three minutes after timestamp `t`.\n- Bus ID `59` departs four minutes after timestamp `t`.\n- There are no requirements or restrictions on departures at five minutes after timestamp t.\n- Bus ID `31` departs six minutes after timestamp `t`.\n- Bus ID `19` departs seven minutes after timestamp `t`.\n\nThe only bus departures that matter are the listed bus IDs at their specific offsets from `t`. Those bus IDs can depart at other times, and other bus IDs can depart at those times. For example, in the list above, because bus ID `19` must depart seven minutes after the timestamp at which bus ID `7` departs, bus ID `7` will always **also** be departing with bus ID `19` at seven minutes after timestamp `t`.\n\nIn this example, the earliest timestamp at which this occurs is **`1068781`**:\n\n```\ntime     bus 7   bus 13  bus 59  bus 31  bus 19\n1068773    .       .       .       .       .\n1068774    D       .       .       .       .\n1068775    .       .       .       .       .\n1068776    .       .       .       .       .\n1068777    .       .       .       .       .\n1068778    .       .       .       .       .\n1068779    .       .       .       .       .\n1068780    .       .       .       .       .\n1068781    D       .       .       .       .\n1068782    .       D       .       .       .\n1068783    .       .       .       .       .\n1068784    .       .       .       .       .\n1068785    .       .       D       .       .\n1068786    .       .       .       .       .\n1068787    .       .       .       D       .\n1068788    D       .       .       .       D\n1068789    .       .       .       .       .\n1068790    .       .       .       .       .\n1068791    .       .       .       .       .\n1068792    .       .       .       .       .\n1068793    .       .       .       .       .\n1068794    .       .       .       .       .\n1068795    D       D       .       .       .\n1068796    .       .       .       .       .\n1068797    .       .       .       .       .\n```\n\nIn the above example, bus ID `7` departs at timestamp `1068788` (seven minutes after `t`). This is fine; the only requirement on that minute is that bus ID `19` departs then, and it does.\n\nHere are some other examples:\n\n- The earliest timestamp that matches the list `17,x,13,19` is **`3417`**.\n- `67,7,59,61` first occurs at timestamp **`754018`**.\n- `67,x,7,59,61` first occurs at timestamp **`779210`**.\n- `67,7,x,59,61` first occurs at timestamp **`1261476`**.\n- `1789,37,47,1889` first occurs at timestamp **`1202161486`**.\n\nHowever, with so many bus IDs in your list, surely the actual earliest timestamp will be larger than `100000000000000`!\n\n**What is the earliest timestamp such that all of the listed bus IDs depart at offsets matching their positions in the list?**"},"785c":function(n,e,a){"use strict";a.r(e),e["default"]="You finally reach the check-in desk. Unfortunately, their registration systems are currently offline, and they cannot check you in. Noticing the look on your face, they quickly add that tech support is already on the way! They even created all the room keys this morning; you can take yours now and give them your room deposit once the registration system comes back online.\n\nThe room key is a small [RFID](https://en.wikipedia.org/wiki/Radio-frequency_identification) card. Your room is on the 25th floor and the elevators are also temporarily out of service, so it takes what little energy you have left to even climb the stairs and navigate the halls. You finally reach the door to your room, swipe your card, and - **beep** - the light turns red.\n\nExamining the card more closely, you discover a phone number for tech support.\n\n\"Hello! How can we help you today?\" You explain the situation.\n\n\"Well, it sounds like the card isn't sending the right command to unlock the door. If you go back to the check-in desk, surely someone there can reset it for you.\" Still catching your breath, you describe the status of the elevator and the exact number of stairs you just had to climb.\n\n\"I see! Well, your only other option would be to reverse-engineer the cryptographic handshake the card does with the door and then inject your own commands into the data stream, but that's definitely impossible.\" You thank them for their time.\n\nUnfortunately for the door, you know a thing or two about cryptographic handshakes.\n\nThe handshake used by the card and the door involves an operation that **transforms** a **subject number**. To transform a subject number, start with the value 1. Then, a number of times called the **loop size**, perform the following steps:\n\n- Set the value to itself multiplied by the **subject number**.\n- Set the value to the remainder after dividing the value by `20201227`.\n\nThe card always uses a specific, secret **loop size** when it transforms a subject number. The door always uses a different, secret loop size.\n\nThe cryptographic handshake works like this:\n\n- The **card** transforms the subject number of **`7`** according to the **card's** secret loop size. The result is called the **card's public key**.\n- The **door** transforms the subject number of **`7`** according to the **door's** secret loop size. The result is called the **door's public key**.\n- The card and door use the wireless RFID signal to transmit the two public keys (your puzzle input) to the other device. Now, the **card** has the **door's** public key, and the **door** has the **card's** public key. Because you can eavesdrop on the signal, you have both public keys, but neither device's loop size.\n- The **card** transforms the subject number of the **door's public key** according to the **card's** loop size. The result is the **encryption key**.\n- The **door** transforms the subject number of the **card's public key** according to the **door's** loop size. The result is the same **encryption key** as the **card** calculated.\n\nIf you can use the two public keys to determine each device's loop size, you will have enough information to calculate the secret **encryption key** that the card and door use to communicate; this would let you send the `unlock` command directly to the door!\n\nFor example, suppose you know that the card's public key is `5764801`. With a little trial and error, you can work out that the card's loop size must be **`8`**, because transforming the initial subject number of `7` with a loop size of `8` produces `5764801`.\n\nThen, suppose you know that the door's public key is `17807724`. By the same process, you can determine that the door's loop size is **`11`**, because transforming the initial subject number of `7` with a loop size of `11` produces `17807724`.\n\nAt this point, you can use either device's loop size with the other device's public key to calculate the **encryption key**. Transforming the subject number of `17807724` (the door's public key) with a loop size of `8` (the card's loop size) produces the encryption key, **`14897079`**. (Transforming the subject number of `5764801` (the card's public key) with a loop size of `11` (the door's loop size) produces the same encryption key: **`14897079`**.)\n\n**What encryption key is the handshake trying to establish?**"},7861:function(n,e,a){"use strict";a.r(e),e["default"]="You arrive at the airport only to realize that you grabbed your North Pole Credentials instead of your passport. While these documents are extremely similar, North Pole Credentials aren't issued by a country and therefore aren't actually valid documentation for travel in most of the world.\n\nIt seems like you're not the only one having problems, though; a very long line has formed for the automatic passport scanners, and the delay could upset your travel itinerary.\n\nDue to some questionable network security, you realize you might be able to solve both of these problems at the same time.\n\nThe automatic passport scanners are slow because they're having trouble **detecting which passports have all required fields**. The expected fields are as follows:\n\n- `byr` (Birth Year)\n- `iyr` (Issue Year)\n- `eyr` (Expiration Year)\n- `hgt` (Height)\n- `hcl` (Hair Color)\n- `ecl` (Eye Color)\n- `pid` (Passport ID)\n- `cid` (Country ID)\n\nPassport data is validated in batch files (your puzzle input). Each passport is represented as a sequence of `key:value` pairs separated by spaces or newlines. Passports are separated by blank lines.\n\nHere is an example batch file containing four passports:\n\n```\necl:gry pid:860033327 eyr:2020 hcl:#fffffd\nbyr:1937 iyr:2017 cid:147 hgt:183cm\n\niyr:2013 ecl:amb cid:350 eyr:2023 pid:028048884\nhcl:#cfa07d byr:1929\n\nhcl:#ae17e1 iyr:2013\neyr:2024\necl:brn pid:760753108 byr:1931\nhgt:179cm\n\nhcl:#cfa07d eyr:2025 pid:166559648\niyr:2011 ecl:brn hgt:59in\n```\n\nThe first passport is **valid** - all eight fields are present. The second passport is **invalid** - it is missing hgt (the Height field).\n\nThe third passport is interesting; the **only missing field** is `cid`, so it looks like data from North Pole Credentials, not a passport at all! Surely, nobody would mind if you made the system temporarily ignore missing `cid` fields. Treat this \"passport\" as **valid**.\n\nThe fourth passport is missing two fields, `cid` and `byr`. Missing `cid` is fine, but missing any other field is not, so this passport is **invalid**.\n\nAccording to the above rules, your improved system would report `2` valid passports.\n\nCount the number of **valid** passports - those that have all required fields. Treat cid as optional. **In your batch file, how many passports are valid**?"},"78d6":function(n,e,a){"use strict";a.r(e),e["default"]="After saving Christmas [five years in a row](https://adventofcode.com/events), you've decided to take a vacation at a nice resort on a tropical island. Surely, Christmas will go on without you.\n\nThe tropical island has its own currency and is entirely cash-only. The gold coins used there have a little picture of a starfish; the locals just call them *stars*. None of the currency exchanges seem to have heard of them, but somehow, you'll need to find fifty of these coins by the time you arrive so you can pay the deposit on your room.\n\nTo save your vacation, you need to get all *fifty stars* by December 25th.\n\nCollect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants *one star*. Good luck!\n\nBefore you leave, the Elves in accounting just need you to fix your **expense report** (your puzzle input); apparently, something isn't quite adding up.\n\nSpecifically, they need you to **find the two entries that sum to `2020`** and then multiply those two numbers together.\n\nFor example, suppose your expense report contained the following:\n\n```\n1721\n979\n366\n299\n675\n1456\n```\nIn this list, the two entries that sum to `2020` are `1721` and `299`. Multiplying them together produces `1721 * 299 = 514579`, so the correct answer is `514579`.\n\nOf course, your expense report is much larger. **Find the two entries that sum to `2020`; what do you get if you multiply them together?**"},"7a71":function(n,e,a){"use strict";a.r(e),e["default"]="Player 1:\n41\n26\n29\n11\n50\n38\n42\n20\n13\n9\n40\n43\n10\n24\n35\n30\n23\n15\n31\n48\n27\n44\n16\n12\n14\n\nPlayer 2:\n18\n6\n32\n37\n25\n21\n33\n28\n7\n8\n45\n46\n49\n5\n19\n2\n39\n4\n17\n3\n22\n1\n34\n36\n47"},"7cb6":function(n,e,a){"use strict";a.r(e),e["default"]="Your flight to the major airline hub reaches cruising altitude without incident. While you consider checking the in-flight menu for one of those drinks that come with a little umbrella, you are interrupted by the kid sitting next to you.\n\nTheir [handheld game console](https://en.wikipedia.org/wiki/Handheld_game_console) won't turn on! They ask if you can take a look.\n\nYou narrow the problem down to a strange **infinite loop** in the boot code (your puzzle input) of the device. You should be able to fix it, but first you need to be able to run the code in isolation.\n\nThe boot code is represented as a text file with one **instruction** per line of text. Each instruction consists of an **operation** (`acc`, `jmp`, or `nop`) and an **argument** (a signed number like `+4` or `-20`).\n\n- `acc` increases or decreases a single global value called the **accumulator** by the value given in the argument. For example, `acc +7` would increase the accumulator by 7. The accumulator starts at `0`. After an `acc` instruction, the instruction immediately below it is executed next.\n- `jmp` **jumps** to a new instruction relative to itself. The next instruction to execute is found using the argument as an **offset** from the `jmp` instruction; for example, `jmp +2` would skip the next instruction, `jmp +1` would continue to the instruction immediately below it, and `jmp -20` would cause the instruction 20 lines above to be executed next.\n- `nop` stands for **No OPeration** - it does nothing. The instruction immediately below it is executed next.\n\nFor example, consider the following program:\n\n```\nnop +0\nacc +1\njmp +4\nacc +3\njmp -3\nacc -99\nacc +1\njmp -4\nacc +6\n```\n\nThese instructions are visited in this order:\n\n```\nnop +0  | 1\nacc +1  | 2, 8(!)\njmp +4  | 3\nacc +3  | 6\njmp -3  | 7\nacc -99 |\nacc +1  | 4\njmp -4  | 5\nacc +6  |\n```\n\nFirst, the `nop +0` does nothing. Then, the accumulator is increased from 0 to 1 (`acc +1`) and `jmp +4` sets the next instruction to the other `acc +1` near the bottom. After it increases the accumulator from 1 to 2, `jmp -4` executes, setting the next instruction to the only `acc +3`. It sets the accumulator to 5, and `jmp -3` causes the program to continue back at the first `acc +1`.\n\nThis is an **infinite loop**: with this sequence of jumps, the program will run forever. The moment the program tries to run any instruction a second time, you know it will never terminate.\n\nImmediately **before** the program would run an instruction a second time, the value in the accumulator is **`5`**.\n\nRun your copy of the boot code. Immediately before any instruction is executed a second time, **what value is in the accumulator**?"},8369:function(n,e,a){"use strict";a.r(e),e["default"]="You catch the airport shuttle and try to book a new flight to your vacation island. Due to the storm, all direct flights have been cancelled, but a route is available to get around the storm. You take it.\n\nWhile you wait for your flight, you decide to check in with the Elves back at the North Pole. They're playing a **memory game** and are ever so excited to explain the rules!\n\nIn this game, the players take turns saying **numbers**. They begin by taking turns reading from a list of **starting numbers** (your puzzle input). Then, each turn consists of considering the **most recently spoken number**:\n\n- If that was the **first** time the number has been spoken, the current player says **`0`**.\n- Otherwise, the number had been spoken before; the current player announces **how many turns apart** the number is from when it was previously spoken.\n\nSo, after the starting numbers, each turn results in that player speaking aloud either **`0`** (if the last number is new) or an **age** (if the last number is a repeat).\n\nFor example, suppose the starting numbers are `0,3,6`:\n\n- **Turn 1**: The `1`st number spoken is a starting number, **`0`**.\n- **Turn 2**: The `2`nd number spoken is a starting number, **`3`**.\n- **Turn 3**: The `3`rd number spoken is a starting number, **`6`**.\n- **Turn 4**: Now, consider the last number spoken, `6`. Since that was the first time the number had been spoken, the `4`th number spoken is **`0`**.\n- **Turn 5**: Next, again consider the last number spoken, `0`. Since it **had** been spoken before, the next number to speak is the difference between the turn number when it was last spoken (the previous turn, `4`) and the turn number of the time it was most recently spoken before then (turn `1`). Thus, the `5`th number spoken is `4 - 1`, **`3`**.\n- **Turn 6**: The last number spoken, `3` had also been spoken before, most recently on turns `5` and `2`. So, the `6`th number spoken is `5 - 2`, **`3`**.\n- **Turn 7**: Since `3` was just spoken twice in a row, and the last two turns are `1` turn apart, the `7`th number spoken is **`1`**.\n- **Turn 8**: Since `1` is new, the `8`th number spoken is **`0`**.\n- **Turn 9**: `0` was last spoken on turns `8` and `4`, so the `9`th number spoken is the difference between them, **`4`**.\n- **Turn 10**: `4` is new, so the `10`th number spoken is **`0`**.\n\n(The game ends when the Elves get sick of playing or dinner is ready, whichever comes first.)\n\nTheir question for you is: what will be the **`2020`th** number spoken? In the example above, the `2020`th number spoken will be **`436`**.\n\nHere are a few more examples:\n\n- Given the starting numbers `1,3,2`, the `2020`th number spoken is **`1`**.\n- Given the starting numbers `2,1,3`, the `2020`th number spoken is **`10`**.\n- Given the starting numbers `1,2,3`, the `2020`th number spoken is **`27`**.\n- Given the starting numbers `2,3,1`, the `2020`th number spoken is **`78`**.\n- Given the starting numbers `3,2,1`, the `2020`th number spoken is **`438`**.\n- Given the starting numbers `3,1,2`, the `2020`th number spoken is **`1836`**.\n\nGiven your starting numbers, **what will be the `2020`th number spoken**?"},"860b":function(n,e,a){"use strict";a.r(e),e["default"]="Amused by the speed of your answer, the Elves are curious:\n\n**What would the new winning Elf's score be if the number of the last marble were 100 times larger?**"},"87df":function(n,e,a){var s={"./2018/Day-1.2.md":"be9b","./2018/Day-10.2.md":"4f5a","./2018/Day-11.2.md":"3da3","./2018/Day-12.2.md":"1e3e","./2018/Day-2.2.md":"9666","./2018/Day-3.2.md":"9df0","./2018/Day-4.2.md":"aded","./2018/Day-5.2.md":"14da","./2018/Day-6.2.md":"bc7f","./2018/Day-7.2.md":"563a","./2018/Day-8.2.md":"203a","./2018/Day-9.2.md":"860b","./2020/Day-1.2.md":"8aee","./2020/Day-10.2.md":"1279","./2020/Day-11.2.md":"46e1","./2020/Day-12.2.md":"8c6a","./2020/Day-13.2.md":"76a8","./2020/Day-14.2.md":"b930","./2020/Day-15.2.md":"b52e","./2020/Day-16.2.md":"42d8","./2020/Day-17.2.md":"a065","./2020/Day-18.2.md":"cffc","./2020/Day-19.2.md":"adf3","./2020/Day-2.2.md":"5512","./2020/Day-20.2.md":"923a","./2020/Day-21.2.md":"2a33","./2020/Day-22.2.md":"46da","./2020/Day-23.2.md":"e858","./2020/Day-24.2.md":"5f1f","./2020/Day-25.2.md":"cbaf","./2020/Day-3.2.md":"baa6","./2020/Day-4.2.md":"4354","./2020/Day-5.2.md":"ef76","./2020/Day-6.2.md":"21be","./2020/Day-7.2.md":"b03d","./2020/Day-8.2.md":"2a25","./2020/Day-9.2.md":"a41f"};function t(n){var e=b(n);return a(e)}function b(n){if(!a.o(s,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return s[n]}t.keys=function(){return Object.keys(s)},t.resolve=b,n.exports=t,t.id="87df"},8823:function(n,e,a){"use strict";a.r(e),e["default"]='As your flight approaches the regional airport where you\'ll switch to a much larger plane, [customs declaration forms](https://en.wikipedia.org/wiki/Customs_declaration) are distributed to the passengers.\n\nThe form asks a series of 26 yes-or-no questions marked `a` through `z`. All you need to do is identify the questions for which **anyone in your group** answers "yes". Since your group is just you, this doesn\'t take very long.\n\nHowever, the person sitting next to you seems to be experiencing a language barrier and asks if you can help. For each of the people in their group, you write down the questions for which they answer "yes", one per line. For example:\n\n```\nabcx\nabcy\nabcz\n```\n\nIn this group, there are `6` questions to which anyone answered "yes": `a`, `b`, `c`, `x`, `y`, and `z`. (Duplicate answers to the same question don\'t count extra; each question counts at most once.)\n\nAnother group asks for your help, then another, and eventually you\'ve collected answers from every group on the plane (your puzzle input). Each group\'s answers are separated by a blank line, and within each group, each person\'s answers are on a single line. For example:\n\n```\nabc\n\na\nb\nc\n\nab\nac\n\na\na\na\na\n\nb\n```\n\nThis list represents answers from five groups:\n\n- The first group contains one person who answered "yes" to `3` questions: `a`, `b`, and `c`.\n- The second group contains three people; combined, they answered "yes" to `3` questions: `a`, `b`, and `c`.\n- The third group contains two people; combined, they answered "yes" to `3` questions: `a`, `b`, and `c`.\n- The fourth group contains four people; combined, they answered "yes" to only `1` question, `a`.\n- The last group contains one person who answered "yes" to only `1` question, `b`.\n\nIn this example, the sum of these counts is `3 + 3 + 3 + 1 + 1` = `11`.\n\nFor each group, count the number of questions to which anyone answered "yes". **What is the sum of those counts?**'},"8aa5":function(n,e,a){"use strict";var s=a("6547").charAt;n.exports=function(n,e,a){return e+(a?s(n,e).length:1)}},"8aee":function(n,e,a){"use strict";a.r(e),e["default"]="The Elves in accounting are thankful for your help; one of them even offers you a starfish coin they had left over from a past vacation. They offer you a second one if you can find **three** numbers in your expense report that meet the same criteria.\n\nUsing the above example again, the three entries that sum to `2020` are `979`, `366`, and `675`. Multiplying them together produces the answer, **`241861950`**.\n\nIn your expense report, **what is the product of the three entries that sum to `2020`**?"},"8c6a":function(n,e,a){"use strict";a.r(e),e["default"]="Before you can give the destination to the captain, you realize that the actual action meanings were printed on the back of the instructions the whole time.\n\nAlmost all of the actions indicate how to move a **waypoint** which is relative to the ship's position:\n\n- Action `N` means to move the waypoint **north** by the given value.\n- Action `S` means to move the waypoint **south** by the given value.\n- Action `E` means to move the waypoint **east** by the given value.\n- Action `W` means to move the waypoint **west** by the given value.\n- Action `L` means to rotate the waypoint around the ship **left** (**counter-clockwise**) the given number of degrees.\n- Action `R` means to rotate the waypoint around the ship **right** (**clockwise**) the given number of degrees.\n- Action `F` means to move **forward** to the waypoint a number of times equal to the given value.\n\nThe waypoint starts **10 units east and 1 unit north** relative to the ship. The waypoint is relative to the ship; that is, if the ship moves, the waypoint moves with it.\n\nFor example, using the same instructions as above:\n\n- `F10` moves the ship to the waypoint 10 times (a total of **100 units east and 10 units north**), leaving the ship at **east 100, north 10**. The waypoint stays 10 units east and 1 unit north of the ship.\n- `N3` moves the waypoint 3 units north to **10 units east and 4 units north of the ship**. The ship remains at **east 100, north 10**.\n- `F7` moves the ship to the waypoint 7 times (a total of **70 units east and 28 units north**), leaving the ship at **east 170, north 38**. The waypoint stays 10 units east and 4 units north of the ship.\n- `R90` rotates the waypoint around the ship clockwise 90 degrees, moving it to **4 units east and 10 units south of the ship**. The ship remains at **east 170, north 38**.\n- `F11` moves the ship to the waypoint 11 times (a total of **44 units east and 110 units south**), leaving the ship at **east 214, south 72**. The waypoint stays 4 units east and 10 units south of the ship.\n\nAfter these operations, the ship's Manhattan distance from its starting position is `214 + 72` = **`286`**.\n\nFigure out where the navigation instructions actually lead. **What is the Manhattan distance between that location and the ship's starting position?**"},"913e":function(n,e,a){"use strict";a.r(e),e["default"]="1-7 q: qqqqxvqrkbqqztlqlzq\n1-3 q: cqbm\n15-16 h: hhhhhhhhhhhhhhbsh\n4-16 x: xvbxswpnvxtnfjrxxx\n6-7 v: kbbvnswp\n17-18 h: hhhvhhhhhhhhhhhhhh\n1-7 w: twftdrb\n4-5 t: wcjtfpt\n3-9 f: mbfvfptbfq\n3-10 x: xfxxxxxxxv\n5-11 p: ppvhkgpmwfjp\n5-8 c: cbhhrtsbpf\n13-14 t: ttttltttgttttvht\n11-16 m: mmmmmmmrmmdmmmmxmmm\n3-13 b: bbbbbgbbbbbkkbvd\n7-10 d: ndddwdmdddhddv\n4-7 d: gcndnddkwhd\n14-18 z: zzzzzzzzzzzzzvzzzzzz\n5-6 c: mfcwccckdccfmzc\n9-14 p: bppzpwhzdgnpnh\n11-19 q: jqhqqqqqqqmfqqqqqqqq\n5-6 h: kqhpgl\n15-18 w: wwwwwwwwwwwwwwqwwqw\n2-10 m: qmmmmtphbrw\n10-20 k: jxlnkxnkhlkgkzhxbdvg\n8-9 c: ccccccccc\n12-19 k: vlkkkkklkzkkzkkckkfk\n13-14 s: bsfssqsscsssdj\n11-13 p: rmpdppplgcnpwxd\n9-16 c: ccccccccrclccqcgcc\n3-8 s: snsssmssdns\n13-19 t: ttttttttttttttttttwt\n7-8 q: dqqqdqqqqnqdq\n10-11 w: wwwvwwvhwtvwwwmw\n3-6 b: bbsnbpbckbb\n1-4 g: gggjg\n6-8 b: jvrqbbmb\n2-6 t: cvdtzn\n3-4 v: vvmd\n2-8 z: vmwhtskz\n2-6 b: jbrbjbs\n1-2 d: ndzwd\n17-20 r: xjfmlrrjcnnrmkvhrpwr\n8-10 q: qqqwqqqqqdl\n2-5 p: phppxpppppppp\n9-10 z: zzzzzznzzz\n8-9 k: phgksffkrfgp\n11-13 w: wwwwwwwwwwnwz\n9-11 k: krkkkkqkkkkskkk\n19-20 d: dmcwfddgdddvdffdhdld\n8-11 f: bflfqsffvfdffmfpfqf\n6-10 v: wwqvvvjvrd\n4-5 v: vvdvw\n3-4 h: hdhh\n9-10 d: dndfdddddd\n3-13 n: nnfnnnnnnnnnnnnnnmnn\n5-12 b: zwqcbkfcbbnbb\n5-15 q: qqrdqqqmqqnqqnjkqqqw\n6-8 l: vfllklxllclll\n3-4 h: hchh\n12-16 b: bbbbbbbbbbbhwbbtgbs\n4-10 p: ppwxplpppp\n4-5 s: szhss\n8-10 w: tvdtvbwnlfvkspxp\n4-9 z: zzznnkzwdzrz\n5-14 p: pppppppppppjpp\n6-7 n: hnnnnqnn\n1-4 q: qqdqqq\n7-8 w: wwwwwwbpww\n3-10 x: xfxxnxjxxxpx\n5-19 m: kmqhgpjdszvgrfrdlhm\n10-12 k: kqqzkkkkkkkk\n4-7 l: llpqcgmll\n4-5 p: rwppp\n2-6 q: mqqhrsdk\n7-10 m: cmmvscmmkm\n9-18 k: kkkkkzkkqdpkdlkjpgk\n2-7 m: xmglcvmkmln\n8-12 n: nnnnnnnfjnnbn\n4-5 n: nnnnn\n13-17 z: zzzzzzzzzzzzkzzzz\n1-5 t: mfftmn\n2-3 n: nskh\n11-18 s: sjssgsssfstzsbhnsw\n14-16 d: pgxrmlxdthpdndfdt\n2-3 h: hhhhh\n3-4 s: hssn\n7-9 f: fffffcmff\n2-4 s: srwbvhnlqssdpsssx\n3-4 v: vvvvvsvxvvh\n12-13 x: xxxxsxsxxdxmpjxlxxf\n15-16 m: cjcmmmmgdmbnmcmm\n8-11 l: hsjlnlvlfchgjlrdl\n9-11 k: kkknkkdkdkkk\n5-6 q: qgqqfpq\n16-19 w: wwwwfwwwwwwwvlwwwtw\n2-13 n: nnnjngnwgldsnrnrr\n5-6 x: qwbpxx\n4-5 x: xxxhx\n11-13 t: ctpskdtbwbtkstfj\n2-8 z: jwznsgln\n17-18 r: rrrrrrrrrrrrrrrrwnr\n7-12 v: bkpvwzzsdnsd\n5-7 h: hxxnpzh\n7-8 z: zzzzzzxs\n3-7 z: hzstpkrlht\n7-10 p: ppgkppnpdppj\n10-11 g: gghhgvgggwf\n9-11 q: qqqqxqqqqpqqqq\n2-3 r: qrrfr\n3-8 x: xvxzsxtxgxb\n11-14 q: fbqtzvjdqqhqqrqjrqq\n11-16 c: cccpccccccscwccfccn\n9-11 m: snmmmcmmsmmmmkm\n2-11 m: mmmczqsmclmrvmbzlv\n10-15 z: zzzzzzzzzjzzzzkjzzm\n3-13 j: jjxjjjjwjjjjbjjjdjjd\n7-10 j: sjjqjjvzjjcjrh\n8-9 x: xxxxxxxzxxx\n4-11 n: nnmnmndfnhqnhnn\n16-19 v: kntvxvvvvpvvvvghkzp\n6-9 b: pbbbxxjfqvngbvbb\n16-17 j: jjjjjjjjmjjjjjjjjj\n2-3 t: wttttttt\n10-15 c: cccccccccgpcccccc\n7-10 j: jjjjjjqjjrj\n1-7 f: cffffftfff\n8-14 r: rrnrrrrrfrrgscrmr\n1-12 b: jbbbjbkwbgbb\n13-16 m: mmxmmmmmwmmwmfmmmhbm\n1-9 s: fsssssssqs\n8-15 q: pxqqqqvbqqsbqzjngkv\n3-4 w: wkspxwm\n1-7 h: gkfhhhjhhhch\n1-4 w: sqrnwwgwqdw\n2-6 d: dpdwdld\n2-3 m: mmmmm\n4-6 p: pppspp\n2-7 c: ctcglxx\n11-13 x: xxqxxxxxxxxxxd\n7-9 c: cgccccbcrc\n6-9 p: xspppkppprp\n4-5 v: vvfqrv\n15-19 l: llwllllllfllllglllcl\n10-17 v: vvvvvvvvvgvvvvvvk\n11-14 s: sstngtbhsfsgds\n3-4 c: dxklc\n6-7 l: lllllll\n8-10 w: wwwwwwxtwkwnw\n3-4 l: sgllkmdpzgzvllzv\n7-17 w: zdfsdmwbphwhzwrxww\n2-12 l: rbwfpnmzgtsl\n3-6 s: qssdwlfbnm\n5-16 f: fffffffffffffffzff\n12-14 l: lllfllllldlllljll\n14-19 x: pxxxxxxxqxxxxxxxkxwx\n12-14 b: bbbbbbbbbbbrbnbbbb\n2-12 j: trjqljjgrjjq\n1-10 q: qqqqqqqqqqqqq\n1-6 t: jttttrtt\n1-2 v: rpvfcxhcgx\n4-5 r: frsrr\n1-6 v: jvvvvqvvvv\n2-4 v: tvvb\n4-5 h: hhchhzhqhcvh\n8-9 c: ccphccccccc\n13-15 c: cccbccccccxccxclcscc\n5-6 b: bbkbpczbs\n10-16 g: gdgggggggggggggggg\n1-11 f: fmffxfffgcfwfffbzff\n3-13 m: mzmmkmntbmmmmcz\n1-2 g: xkgq\n10-12 r: rbrmrrrrrwrrhrqvkr\n7-8 m: wbbmmmmmfmm\n3-4 l: dsnt\n4-5 k: kkkkkkk\n16-17 r: rrrrcrgrrmqwjrpwmtr\n15-17 z: zzzzzzzzzzzzzzzzzzz\n13-15 b: zbbbbbbbbbbttbbb\n8-13 w: twrwwwlwtwwww\n10-11 w: wwwwwwwwwwwwwwwwww\n4-6 b: pxvqbb\n5-8 n: wnnnznngw\n4-9 q: njjqqkrlq\n10-15 c: cckhfccdhfccccj\n10-15 c: ccrktcccgccgccz\n1-5 s: dvssx\n2-3 w: wwnw\n3-4 n: nnnnc\n7-16 n: tdlhmgsqknfnwgnnwmn\n9-11 z: zgdzzzzwfgjwzzzm\n4-5 f: ffpffff\n3-6 f: fvgfcff\n5-6 f: fkffhhlhrfg\n7-13 g: gtflglggggwbg\n4-5 w: wwdwrw\n8-10 w: hwpzzwwwjbqfww\n5-11 f: ftgfffffffpqffffffff\n6-7 f: fffffml\n6-12 j: jjtjjtjjjzjzjh\n4-6 h: phwtrn\n10-14 l: lllllllllcllll\n6-7 d: hdwxdsk\n13-18 w: kwwwwwwwwwwwwwwjwww\n3-8 q: bpqtzmqqljll\n1-3 c: cccds\n4-5 m: mmmmzd\n4-7 c: cccjcck\n4-6 t: ctdvts\n3-10 x: xsxrxshzjxrt\n3-6 j: wljvmxqzrjhctx\n4-5 v: vwvvcld\n8-9 l: blllllvllglllll\n4-14 j: jjjjjjjxxsjmjjjjj\n8-12 v: bvvvvvvqvvvbvv\n2-6 g: pgsgcglt\n1-4 g: qggs\n7-9 h: phchhpxhqhhh\n5-7 z: czzjzrnq\n3-4 k: kkkw\n2-3 v: vjfv\n7-11 v: slrrxhrhnvvk\n7-10 t: czhvlfwthc\n2-17 m: zmmmmtbmzlwmmmmslbm\n1-4 m: fmjz\n6-8 d: sdddddddddw\n2-5 h: pnfkhrwchvc\n2-4 r: brsrktfkqdlhzvvsfhf\n3-4 n: qnknnn\n7-10 f: rvnzfmfzrfdqkffc\n2-5 x: hxxqxkxxw\n1-7 w: wwqzwkww\n2-3 s: ssps\n8-16 d: ddjdddddddddbddddd\n10-12 d: dddxddddwldfsd\n1-6 v: skcvcwjf\n2-7 g: ggggzlggjgwg\n2-5 j: rjzfjqjzjtjkfp\n15-17 f: bqslszncqcvrpfrff\n2-13 d: xcddddddddwdzdmddzd\n1-9 l: lllmllxlljlxhll\n10-17 p: msbwpcprpppnsbpppzk\n2-13 v: vwdvvrsjrvvvpcvvv\n5-9 c: xscgtfxjbchcp\n4-6 g: jghgfg\n7-8 v: vvvvnvvv\n10-12 z: zzzzzmzzhbxz\n11-17 b: fknnqwzpgbbqnxkckj\n1-3 h: zgbpdwdnmmhbnqxm\n4-6 t: httsznfnx\n5-10 f: fflfffrfvxvgdq\n1-3 r: zrrrrrrrrnrr\n5-7 k: kkkkkkkkkkk\n6-7 r: rrrrrfgrrrz\n3-12 s: sssssssssssssss\n3-5 t: ttjdtt\n3-4 s: zzhslfrtwsj\n5-6 d: dddpddv\n1-7 q: bqqqdqpqq\n10-13 s: ssstscpsslsrsssds\n7-8 r: lrrrrrrr\n5-10 z: jzfwzlzjlz\n3-8 g: grpggggg\n1-7 c: jccccjvcc\n12-13 n: nnnnnnnnnnnhn\n1-5 t: ztwwnt\n8-9 z: zszzzzzbzzzz\n1-5 p: pppppp\n8-9 j: jjjjjbjkcjgj\n5-6 x: xwhxlx\n5-8 d: ddddwddx\n5-17 l: lllztxdllwblllllv\n9-18 m: mmgmmzmrmzchvrhqmm\n17-18 c: wzsjwnccrgbcwhrmgc\n10-17 f: fbdmffffchfcfkfft\n17-18 r: rzbzrszcnnrmlrrrzk\n1-9 p: cppppppppppp\n1-9 t: ttptqthtttct\n5-7 c: ncwnhmswscrqgtjtdgcr\n5-10 f: dffsfffpffhzf\n8-19 n: mnscfmjnnlvznnvlktn\n7-8 z: zzzzxzzd\n8-18 z: lzzbzbczzhdkzzwzgzz\n1-9 x: rxxsxxxxxxxfxxxx\n5-10 w: kjrwwptbww\n12-13 z: zzzfzzzrzzzzz\n5-6 g: gghggg\n16-18 q: qqqqqqqqqqqlqqqqqxqq\n5-9 c: lmcsxccccqjhmtcq\n1-3 x: xxtnxfqzxxx\n13-15 w: wddxxwwgqwwxwwww\n12-16 r: mrrjmrrrhrrrrrrrrr\n18-19 j: nmfjvcjljptwjnjjjjj\n1-13 g: ggggggggggggggg\n11-15 p: tpldppcbbbpzpvppw\n2-11 x: hbxdxxgnqxbxxxxjjxx\n9-11 s: nsnsksshzsqss\n1-16 k: knkkfkkqkhhbkppvkk\n2-4 x: tlwd\n5-7 h: npmhclh\n15-17 t: ttttttttttttttsttt\n5-6 d: dxddrkddhdl\n8-12 d: bddjdffdddtkgdhddd\n7-8 z: dkxzgbzzlw\n3-4 z: pzzz\n5-6 t: ttttqvv\n2-7 d: tpsdkqds\n18-19 c: cccccccccccccccccbcc\n2-3 c: hcmj\n5-6 l: llllwl\n2-6 t: tqtttx\n11-12 r: rrrfrrrvrrrcrrrrrrr\n9-12 s: dspssssshssssss\n1-3 d: ddddc\n4-5 t: tbpttzvtqr\n4-6 j: jjgjdjj\n2-4 t: tbtb\n4-5 w: wbwbwwvww\n10-11 s: dwsspssssssss\n1-8 s: tssssssl\n6-8 k: kksgmgkq\n6-11 p: pppppppjcpq\n7-8 c: ggcccpcclr\n13-14 h: hhhhhhhhhhhhbfh\n14-15 n: hsnnnnnnnnbnnwmnnn\n11-13 k: xxmqpkkcqkkjn\n12-14 w: qwkwwwxqwwzwcw\n1-17 n: nnnnnfnnvnnnnnnrpnn\n2-3 b: xbsgcgnrh\n4-5 v: ckpfvkvvswdnh\n6-7 q: qqqfqqf\n8-10 m: vntcbkgmmm\n9-13 m: bvxrzxbmlnmxcvmrwrc\n4-5 j: fjjlj\n1-3 k: lkskjkkc\n8-14 d: ftbhrdxmmfdbkwrsqr\n1-6 q: qrwcqqmtsqqhq\n16-17 h: zlmjqfbxhhhfmpvsdg\n3-8 v: bpwnbflvsljdzfkdmv\n8-18 m: mskwllxmbgbrdjmhwmn\n9-10 h: hhhhhzhhhq\n6-8 t: jttttztv\n2-4 m: xmmm\n15-17 f: ffffffffffffffjfwfff\n3-5 q: xrqqq\n1-4 h: hhqfmhhh\n14-15 f: ffffffffffhfcffd\n2-11 w: fjjnmtswwwbhwcrgjwgd\n4-9 q: qqqqqhqxqqxqt\n8-11 g: gggggggcggggggggg\n1-5 s: dbstvs\n2-4 z: zzzgz\n10-13 r: rrrrrrrrrrrrr\n3-4 r: wrzr\n5-9 c: cccddcrfccc\n2-8 k: vkkvlgvvsqzzkkvnk\n8-9 d: djdxdddwxdqrd\n5-7 j: cjjpjggqhjwtth\n5-15 n: nmnbnmnrxnrkznnvnn\n3-13 j: cjjjjvgjqdjjdqjr\n6-7 r: rzkrrvr\n3-5 v: nvczvzgrnk\n6-7 x: xxxxxdv\n2-5 c: hccpcw\n9-16 d: ddddddddddddddddd\n6-9 c: ccfccdpcqccccp\n4-5 q: kqtqq\n1-2 z: zzzk\n9-13 d: ddddddddddddd\n5-8 q: prfjgqvzqbqqqq\n2-6 h: rhrvghkfx\n3-10 d: rddszpfmrdfgqt\n7-11 w: wwvwwwkwwwlwwwwwww\n7-9 b: bbbbbbbbm\n1-2 r: ffnppzhtrkj\n1-10 m: mxnmfmlkwmwpkj\n3-10 n: nnwmnxnxnnl\n14-16 p: pppppppppppppfppp\n1-2 m: mmgn\n11-12 p: hpppppkpppppp\n6-14 l: lfvlllscxnlpll\n11-12 r: rrrbrdrrrrrm\n3-6 w: wwwcgw\n9-12 b: rbfhbqblnbbbbdb\n5-6 m: hmmkmmqmkm\n4-6 q: qclhqjqq\n4-16 l: lllnpllllllllllblllr\n4-5 m: nxcmmtmr\n3-5 q: qmblr\n4-5 m: mmmmm\n16-17 b: bbbbbbbbbbbbbbbcbb\n1-7 p: tjppppppppp\n5-6 k: kkkksf\n2-10 x: cxjbfjkwjxqwzjxcbq\n2-5 t: tsjkfn\n4-7 g: xgbcrst\n4-5 x: xxxxxx\n2-5 s: sszxb\n4-12 k: wcrkhkgkzklkqkh\n8-10 b: bbbbbbbnbn\n2-7 k: fkzfkkkkkklk\n4-8 w: wwwwwwwww\n4-8 h: hhhhhhhjh\n4-11 h: tgbhnnrzpshbjhq\n6-7 b: bsbdqbbb\n2-6 t: sqvtbgttbftt\n2-7 c: mctjgnn\n3-8 m: ktthpgrfmrqkcj\n5-7 x: whcxpgxvfq\n5-14 w: wwwwwwwwwwwwwww\n2-14 m: nmbxjbsmfjhdxmswks\n7-11 b: jbbprkhndbqclbb\n5-7 f: ffbfhfq\n6-10 z: zzzzzzzzzzzz\n4-7 d: mkdddgdhdh\n2-4 d: pkjd\n5-7 c: ccctqptcccccc\n15-16 h: hshfjthnhssrvdhb\n4-5 b: bbbxb\n5-12 l: llllmllllllnl\n3-4 t: tbgt\n5-9 w: wwvzwblwgwwwwvwww\n3-4 g: mmggfggg\n8-14 j: jnjjvjcjtmpjtjjxcpw\n8-9 h: hhhhwhhpch\n5-7 v: vvdzhcvv\n16-17 v: vvvvvvvvvvvvvvvtq\n12-18 s: sdcvjsfqtgnhcsmmsm\n6-13 n: hnqglmrjfgdnnpvtjr\n12-13 q: qmqqvqqqtqqvqqq\n1-9 z: nzzzzzzzzzzzzzz\n1-4 l: lllllll\n15-17 j: jjjjjjjjjjqjjjpjhj\n2-3 t: bttb\n3-4 q: qqqx\n1-3 t: wtjt\n18-19 x: xgnmxxljxwxxztxjvxx\n2-4 n: pkpf\n17-19 s: sssvssssssssssssssss\n13-14 l: llqlllllllllll\n5-9 m: mxgnmmrdmzll\n3-5 m: mmcmmmmwmmm\n4-8 b: bbbbbmplb\n4-6 x: xxxxvx\n1-2 m: lvfb\n9-10 n: npnnnnnpnnnn\n3-5 m: mmnmwmmmm\n15-20 r: mwrrrrrrrwrrrrrrnrrr\n1-2 l: rzlll\n9-11 s: sssdssnssts\n3-5 c: lccncc\n13-14 v: vvvvvvvvvvvvvv\n2-12 g: vshnfnhkzgjgkqn\n6-9 k: kqskrckkwg\n18-19 v: xzwbgvvnwlprqdxvshl\n16-17 v: vvvvvvvvvvvvvvvzv\n6-13 m: vkmmclmmwjfcvnmmm\n5-11 j: sjjjqwjjrjjqj\n5-7 q: djqhqcqhlz\n8-9 f: fffmcfftw\n12-14 x: xqpnjxjxlpxwxxb\n7-16 h: hhhglhnhbcxhvhhxhh\n12-13 v: vcvxvvvvvvvvvvv\n12-13 g: ggdngtlxwlrtsgcgmtgm\n5-6 n: nhnnhcn\n3-4 n: nnngwk\n9-10 k: kkkkkkpkkk\n6-11 r: rrrrrkrrmrtr\n3-9 d: dwdwdddqnfdddddddd\n8-15 q: qvqqxqqwqrqqqfjq\n6-7 f: ffffflf\n4-9 m: rpmsmphdmmbpdmmhmpr\n3-9 q: qqqqqqqqcq\n3-4 d: hddds\n2-4 f: rcfj\n3-4 k: kkhn\n6-9 n: npnnnnnlj\n1-6 k: tvspqddqktkkqkvk\n11-12 x: slxrptmpfqtp\n12-14 l: jjvwhlldtlllllh\n13-14 g: ngggggggggggks\n14-15 z: zzzzzzzzzzzzzjvzz\n5-6 l: vbsnvllnhlchblllc\n7-13 z: zgczzbzgzlpnczzz\n17-18 v: vvvvvvvvrvvvvvvvvvv\n15-16 h: hhhhhhhhhghhhhhh\n1-5 n: snnqv\n6-7 m: mmmmmmmm\n15-17 p: pppppppppppspqpppxp\n12-14 w: wwwwwhwwwwwwwwwww\n4-8 s: fssltbzbsrn\n5-7 g: gkxgbggg\n15-16 s: ssssssssssssssss\n2-4 l: lxtswwg\n5-6 p: plppzkpp\n9-10 r: srrrprgrhrrrvrr\n1-2 d: ddlhchdfll\n3-4 j: jjwg\n7-11 b: bkfbvbdvzlbz\n7-13 q: qgvwkzkrkvvks\n2-7 c: ccjtcbccccgv\n2-3 q: fqqq\n3-4 b: btssh\n6-7 m: mnmmmmm\n3-4 n: nrnn\n5-14 n: fcsxngnnkqxnjnn\n14-19 x: rmxcxxxxwxzxxhxxxlc\n3-13 q: qqqqqgqmdshrqnqlqlqt\n14-16 v: vvpvvvvvjvvnvvvvvvvv\n15-16 c: cccccccccclcccch\n4-6 v: hvvcvv\n7-9 d: dcdmddxdld\n16-18 x: rxxxxxxxzxxxxxxxdx\n11-14 l: llcsqllgvfmhlvtvb\n7-10 h: hhhhhdmhhwhhhh\n5-17 g: ggggggggggggggggg\n4-6 q: fbsnmzqdsqsqfpdr\n12-16 n: fnnlvnflmcnndtfnlw\n8-13 c: cpwshcvbccbjmlch\n7-9 l: sfhcltwlc\n9-13 w: xwwwwxwwwwwgwwkw\n5-6 q: kqqqqqjqqqqqqk\n14-17 k: kkkkkkkkcvbkkqxtkkkk\n8-9 h: qjhxhjhzl\n3-6 l: jlllvl\n10-11 q: shkxnqwfrhhznlb\n3-9 l: dwbvfgngtzcbhzlft\n16-20 b: qstrwcrclxzbwtlbpnwb\n8-10 n: ndhpptnnnjnnnbnn\n4-8 l: lllnlllw\n1-3 v: vdfxksvvn\n14-17 b: blbbmbbbbbbbbbxbbbb\n9-10 t: tttrkltgfbtth\n10-12 n: njhnnnznnnnn\n8-9 w: hfwwdwwww\n4-5 c: scrcccwc\n17-18 t: ttttttttttttttttmp\n10-11 t: tttttttttvjtttttt\n1-3 m: mdlrc\n8-9 r: zrnjxkbrrppzgvf\n3-4 d: sqddksgdjmd\n3-5 m: mmmmmmm\n1-8 h: nhclfdhlqwhhczn\n2-7 c: bbcbccgxhcwn\n4-6 l: zldqlgl\n9-11 n: pqbxnxfzhtd\n2-15 r: drmrjfxlqvmlcnwlbn\n14-15 k: kkkskkkkkkkkktk\n4-5 x: mxxzsxxxxx\n1-2 p: hhfwz\n6-13 b: mbdbkbpbjbbcb\n12-16 t: tthfzkrqvhltzhlttwtw\n6-11 h: hhhhhhhhhchzh\n3-8 q: knndgrkmnqqxjj\n5-7 v: svkvhfvv\n6-9 r: rrrrrwrrrrr\n3-10 p: pspxqhpxfqp\n3-9 z: xfzzmjgqzgjzczqpnj\n6-10 n: nnnncrnnnqnnnnn\n1-7 k: kkkkkkkkk\n2-4 m: mhmj\n3-7 j: qjtjjmbjjkfjjrj\n2-7 r: nrdxvnr\n1-2 l: wrrr\n3-4 t: ttjktt\n9-13 l: lllllllclslllll\n12-19 p: cpplpppphpppppdpntp\n10-12 p: dnpppppppwpgpppp\n2-4 z: pzzb\n1-2 k: kpkt\n4-7 r: rrrrrrq\n1-7 t: xttwtnqttd\n1-4 g: zngs\n4-6 d: qszrkcxxdt\n1-6 b: cpbhfm\n3-4 m: knmn\n9-11 c: lpdbchcckwnrc\n3-4 r: rrrrr\n12-18 q: qzqqwqqqqxrqqwqqqdqq\n6-9 v: wvvvvpvbq\n6-7 g: sggxxdhl\n12-17 b: mbsgqwvzlnjskhxctt\n4-5 f: rsfkc\n9-12 h: hhhhhhhhshhhhhh\n4-5 p: nppcn\n3-5 g: ggwsmggsgggfg\n4-6 p: gppfpsh\n13-14 v: fvftvjtqvxsqhzrv\n2-3 l: jlmbl\n2-4 v: wwjvv\n4-8 l: lllhlhllmlplg\n1-14 f: znvtwnmslnfhjrds\n3-10 z: zzhzkhzzlkdxzzz\n17-19 r: rrrrrrrrrrrrrrrrrrrr\n15-16 q: qpvqdgqkqqqqqqqq\n5-12 k: wkkkkknkszpkkrk\n3-8 j: jjhjjjjwj\n2-12 s: qvknfbrpsrfsp\n11-12 j: jjjjjjlfjjcrzjtj\n3-13 m: mmmmglpmhtrfvmfmmmx\n6-17 l: lllllblllllllllldll\n4-5 q: rqqnqqqqq\n8-9 p: fppppnspp\n11-17 q: pqqqqqqqqqjqlqqqqd\n3-4 l: lslll\n1-10 r: bgrrrrrrrprrr\n12-17 g: gggwjnxgmggngggrgpg\n14-16 z: zxzzzzzzzzzzzpzgz\n4-12 t: sttttttttttttwtz\n6-7 x: xlzxxxxg\n3-4 g: ggcg\n3-11 c: zblkwrxvcnl\n3-16 l: lhlljbljsllfhlklrlv\n8-9 v: vvvvvvvvtp\n2-5 f: fpbqcglx\n3-15 g: cwmgbgntbgwccqggpv\n4-11 m: mwwfhdgxdsmxckqcqvpg\n12-14 v: vvpvvvvvvvvfnwvv\n2-4 b: bbsxbwqbbx\n4-7 s: knsnxlsmg\n3-4 z: zzzzz\n1-4 x: mxxxxxxx\n2-7 w: pxwmtbkskmmfcddczqd\n9-12 b: bbbbbqlbgbbb\n3-4 l: mlqrlchqn\n2-3 b: bbbb\n13-15 x: lxxfjvqxhxhlxxx\n5-8 m: mtmnkvmcm\n3-7 v: xvwvvvwbtvs\n2-16 x: wsbhsvzxbjfjwlzlzr\n3-4 d: dzrd\n5-7 l: llllllml\n14-15 d: dddddddddddddwb\n6-7 t: ttttfbttg\n11-12 v: vvvvvvvvvvvvvvvv\n11-14 z: zzzzzlzzzzdfvjtzk\n4-20 b: jfnnqxxvxwhbfmbxqdxq\n6-9 d: dddddzdddd\n1-2 s: rnwsscss\n2-3 q: kqkrhq\n8-16 r: krlrxhrchrrrrvrkr\n5-7 r: svcrrfq\n2-13 b: bbbbbbbbbbbbbbs\n3-7 k: pdxkstw\n9-16 w: wwwwwwwwvwwwgwwww\n3-5 g: gbgkggpcmjgrc\n13-15 d: dddmdddmdddmldg\n3-17 t: tkpttktttbttttttt\n1-5 n: pnnngnnn\n3-4 f: ffhf\n3-7 p: tqpnncpczlp\n4-13 b: ppbnsfztshmbbggn\n1-4 r: rvlrrqrrrt\n4-8 s: snfwsssrsrrssssszp\n1-7 w: fwwwwwww\n1-4 d: fdjb\n7-8 l: llglthmjvlllt\n7-8 w: wwwwwwzjw\n7-9 v: zrgvvvvvvv\n2-7 d: pdddzvh\n2-9 w: nwwwbjswwxwxczlmh\n5-10 w: wwcwwwwfwwghwbw\n6-8 n: dqgnqjnnnnn\n4-14 r: rdrfrrrrrrrrrvrrr\n10-11 d: ddddddghtdfdhd\n2-6 n: gngqzn\n6-7 f: ffffdff\n5-9 b: bbbbwbbbzb\n7-9 n: knnnngnfnnn\n8-14 b: gbnbsdbwcwdbvb\n6-9 w: nttwjwbmw\n3-13 c: gswwmvqdchfcgfrqcn\n11-12 k: kzkvhkfrjxxjv\n3-9 d: xdzkdgfdrx\n6-13 q: qqqqcqqqqqqqqqq\n7-9 b: bmbbbbbbb\n8-16 p: hppgwpbmppcppppd\n9-12 m: mwmmscmmdmpkmmm\n3-6 n: nnnnnnn\n3-16 f: lfqfhfffdfffszfkh\n12-13 f: ffffffffffffmftffxf\n1-5 k: kkkqk\n3-6 f: ffsgft\n2-9 z: ktzvzztzzrzzfnk\n4-7 p: pppppgp\n5-9 j: jgtjkvjhtjmvtc\n4-5 g: ngngw\n5-6 f: ffffcgf\n3-11 k: xkkkcvwkkck\n7-11 c: qcccpchcccc\n3-17 h: hhnhhhhhhhhhhhhhhh\n4-5 x: bxjxj\n18-19 v: vbvcvvvcwvvvvvvvvtn\n12-14 d: dddddddddddwdxddd\n6-10 b: bbbbbbbbbbbb\n1-4 f: pfjf\n1-8 b: bbbbbbltbbbbbb\n14-15 d: dzddkfqcdxwfdnd\n8-10 t: tvxwlxltjt\n7-9 l: lxklrwlhl\n3-6 c: cclccdc\n15-17 w: wdwwwwwwwwxwwwqwfw\n1-4 h: ngkhh\n3-4 j: jjjj\n4-9 h: nphhzhhmhgb\n5-10 v: tsxzvvdvmvvsvp\n1-11 r: frjgrqrrrrkrrmrl\n10-12 p: zlkppppppmxppphsgd\n5-8 p: stmggpsmx\n3-5 r: rrrrrrrrrrrrrr\n2-3 t: ttgt\n6-11 m: mmjmsmhmmsmdmfmvm\n6-8 s: pnkbhsfsfgsr\n7-13 t: gchcvtttwgkmlbw\n8-11 l: lllllllrllrlh\n5-7 d: djvddzdd\n3-4 z: zzzzkk\n5-11 s: wsbdskxssjtqcs\n2-3 w: wwwszj\n1-4 m: mmvm\n3-9 x: bkzkrvkjfbtxn\n5-6 z: zzzzzwz\n1-4 v: vvvrvv\n1-4 d: zdxd\n6-8 k: klfnzkrswq\n1-6 p: pkjpcpntjzvp\n14-16 p: pdpppqmpmppqppppgp\n9-10 w: wwvglrwkrbwwwkwzww\n3-6 v: vfdvvcsvv\n9-13 z: zzzzzzbzzgfzzzzzczz\n4-5 n: nnnqnn\n4-13 m: jmbmmmmmmmnmmmvmm\n2-10 r: rlrcrrdnkrkrsqr\n9-14 r: rzrgrrrrhrrbrsrr\n9-11 f: ffpffzfvffzf\n10-11 j: jzjjjjzfpjjjrsgjjt\n3-4 b: bbbnbb\n4-6 z: zgzwzqhq\n10-11 j: jjxjxhjjjwj\n4-5 b: bbbbb\n4-5 d: dbzhw\n2-8 r: rrrlrrrrgrgfrwdf\n1-5 q: qmtrq\n9-13 j: jkjjjjjjjzjjt\n3-7 j: rjjjjjjjm\n5-9 z: zzzzdzzznzz\n2-13 t: tjtttttttfttsttt\n12-13 d: kbddmmkmcwdkddw\n3-4 q: qqql\n5-6 j: jjjjsqjj\n1-2 b: bbgwqt\n3-11 t: tftjtttttttttt\n9-12 h: hjxhhhhhqhhzz\n1-2 m: ncmmmml\n1-3 x: qxxs\n1-7 t: dtstrnxttt\n11-13 q: qqdqqpjjqktqbqnqqq\n2-5 p: pppppp\n2-4 n: njdjzpnghzbgvnngqn\n11-12 g: lpfwcvsqgmggfrjmdvs\n1-7 n: hrwhnvrmm\n12-13 s: hssdssscsgsksjssss\n3-8 x: csxgdxkxxptmlw\n9-11 q: qqqqqqnqkqmqqqqq\n3-4 g: wzkf\n7-8 t: cktttttt\n4-12 c: fgdjrccpmhcccwcgfm\n6-8 p: jppppppt\n1-4 p: pppppr\n1-7 n: nnrrrtndwn\n1-6 l: rldlkq\n2-4 x: rglr\n2-7 p: vpvmkgp\n4-5 n: nnnnz\n5-18 w: txgfflhvtdpdvwlwmmq\n9-10 l: tlllllllddl\n1-3 b: xpzbbbrbbr\n3-5 n: npnpnn\n10-14 q: nqqqqqqqqqqqqqqdqx\n7-10 w: bdwwwwgwljxgv\n7-11 k: kwknkkdlzkk\n1-10 w: wsjbvzwslmwttq\n15-18 b: bbbbbbbcbbbrbbbbbbb\n6-8 j: jdjjnlfj\n10-11 r: xrgrrrrrnvwrrfrr\n11-15 x: xxxxxxxxxxxxxxjx\n5-10 w: wfwwnwvngwlwwlw\n2-4 k: kkkk\n3-5 h: hjhhh\n7-8 s: lqsssscjrss\n10-12 t: tttsttttttttg\n3-8 p: szpsqzqp\n3-8 x: xxxxxxxxx\n6-7 r: rrxrrdrr\n1-2 b: zbbbbbbbbbbbbb\n3-6 v: vxvkvv\n4-5 w: wwwwwwdw\n3-5 n: nnfnn\n11-12 g: gggggggvggxgg\n10-12 s: sssqssssssssns\n3-7 h: hlmhhhhhhh\n7-8 v: vsdcvkvvszzm\n6-9 g: ggwnldgws\n14-15 q: qqqqkqqqqqqqkwkq\n8-9 l: bttjllqhnqjdvhsnk\n10-11 s: sqsscsqsscts\n10-14 h: hjhxhhhnhhxglkhvzl\n3-6 r: krrnvr\n12-17 z: zzsfzzzjzzzrzhzzgh\n1-5 b: bdnmb\n18-19 c: cccccccccccccccccckc\n13-16 t: tttttttrtttcdttpt\n5-6 c: ccczlxc\n2-7 b: phbqtkkkdglk\n4-6 x: tgrmqlxwgrgwxmkfr\n2-7 p: xspljfg\n4-9 b: bbbwbbbbmbbb\n3-9 b: brbvbbxqb\n13-14 c: cccpckqscbcchc\n1-3 m: mmmm\n1-2 v: bvvvvc\n2-3 b: bbsbbbnbbb\n1-2 f: gkfms\n5-6 n: nnnnnq\n4-5 c: kffccnrmn\n1-6 b: slgwbm\n2-3 x: mxcj\n3-4 p: gpbqpfsp\n5-8 s: szwszsss\n5-6 g: zkgjggg\n3-10 v: twmqbvvnvv\n3-5 z: shlzs\n1-6 r: wrrljrfntswb\n2-7 j: jjjjjjjjjj\n4-5 f: jfffqw\n1-3 r: kwrrrrfwp\n2-9 c: ccmcrthdqtk\n13-15 w: wwwwwwwwwwwwrwwww\n14-15 s: ssssssssssssssss\n2-5 r: rhmrfmr\n6-7 x: dwxgfpsbtvx\n7-8 b: bbbbcbbb\n1-5 l: slllcqlll\n3-4 h: hhbr\n3-6 k: kkkpkkk\n2-5 s: nsssmsssbs\n7-8 s: xtxtwtzspxsszmgjlpzx\n2-4 r: jzqc\n9-10 h: hhhhhhhbwh\n8-13 g: xgzjgjgggggmgggzc\n1-10 j: lrhzsjmfrzz\n4-10 z: dkqdhhrszpcplmfqgg\n7-9 x: xxxxxxwxxx\n12-13 f: fffpfqcfbkdvsbtzwwf\n5-8 g: ghsvggggzgggg\n10-14 z: ctzzkszzzlzmzzzz\n2-4 d: xfwdd\n9-15 j: xjjdjcjhnjjjfjjj\n1-2 h: hhhhhgwjhznh\n9-13 d: kddddbdddxddjsdsdd\n7-9 x: rxxxxdwxxxxnxkxcx\n6-16 r: rlrtlkdftfgqpkrsljr\n1-3 z: pzzz\n5-6 h: krhbsh\n8-9 x: mxqhpmqglxxwxqwxxxp\n2-4 z: vmfj\n12-15 s: sssfsssssksssst\n3-5 f: fwhfb\n10-12 j: jjjjjzwjjjjw\n4-6 j: jjjjjjjjjjj\n11-12 k: kkkkvfktkkkkkkwwzknk\n5-8 m: mhhmbvmvms\n10-14 r: rlwrdfzkhgrcrlz\n5-6 h: hhhhfh\n2-4 w: wwqhwww\n1-5 x: nxxxwxx\n11-16 h: xpshnhxbwclbhrhwsh\n7-9 t: ttttflgtkh\n10-20 n: bnknnnnnnlnnnnmnvncn\n2-5 w: pwwhwkq\n1-5 j: jhjjj\n5-6 f: fzffzfwfr\n3-6 s: sssssgs\n9-10 w: wwwwwnwxbrww\n5-6 z: xzzhzjzzzzhzhz\n17-18 v: vvvvvvvvvvvvvvvtvbv\n13-20 l: llllldllllllllllllll\n8-14 k: kkkkkkkgkkkkkkkk\n7-9 j: jjnjjjjjjj\n7-14 j: tjbjljjrjjjjzjjjj\n1-4 m: jcmmm\n6-9 g: ggnggsghggg\n2-16 v: pvvqdcrpzpsmppfvdftf\n8-11 j: jjjjjjjjjvj\n4-6 m: qbmmxmjpm\n2-12 l: pllqdxmwfmmlmznqr\n3-4 b: bsbhbbbbb\n1-4 w: wwww\n1-11 r: rrrrjrrrgmrr\n3-8 t: tnrztcht\n3-14 p: pjppkpplsphlpn\n7-8 j: tdfcjdjbjjjvjj\n10-11 n: nnnnnnmhnnnnrddrnn\n1-7 p: tppgqppptqscprnp\n3-4 c: cqcmcc\n2-8 l: llllllrlll\n9-12 j: dmcwsjjrvmzjp\n4-8 h: hhhrhhhb\n1-5 n: nnnnnn\n5-6 s: srssss\n2-8 n: nrbngnntnnn\n1-13 f: bffmjfdfffffp\n7-8 t: tqtttttt\n3-4 x: xxhh\n15-18 j: jjjjjjjjjjjjjjpjjk\n7-9 v: vkvvmzvvv\n5-7 j: xjjgkjknjjp\n2-4 l: llslkh\n10-11 m: mmmmmmmmmjwmmmwmm\n5-6 j: pjjzjqbqv\n5-11 n: nnnncnnnnnfnnnnnn\n2-13 g: gdfrmlcszxcwj\n9-16 b: bbbbbbwhpztbhdbzb\n1-4 f: fffffc\n1-3 f: fffkf\n16-17 p: pppppppppppppppkt\n6-10 h: wzcnzhvhml\n1-9 f: ffffffffff\n3-8 f: kffgggng\n8-13 m: mmmmmmmmmmmmmm\n12-19 k: zkzzlkkvpnllksklljr\n1-4 j: jjmjjjjxjwj\n4-5 h: phhhhzhhhmhhprh\n11-12 p: ppppppppppvppp\n13-16 j: hpgjjjwfhjgmdttl\n2-4 w: wwjwhthzhvpmpfkw\n9-10 k: kkxkkkkskkv\n17-20 j: jjjjjjbjjjzjjjjjjjjj\n1-3 v: cvvvb\n5-8 s: zbnmbfgdp\n10-11 x: xxxxgmdtxxtxxxbx\n12-17 n: nmnnjcndnndcnncnnrnn\n3-6 p: lmblxwpjvfgjps\n9-12 s: ssssssssfsssw\n9-10 g: ggggggwgkzgggg\n5-12 m: pzmmmfxgvmtmlmq\n2-7 p: ptppprn\n9-10 c: bgqtkccxcqb\n8-11 r: rdrrrrrhrrmr\n7-9 w: wwqwwwfwwjwhgrw\n5-7 r: rrrrrrh\n2-10 s: rsflsvlwfs\n3-7 b: bbqbbbb\n11-12 m: mmjmmqmnmmmm\n7-13 h: hhhhhhphhhnhghh\n12-13 b: bbbbbbblbbbtk\n5-13 h: ppgzjhhhlhhqx\n14-19 q: qlbqmqqqjqqqqrqkjnq\n3-19 f: pxmznsfdhzjqrdfjqrd\n16-17 q: qqmdqrqqxcqfxfgjg\n12-13 j: njjjzjghjjjjc\n9-11 l: vmbsllkcshmrhklrl\n1-2 c: tccccc\n3-6 p: jspprpjxhn\n5-8 x: xrxzxfwxxx\n9-10 z: zdznzzzzzzzgzz\n4-5 j: jjpjq\n4-6 r: rcxscm\n2-6 k: pkqjskrlfknnrqt\n3-11 k: bqbskncdkfrphshvv\n11-13 g: ggqgggggggggggg\n6-14 f: fffdxmfffjfffmffff\n19-20 z: zzzznzzzzzzzzzzzzzzz\n5-8 j: jjjjjjjjjgjjjjjjjjj\n2-4 k: pkbkqpsrgkcwc\n8-12 b: dbbwtbwbqxvbwrbl\n1-8 v: rvrvfcnlcwflcvlsv\n4-5 f: hffhfkq\n3-12 g: zggpngtnvzgd\n4-8 t: ttttwrwt\n12-13 x: xxxxxxxvxxxdnx\n9-12 j: jrvjjjjjbjjp\n1-13 b: zbhbbbbbbbbbvbb\n1-2 w: wwwwwww\n15-16 k: tfkxskmvqlkkmfkj\n12-18 b: bdpxktjwpxhsbgmrfb\n8-10 v: vvvvvvtzvzvv\n18-19 g: ggglgggggggggggggggg\n4-8 s: pnzsjvwsmxwgrjmsm\n14-17 p: pppppxppppppppprpkp\n9-17 n: nvlnqnwnnnztfcgnpdn\n3-5 l: mlqflfl\n7-11 z: dzzzzdmnzznzvzzz\n14-16 r: xrrsvrhhrlnjjrvrr\n12-14 z: vnwzqsvvtdnpvvdrhgz\n1-4 h: mhhhh\n1-5 m: pmmmmmm\n6-11 j: jmkljhjjvjmfmjpj\n2-4 f: xhtkdf\n5-14 x: frqqxljjwsxndx"},9167:function(n,e,a){"use strict";a.r(e),e["default"]=""},9180:function(n,e,a){"use strict";a.r(e),e["default"]="Your flight departs in a few days from the coastal airport; the easiest way down to the coast from here is via [toboggan](https://en.wikipedia.org/wiki/Toboggan).\n\nThe shopkeeper at the North Pole Toboggan Rental Shop is having a bad day. \"Something's wrong with our computers; we can't log in!\" You ask if you can take a look.\n\nTheir password database seems to be a little corrupted: some of the passwords wouldn't have been allowed by the Official Toboggan Corporate Policy that was in effect when they were chosen.\n\nTo try to debug the problem, they have created a list (your puzzle input) of **passwords** (according to the corrupted database) and the **corporate policy when that password was set**.\n\nFor example, suppose you have the following list:\n\n```\n1-3 a: abcde\n1-3 b: cdefg\n2-9 c: ccccccccc\n```\n\nEach line gives the password policy and then the password. The password policy indicates the lowest and highest number of times a given letter must appear for the password to be valid. For example, `1-3 a` means that the password must contain `a` at least `1` time and at most `3` times.\n\nIn the above example, **`2`** passwords are valid. The middle password, `cdefg`, is not; it contains no instances of `b`, but needs at least `1`. The first and third passwords are valid: they contain one `a` or nine `c`, both within the limits of their respective policies.\n\n**How many passwords are valid** according to their policies?"},"923a":function(n,e,a){"use strict";a.r(e),e["default"]="Now, you're ready to **check the image for sea monsters**.\n\nThe borders of each tile are not part of the actual image; start by removing them.\n\nIn the example above, the tiles become:\n\n```\n.#.#..#. ##...#.# #..#####\n###....# .#....#. .#......\n##.##.## #.#.#..# #####...\n###.#### #...#.## ###.#..#\n##.#.... #.##.### #...#.##\n...##### ###.#... .#####.#\n....#..# ...##..# .#.###..\n.####... #..#.... .#......\n\n#..#.##. .#..###. #.##....\n#.####.. #.####.# .#.###..\n###.#.#. ..#.#### ##.#..##\n#.####.. ..##..## ######.#\n##..##.# ...#...# .#.#.#..\n...#..#. .#.#.##. .###.###\n.#.#.... #.##.#.. .###.##.\n###.#... #..#.##. ######..\n\n.#.#.### .##.##.# ..#.##..\n.####.## #.#...## #.#..#.#\n..#.#..# ..#.#.#. ####.###\n#..####. ..#.#.#. ###.###.\n#####..# ####...# ##....##\n#.##..#. .#...#.. ####...#\n.#.###.. ##..##.. ####.##.\n...###.. .##...#. ..#..###\n```\n\nRemove the gaps to form the actual image:\n\n```\n.#.#..#.##...#.##..#####\n###....#.#....#..#......\n##.##.###.#.#..######...\n###.#####...#.#####.#..#\n##.#....#.##.####...#.##\n...########.#....#####.#\n....#..#...##..#.#.###..\n.####...#..#.....#......\n#..#.##..#..###.#.##....\n#.####..#.####.#.#.###..\n###.#.#...#.######.#..##\n#.####....##..########.#\n##..##.#...#...#.#.#.#..\n...#..#..#.#.##..###.###\n.#.#....#.##.#...###.##.\n###.#...#..#.##.######..\n.#.#.###.##.##.#..#.##..\n.####.###.#...###.#..#.#\n..#.#..#..#.#.#.####.###\n#..####...#.#.#.###.###.\n#####..#####...###....##\n#.##..#..#...#..####...#\n.#.###..##..##..####.##.\n...###...##...#...#..###\n```\n\nNow, you're ready to search for sea monsters! Because your image is monochrome, a sea monster will look like this:\n\n```\n                  # \n#    ##    ##    ###\n #  #  #  #  #  #   \n```\n\nWhen looking for this pattern in the image, **the spaces can be anything**; only the # need to match. Also, you might need to rotate or flip your image before it's oriented correctly to find sea monsters. In the above image, **after flipping and rotating it** to the appropriate orientation, there are two sea monsters (marked with **`O`**):\n\n```\n.####...#####..#...###..\n#####..#..#.#.####..#.#.\n.#.#...#.###...#.##.O#..\n#.O.##.OO#.#.OO.##.OOO##\n..#O.#O#.O##O..O.#O##.##\n...#.#..##.##...#..#..##\n#.##.#..#.#..#..##.#.#..\n.###.##.....#...###.#...\n#.####.#.#....##.#..#.#.\n##...#..#....#..#...####\n..#.##...###..#.#####..#\n....#.##.#.#####....#...\n..##.##.###.....#.##..#.\n#...#...###..####....##.\n.#.##...#.##.#.#.###...#\n#.###.#..####...##..#...\n#.###...#.##...#.##O###.\n.O##.#OO.###OO##..OOO##.\n..O#.O..O..O.#O##O##.###\n#.#..##.########..#..##.\n#.#####..#.#...##..#....\n#....##..#.#########..##\n#...#.....#..##...###.##\n#..###....##.#...##.##.#\n```\n\nDetermine how rough the waters are in the sea monsters' habitat by counting the number of `#` that are **not** part of a sea monster. In the above example, the habitat's water roughness is **`273`**.\n\n**How many `#` are not part of a sea monster?**"},9666:function(n,e,a){"use strict";a.r(e),e["default"]="Confident that your list of box IDs is complete, you're ready to find the boxes full of prototype fabric.\n\nThe boxes will have IDs which differ by exactly one character at the same position in both strings. For example, given the following box IDs:\n\n```\nabcde\nfghij\nklmno\npqrst\nfguij\naxcye\nwvxyz\n```\n\nThe IDs `abcde` and `axcye` are close, but they differ by two characters (the second and fourth). However, the IDs `fghij` and `fguij` differ by exactly one character, the third (`h` and `u`). Those must be the correct boxes.\n\n**What letters are common between the two correct box IDs?** (In the example above, this is found by removing the differing character from either ID, producing `fgij`.)"},9729:function(n,e,a){"use strict";a.r(e),e["default"]="[1518-09-28 00:56] wakes up\n[1518-10-15 00:05] falls asleep\n[1518-02-15 00:58] wakes up\n[1518-08-26 00:51] wakes up\n[1518-03-23 00:32] wakes up\n[1518-05-04 23:56] Guard #523 begins shift\n[1518-07-28 00:55] wakes up\n[1518-02-08 00:49] wakes up\n[1518-04-20 00:02] Guard #2017 begins shift\n[1518-09-12 00:57] wakes up\n[1518-06-11 00:34] wakes up\n[1518-06-08 00:20] wakes up\n[1518-01-29 00:53] wakes up\n[1518-09-23 00:03] falls asleep\n[1518-02-11 00:19] falls asleep\n[1518-05-12 23:57] Guard #151 begins shift\n[1518-07-24 00:47] wakes up\n[1518-07-21 00:03] falls asleep\n[1518-05-19 00:54] wakes up\n[1518-08-21 00:52] wakes up\n[1518-10-10 00:52] wakes up\n[1518-02-02 00:14] wakes up\n[1518-10-15 00:52] wakes up\n[1518-03-13 23:46] Guard #2081 begins shift\n[1518-08-07 00:26] falls asleep\n[1518-08-13 00:00] Guard #349 begins shift\n[1518-10-17 00:22] falls asleep\n[1518-03-10 00:14] falls asleep\n[1518-09-30 00:48] wakes up\n[1518-07-01 23:57] Guard #3469 begins shift\n[1518-04-09 23:57] Guard #3413 begins shift\n[1518-04-28 00:35] falls asleep\n[1518-06-08 00:49] wakes up\n[1518-08-15 00:25] falls asleep\n[1518-05-16 00:55] falls asleep\n[1518-06-13 00:48] falls asleep\n[1518-03-28 00:52] falls asleep\n[1518-10-19 00:01] Guard #2677 begins shift\n[1518-01-29 00:04] Guard #2017 begins shift\n[1518-04-09 00:23] falls asleep\n[1518-07-05 00:31] falls asleep\n[1518-06-15 23:58] Guard #1151 begins shift\n[1518-03-09 00:38] wakes up\n[1518-09-05 00:48] wakes up\n[1518-08-14 00:58] wakes up\n[1518-09-05 00:40] falls asleep\n[1518-06-10 23:56] Guard #151 begins shift\n[1518-03-16 00:00] Guard #1091 begins shift\n[1518-05-14 00:02] falls asleep\n[1518-07-23 00:52] wakes up\n[1518-09-13 00:50] wakes up\n[1518-10-19 23:59] Guard #2087 begins shift\n[1518-03-02 00:53] falls asleep\n[1518-11-20 00:42] falls asleep\n[1518-04-23 00:31] wakes up\n[1518-04-19 00:43] wakes up\n[1518-09-07 23:59] Guard #1091 begins shift\n[1518-08-30 00:00] Guard #71 begins shift\n[1518-11-14 00:53] falls asleep\n[1518-06-08 00:04] Guard #2017 begins shift\n[1518-03-21 00:58] wakes up\n[1518-04-19 00:24] falls asleep\n[1518-02-08 00:53] wakes up\n[1518-09-23 00:32] wakes up\n[1518-05-08 00:04] falls asleep\n[1518-10-17 00:55] wakes up\n[1518-10-12 23:57] Guard #3413 begins shift\n[1518-09-24 00:06] falls asleep\n[1518-08-06 00:43] falls asleep\n[1518-10-15 00:49] falls asleep\n[1518-01-28 00:58] wakes up\n[1518-09-28 23:57] Guard #2081 begins shift\n[1518-08-15 00:30] falls asleep\n[1518-03-06 00:53] falls asleep\n[1518-04-20 00:18] wakes up\n[1518-02-18 00:10] falls asleep\n[1518-02-27 23:56] Guard #1459 begins shift\n[1518-09-04 23:58] Guard #907 begins shift\n[1518-09-20 00:11] falls asleep\n[1518-09-02 00:35] wakes up\n[1518-11-12 00:03] Guard #907 begins shift\n[1518-07-18 00:16] falls asleep\n[1518-10-07 23:57] Guard #3539 begins shift\n[1518-02-16 00:31] falls asleep\n[1518-02-18 00:32] falls asleep\n[1518-06-18 00:55] wakes up\n[1518-09-26 00:26] falls asleep\n[1518-05-12 00:44] wakes up\n[1518-09-01 00:50] falls asleep\n[1518-09-25 00:04] Guard #367 begins shift\n[1518-07-17 00:59] wakes up\n[1518-08-29 00:02] falls asleep\n[1518-02-20 00:40] wakes up\n[1518-05-01 00:03] Guard #409 begins shift\n[1518-11-20 00:02] Guard #2593 begins shift\n[1518-09-18 00:04] Guard #1091 begins shift\n[1518-01-30 00:57] falls asleep\n[1518-01-31 00:33] falls asleep\n[1518-11-12 23:57] Guard #409 begins shift\n[1518-06-14 00:53] falls asleep\n[1518-08-08 00:25] falls asleep\n[1518-02-01 00:10] falls asleep\n[1518-07-11 00:50] wakes up\n[1518-04-18 00:03] Guard #449 begins shift\n[1518-10-09 00:53] wakes up\n[1518-06-24 23:52] Guard #409 begins shift\n[1518-07-19 00:53] wakes up\n[1518-03-08 00:21] wakes up\n[1518-07-14 00:36] wakes up\n[1518-07-02 00:22] falls asleep\n[1518-06-25 00:03] falls asleep\n[1518-08-10 23:51] Guard #3539 begins shift\n[1518-04-06 00:57] falls asleep\n[1518-10-13 00:08] wakes up\n[1518-08-24 00:58] wakes up\n[1518-05-28 00:31] falls asleep\n[1518-05-17 00:00] Guard #1627 begins shift\n[1518-03-14 00:05] falls asleep\n[1518-07-25 00:42] falls asleep\n[1518-04-25 00:02] Guard #71 begins shift\n[1518-11-16 00:10] falls asleep\n[1518-10-05 00:00] Guard #409 begins shift\n[1518-09-22 00:57] wakes up\n[1518-07-02 23:59] Guard #409 begins shift\n[1518-04-25 00:41] falls asleep\n[1518-07-30 00:48] wakes up\n[1518-02-07 00:50] wakes up\n[1518-10-02 00:36] falls asleep\n[1518-02-25 00:40] wakes up\n[1518-03-12 00:44] falls asleep\n[1518-10-10 00:55] falls asleep\n[1518-01-29 00:42] falls asleep\n[1518-04-17 00:57] wakes up\n[1518-08-22 00:32] falls asleep\n[1518-11-04 00:22] wakes up\n[1518-11-03 00:29] falls asleep\n[1518-05-08 00:51] wakes up\n[1518-06-03 00:15] falls asleep\n[1518-11-18 23:56] Guard #2081 begins shift\n[1518-07-14 00:13] falls asleep\n[1518-07-04 00:02] falls asleep\n[1518-04-11 00:02] Guard #1459 begins shift\n[1518-06-01 00:12] falls asleep\n[1518-04-01 23:53] Guard #409 begins shift\n[1518-06-22 00:27] falls asleep\n[1518-05-20 23:57] Guard #523 begins shift\n[1518-08-29 00:35] wakes up\n[1518-07-29 00:54] wakes up\n[1518-10-28 00:42] wakes up\n[1518-07-05 00:00] Guard #523 begins shift\n[1518-08-26 00:27] falls asleep\n[1518-04-15 00:04] falls asleep\n[1518-09-20 00:00] Guard #2393 begins shift\n[1518-07-19 00:31] wakes up\n[1518-02-23 00:48] wakes up\n[1518-11-14 00:01] falls asleep\n[1518-08-31 00:21] falls asleep\n[1518-05-03 00:18] falls asleep\n[1518-08-20 23:56] Guard #1627 begins shift\n[1518-10-01 00:37] falls asleep\n[1518-10-19 00:52] wakes up\n[1518-11-05 00:40] wakes up\n[1518-03-07 00:08] falls asleep\n[1518-01-28 00:49] wakes up\n[1518-04-14 00:22] falls asleep\n[1518-08-20 00:27] wakes up\n[1518-03-17 00:17] falls asleep\n[1518-05-03 23:58] Guard #2593 begins shift\n[1518-07-30 00:59] wakes up\n[1518-08-17 00:16] falls asleep\n[1518-08-22 00:25] wakes up\n[1518-07-15 00:54] wakes up\n[1518-04-11 23:56] Guard #409 begins shift\n[1518-09-22 00:03] Guard #349 begins shift\n[1518-10-01 00:18] falls asleep\n[1518-02-06 00:58] wakes up\n[1518-09-03 23:57] Guard #71 begins shift\n[1518-09-21 00:30] falls asleep\n[1518-07-27 00:03] Guard #2393 begins shift\n[1518-11-09 00:19] falls asleep\n[1518-08-14 00:21] falls asleep\n[1518-08-01 00:02] Guard #1627 begins shift\n[1518-02-07 00:58] wakes up\n[1518-10-18 00:57] wakes up\n[1518-06-26 00:58] wakes up\n[1518-10-07 00:00] Guard #1627 begins shift\n[1518-05-01 00:57] falls asleep\n[1518-04-23 00:20] falls asleep\n[1518-09-15 00:02] Guard #1459 begins shift\n[1518-06-05 00:42] falls asleep\n[1518-03-02 23:50] Guard #1627 begins shift\n[1518-06-19 00:51] wakes up\n[1518-06-01 23:56] Guard #151 begins shift\n[1518-06-22 23:48] Guard #2393 begins shift\n[1518-02-10 00:14] falls asleep\n[1518-06-11 00:57] wakes up\n[1518-07-09 00:39] wakes up\n[1518-10-17 23:59] Guard #3469 begins shift\n[1518-09-21 00:51] wakes up\n[1518-06-24 00:57] wakes up\n[1518-09-14 00:42] falls asleep\n[1518-08-26 00:37] falls asleep\n[1518-11-22 00:50] falls asleep\n[1518-10-26 00:00] Guard #409 begins shift\n[1518-07-12 00:33] wakes up\n[1518-07-24 23:59] Guard #1627 begins shift\n[1518-09-28 00:00] Guard #349 begins shift\n[1518-08-28 23:46] Guard #907 begins shift\n[1518-07-08 23:57] Guard #1459 begins shift\n[1518-05-20 00:05] falls asleep\n[1518-08-06 00:04] Guard #907 begins shift\n[1518-05-03 00:45] wakes up\n[1518-11-11 00:08] falls asleep\n[1518-05-16 00:28] wakes up\n[1518-03-11 00:54] wakes up\n[1518-06-06 23:57] Guard #3469 begins shift\n[1518-11-22 00:16] falls asleep\n[1518-02-18 00:04] Guard #71 begins shift\n[1518-06-26 00:09] falls asleep\n[1518-03-08 23:48] Guard #523 begins shift\n[1518-08-02 00:00] Guard #367 begins shift\n[1518-11-20 00:44] wakes up\n[1518-04-04 00:22] wakes up\n[1518-09-22 23:51] Guard #3413 begins shift\n[1518-10-10 00:04] Guard #1627 begins shift\n[1518-08-05 00:07] falls asleep\n[1518-09-27 00:58] wakes up\n[1518-07-09 00:35] falls asleep\n[1518-09-29 00:20] wakes up\n[1518-06-14 00:59] wakes up\n[1518-06-19 23:59] Guard #2081 begins shift\n[1518-08-19 00:29] wakes up\n[1518-08-16 00:51] wakes up\n[1518-07-07 00:19] wakes up\n[1518-06-28 00:11] falls asleep\n[1518-10-31 00:45] wakes up\n[1518-07-24 00:08] wakes up\n[1518-05-01 00:59] wakes up\n[1518-06-11 23:47] Guard #3413 begins shift\n[1518-10-02 23:58] Guard #2087 begins shift\n[1518-09-06 23:58] Guard #409 begins shift\n[1518-03-25 00:50] falls asleep\n[1518-04-05 00:46] falls asleep\n[1518-07-17 00:03] Guard #71 begins shift\n[1518-06-15 00:49] falls asleep\n[1518-07-12 00:47] wakes up\n[1518-11-07 00:19] falls asleep\n[1518-03-17 00:50] wakes up\n[1518-04-10 00:57] falls asleep\n[1518-09-19 00:19] wakes up\n[1518-08-05 00:55] wakes up\n[1518-03-17 00:00] Guard #1627 begins shift\n[1518-07-26 00:57] wakes up\n[1518-03-26 23:56] Guard #2593 begins shift\n[1518-05-30 23:49] Guard #523 begins shift\n[1518-07-07 00:18] falls asleep\n[1518-09-04 00:56] wakes up\n[1518-06-27 00:01] falls asleep\n[1518-08-11 00:49] falls asleep\n[1518-03-07 00:52] wakes up\n[1518-05-18 00:34] wakes up\n[1518-06-05 00:59] wakes up\n[1518-04-22 00:38] wakes up\n[1518-05-16 00:57] wakes up\n[1518-03-21 00:47] wakes up\n[1518-04-25 00:57] wakes up\n[1518-09-03 00:04] falls asleep\n[1518-04-23 00:59] wakes up\n[1518-09-02 00:01] Guard #2393 begins shift\n[1518-09-22 00:53] falls asleep\n[1518-09-15 00:26] falls asleep\n[1518-10-24 00:34] wakes up\n[1518-05-23 00:54] wakes up\n[1518-02-15 00:35] wakes up\n[1518-03-08 00:25] falls asleep\n[1518-10-11 23:57] Guard #349 begins shift\n[1518-08-04 00:36] falls asleep\n[1518-04-14 00:53] wakes up\n[1518-07-24 00:23] falls asleep\n[1518-08-22 00:22] falls asleep\n[1518-07-24 00:04] falls asleep\n[1518-09-20 00:43] wakes up\n[1518-05-26 00:29] falls asleep\n[1518-06-11 00:32] falls asleep\n[1518-03-14 23:56] Guard #151 begins shift\n[1518-06-27 00:57] wakes up\n[1518-05-14 23:47] Guard #2017 begins shift\n[1518-11-06 23:56] Guard #367 begins shift\n[1518-04-05 00:49] wakes up\n[1518-09-13 23:56] Guard #151 begins shift\n[1518-09-28 00:52] falls asleep\n[1518-11-14 23:59] Guard #1091 begins shift\n[1518-07-21 00:49] wakes up\n[1518-06-08 00:27] falls asleep\n[1518-08-13 00:32] wakes up\n[1518-10-14 00:59] wakes up\n[1518-05-22 00:35] falls asleep\n[1518-06-24 00:00] Guard #409 begins shift\n[1518-08-08 00:54] wakes up\n[1518-09-19 00:15] falls asleep\n[1518-10-15 23:59] Guard #349 begins shift\n[1518-06-11 00:18] falls asleep\n[1518-06-24 00:50] falls asleep\n[1518-10-28 00:38] falls asleep\n[1518-09-09 00:26] falls asleep\n[1518-05-03 00:22] wakes up\n[1518-08-18 00:00] Guard #3413 begins shift\n[1518-09-16 00:58] wakes up\n[1518-09-29 00:26] falls asleep\n[1518-08-13 00:18] falls asleep\n[1518-08-16 00:50] falls asleep\n[1518-08-09 00:51] wakes up\n[1518-08-02 00:59] wakes up\n[1518-06-21 00:43] wakes up\n[1518-07-09 00:43] falls asleep\n[1518-02-16 00:51] wakes up\n[1518-05-17 00:55] falls asleep\n[1518-10-28 23:58] Guard #1459 begins shift\n[1518-10-03 00:13] falls asleep\n[1518-11-11 00:51] wakes up\n[1518-05-27 00:38] wakes up\n[1518-09-26 00:31] wakes up\n[1518-07-02 00:58] wakes up\n[1518-03-25 00:08] falls asleep\n[1518-04-03 00:24] wakes up\n[1518-04-18 00:33] falls asleep\n[1518-06-21 00:53] falls asleep\n[1518-09-25 23:59] Guard #1459 begins shift\n[1518-05-26 00:03] Guard #3469 begins shift\n[1518-10-26 23:59] Guard #409 begins shift\n[1518-02-06 00:25] falls asleep\n[1518-11-09 00:54] wakes up\n[1518-09-03 00:24] wakes up\n[1518-04-25 23:50] Guard #2393 begins shift\n[1518-03-06 00:29] wakes up\n[1518-05-12 00:02] Guard #2081 begins shift\n[1518-09-26 00:53] wakes up\n[1518-05-23 00:02] Guard #367 begins shift\n[1518-08-13 00:41] falls asleep\n[1518-09-12 00:37] wakes up\n[1518-09-01 00:32] falls asleep\n[1518-09-02 00:29] falls asleep\n[1518-07-17 23:59] Guard #3539 begins shift\n[1518-09-21 00:35] wakes up\n[1518-03-28 00:49] wakes up\n[1518-09-06 00:01] Guard #3413 begins shift\n[1518-04-01 00:52] wakes up\n[1518-10-12 00:15] falls asleep\n[1518-06-20 00:13] falls asleep\n[1518-10-04 00:25] falls asleep\n[1518-04-18 23:57] Guard #2017 begins shift\n[1518-10-23 00:48] falls asleep\n[1518-05-27 00:03] Guard #367 begins shift\n[1518-11-16 00:34] wakes up\n[1518-09-04 00:14] falls asleep\n[1518-04-04 00:34] wakes up\n[1518-02-03 00:37] wakes up\n[1518-04-24 00:41] wakes up\n[1518-04-20 00:10] falls asleep\n[1518-02-15 00:43] falls asleep\n[1518-05-30 00:53] falls asleep\n[1518-04-20 23:58] Guard #1091 begins shift\n[1518-08-18 00:54] wakes up\n[1518-02-28 00:46] falls asleep\n[1518-09-11 00:34] falls asleep\n[1518-04-04 00:16] falls asleep\n[1518-03-03 23:56] Guard #1459 begins shift\n[1518-11-04 00:19] falls asleep\n[1518-05-04 00:06] falls asleep\n[1518-05-02 00:00] Guard #2677 begins shift\n[1518-09-26 00:37] falls asleep\n[1518-06-27 00:23] wakes up\n[1518-10-04 00:43] wakes up\n[1518-06-08 00:52] falls asleep\n[1518-05-12 00:35] falls asleep\n[1518-10-01 23:58] Guard #2393 begins shift\n[1518-05-17 00:16] falls asleep\n[1518-10-15 00:27] wakes up\n[1518-11-21 23:56] Guard #409 begins shift\n[1518-02-09 00:15] falls asleep\n[1518-02-21 23:56] Guard #2393 begins shift\n[1518-02-23 00:04] Guard #1627 begins shift\n[1518-02-23 00:56] wakes up\n[1518-10-06 00:52] wakes up\n[1518-04-10 00:30] falls asleep\n[1518-07-22 00:29] falls asleep\n[1518-10-24 00:26] falls asleep\n[1518-06-23 00:04] falls asleep\n[1518-10-08 00:37] wakes up\n[1518-09-27 00:01] Guard #449 begins shift\n[1518-10-23 00:29] falls asleep\n[1518-03-24 23:57] Guard #2017 begins shift\n[1518-08-27 00:51] wakes up\n[1518-11-18 00:02] Guard #2063 begins shift\n[1518-07-09 00:55] wakes up\n[1518-03-27 00:16] falls asleep\n[1518-07-03 00:45] wakes up\n[1518-06-27 23:57] Guard #2393 begins shift\n[1518-06-03 00:41] wakes up\n[1518-04-04 00:57] wakes up\n[1518-03-22 00:29] falls asleep\n[1518-10-17 00:42] falls asleep\n[1518-10-21 00:02] Guard #2087 begins shift\n[1518-02-14 00:28] falls asleep\n[1518-03-12 00:59] wakes up\n[1518-10-02 00:33] wakes up\n[1518-06-21 00:54] wakes up\n[1518-07-29 00:32] falls asleep\n[1518-06-26 00:29] falls asleep\n[1518-11-14 00:47] wakes up\n[1518-03-01 00:48] wakes up\n[1518-03-27 23:59] Guard #367 begins shift\n[1518-08-12 00:42] wakes up\n[1518-05-27 00:53] wakes up\n[1518-11-11 00:46] falls asleep\n[1518-03-14 00:51] wakes up\n[1518-02-01 00:26] wakes up\n[1518-07-03 00:27] falls asleep\n[1518-03-06 00:56] wakes up\n[1518-07-11 00:19] falls asleep\n[1518-10-31 23:57] Guard #523 begins shift\n[1518-05-05 00:25] falls asleep\n[1518-04-06 00:59] wakes up\n[1518-02-26 00:49] falls asleep\n[1518-09-16 00:56] falls asleep\n[1518-02-08 00:52] falls asleep\n[1518-04-24 00:04] Guard #2087 begins shift\n[1518-02-24 00:04] Guard #367 begins shift\n[1518-04-16 00:40] falls asleep\n[1518-10-07 00:21] falls asleep\n[1518-03-02 00:58] wakes up\n[1518-03-29 00:34] falls asleep\n[1518-05-31 00:13] wakes up\n[1518-03-21 00:52] falls asleep\n[1518-02-21 00:13] falls asleep\n[1518-06-05 00:03] Guard #2081 begins shift\n[1518-08-02 00:51] falls asleep\n[1518-11-08 00:09] falls asleep\n[1518-01-30 00:51] falls asleep\n[1518-04-04 00:48] wakes up\n[1518-11-22 00:58] wakes up\n[1518-10-05 00:26] falls asleep\n[1518-05-03 00:40] falls asleep\n[1518-06-12 00:46] wakes up\n[1518-05-21 00:35] wakes up\n[1518-04-12 23:59] Guard #2677 begins shift\n[1518-09-06 00:23] falls asleep\n[1518-03-13 00:00] falls asleep\n[1518-06-04 00:06] falls asleep\n[1518-04-30 00:41] wakes up\n[1518-03-30 00:01] Guard #3469 begins shift\n[1518-02-27 00:25] wakes up\n[1518-11-05 23:52] Guard #409 begins shift\n[1518-11-01 00:42] wakes up\n[1518-05-07 00:55] wakes up\n[1518-11-11 00:04] Guard #449 begins shift\n[1518-04-08 00:01] Guard #907 begins shift\n[1518-08-11 23:58] Guard #409 begins shift\n[1518-05-27 00:49] falls asleep\n[1518-09-12 00:42] falls asleep\n[1518-08-26 23:57] Guard #523 begins shift\n[1518-03-27 00:39] falls asleep\n[1518-05-09 23:59] Guard #449 begins shift\n[1518-09-05 00:54] wakes up\n[1518-08-18 00:17] falls asleep\n[1518-04-29 00:21] falls asleep\n[1518-11-14 00:12] falls asleep\n[1518-03-01 00:00] falls asleep\n[1518-03-09 00:19] falls asleep\n[1518-08-12 00:38] falls asleep\n[1518-05-06 23:50] Guard #409 begins shift\n[1518-04-06 23:59] Guard #367 begins shift\n[1518-04-30 00:07] falls asleep\n[1518-02-23 00:54] falls asleep\n[1518-10-22 00:18] falls asleep\n[1518-05-07 23:50] Guard #2393 begins shift\n[1518-08-15 00:01] Guard #2393 begins shift\n[1518-11-09 00:01] Guard #2393 begins shift\n[1518-04-10 00:58] wakes up\n[1518-05-30 00:39] falls asleep\n[1518-03-06 00:06] falls asleep\n[1518-02-20 23:56] Guard #2677 begins shift\n[1518-09-06 00:53] falls asleep\n[1518-05-24 00:30] wakes up\n[1518-11-20 00:37] wakes up\n[1518-02-04 00:58] wakes up\n[1518-07-26 00:00] Guard #349 begins shift\n[1518-04-03 00:36] falls asleep\n[1518-03-08 00:18] falls asleep\n[1518-06-02 00:10] falls asleep\n[1518-01-30 23:58] Guard #151 begins shift\n[1518-11-08 00:01] Guard #2593 begins shift\n[1518-03-12 23:52] Guard #3413 begins shift\n[1518-01-31 23:59] Guard #449 begins shift\n[1518-01-28 00:00] Guard #151 begins shift\n[1518-11-16 23:51] Guard #2393 begins shift\n[1518-07-16 00:33] falls asleep\n[1518-06-10 00:01] Guard #1627 begins shift\n[1518-11-12 00:41] falls asleep\n[1518-02-07 00:57] falls asleep\n[1518-03-01 00:45] falls asleep\n[1518-08-07 00:55] wakes up\n[1518-07-16 00:38] wakes up\n[1518-06-21 00:08] falls asleep\n[1518-03-03 00:39] wakes up\n[1518-07-16 00:00] Guard #71 begins shift\n[1518-09-12 00:04] Guard #2081 begins shift\n[1518-02-13 00:50] wakes up\n[1518-07-22 00:11] falls asleep\n[1518-02-20 00:03] falls asleep\n[1518-10-21 00:34] falls asleep\n[1518-05-18 23:58] Guard #449 begins shift\n[1518-04-23 00:57] falls asleep\n[1518-03-05 00:02] falls asleep\n[1518-09-09 23:59] Guard #2593 begins shift\n[1518-02-08 23:58] Guard #2677 begins shift\n[1518-06-14 00:16] falls asleep\n[1518-05-28 00:01] Guard #2393 begins shift\n[1518-11-06 00:05] falls asleep\n[1518-10-29 00:41] wakes up\n[1518-07-19 00:39] falls asleep\n[1518-09-10 00:31] wakes up\n[1518-09-29 00:37] wakes up\n[1518-07-15 00:03] falls asleep\n[1518-09-23 00:04] wakes up\n[1518-02-27 00:45] wakes up\n[1518-09-05 00:51] falls asleep\n[1518-02-08 00:38] falls asleep\n[1518-10-13 00:47] wakes up\n[1518-03-23 00:05] falls asleep\n[1518-06-10 00:57] falls asleep\n[1518-02-24 00:40] falls asleep\n[1518-05-16 00:00] Guard #151 begins shift\n[1518-11-07 00:53] wakes up\n[1518-08-03 00:58] wakes up\n[1518-07-19 23:58] Guard #491 begins shift\n[1518-03-31 23:57] Guard #367 begins shift\n[1518-05-28 23:57] Guard #2063 begins shift\n[1518-05-13 23:47] Guard #3539 begins shift\n[1518-06-26 23:51] Guard #3413 begins shift\n[1518-05-19 23:52] Guard #1151 begins shift\n[1518-07-01 00:08] falls asleep\n[1518-03-22 00:34] wakes up\n[1518-10-04 00:00] Guard #2593 begins shift\n[1518-10-31 00:03] Guard #449 begins shift\n[1518-08-11 00:09] wakes up\n[1518-08-23 00:57] wakes up\n[1518-04-07 00:20] falls asleep\n[1518-04-05 00:36] wakes up\n[1518-09-15 00:56] falls asleep\n[1518-10-29 00:40] falls asleep\n[1518-07-28 00:53] falls asleep\n[1518-06-17 00:42] falls asleep\n[1518-11-21 00:30] falls asleep\n[1518-06-14 00:00] Guard #2593 begins shift\n[1518-04-10 00:38] wakes up\n[1518-01-30 00:00] Guard #3539 begins shift\n[1518-08-10 00:55] wakes up\n[1518-06-16 00:30] falls asleep\n[1518-05-15 00:48] falls asleep\n[1518-07-10 00:33] wakes up\n[1518-05-16 00:32] falls asleep\n[1518-05-19 00:44] falls asleep\n[1518-06-28 00:19] wakes up\n[1518-07-08 00:28] wakes up\n[1518-05-17 23:58] Guard #3469 begins shift\n[1518-06-17 00:53] wakes up\n[1518-03-24 00:27] falls asleep\n[1518-03-07 00:11] wakes up\n[1518-10-09 00:17] falls asleep\n[1518-05-13 00:38] wakes up\n[1518-07-28 00:46] wakes up\n[1518-05-24 00:50] wakes up\n[1518-02-27 00:00] Guard #2087 begins shift\n[1518-05-12 00:53] wakes up\n[1518-03-27 00:58] wakes up\n[1518-09-23 00:25] falls asleep\n[1518-11-23 00:52] falls asleep\n[1518-05-16 00:37] wakes up\n[1518-05-10 00:31] falls asleep\n[1518-04-08 00:12] falls asleep\n[1518-10-27 00:53] wakes up\n[1518-10-23 23:58] Guard #151 begins shift\n[1518-03-30 00:17] falls asleep\n[1518-02-16 00:54] falls asleep\n[1518-02-21 00:58] wakes up\n[1518-10-26 00:51] falls asleep\n[1518-03-13 00:58] wakes up\n[1518-02-01 00:54] falls asleep\n[1518-10-17 00:51] falls asleep\n[1518-11-21 00:37] wakes up\n[1518-10-19 00:31] falls asleep\n[1518-03-23 00:42] falls asleep\n[1518-05-18 00:40] falls asleep\n[1518-06-21 00:42] falls asleep\n[1518-04-30 00:45] falls asleep\n[1518-08-16 00:34] falls asleep\n[1518-04-27 00:53] falls asleep\n[1518-04-03 00:22] falls asleep\n[1518-10-17 00:47] wakes up\n[1518-09-22 00:46] wakes up\n[1518-06-19 00:00] falls asleep\n[1518-07-12 00:36] falls asleep\n[1518-11-10 00:29] falls asleep\n[1518-04-02 00:01] falls asleep\n[1518-05-21 23:57] Guard #3413 begins shift\n[1518-03-20 00:52] wakes up\n[1518-02-23 00:40] falls asleep\n[1518-09-17 00:13] falls asleep\n[1518-03-15 00:54] wakes up\n[1518-09-19 00:03] Guard #523 begins shift\n[1518-11-19 00:41] falls asleep\n[1518-09-07 00:45] wakes up\n[1518-07-08 00:05] falls asleep\n[1518-10-11 00:30] falls asleep\n[1518-01-28 00:57] falls asleep\n[1518-03-03 00:01] falls asleep\n[1518-08-23 00:07] falls asleep\n[1518-02-07 00:49] falls asleep\n[1518-07-07 00:57] wakes up\n[1518-06-17 00:35] wakes up\n[1518-10-23 00:41] wakes up\n[1518-10-17 00:03] Guard #1459 begins shift\n[1518-09-12 00:06] falls asleep\n[1518-08-11 00:02] falls asleep\n[1518-02-27 00:20] falls asleep\n[1518-09-05 00:14] wakes up\n[1518-02-15 23:56] Guard #907 begins shift\n[1518-07-22 00:03] Guard #3469 begins shift\n[1518-11-11 00:43] wakes up\n[1518-07-18 00:36] wakes up\n[1518-09-01 00:41] falls asleep\n[1518-05-09 00:29] falls asleep\n[1518-03-15 00:19] falls asleep\n[1518-09-29 23:46] Guard #2593 begins shift\n[1518-05-28 00:58] wakes up\n[1518-10-01 00:59] wakes up\n[1518-05-30 00:01] Guard #2677 begins shift\n[1518-07-05 23:51] Guard #1459 begins shift\n[1518-02-10 00:00] Guard #349 begins shift\n[1518-02-18 00:53] wakes up\n[1518-07-12 00:39] wakes up\n[1518-11-13 00:57] wakes up\n[1518-03-02 00:02] Guard #2677 begins shift\n[1518-03-03 00:26] falls asleep\n[1518-02-19 23:54] Guard #3539 begins shift\n[1518-04-15 00:25] falls asleep\n[1518-04-06 00:45] falls asleep\n[1518-06-06 00:51] wakes up\n[1518-06-13 00:01] Guard #907 begins shift\n[1518-10-16 00:18] falls asleep\n[1518-10-01 00:28] wakes up\n[1518-08-28 00:16] falls asleep\n[1518-06-26 00:25] wakes up\n[1518-06-01 00:36] wakes up\n[1518-09-24 00:52] wakes up\n[1518-03-14 00:34] falls asleep\n[1518-05-15 00:04] falls asleep\n[1518-04-13 00:45] wakes up\n[1518-05-24 00:18] falls asleep\n[1518-10-29 00:48] falls asleep\n[1518-06-09 00:04] Guard #2393 begins shift\n[1518-03-12 00:48] wakes up\n[1518-04-22 00:14] falls asleep\n[1518-03-10 00:49] wakes up\n[1518-04-26 00:02] falls asleep\n[1518-08-31 00:23] wakes up\n[1518-02-26 00:57] wakes up\n[1518-09-14 00:55] wakes up\n[1518-07-18 00:44] wakes up\n[1518-10-25 00:02] Guard #449 begins shift\n[1518-09-12 23:54] Guard #1151 begins shift\n[1518-07-17 00:07] falls asleep\n[1518-03-02 00:17] falls asleep\n[1518-05-31 00:21] falls asleep\n[1518-11-12 00:42] wakes up\n[1518-01-30 00:35] wakes up\n[1518-06-28 23:54] Guard #2393 begins shift\n[1518-05-25 00:37] wakes up\n[1518-07-28 00:14] falls asleep\n[1518-09-11 00:48] wakes up\n[1518-04-30 00:08] wakes up\n[1518-10-29 00:53] wakes up\n[1518-10-16 00:59] wakes up\n[1518-08-31 00:57] wakes up\n[1518-02-08 00:04] Guard #523 begins shift\n[1518-05-05 23:56] Guard #1459 begins shift\n[1518-03-18 00:04] falls asleep\n[1518-05-30 00:55] wakes up\n[1518-07-10 00:16] falls asleep\n[1518-11-02 00:58] wakes up\n[1518-03-18 00:49] wakes up\n[1518-10-28 00:45] falls asleep\n[1518-07-10 00:03] Guard #2593 begins shift\n[1518-03-28 00:59] wakes up\n[1518-05-23 00:44] falls asleep\n[1518-08-30 00:27] falls asleep\n[1518-08-09 00:00] Guard #367 begins shift\n[1518-10-08 00:20] falls asleep\n[1518-03-31 00:05] falls asleep\n[1518-01-30 00:52] wakes up\n[1518-02-24 23:52] Guard #409 begins shift\n[1518-03-04 23:49] Guard #2017 begins shift\n[1518-01-29 00:30] wakes up\n[1518-11-02 00:37] falls asleep\n[1518-03-25 00:56] wakes up\n[1518-04-04 00:02] Guard #2017 begins shift\n[1518-04-07 00:57] wakes up\n[1518-11-19 00:42] wakes up\n[1518-08-06 23:56] Guard #2593 begins shift\n[1518-06-26 00:00] Guard #523 begins shift\n[1518-11-08 00:36] wakes up\n[1518-07-31 00:28] falls asleep\n[1518-05-04 00:56] wakes up\n[1518-10-23 00:55] wakes up\n[1518-03-20 23:56] Guard #3469 begins shift\n[1518-05-21 00:14] falls asleep\n[1518-02-06 23:56] Guard #1627 begins shift\n[1518-09-30 00:02] falls asleep\n[1518-11-20 00:12] falls asleep\n[1518-06-11 00:23] wakes up\n[1518-06-22 00:00] Guard #71 begins shift\n[1518-02-02 23:59] Guard #1459 begins shift\n[1518-05-25 00:20] falls asleep\n[1518-06-18 00:53] falls asleep\n[1518-06-04 00:45] wakes up\n[1518-09-28 00:34] falls asleep\n[1518-07-26 00:19] falls asleep\n[1518-07-01 00:37] wakes up\n[1518-06-20 00:29] wakes up\n[1518-02-14 00:56] wakes up\n[1518-05-20 00:23] wakes up\n[1518-02-07 00:43] wakes up\n[1518-02-11 00:46] wakes up\n[1518-07-07 23:46] Guard #367 begins shift\n[1518-04-23 00:00] Guard #3413 begins shift\n[1518-08-05 00:02] Guard #907 begins shift\n[1518-07-10 23:59] Guard #2677 begins shift\n[1518-05-12 00:50] falls asleep\n[1518-10-28 00:01] Guard #1151 begins shift\n[1518-03-18 23:57] Guard #1091 begins shift\n[1518-08-20 00:10] falls asleep\n[1518-02-12 00:58] wakes up\n[1518-03-10 23:49] Guard #907 begins shift\n[1518-07-01 00:01] Guard #367 begins shift\n[1518-04-12 00:59] wakes up\n[1518-06-22 00:28] wakes up\n[1518-08-18 23:56] Guard #2393 begins shift\n[1518-05-09 00:43] wakes up\n[1518-08-01 00:29] falls asleep\n[1518-07-06 00:03] falls asleep\n[1518-05-11 00:03] Guard #491 begins shift\n[1518-04-29 23:57] Guard #1627 begins shift\n[1518-11-06 00:54] wakes up\n[1518-04-02 00:24] wakes up\n[1518-04-26 00:41] wakes up\n[1518-05-07 00:02] falls asleep\n[1518-09-20 23:59] Guard #2393 begins shift\n[1518-09-16 00:01] Guard #349 begins shift\n[1518-08-15 00:35] wakes up\n[1518-08-21 00:31] falls asleep\n[1518-02-16 00:55] wakes up\n[1518-05-28 00:57] falls asleep\n[1518-07-22 23:59] Guard #907 begins shift\n[1518-10-22 00:24] wakes up\n[1518-02-21 00:40] wakes up\n[1518-09-16 00:39] falls asleep\n[1518-11-03 00:57] wakes up\n[1518-07-16 00:46] falls asleep\n[1518-07-04 00:53] wakes up\n[1518-08-15 00:27] wakes up\n[1518-11-02 23:59] Guard #349 begins shift\n[1518-04-18 00:46] wakes up\n[1518-02-03 00:57] wakes up\n[1518-06-05 00:28] wakes up\n[1518-11-13 23:54] Guard #1627 begins shift\n[1518-07-08 00:56] wakes up\n[1518-07-13 00:00] Guard #1459 begins shift\n[1518-02-06 00:02] Guard #907 begins shift\n[1518-01-31 00:45] wakes up\n[1518-05-05 00:48] wakes up\n[1518-07-06 00:43] wakes up\n[1518-06-14 23:59] Guard #1627 begins shift\n[1518-10-31 00:44] falls asleep\n[1518-02-28 23:51] Guard #367 begins shift\n[1518-08-09 00:22] wakes up\n[1518-09-16 00:48] wakes up\n[1518-11-08 00:57] falls asleep\n[1518-07-25 00:43] wakes up\n[1518-03-11 23:58] Guard #1151 begins shift\n[1518-06-05 23:48] Guard #2677 begins shift\n[1518-06-30 00:54] wakes up\n[1518-10-09 00:03] Guard #71 begins shift\n[1518-06-02 23:59] Guard #907 begins shift\n[1518-05-28 00:36] wakes up\n[1518-06-05 00:14] falls asleep\n[1518-06-17 00:14] falls asleep\n[1518-03-20 00:19] falls asleep\n[1518-08-25 00:01] Guard #491 begins shift\n[1518-05-30 00:46] wakes up\n[1518-09-23 00:59] wakes up\n[1518-08-27 00:41] wakes up\n[1518-06-04 00:53] wakes up\n[1518-08-31 00:03] Guard #907 begins shift\n[1518-07-14 00:58] wakes up\n[1518-07-29 00:03] Guard #2593 begins shift\n[1518-03-29 00:01] Guard #2677 begins shift\n[1518-03-07 00:03] Guard #71 begins shift\n[1518-06-09 00:41] wakes up\n[1518-10-23 00:02] Guard #367 begins shift\n[1518-10-20 00:43] wakes up\n[1518-03-30 00:40] wakes up\n[1518-06-27 00:38] falls asleep\n[1518-09-27 00:29] falls asleep\n[1518-11-05 00:23] falls asleep\n[1518-03-05 00:59] wakes up\n[1518-05-03 00:00] Guard #2081 begins shift\n[1518-03-28 00:39] falls asleep\n[1518-04-21 23:58] Guard #2017 begins shift\n[1518-06-30 00:03] Guard #409 begins shift\n[1518-06-29 00:45] wakes up\n[1518-06-23 00:05] wakes up\n[1518-08-17 00:57] wakes up\n[1518-03-08 00:57] wakes up\n[1518-03-26 00:20] falls asleep\n[1518-06-21 00:38] wakes up\n[1518-02-25 23:57] Guard #523 begins shift\n[1518-03-01 00:11] wakes up\n[1518-03-10 00:03] Guard #907 begins shift\n[1518-08-24 00:02] Guard #409 begins shift\n[1518-08-27 00:49] falls asleep\n[1518-05-10 00:57] wakes up\n[1518-03-22 23:53] Guard #3413 begins shift\n[1518-05-01 00:48] falls asleep\n[1518-04-03 00:58] wakes up\n[1518-06-28 00:22] falls asleep\n[1518-06-01 00:59] wakes up\n[1518-03-29 00:37] wakes up\n[1518-11-23 00:01] falls asleep\n[1518-09-19 00:51] wakes up\n[1518-03-27 00:30] wakes up\n[1518-07-22 00:49] wakes up\n[1518-09-30 23:58] Guard #1151 begins shift\n[1518-11-09 23:59] Guard #3539 begins shift\n[1518-02-11 00:01] Guard #3469 begins shift\n[1518-08-27 23:57] Guard #1151 begins shift\n[1518-09-28 00:43] wakes up\n[1518-03-04 00:59] wakes up\n[1518-08-16 00:44] wakes up\n[1518-10-20 00:38] falls asleep\n[1518-04-13 00:33] falls asleep\n[1518-04-27 00:57] wakes up\n[1518-08-26 00:04] Guard #349 begins shift\n[1518-10-07 00:35] wakes up\n[1518-07-23 23:50] Guard #2393 begins shift\n[1518-10-21 00:36] wakes up\n[1518-04-02 23:58] Guard #3469 begins shift\n[1518-07-06 00:33] falls asleep\n[1518-11-20 23:58] Guard #2593 begins shift\n[1518-09-01 00:42] wakes up\n[1518-06-08 00:56] wakes up\n[1518-04-27 00:00] Guard #2677 begins shift\n[1518-10-11 00:09] falls asleep\n[1518-02-21 00:43] falls asleep\n[1518-10-21 23:56] Guard #2087 begins shift\n[1518-09-15 00:47] wakes up\n[1518-04-24 00:08] falls asleep\n[1518-06-20 23:57] Guard #71 begins shift\n[1518-05-31 00:59] wakes up\n[1518-02-02 00:10] falls asleep\n[1518-08-29 00:55] wakes up\n[1518-03-30 23:50] Guard #907 begins shift\n[1518-10-26 00:56] wakes up\n[1518-07-23 00:22] falls asleep\n[1518-04-02 00:52] wakes up\n[1518-07-12 00:14] falls asleep\n[1518-02-18 00:22] wakes up\n[1518-08-31 00:42] falls asleep\n[1518-10-11 00:58] wakes up\n[1518-04-14 00:02] Guard #71 begins shift\n[1518-02-28 00:28] wakes up\n[1518-10-17 00:32] wakes up\n[1518-05-25 00:56] wakes up\n[1518-10-02 00:58] wakes up\n[1518-07-27 23:58] Guard #907 begins shift\n[1518-10-12 00:57] wakes up\n[1518-06-28 00:35] wakes up\n[1518-03-22 00:57] wakes up\n[1518-11-17 00:38] wakes up\n[1518-09-22 00:36] falls asleep\n[1518-07-30 00:53] falls asleep\n[1518-08-26 00:29] wakes up\n[1518-09-11 00:01] Guard #151 begins shift\n[1518-03-21 23:57] Guard #2393 begins shift\n[1518-07-14 00:49] falls asleep\n[1518-10-30 00:22] falls asleep\n[1518-02-22 00:32] falls asleep\n[1518-04-28 00:10] wakes up\n[1518-07-06 23:57] Guard #151 begins shift\n[1518-06-17 23:56] Guard #409 begins shift\n[1518-01-30 00:20] falls asleep\n[1518-07-20 23:46] Guard #151 begins shift\n[1518-03-26 00:48] wakes up\n[1518-06-16 00:33] wakes up\n[1518-08-22 00:42] wakes up\n[1518-03-22 00:50] wakes up\n[1518-05-13 00:34] falls asleep\n[1518-06-13 00:56] wakes up\n[1518-04-15 23:56] Guard #151 begins shift\n[1518-03-02 00:46] wakes up\n[1518-05-17 00:56] wakes up\n[1518-10-29 23:56] Guard #2593 begins shift\n[1518-10-28 00:56] wakes up\n[1518-05-16 00:09] wakes up\n[1518-02-01 00:59] wakes up\n[1518-03-22 00:47] falls asleep\n[1518-04-08 00:49] wakes up\n[1518-09-05 00:08] falls asleep\n[1518-07-03 23:50] Guard #409 begins shift\n[1518-07-06 00:14] wakes up\n[1518-02-03 00:56] falls asleep\n[1518-08-04 00:02] Guard #409 begins shift\n[1518-08-30 00:57] wakes up\n[1518-10-05 00:52] wakes up\n[1518-06-07 00:33] wakes up\n[1518-05-27 00:35] falls asleep\n[1518-07-27 00:41] wakes up\n[1518-10-13 00:11] falls asleep\n[1518-04-04 00:56] falls asleep\n[1518-07-16 00:54] falls asleep\n[1518-05-17 00:48] wakes up\n[1518-07-13 00:41] wakes up\n[1518-04-30 00:33] falls asleep\n[1518-08-13 00:54] wakes up\n[1518-04-04 00:37] falls asleep\n[1518-09-09 00:03] Guard #2393 begins shift\n[1518-07-08 00:41] falls asleep\n[1518-09-07 00:36] falls asleep\n[1518-04-29 00:00] Guard #2081 begins shift\n[1518-07-27 00:07] falls asleep\n[1518-09-10 00:18] falls asleep\n[1518-04-17 00:00] Guard #151 begins shift\n[1518-10-11 00:00] Guard #367 begins shift\n[1518-09-13 00:13] wakes up\n[1518-06-12 00:52] falls asleep\n[1518-08-17 00:04] Guard #367 begins shift\n[1518-08-23 00:00] Guard #2677 begins shift\n[1518-03-25 00:18] wakes up\n[1518-07-16 00:56] wakes up\n[1518-10-14 00:00] Guard #409 begins shift\n[1518-04-05 00:03] falls asleep\n[1518-06-04 00:52] falls asleep\n[1518-03-25 23:57] Guard #2677 begins shift\n[1518-04-15 00:14] wakes up\n[1518-09-29 00:07] falls asleep\n[1518-08-10 00:00] Guard #449 begins shift\n[1518-06-11 00:56] falls asleep\n[1518-04-04 00:27] falls asleep\n[1518-08-02 23:56] Guard #2017 begins shift\n[1518-05-31 23:59] Guard #2081 begins shift\n[1518-10-03 00:51] wakes up\n[1518-11-10 00:38] wakes up\n[1518-10-14 23:50] Guard #523 begins shift\n[1518-10-05 23:58] Guard #349 begins shift\n[1518-07-16 00:49] wakes up\n[1518-02-07 00:38] falls asleep\n[1518-09-17 00:03] Guard #151 begins shift\n[1518-03-31 00:46] wakes up\n[1518-03-23 23:58] Guard #523 begins shift\n[1518-09-19 00:49] falls asleep\n[1518-04-16 00:59] wakes up\n[1518-02-25 00:03] falls asleep\n[1518-04-01 00:06] falls asleep\n[1518-04-28 00:56] wakes up\n[1518-05-24 23:57] Guard #71 begins shift\n[1518-04-09 00:54] wakes up\n[1518-06-15 00:54] wakes up\n[1518-09-09 00:51] wakes up\n[1518-11-08 00:58] wakes up\n[1518-06-12 00:02] falls asleep\n[1518-03-14 00:15] wakes up\n[1518-03-13 00:28] falls asleep\n[1518-09-13 00:00] falls asleep\n[1518-08-19 00:20] falls asleep\n[1518-05-08 23:58] Guard #2393 begins shift\n[1518-02-16 23:57] Guard #491 begins shift\n[1518-08-01 00:59] wakes up\n[1518-02-02 00:00] Guard #1459 begins shift\n[1518-02-05 00:52] wakes up\n[1518-09-17 00:40] wakes up\n[1518-10-19 00:38] wakes up\n[1518-04-11 00:51] wakes up\n[1518-03-09 00:16] wakes up\n[1518-08-24 00:46] falls asleep\n[1518-07-30 00:20] falls asleep\n[1518-03-17 23:48] Guard #3413 begins shift\n[1518-10-26 00:30] falls asleep\n[1518-09-13 00:17] falls asleep\n[1518-02-15 00:30] falls asleep\n[1518-07-19 00:26] falls asleep\n[1518-06-06 00:01] falls asleep\n[1518-03-05 23:58] Guard #3413 begins shift\n[1518-11-01 00:09] falls asleep\n[1518-09-25 00:49] wakes up\n[1518-02-03 00:21] falls asleep\n[1518-05-19 00:26] falls asleep\n[1518-09-15 00:57] wakes up\n[1518-08-08 00:03] Guard #2017 begins shift\n[1518-08-27 00:13] falls asleep\n[1518-07-13 00:28] falls asleep\n[1518-08-28 00:56] wakes up\n[1518-02-24 00:46] wakes up\n[1518-06-03 23:59] Guard #3469 begins shift\n[1518-03-18 00:10] wakes up\n[1518-11-04 23:57] Guard #2087 begins shift\n[1518-09-01 00:59] wakes up\n[1518-10-10 00:20] falls asleep\n[1518-02-04 00:12] falls asleep\n[1518-05-25 00:50] falls asleep\n[1518-09-24 00:00] Guard #449 begins shift\n[1518-08-10 00:29] falls asleep\n[1518-06-04 00:43] falls asleep\n[1518-06-18 23:49] Guard #1459 begins shift\n[1518-03-21 00:16] falls asleep\n[1518-06-12 00:58] wakes up\n[1518-04-04 23:46] Guard #2017 begins shift\n[1518-10-19 00:51] falls asleep\n[1518-05-15 00:27] wakes up\n[1518-06-07 00:20] falls asleep\n[1518-08-20 00:00] Guard #1627 begins shift\n[1518-02-10 00:36] wakes up\n[1518-04-11 00:39] falls asleep\n[1518-02-18 00:38] falls asleep\n[1518-07-26 00:44] wakes up\n[1518-10-13 00:07] falls asleep\n[1518-08-11 00:56] wakes up\n[1518-06-02 00:39] wakes up\n[1518-04-29 00:54] wakes up\n[1518-05-18 00:06] falls asleep\n[1518-11-17 00:04] falls asleep\n[1518-06-08 00:15] falls asleep\n[1518-08-29 00:38] falls asleep\n[1518-05-31 00:04] falls asleep\n[1518-02-28 00:54] wakes up\n[1518-10-25 00:15] falls asleep\n[1518-02-27 00:37] falls asleep\n[1518-04-28 00:00] falls asleep\n[1518-10-10 00:59] wakes up\n[1518-04-15 00:50] wakes up\n[1518-02-18 23:59] Guard #1091 begins shift\n[1518-05-02 00:43] wakes up\n[1518-02-05 00:00] Guard #1627 begins shift\n[1518-11-22 23:47] Guard #151 begins shift\n[1518-07-07 00:33] falls asleep\n[1518-11-23 00:55] wakes up\n[1518-04-16 00:42] wakes up\n[1518-11-04 00:02] Guard #2677 begins shift\n[1518-03-18 00:45] falls asleep\n[1518-11-14 00:08] wakes up\n[1518-06-10 00:59] wakes up\n[1518-09-02 23:51] Guard #907 begins shift\n[1518-06-14 00:42] wakes up\n[1518-02-03 23:58] Guard #2593 begins shift\n[1518-07-18 00:42] falls asleep\n[1518-02-18 00:33] wakes up\n[1518-11-15 23:57] Guard #2393 begins shift\n[1518-05-14 00:30] wakes up\n[1518-03-23 00:50] wakes up\n[1518-10-06 00:16] falls asleep\n[1518-01-28 00:40] falls asleep\n[1518-05-16 00:12] falls asleep\n[1518-07-22 00:23] wakes up\n[1518-08-04 00:46] wakes up\n[1518-07-05 00:44] wakes up\n[1518-08-20 00:43] wakes up\n[1518-09-01 00:00] Guard #2393 begins shift\n[1518-02-22 00:44] wakes up\n[1518-05-19 00:33] wakes up\n[1518-10-11 00:14] wakes up\n[1518-09-07 00:41] falls asleep\n[1518-10-30 00:56] wakes up\n[1518-06-01 00:39] falls asleep\n[1518-04-09 00:04] Guard #2677 begins shift\n[1518-03-09 00:05] falls asleep\n[1518-08-16 00:00] Guard #2081 begins shift\n[1518-06-04 00:27] wakes up\n[1518-10-18 00:48] falls asleep\n[1518-03-12 00:57] falls asleep\n[1518-08-23 00:29] wakes up\n[1518-07-13 23:56] Guard #367 begins shift\n[1518-05-06 00:13] falls asleep\n[1518-07-31 00:00] Guard #449 begins shift\n[1518-08-20 00:31] falls asleep\n[1518-10-27 00:07] falls asleep\n[1518-03-03 00:13] wakes up\n[1518-08-03 00:27] falls asleep\n[1518-01-29 00:08] falls asleep\n[1518-10-14 00:35] falls asleep\n[1518-04-27 23:46] Guard #2017 begins shift\n[1518-10-26 00:44] wakes up\n[1518-05-18 00:51] wakes up\n[1518-08-23 00:34] falls asleep\n[1518-11-22 00:32] wakes up\n[1518-07-30 00:02] Guard #2087 begins shift\n[1518-05-02 00:06] falls asleep\n[1518-03-13 00:08] wakes up\n[1518-02-28 00:25] falls asleep\n[1518-07-31 00:46] wakes up\n[1518-04-16 00:50] falls asleep\n[1518-09-06 00:55] wakes up\n[1518-02-12 00:05] falls asleep\n[1518-08-06 00:56] wakes up\n[1518-03-24 00:48] wakes up\n[1518-07-25 00:27] falls asleep\n[1518-01-30 00:58] wakes up\n[1518-04-06 00:47] wakes up\n[1518-09-21 00:48] falls asleep\n[1518-05-24 00:39] falls asleep\n[1518-05-01 00:52] wakes up\n[1518-02-11 23:46] Guard #1459 begins shift\n[1518-06-17 00:03] Guard #151 begins shift\n[1518-03-07 23:58] Guard #2593 begins shift\n[1518-04-02 00:49] falls asleep\n[1518-03-20 00:00] Guard #2087 begins shift\n[1518-04-05 23:58] Guard #2087 begins shift\n[1518-02-14 00:00] Guard #151 begins shift\n[1518-04-30 00:54] wakes up\n[1518-05-06 00:57] wakes up\n[1518-09-23 00:46] falls asleep\n[1518-11-02 00:02] Guard #71 begins shift\n[1518-07-14 23:50] Guard #523 begins shift\n[1518-07-12 00:46] falls asleep\n[1518-08-09 00:48] falls asleep\n[1518-11-13 00:28] falls asleep\n[1518-02-12 23:52] Guard #523 begins shift\n[1518-04-14 23:46] Guard #409 begins shift\n[1518-08-14 00:02] Guard #2593 begins shift\n[1518-06-09 00:23] falls asleep\n[1518-09-07 00:37] wakes up\n[1518-02-09 00:40] wakes up\n[1518-05-15 00:52] wakes up\n[1518-09-01 00:37] wakes up\n[1518-09-25 00:15] falls asleep\n[1518-04-17 00:35] falls asleep\n[1518-03-07 00:20] falls asleep\n[1518-06-25 00:56] wakes up\n[1518-10-02 00:28] falls asleep\n[1518-05-16 00:07] falls asleep\n[1518-05-24 00:00] Guard #367 begins shift\n[1518-06-29 00:00] falls asleep\n[1518-07-12 00:00] Guard #3413 begins shift\n[1518-07-25 00:29] wakes up\n[1518-02-15 00:02] Guard #907 begins shift\n[1518-03-22 00:53] falls asleep\n[1518-04-12 00:57] falls asleep\n[1518-08-09 00:06] falls asleep\n[1518-02-05 00:44] falls asleep\n[1518-07-19 00:00] Guard #2081 begins shift\n[1518-05-22 00:54] wakes up\n[1518-06-30 00:48] falls asleep\n[1518-10-25 00:45] wakes up\n[1518-03-04 00:33] falls asleep\n[1518-11-23 00:44] wakes up\n[1518-03-11 00:00] falls asleep\n[1518-05-26 00:59] wakes up\n[1518-09-06 00:29] wakes up\n[1518-08-22 00:04] Guard #523 begins shift\n[1518-11-14 00:56] wakes up\n[1518-02-13 00:03] falls asleep\n[1518-07-26 00:51] falls asleep"},9820:function(n,e,a){var s={"./2018/Day-1.txt":"2470","./2018/Day-10.txt":"ce3d","./2018/Day-11.txt":"06d5","./2018/Day-12.txt":"e9e1f","./2018/Day-13.txt":"2043","./2018/Day-2.txt":"b8ca","./2018/Day-3.txt":"e366","./2018/Day-4.txt":"9729","./2018/Day-5.txt":"9167","./2018/Day-6.txt":"5db3","./2018/Day-7.txt":"ad08","./2018/Day-8.txt":"5430","./2018/Day-9.txt":"f95a","./2020/Day-1.txt":"b70f","./2020/Day-10.txt":"b6f2","./2020/Day-11.txt":"2718","./2020/Day-12.txt":"2e5c","./2020/Day-13.txt":"cad6","./2020/Day-14.txt":"5522","./2020/Day-15.txt":"0b93","./2020/Day-16.txt":"9e57","./2020/Day-17.txt":"a031","./2020/Day-18.txt":"f70d","./2020/Day-19.txt":"ebce","./2020/Day-2.txt":"913e","./2020/Day-20.txt":"af80","./2020/Day-21.txt":"016b","./2020/Day-22.txt":"7a71","./2020/Day-23.txt":"64ab","./2020/Day-24.txt":"f82f","./2020/Day-25.txt":"cf25","./2020/Day-3.txt":"d1d0","./2020/Day-4.txt":"574c","./2020/Day-5.txt":"bdde","./2020/Day-6.txt":"14bc","./2020/Day-7.txt":"40ba","./2020/Day-8.txt":"c8f2","./2020/Day-9.txt":"1396"};function t(n){var e=b(n);return a(e)}function b(n){if(!a.o(s,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return s[n]}t.keys=function(){return Object.keys(s)},t.resolve=b,n.exports=t,t.id="9820"},"9dc8":function(n,e,a){var s={"./2018/Day-1.1.md":"2503","./2018/Day-10.1.md":"00b2","./2018/Day-11.1.md":"59cc","./2018/Day-12.1.md":"080b","./2018/Day-2.1.md":"3827","./2018/Day-3.1.md":"f63c","./2018/Day-4.1.md":"3e46","./2018/Day-5.1.md":"5231","./2018/Day-6.1.md":"4043","./2018/Day-7.1.md":"02a5","./2018/Day-8.1.md":"f072","./2018/Day-9.1.md":"d17e","./2020/Day-1.1.md":"78d6","./2020/Day-10.1.md":"6c3a","./2020/Day-11.1.md":"16c2","./2020/Day-12.1.md":"32a7","./2020/Day-13.1.md":"5a0e","./2020/Day-14.1.md":"71fa","./2020/Day-15.1.md":"8369","./2020/Day-16.1.md":"b6fc","./2020/Day-17.1.md":"0105","./2020/Day-18.1.md":"c0b8","./2020/Day-19.1.md":"36e9","./2020/Day-2.1.md":"9180","./2020/Day-20.1.md":"020c","./2020/Day-21.1.md":"3cef","./2020/Day-22.1.md":"1e66","./2020/Day-23.1.md":"388f","./2020/Day-24.1.md":"4a79","./2020/Day-25.1.md":"785c","./2020/Day-3.1.md":"41ba","./2020/Day-4.1.md":"7861","./2020/Day-5.1.md":"6cd8","./2020/Day-6.1.md":"8823","./2020/Day-7.1.md":"456d","./2020/Day-8.1.md":"7cb6","./2020/Day-9.1.md":"f22b"};function t(n){var e=b(n);return a(e)}function b(n){if(!a.o(s,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return s[n]}t.keys=function(){return Object.keys(s)},t.resolve=b,n.exports=t,t.id="9dc8"},"9df0":function(n,e,a){"use strict";a.r(e),e["default"]="Amidst the chaos, you notice that exactly one claim doesn't overlap by even a single square inch of fabric with any other claim. If you can somehow draw attention to it, maybe the Elves will be able to make Santa's suit after all!\n\nFor example, in the claims above, only claim `3` is intact after all claims are made.\n\n**What is the ID of the only claim that doesn't overlap?**"},"9e57":function(n,e,a){"use strict";a.r(e),e["default"]="departure location: 47-874 or 885-960\ndeparture station: 25-616 or 622-964\ndeparture platform: 42-807 or 825-966\ndeparture track: 36-560 or 583-965\ndeparture date: 37-264 or 289-968\ndeparture time: 27-325 or 346-954\narrival location: 37-384 or 391-950\narrival station: 35-233 or 244-963\narrival platform: 26-652 or 675-949\narrival track: 41-689 or 710-954\nclass: 27-75 or 81-952\nduration: 45-784 or 807-967\nprice: 40-350 or 374-970\nroute: 30-892 or 904-968\nrow: 47-144 or 151-957\nseat: 28-750 or 773-973\ntrain: 30-456 or 475-950\ntype: 34-642 or 648-968\nwagon: 42-486 or 498-970\nzone: 37-152 or 167-973\n\nyour ticket:\n83,137,101,73,67,61,103,131,151,127,113,107,109,89,71,139,167,97,59,53\n\nnearby tickets:\n191,477,199,428,5,724,512,212,509,613,193,861,293,595,844,247,136,302,376,252\n598,628,446,312,180,250,405,54,110,780,829,63,840,404,784,307,254,102,708,637\n890,168,741,685,143,859,773,914,884,324,924,192,248,906,393,531,414,632,226,862\n295,174,778,927,523,590,515,62,646,514,483,776,92,185,169,525,60,440,885,104\n480,849,545,484,525,874,170,551,888,201,596,513,274,743,602,598,616,454,141,452\n583,179,260,138,624,88,131,480,737,433,194,604,172,393,243,261,128,125,227,873\n395,204,538,783,540,151,209,203,454,939,975,540,932,246,119,910,120,443,306,552\n62,62,429,173,453,174,134,169,442,799,109,125,212,866,840,429,833,231,912,292\n159,527,69,545,677,126,555,324,501,405,297,86,678,395,870,323,186,629,639,866\n89,744,515,932,406,921,618,536,126,349,61,264,593,445,302,411,406,106,479,93\n406,395,413,859,584,125,129,100,940,94,451,377,251,992,227,187,523,744,152,217\n774,87,784,58,417,211,171,547,727,455,516,597,212,224,427,193,526,941,81,76\n99,294,723,613,71,628,118,56,81,922,72,680,298,616,230,548,259,710,147,247\n633,676,827,784,400,682,303,504,748,231,843,392,158,126,735,744,321,553,833,176\n92,384,874,944,290,775,915,479,244,68,403,745,544,258,537,932,776,346,646,913\n95,111,687,589,195,120,681,193,777,113,261,111,60,530,143,185,61,229,773,815\n418,914,123,857,289,773,827,475,407,206,504,409,742,386,198,636,632,825,349,863\n870,129,608,731,534,116,992,425,731,712,583,633,921,69,906,782,58,685,181,685\n618,250,406,539,679,904,589,197,918,167,259,207,782,316,143,73,52,912,548,71\n541,71,407,510,71,928,297,509,585,260,324,913,834,174,346,935,603,173,373,523\n304,912,348,212,683,262,69,303,269,711,727,938,102,738,59,401,928,204,477,739\n420,207,89,408,784,349,316,885,681,606,55,536,53,526,311,712,915,307,129,11\n857,101,211,225,975,612,826,377,784,924,510,681,481,916,419,257,484,180,244,885\n107,537,428,249,406,609,318,622,60,131,291,641,686,174,213,678,738,128,618,117\n412,304,103,687,316,427,946,734,317,685,74,558,295,172,749,285,58,555,132,449\n251,614,441,193,64,534,427,308,610,598,103,200,929,215,301,347,738,982,607,589\n389,436,211,409,537,934,137,177,521,399,869,125,630,776,400,836,186,422,121,724\n869,248,179,839,378,204,171,174,600,516,614,929,636,80,450,739,256,601,934,683\n316,86,244,244,838,477,847,502,434,733,143,440,429,712,257,624,676,192,821,375\n211,387,775,448,61,511,749,712,142,517,863,919,942,526,381,314,108,89,401,724\n431,264,219,480,890,592,646,350,214,885,347,144,779,180,449,222,780,256,642,558\n230,540,830,52,194,114,742,908,547,129,932,646,835,438,743,625,865,781,927,888\n920,226,0,325,136,746,167,453,169,298,737,596,627,776,748,223,887,377,886,391\n401,557,247,932,512,603,265,510,408,200,651,718,232,780,414,65,105,66,409,171\n904,320,525,103,594,109,107,593,189,288,480,518,75,748,54,413,114,347,224,829\n297,426,92,251,541,382,865,829,209,446,452,552,252,366,776,722,720,924,436,747\n129,197,734,712,866,134,723,180,856,58,886,830,720,868,931,103,556,531,165,547\n292,737,719,61,61,433,919,832,446,184,314,499,614,846,929,67,715,534,394,147\n839,945,632,851,145,714,309,905,725,855,246,90,542,383,729,248,447,433,218,939\n734,949,721,249,324,518,784,437,102,417,55,606,556,728,847,737,560,728,111,385\n530,114,539,172,595,172,844,384,449,949,676,685,112,555,204,11,651,167,136,143\n934,777,103,613,426,60,554,321,730,405,786,398,517,858,224,50,775,66,247,652\n584,840,19,842,131,945,289,551,594,177,588,374,350,926,554,216,718,920,320,597\n627,510,596,595,301,925,318,835,860,480,451,540,371,97,476,414,258,475,293,502\n310,435,715,195,210,429,63,296,678,644,143,314,247,233,611,550,505,726,87,507\n456,541,831,417,486,225,233,105,431,387,846,538,309,207,316,450,196,598,889,410\n716,183,603,746,878,249,189,222,688,441,847,140,716,678,559,778,891,348,173,407\n69,910,127,292,521,83,718,594,928,939,870,606,138,61,291,235,184,925,264,868\n167,478,912,442,736,527,92,542,264,196,652,787,382,614,891,926,54,632,625,438\n179,499,636,684,936,774,614,524,711,175,85,536,681,639,832,398,383,873,580,583\n86,433,57,915,407,738,906,186,409,377,482,323,176,11,391,848,779,307,292,683\n946,227,829,677,339,258,114,245,244,641,478,262,930,504,261,134,529,712,440,938\n858,723,862,866,436,210,481,826,825,346,614,144,545,310,415,946,604,384,528,568\n257,861,589,305,611,88,131,684,949,807,317,314,107,882,724,229,88,934,295,230\n382,559,845,856,638,186,303,713,520,736,126,78,587,318,151,206,936,596,632,405\n53,378,219,833,306,856,857,833,846,632,651,734,22,550,731,835,311,71,623,685\n214,304,682,747,186,206,231,316,482,515,406,559,545,595,60,774,6,642,739,294\n292,890,173,349,591,56,905,416,416,881,84,583,409,217,887,553,252,522,256,591\n93,397,253,185,252,842,88,916,51,628,932,151,941,162,206,376,857,834,736,304\n54,246,730,908,560,323,383,526,549,482,870,844,688,338,66,316,486,586,499,531\n828,122,96,138,136,749,329,605,453,507,535,520,921,588,636,90,121,891,846,889\n530,143,300,143,63,687,833,711,117,132,500,997,384,303,914,612,936,443,229,230\n304,126,888,678,390,501,215,89,636,739,220,178,87,232,107,716,317,891,396,943\n909,883,515,350,221,688,179,604,480,226,135,139,110,862,677,430,408,85,139,63\n183,538,433,907,229,940,519,98,858,311,479,414,783,469,717,833,196,207,838,559\n502,856,826,888,515,91,106,200,890,69,290,722,884,784,595,638,888,229,444,449\n433,854,437,710,105,530,635,748,550,730,23,943,260,549,549,172,95,841,128,595\n685,606,861,305,105,710,169,120,935,712,50,622,532,54,102,590,484,4,445,224\n117,505,324,737,212,931,500,138,136,261,400,418,543,241,84,675,686,868,65,905\n317,143,940,583,711,436,829,248,89,514,445,993,514,445,715,886,556,414,558,301\n318,739,513,442,511,483,210,224,172,619,939,906,382,778,930,132,436,543,308,298\n600,906,82,313,505,451,507,500,401,364,777,777,182,450,860,583,719,110,230,919\n204,109,422,425,633,944,83,544,887,140,647,439,247,448,176,554,521,587,606,609\n97,868,223,632,551,444,247,779,321,905,119,292,619,597,931,854,558,613,827,829\n234,217,106,613,508,152,143,486,627,830,448,112,677,99,81,323,607,500,112,826\n600,591,138,628,818,82,504,315,191,191,779,910,402,206,626,746,775,724,398,719\n907,917,504,125,829,382,297,633,799,99,102,455,735,710,425,200,933,97,734,612\n652,719,67,292,651,144,567,296,446,200,906,432,930,916,199,179,262,151,126,419\n253,730,542,435,928,142,174,933,608,196,196,251,799,749,142,416,904,776,310,515\n548,298,919,21,906,253,846,838,839,735,62,455,109,622,291,586,777,681,121,718\n108,90,182,863,831,434,542,346,725,449,98,649,383,828,943,125,202,826,248,372\n731,941,611,88,223,603,442,917,506,718,374,192,651,610,251,115,445,781,896,67\n526,726,454,159,110,202,94,480,888,223,623,295,95,605,432,322,455,680,384,319\n636,254,384,194,422,298,237,58,173,130,402,675,246,727,509,213,833,400,456,505\n231,529,230,318,256,61,872,716,212,736,682,485,647,132,51,423,711,726,56,446\n103,848,305,446,746,212,387,75,719,422,604,842,305,479,415,587,727,310,926,612\n96,317,587,299,131,533,524,548,485,885,611,861,302,756,178,442,847,299,142,886\n221,168,936,873,946,858,778,624,179,937,441,226,318,444,294,98,852,303,8,632\n253,890,106,725,374,226,197,375,222,142,863,908,306,645,452,547,934,249,634,518\n778,548,255,81,254,167,403,932,112,74,191,947,341,530,251,120,216,545,722,948\n834,204,535,292,836,627,746,91,418,554,379,219,253,231,680,74,689,388,192,51\n514,832,251,309,645,405,865,920,869,402,255,206,535,478,67,201,843,611,115,542\n539,231,684,506,988,650,104,480,942,232,453,557,914,93,587,587,909,615,527,632\n946,541,842,437,577,923,397,232,259,179,832,585,254,309,552,885,613,211,740,175\n936,303,250,69,627,346,475,454,827,744,544,376,387,782,626,828,914,737,511,922\n182,873,689,484,319,130,222,247,766,593,121,97,173,424,839,777,184,724,533,552\n55,650,798,68,536,400,180,479,740,404,834,500,419,775,374,116,107,552,874,601\n853,498,196,622,866,744,74,217,892,607,946,90,915,121,485,374,939,452,905,647\n51,136,377,211,87,58,456,831,435,94,294,140,714,523,606,915,733,238,107,144\n528,112,107,528,541,92,678,478,931,741,712,552,582,834,944,609,609,863,734,119\n840,240,612,524,249,410,314,847,724,425,132,91,507,311,408,522,174,133,535,57\n376,63,350,167,555,517,128,942,173,212,303,484,745,675,918,852,19,720,249,400\n872,455,97,940,348,714,531,946,79,603,638,173,188,180,862,230,593,191,213,930\n324,685,916,629,923,498,50,449,601,595,183,838,480,845,369,523,138,601,220,207\n225,316,102,943,80,209,483,112,103,718,70,484,555,888,850,185,780,376,946,101\n79,947,200,316,844,634,302,382,407,314,501,710,57,859,852,257,375,65,868,774\n723,727,726,99,254,649,888,591,699,289,83,680,293,597,106,829,312,135,774,516\n645,588,86,65,594,932,141,62,842,524,213,232,325,738,780,534,777,724,292,186\n589,193,138,379,397,394,874,557,249,732,75,988,83,55,65,929,710,376,398,394\n838,75,513,887,127,525,806,229,852,212,211,652,295,783,520,611,214,316,606,932\n833,259,874,742,440,717,425,555,622,381,873,499,257,244,485,196,531,864,712,700\n638,444,206,506,538,933,300,615,638,410,776,525,406,481,922,385,827,677,855,302\n216,749,137,850,262,589,397,53,474,291,680,584,315,516,246,399,730,91,91,289\n536,829,290,416,316,229,675,946,900,910,865,295,121,62,542,320,71,434,587,113\n742,629,526,414,721,775,223,377,558,867,549,839,680,721,218,401,838,711,10,944\n679,541,736,179,181,322,891,403,885,532,313,320,736,738,499,647,350,726,858,92\n905,627,603,503,741,424,244,597,112,826,212,236,219,138,258,542,189,301,599,82\n865,734,318,538,912,924,886,982,845,713,297,746,736,611,629,197,648,120,727,534\n181,415,143,735,622,302,297,502,193,548,614,302,949,203,644,384,611,208,114,864\n936,734,391,435,830,546,846,181,318,314,214,550,712,15,434,250,642,607,247,622\n128,637,606,112,304,63,626,407,584,854,167,438,745,251,227,446,786,316,684,419\n188,426,710,888,827,873,740,651,196,686,734,516,747,931,537,258,748,431,417,158\n227,120,851,730,429,104,616,256,947,22,221,506,212,207,193,125,929,600,527,739\n85,805,717,842,55,51,222,250,251,347,321,110,100,629,174,839,686,301,59,55\n406,435,476,171,132,319,24,734,63,584,537,888,549,318,535,194,888,941,136,721\n614,527,600,301,258,551,858,263,849,737,70,377,847,680,790,56,485,519,254,323\n175,113,447,598,115,591,650,434,323,947,430,592,517,677,546,67,221,650,80,448\n842,52,138,348,313,221,55,612,580,941,170,740,122,63,197,433,840,542,219,923\n437,733,528,120,604,476,83,161,718,944,191,231,729,636,687,432,199,106,138,374\n382,360,918,258,205,248,925,444,684,718,591,861,96,734,549,86,223,624,429,590\n100,314,729,89,780,532,589,843,146,101,204,535,421,201,125,555,553,514,740,382\n281,501,55,590,230,613,916,887,216,929,608,631,194,924,264,418,455,309,324,410\n413,855,928,250,935,52,713,258,926,931,499,137,80,128,264,212,626,252,126,302\n85,675,188,317,741,550,106,784,233,313,531,401,306,843,504,477,995,255,396,742\n183,130,126,938,624,195,936,540,378,641,554,835,545,0,749,53,262,712,292,478\n853,117,747,476,621,347,69,686,212,726,905,602,447,747,181,591,482,182,845,748\n519,244,736,395,70,681,106,560,416,730,82,921,69,407,325,403,306,552,90,287\n629,524,202,521,377,210,731,542,726,477,615,738,141,146,437,909,202,318,110,437\n685,248,453,69,718,485,148,946,255,130,191,907,510,325,523,102,636,202,442,736\n919,87,203,432,110,209,305,318,636,191,85,186,529,571,535,918,222,392,418,611\n296,407,929,223,922,734,527,77,747,183,711,515,509,533,453,505,300,918,749,82\n625,260,298,429,61,210,408,628,236,518,869,598,71,550,945,500,122,863,128,101\n873,857,836,192,784,783,183,253,57,838,63,560,96,725,603,15,885,446,83,127\n739,424,158,397,430,75,548,784,227,427,830,61,859,552,683,254,552,524,724,416\n64,184,168,558,742,209,87,212,112,523,632,253,431,68,559,528,685,246,272,505\n827,128,946,732,717,550,403,646,54,111,744,111,686,717,437,440,83,854,320,525\n946,643,104,199,262,306,93,641,292,437,434,731,412,393,320,863,933,507,144,313\n213,130,219,319,441,601,676,349,313,846,587,407,675,503,679,865,483,223,661,307\n871,225,643,247,639,933,391,775,431,512,885,838,84,831,732,411,417,681,111,930\n715,737,176,748,196,585,519,90,312,604,780,541,310,536,991,520,209,178,407,171\n735,200,448,727,189,608,509,194,919,155,606,485,848,516,725,312,731,84,190,510\n601,477,83,678,833,404,634,506,776,223,54,167,651,982,733,203,522,178,480,831\n856,498,729,421,252,53,911,171,174,454,86,310,129,169,502,778,485,375,854,879\n541,685,538,612,394,536,130,513,652,434,124,888,720,696,51,152,103,206,417,230\n311,193,585,539,126,94,232,556,676,379,480,938,151,635,925,80,427,648,914,188\n130,186,175,205,55,403,601,906,202,722,843,600,518,348,390,725,628,434,598,410\n563,108,545,187,439,84,70,939,68,545,714,914,844,177,75,442,912,632,608,103\n540,624,946,541,736,207,716,236,85,855,909,108,258,67,300,230,588,231,180,98\n560,511,722,942,51,180,933,598,263,211,522,89,135,617,728,395,58,512,840,63\n603,251,716,608,378,72,976,264,144,681,506,736,499,248,101,439,67,123,61,439\n251,57,779,264,101,381,593,546,128,728,936,262,557,133,603,737,630,166,305,591\n92,259,908,446,937,595,257,588,870,121,252,132,346,215,310,742,346,102,240,455\n727,584,749,529,841,73,532,100,854,887,428,350,551,861,628,799,857,190,904,923\n604,629,253,927,583,500,99,323,610,677,259,843,413,178,779,890,129,76,140,526\n309,448,139,376,184,607,871,635,923,856,550,299,383,97,122,841,486,789,591,595\n593,177,678,931,95,226,110,904,453,554,979,835,85,68,890,552,483,917,213,934\n558,858,17,323,891,521,86,859,712,931,436,394,847,294,729,587,374,778,168,936\n133,214,428,826,597,934,680,522,264,151,249,303,409,81,218,888,479,604,842,617\n779,517,122,69,167,855,76,827,530,886,512,151,303,231,255,725,176,827,428,135\n724,842,407,623,945,399,153,291,126,399,376,548,749,374,836,623,259,67,539,439\n223,613,475,405,478,680,876,182,872,712,111,510,948,250,404,868,84,844,213,230\n446,155,214,921,224,720,931,118,588,314,923,780,404,118,889,778,425,141,298,100\n184,584,433,167,518,710,253,198,992,736,188,325,212,925,424,293,537,634,212,509\n613,555,926,218,552,394,945,679,248,578,726,85,857,260,421,448,174,303,450,129\n440,486,116,309,855,75,935,604,624,890,648,724,242,304,118,306,174,479,439,783\n418,640,187,917,296,110,686,73,388,888,395,784,826,527,111,906,123,511,587,835\n595,257,532,541,108,778,718,552,947,641,616,129,811,584,208,918,603,918,260,949\n294,554,778,305,716,52,652,259,621,121,191,598,603,593,130,858,837,865,204,447\n779,418,782,210,417,606,729,676,230,634,641,10,534,63,176,64,630,374,475,852\n394,233,319,434,124,394,813,936,406,542,225,249,807,710,407,73,525,853,74,244\n607,193,194,507,407,432,595,548,891,919,312,836,443,560,217,640,542,777,879,295\n587,890,516,516,874,203,64,59,455,485,174,949,743,175,272,138,676,229,863,413\n305,861,864,929,749,560,558,131,627,110,128,888,685,783,14,403,715,482,84,347\n221,868,391,529,155,918,442,640,226,224,257,410,530,545,447,290,417,86,531,920\n773,77,100,127,182,227,412,634,909,480,675,222,152,745,548,914,209,736,924,547\n872,15,540,733,304,526,904,553,96,541,534,528,500,448,525,212,541,508,523,603\n541,742,921,118,440,682,743,104,159,717,689,631,712,198,830,115,425,250,525,303\n222,408,525,306,352,58,736,417,210,350,316,191,889,303,233,783,230,638,210,530\n595,870,682,179,374,782,66,401,608,807,867,688,679,849,384,542,190,719,334,292\n861,302,631,836,187,423,607,414,130,239,584,511,520,941,638,774,480,776,724,481\n749,249,450,531,732,612,209,637,485,943,97,743,86,499,324,438,913,599,470,228\n197,594,200,688,144,485,445,874,930,486,774,122,378,740,684,136,167,372,136,261\n290,914,937,596,60,196,504,682,217,233,151,137,651,50,528,158,433,59,733,854\n298,630,241,291,289,406,642,404,649,850,711,55,865,208,93,854,445,777,742,605\n558,476,125,905,255,437,528,2,847,845,717,915,224,601,381,451,782,455,601,216\n319,96,453,143,502,215,917,433,433,424,589,521,780,382,606,251,155,427,739,81\n794,115,934,842,213,223,320,689,214,917,218,832,629,610,189,177,728,191,610,177\n129,890,177,216,400,589,203,641,414,511,262,352,843,261,63,859,849,520,633,104\n816,207,125,439,407,915,741,86,639,943,60,515,203,186,519,946,783,58,927,835\n938,939,312,412,608,532,138,841,554,892,540,541,294,260,849,407,143,297,793,392\n477,612,425,67,983,720,652,914,609,451,511,97,318,827,175,184,627,747,246,91\n591,174,396,522,793,167,56,831,296,593,91,830,178,831,307,54,504,505,198,554\n133,217,891,679,201,873,831,190,558,516,2,550,260,637,946,750,299,439,391,605\n735,252,446,546,606,198,477,742,942,598,86,635,725,258,563,867,946,845,310,485\n255,943,607,427,380,304,375,202,189,408,684,512,289,374,302,866,104,651,297,242\n723,255,299,499,548,850,207,744,688,936,782,62,305,436,78,116,218,948,429,73\n743,732,173,872,559,745,209,556,180,946,908,172,640,864,184,616,933,828,828,998\n200,411,180,206,480,143,396,57,375,151,713,171,921,317,829,924,322,445,550,329\n408,640,434,998,590,712,59,213,614,834,712,686,599,850,260,518,418,939,744,835\n101,714,13,542,928,593,171,536,181,925,907,863,187,302,312,475,541,101,65,179\n712,526,677,510,128,409,188,524,451,737,904,74,686,801,852,869,481,614,59,428\n916,534,442,189,172,534,193,802,559,505,409,860,195,682,379,380,325,122,510,66\n587,51,120,718,249,932,935,595,909,255,248,629,913,632,167,828,152,585,388,215\n531,93,545,421,842,254,57,932,811,648,775,503,452,531,502,410,254,605,500,308\n638,400,101,196,226,100,373,613,433,226,478,86,711,425,784,777,443,137,454,95\n917,887,826,414,832,778,400,133,714,739,394,115,524,823,304,538,308,777,98,436\n600,507,264,743,439,253,128,599,110,437,159,535,861,398,347,502,889,747,62,313\n710,108,727,174,285,110,507,248,177,652,454,542,776,932,855,115,622,193,86,189\n634,501,253,740,59,151,706,403,923,587,719,206,835,99,600,807,298,535,85,923\n197,224,181,634,109,453,550,546,261,429,396,94,930,615,158,412,541,856,64,546\n346,916,444,100,640,10,775,868,506,436,94,139,141,890,292,199,687,526,384,845\n888,231,295,302,774,685,478,639,915,887,187,124,931,392,486,359,731,201,783,527\n368,633,397,726,59,103,776,483,892,914,931,728,142,933,851,376,245,913,940,348\n445,774,399,864,498,182,891,742,343,625,172,220,168,640,528,184,89,429,137,57\n886,453,129,741,545,108,513,182,941,400,608,156,522,517,109,594,741,557,476,931\n925,90,232,451,176,109,70,726,307,54,935,171,84,711,261,844,739,315,526,804\n885,296,746,254,239,739,480,375,260,727,376,109,845,179,773,375,123,499,929,194\n96,84,184,632,141,291,650,782,113,76,948,520,405,377,687,546,226,316,190,832\n106,288,427,553,446,121,746,87,502,85,518,510,122,322,230,230,293,481,540,445\n504,830,263,71,912,689,731,855,368,452,530,54,264,558,684,868,445,838,409,478\n926,680,622,376,841,85,839,727,835,392,478,650,587,71,190,400,743,733,768,549\n846,203,178,630,675,849,742,438,909,255,867,548,553,167,875,74,213,732,482,85\n687,746,612,680,717,381,402,317,93,247,860,74,143,743,231,547,182,66,833,465\n711,119,891,649,509,593,592,306,600,420,414,298,720,276,129,413,891,828,225,178\n880,257,383,873,382,499,550,60,216,913,94,605,82,928,406,298,854,253,395,318\n183,940,255,652,182,723,546,634,222,612,99,229,840,719,81,63,62,645,855,380"},a031:function(n,e,a){"use strict";a.r(e),e["default"]=".......#\n....#...\n...###.#\n#...###.\n....##..\n##.#..#.\n###.#.#.\n....#..."},a065:function(n,e,a){"use strict";a.r(e),e["default"]="For some reason, your simulated results don't match what the experimental energy source engineers expected. Apparently, the pocket dimension actually has **four spatial dimensions**, not three.\n\nThe pocket dimension contains an infinite 4-dimensional grid. At every integer 4-dimensional coordinate (`x,y,z,w`), there exists a single cube (really, a **hypercube**) which is still either **active** or **inactive**.\n\nEach cube only ever considers its **neighbors**: any of the 80 other cubes where any of their coordinates differ by at most `1`. For example, given the cube at `x=1,y=2,z=3,w=4`, its neighbors include the cube at `x=2,y=2,z=3,w=3`, the cube at `x=0,y=2,z=3,w=4`, and so on.\n\nThe initial state of the pocket dimension still consists of a small flat region of cubes. Furthermore, the same rules for cycle updating still apply: during each cycle, consider the **number of active neighbors** of each cube.\n\nFor example, consider the same initial state as in the example above. Even though the pocket dimension is 4-dimensional, this initial state represents a small 2-dimensional slice of it. (In particular, this initial state defines a 3x3x1x1 region of the 4-dimensional space.)\n\nSimulating a few cycles from this initial state produces the following configurations, where the result of each cycle is shown layer-by-layer at each given `z` and `w` coordinate:\n\n```\nBefore any cycles:\n\nz=0, w=0\n.#.\n..#\n###\n\n\nAfter 1 cycle:\n\nz=-1, w=-1\n#..\n..#\n.#.\n\nz=0, w=-1\n#..\n..#\n.#.\n\nz=1, w=-1\n#..\n..#\n.#.\n\nz=-1, w=0\n#..\n..#\n.#.\n\nz=0, w=0\n#.#\n.##\n.#.\n\nz=1, w=0\n#..\n..#\n.#.\n\nz=-1, w=1\n#..\n..#\n.#.\n\nz=0, w=1\n#..\n..#\n.#.\n\nz=1, w=1\n#..\n..#\n.#.\n\n\nAfter 2 cycles:\n\nz=-2, w=-2\n.....\n.....\n..#..\n.....\n.....\n\nz=-1, w=-2\n.....\n.....\n.....\n.....\n.....\n\nz=0, w=-2\n###..\n##.##\n#...#\n.#..#\n.###.\n\nz=1, w=-2\n.....\n.....\n.....\n.....\n.....\n\nz=2, w=-2\n.....\n.....\n..#..\n.....\n.....\n\nz=-2, w=-1\n.....\n.....\n.....\n.....\n.....\n\nz=-1, w=-1\n.....\n.....\n.....\n.....\n.....\n\nz=0, w=-1\n.....\n.....\n.....\n.....\n.....\n\nz=1, w=-1\n.....\n.....\n.....\n.....\n.....\n\nz=2, w=-1\n.....\n.....\n.....\n.....\n.....\n\nz=-2, w=0\n###..\n##.##\n#...#\n.#..#\n.###.\n\nz=-1, w=0\n.....\n.....\n.....\n.....\n.....\n\nz=0, w=0\n.....\n.....\n.....\n.....\n.....\n\nz=1, w=0\n.....\n.....\n.....\n.....\n.....\n\nz=2, w=0\n###..\n##.##\n#...#\n.#..#\n.###.\n\nz=-2, w=1\n.....\n.....\n.....\n.....\n.....\n\nz=-1, w=1\n.....\n.....\n.....\n.....\n.....\n\nz=0, w=1\n.....\n.....\n.....\n.....\n.....\n\nz=1, w=1\n.....\n.....\n.....\n.....\n.....\n\nz=2, w=1\n.....\n.....\n.....\n.....\n.....\n\nz=-2, w=2\n.....\n.....\n..#..\n.....\n.....\n\nz=-1, w=2\n.....\n.....\n.....\n.....\n.....\n\nz=0, w=2\n###..\n##.##\n#...#\n.#..#\n.###.\n\nz=1, w=2\n.....\n.....\n.....\n.....\n.....\n\nz=2, w=2\n.....\n.....\n..#..\n.....\n.....\n```\n\nAfter the full six-cycle boot process completes, **`848`** cubes are left in the **active** state.\n\nStarting with your given initial configuration, simulate six cycles in a 4-dimensional space. **How many cubes are left in the active state after the sixth cycle?**"},a41f:function(n,e,a){"use strict";a.r(e),e["default"]="The final step in breaking the XMAS encryption relies on the invalid number you just found: you must **find a contiguous set of at least two numbers** in your list which sum to the invalid number from step 1.\n\nAgain consider the above example:\n\n```\n35\n20\n15\n25\n47\n40\n62\n55\n65\n95\n102\n117\n150\n182\n127\n219\n299\n277\n309\n576\n```\n\nIn this list, adding up all of the numbers from `15` through `40` produces the invalid number from step 1, `127`. (Of course, the contiguous set of numbers in your actual list might be much longer.)\n\nTo find the **encryption weakness**, add together the **smallest** and **largest** number in this contiguous range; in this example, these are `15` and `47`, producing `62`.\n\n**What is the encryption weakness in your XMAS-encrypted list of numbers?**"},a9e3:function(n,e,a){"use strict";var s=a("83ab"),t=a("da84"),b=a("94ca"),i=a("6eeb"),r=a("5135"),o=a("c6b6"),l=a("7156"),w=a("c04e"),L=a("d039"),c=a("7c73"),h=a("241c").f,d=a("06cf").f,g=a("9bf2").f,p=a("58a8").trim,m="Number",u=t[m],f=u.prototype,y=o(c(f))==m,x=function(n){var e,a,s,t,b,i,r,o,l=w(n,!1);if("string"==typeof l&&l.length>2)if(l=p(l),e=l.charCodeAt(0),43===e||45===e){if(a=l.charCodeAt(2),88===a||120===a)return NaN}else if(48===e){switch(l.charCodeAt(1)){case 66:case 98:s=2,t=49;break;case 79:case 111:s=8,t=55;break;default:return+l}for(b=l.slice(2),i=b.length,r=0;r<i;r++)if(o=b.charCodeAt(r),o<48||o>t)return NaN;return parseInt(b,s)}return+l};if(b(m,!u(" 0o1")||!u("0b1")||u("+0x1"))){for(var v,k=function(n){var e=arguments.length<1?0:n,a=this;return a instanceof k&&(y?L((function(){f.valueOf.call(a)})):o(a)!=m)?l(new u(x(e)),a,k):x(e)},F=s?h(u):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),B=0;F.length>B;B++)r(u,v=F[B])&&!r(k,v)&&g(k,v,d(u,v));k.prototype=f,f.constructor=k,i(t,m,k)}},ad08:function(n,e,a){"use strict";a.r(e),e["default"]="Step O must be finished before step C can begin.\nStep Y must be finished before step D can begin.\nStep N must be finished before step D can begin.\nStep G must be finished before step F can begin.\nStep C must be finished before step Z can begin.\nStep H must be finished before step K can begin.\nStep W must be finished before step T can begin.\nStep T must be finished before step F can begin.\nStep S must be finished before step I can begin.\nStep X must be finished before step B can begin.\nStep J must be finished before step A can begin.\nStep K must be finished before step D can begin.\nStep Z must be finished before step A can begin.\nStep A must be finished before step B can begin.\nStep L must be finished before step V can begin.\nStep F must be finished before step M can begin.\nStep B must be finished before step V can begin.\nStep M must be finished before step Q can begin.\nStep D must be finished before step E can begin.\nStep I must be finished before step U can begin.\nStep R must be finished before step V can begin.\nStep E must be finished before step U can begin.\nStep P must be finished before step V can begin.\nStep V must be finished before step Q can begin.\nStep U must be finished before step Q can begin.\nStep P must be finished before step U can begin.\nStep O must be finished before step F can begin.\nStep T must be finished before step M can begin.\nStep I must be finished before step Q can begin.\nStep M must be finished before step U can begin.\nStep R must be finished before step E can begin.\nStep T must be finished before step R can begin.\nStep H must be finished before step S can begin.\nStep L must be finished before step B can begin.\nStep S must be finished before step Q can begin.\nStep E must be finished before step Q can begin.\nStep B must be finished before step Q can begin.\nStep S must be finished before step M can begin.\nStep C must be finished before step D can begin.\nStep S must be finished before step R can begin.\nStep G must be finished before step D can begin.\nStep T must be finished before step E can begin.\nStep T must be finished before step Q can begin.\nStep N must be finished before step I can begin.\nStep S must be finished before step P can begin.\nStep N must be finished before step J can begin.\nStep X must be finished before step L can begin.\nStep G must be finished before step K can begin.\nStep N must be finished before step E can begin.\nStep H must be finished before step D can begin.\nStep H must be finished before step P can begin.\nStep O must be finished before step A can begin.\nStep V must be finished before step U can begin.\nStep F must be finished before step D can begin.\nStep B must be finished before step P can begin.\nStep T must be finished before step L can begin.\nStep I must be finished before step P can begin.\nStep K must be finished before step Z can begin.\nStep G must be finished before step M can begin.\nStep F must be finished before step Q can begin.\nStep J must be finished before step L can begin.\nStep H must be finished before step Q can begin.\nStep W must be finished before step R can begin.\nStep R must be finished before step U can begin.\nStep P must be finished before step Q can begin.\nStep D must be finished before step V can begin.\nStep G must be finished before step C can begin.\nStep Z must be finished before step B can begin.\nStep O must be finished before step H can begin.\nStep S must be finished before step A can begin.\nStep J must be finished before step Q can begin.\nStep N must be finished before step F can begin.\nStep L must be finished before step R can begin.\nStep O must be finished before step R can begin.\nStep W must be finished before step M can begin.\nStep J must be finished before step F can begin.\nStep G must be finished before step W can begin.\nStep K must be finished before step U can begin.\nStep D must be finished before step U can begin.\nStep W must be finished before step I can begin.\nStep E must be finished before step V can begin.\nStep Y must be finished before step Q can begin.\nStep L must be finished before step E can begin.\nStep S must be finished before step B can begin.\nStep T must be finished before step V can begin.\nStep C must be finished before step U can begin.\nStep M must be finished before step P can begin.\nStep G must be finished before step S can begin.\nStep B must be finished before step R can begin.\nStep K must be finished before step M can begin.\nStep X must be finished before step A can begin.\nStep R must be finished before step P can begin.\nStep B must be finished before step I can begin.\nStep C must be finished before step X can begin.\nStep O must be finished before step P can begin.\nStep D must be finished before step Q can begin.\nStep F must be finished before step B can begin.\nStep I must be finished before step R can begin.\nStep Y must be finished before step I can begin.\nStep M must be finished before step D can begin.\nStep F must be finished before step U can begin."},aded:function(n,e,a){"use strict";a.r(e),e["default"]="**Strategy 2**: Of all guards, which guard is most frequently asleep on the same minute?\n\nIn the example above, Guard #**99** spent minute **45** asleep more than any other guard or minute - three times in total. (In all other cases, any guard spent any minute asleep at most twice.)\n\n**What is the ID of the guard you chose multiplied by the minute you chose?** (In the above example, the answer would be `99 * 45 = 4455`.)"},adf3:function(n,e,a){"use strict";a.r(e),e["default"]='As you look over the list of messages, you realize your matching rules aren\'t quite right. To fix them, completely replace rules `8: 42` and `11: 42 31` with the following:\n\n```\n8: 42 | 42 8\n11: 42 31 | 42 11 31\n```\n\nThis small change has a big impact: now, the rules **do** contain loops, and the list of messages they could hypothetically match is infinite. You\'ll need to determine how these changes affect which messages are valid.\n\nFortunately, many of the rules are unaffected by this change; it might help to start by looking at which rules always match the same set of values and how **those** rules (especially rules `42` and `31`) are used by the new versions of rules `8` and `11`.\n\n(Remember, **you only need to handle the rules you have**; building a solution that could handle any hypothetical combination of rules would be [significantly more difficult](https://en.wikipedia.org/wiki/Formal_grammar).)\n\nFor example:\n\n```\n42: 9 14 | 10 1\n9: 14 27 | 1 26\n10: 23 14 | 28 1\n1: "a"\n11: 42 31\n5: 1 14 | 15 1\n19: 14 1 | 14 14\n12: 24 14 | 19 1\n16: 15 1 | 14 14\n31: 14 17 | 1 13\n6: 14 14 | 1 14\n2: 1 24 | 14 4\n0: 8 11\n13: 14 3 | 1 12\n15: 1 | 14\n17: 14 2 | 1 7\n23: 25 1 | 22 14\n28: 16 1\n4: 1 1\n20: 14 14 | 1 15\n3: 5 14 | 16 1\n27: 1 6 | 14 18\n14: "b"\n21: 14 1 | 1 14\n25: 1 1 | 1 14\n22: 14 14\n8: 42\n26: 14 22 | 1 20\n18: 15 15\n7: 14 5 | 1 21\n24: 14 1\n\nabbbbbabbbaaaababbaabbbbabababbbabbbbbbabaaaa\nbbabbbbaabaabba\nbabbbbaabbbbbabbbbbbaabaaabaaa\naaabbbbbbaaaabaababaabababbabaaabbababababaaa\nbbbbbbbaaaabbbbaaabbabaaa\nbbbababbbbaaaaaaaabbababaaababaabab\nababaaaaaabaaab\nababaaaaabbbaba\nbaabbaaaabbaaaababbaababb\nabbbbabbbbaaaababbbbbbaaaababb\naaaaabbaabaaaaababaa\naaaabbaaaabbaaa\naaaabbaabbaaaaaaabbbabbbaaabbaabaaa\nbabaaabbbaaabaababbaabababaaab\naabbbbbaabbbaaaaaabbbbbababaaaaabbaaabba\n```\n\nWithout updating rules `8` and `11`, these rules only match three messages: `bbabbbbaabaabba`, `ababaaaaaabaaab`, and `ababaaaaabbbaba`.\n\nHowever, after updating rules `8` and `11`, a total of **`12`** messages match:\n\n- `bbabbbbaabaabba`\n- `babbbbaabbbbbabbbbbbaabaaabaaa`\n- `aaabbbbbbaaaabaababaabababbabaaabbababababaaa`\n- `bbbbbbbaaaabbbbaaabbabaaa`\n- `bbbababbbbaaaaaaaabbababaaababaabab`\n- `ababaaaaaabaaab`\n- `ababaaaaabbbaba`\n- `baabbaaaabbaaaababbaababb`\n- `abbbbabbbbaaaababbbbbbaaaababb`\n- `aaaaabbaabaaaaababaa`\n- `aaaabbaabbaaaaaaabbbabbbaaabbaabaaa`\n- `aabbbbbaabbbaaaaaabbbbbababaaaaabbaaabba`\n\n**After updating rules `8` and `11`, how many messages completely match rule `0`?**'},af80:function(n,e,a){"use strict";a.r(e),e["default"]="Tile 1249:\n...#......\n#..#..#.##\n##........\n#.#.......\n..........\n#...###...\n#..#......\n#...##....\n..........\n.....#...#\n\nTile 1693:\n..#..####.\n#.........\n##..#....#\n#.....#..#\n......#.##\n#........#\n.....##...\n.#..##.#.#\n##........\n###..#....\n\nTile 1481:\n....#####.\n#....#..##\n##..#....#\n##..#...#.\n#..#.#...#\n..........\n...#..#...\n.#...#...#\n#...#.....\n..#..##.##\n\nTile 3169:\n####...#.#\n#.#.....#.\n.#......##\n..#.#....#\n...###..#.\n#....###.#\n.......#..\n##.##.....\n.#.#......\n.#....#...\n\nTile 1229:\n##..###..#\n#.......#.\n..#..##..#\n##..#.....\n#.#..#..#.\n.#..#.#.##\n....#....#\n#..#..#.##\n....#....#\n..##..####\n\nTile 1489:\n#......#..\n....#.....\n#.....#..#\n#.......#.\n#.#..#..#.\n#.........\n#........#\n#..#.#....\n#.........\n....####.#\n\nTile 2477:\n#####.##.#\n.###...###\n#....#..##\n.#.#..#..#\n###.##...#\n#........#\n#..#..#...\n.......#.#\n#......###\n##.##.##.#\n\nTile 2897:\n##.##..#.#\n#.......##\n#.#..#.#..\n..#...#..#\n...##.#..#\n..#.......\n#.#..##..#\n..#....#.#\n#....#.#.#\n#......###\n\nTile 2083:\n..#...##.#\n###.#.##..\n....##....\n#...#..#..\n...##....#\n#..#......\n.#.##.....\n..##..####\n....###..#\n.#...#.#..\n\nTile 1069:\n..#.#.#..#\n..#....#.#\n.........#\n##..#.....\n#.....#...\n..##......\n#..#......\n.##..#####\n#.#....#..\n.....#..#.\n\nTile 1427:\n...####.##\n.###......\n.#..#.#..#\n..#.###.##\n.#..#.....\n..##.#....\n.#......#.\n#....#...#\n.......#..\n#.#..###..\n\nTile 1429:\n.##.#.#.#.\n#..##....#\n..#......#\n...#....##\n...#.##..#\n..#.#.....\n#....#..##\n#..#.....#\n.##....#..\n##.#.#...#\n\nTile 2357:\n#.##..#.##\n.........#\n#..#.#..##\n#....#.#..\n#........#\n#...##....\n#....#....\n....##...#\n#.#..##...\n.###.#.#..\n\nTile 3181:\n...#..####\n........#.\n#...#...##\n#.#.....##\n#.........\n##...#....\n#.##.....#\n#....#...#\n..#.#...##\n#..###.##.\n\nTile 2887:\n.#..#.###.\n#.........\n.#....#...\n#........#\n..#.##...#\n.......##.\n....#.#..#\n#...###..#\n.#...#..##\n###...#..#\n\nTile 2837:\n##.##..###\n.......#.#\n....#.#..#\n.......##.\n.....#....\n#.#.##..#.\n#.#..#...#\n....#.##..\n..#......#\n...######.\n\nTile 2539:\n.###....#.\n.......##.\n##.##...#.\n.###.....#\n###..##...\n.##....#.#\n........#.\n..........\n.#........\n#.....#...\n\nTile 2399:\n##.#..##..\n#...#.#..#\n.##......#\n###..##...\n.#....#...\n....#.#...\n.....###.#\n#.......##\n#......#..\n.##.##....\n\nTile 2383:\n#..##.###.\n.#.......#\n#.#..#....\n#..#.#...#\n#.#.#.....\n......#...\n#....#..#.\n..#.#.#..#\n#..#.##..#\n.#.##...##\n\nTile 2521:\n.#..#.##.#\n#........#\n#.#...#.##\n#........#\n##.#.#..##\n#..######.\n.##..##..#\n.#.....##.\n.#.#......\n..#..#####\n\nTile 1823:\n#.#...##..\n#..#.....#\n.##......#\n#...###.#.\n......#...\n.....##...\n#....##.#.\n#.........\n#..#.....#\n#.#.##.#..\n\nTile 1301:\n####.#.###\n#.##...##.\n..#...####\n..........\n#....#..##\n....#..#..\n#..#.#.#..\n...#...#..\n###..###.#\n.##..#.#.#\n\nTile 1289:\n#.###....#\n#.#.....#.\n#.....##.#\n#........#\n.##.#...#.\n.###..#...\n..#.......\n.##...#...\n...#....##\n.###....#.\n\nTile 3823:\n#.##.##..#\n.........#\n#...##.#.#\n.#.##.....\n##.....#..\n.#..#....#\n#...#...##\n#.........\n#........#\n.#.##.####\n\nTile 2411:\n#.####.###\n#....#.###\n..##.....#\n#.#...#..#\n##...#.#.#\n##.##...##\n#.......#.\n#...##...#\n.........#\n###.##.##.\n\nTile 1039:\n.......#.#\n..#.......\n........#.\n.##...####\n##...#..##\n.#.......#\n..#.#.....\n...#.....#\n.........#\n..#...#...\n\nTile 1609:\n.##..#..##\n##.###.###\n.#.....#..\n#........#\n...#...#..\n#.......##\n...#..###.\n#.##.##.##\n#.......#.\n...#.#....\n\nTile 2017:\n##..#..#..\n....###...\n..##......\n#...#.###.\n#....#....\n#.#.......\n#..#.#....\n###..##..#\n###.#....#\n#.#.#.#.##\n\nTile 3301:\n.#####...#\n...##.....\n#..###...#\n#....#...#\n...#.#...#\n#......#.#\n#........#\n...#......\n.......#.#\n..#####...\n\nTile 3733:\n#####.##.#\n#.##..#..#\n#....#..##\n#....#....\n.....##...\n#......#..\n#....##.##\n.........#\n.#..#....#\n.....##...\n\nTile 2309:\n#..##.##..\n...#.#.#.#\n#..##.#..#\n....##....\n##....#..#\n##..##.#.#\n.###....#.\n###...#.##\n....#.....\n.#.#.###.#\n\nTile 2879:\n#.##.##...\n...#.....#\n...##.####\n...#.#.#.#\n#.###.##.#\n.....#...#\n#.....#.#.\n#..#.#..##\n.....###..\n.##..#.###\n\nTile 3583:\n.#.##...#.\n..##...##.\n#.#....##.\n#.##...#.#\n.....#..##\n#####.....\n..###..#..\n..##..#.#.\n.##....##.\n##.##...#.\n\nTile 2153:\n##...####.\n..#.#...#.\n##..##..#.\n.#..#.#...\n..........\n..#...#...\n#....#.###\n...##....#\n#.##.....#\n#...#....#\n\nTile 3581:\n#...##.###\n..####..##\n...##....#\n.#..#.....\n.##......#\n#.#......#\n...###.#.#\n###.#.....\n#.##.##...\n#.#.....#.\n\nTile 2927:\n##.#.#..##\n..........\n..........\n.....#....\n#..#..#..#\n....#.#...\n.#...#...#\n.#...##..#\n......#...\n###.#.##.#\n\nTile 2861:\n.#..#.###.\n#..#....##\n#.#.#..#..\n........#.\n..#.#.#...\n...##....#\n#..###.#.#\n#..#..##..\n..#.#....#\n.#..####.#\n\nTile 2851:\n#.#....#..\n#........#\n.#........\n#..##.#...\n..##....##\n.#.......#\n#.........\n......#..#\n..........\n###.##..##\n\nTile 3319:\n...##....#\n#.......##\n##.#..#...\n.##....###\n#...#...##\n..#.......\n.###..#..#\n#...#.....\n.........#\n.#..##.#..\n\nTile 2143:\n...#......\n##.#...#.#\n##.......#\n#.##..#..#\n..#...#..#\n.#.#...#..\n..#....#..\n......#...\n#.#.......\n#..#..#.##\n\nTile 1093:\n#.#...#.#.\n##..#.....\n.........#\n##..#...##\n##..#..#..\n##..##....\n##.##....#\n#.#....#..\n.#.#..#..#\n..#.##.###\n\nTile 3391:\n#....#..#.\n#...#..#..\n##....##..\n..#.#..#.#\n#####...##\n..#..#...#\n#.#......#\n.#...#....\n.....##.##\n.#.#.#....\n\nTile 3917:\n...##.#...\n#..#.....#\n#..##.###.\n#.#..#..#.\n.####..#.#\n..##.#.###\n#.#..##.#.\n#....##..#\n..###.#..#\n..##.####.\n\nTile 1847:\n#.##.#..#.\n.#.##.....\n#.#..#..#.\n#....#.#..\n.#.......#\n..#..#.#.#\n..##....##\n#.#.##....\n##.#..#...\n.##.##.###\n\nTile 1667:\n.##..#..#.\n###....##.\n#.####.#.#\n...#.....#\n.#.#..##.#\n.#..#....#\n#.##.#...#\n#.#.#.....\n...###...#\n#.#..####.\n\nTile 1217:\n...#####..\n....#..#.#\n..#...####\n#........#\n#........#\n###..#...#\n.##.##...#\n.#.......#\n.....##...\n.##.#.###.\n\nTile 3467:\n###.##....\n.......#.#\n.....#..##\n##..#....#\n....#..#..\n....#..###\n#......###\n#.##...#..\n..#.....##\n...#.#..#.\n\nTile 1297:\n..###..##.\n#....#.#.#\n.........#\n###.#....#\n#......#.#\n##....##..\n#.#.##..##\n.##.....#.\n.....#...#\n.#.##.....\n\nTile 3877:\n..###.#...\n##..#....#\n###.##..##\n.#..######\n....#.#..#\n.#.......#\n#...##.#..\n..#..#....\n#.##.##..#\n#..##.#.#.\n\nTile 2389:\n##...#####\n##..#.#..#\n#..#.....#\n......#..#\n.#........\n#....##.#.\n.##....#..\n#.....#.#.\n#........#\n...##.#...\n\nTile 3361:\n.....#.#..\n.........#\n...#....#.\n##.##.....\n#....##...\n##...#...#\n#...####.#\n..##.....#\n...#...#.#\n###.####..\n\nTile 2207:\n###.##..#.\n#..###....\n......#..#\n#........#\n##....##.#\n........#.\n...#..#...\n#....#..##\n...####...\n##........\n\nTile 1997:\n..#.#..###\n......#...\n...#...#..\n..#......#\n.........#\n#....#...#\n....#..#..\n.....#....\n#........#\n#....#####\n\nTile 1063:\n#.#...##..\n.##..#....\n#.#..##...\n..#...####\n......##..\n#...#.#...\n####......\n.#.....#..\n.#.......#\n#...####..\n\nTile 3109:\n...###.###\n.......#..\n......##.#\n.#......##\n#..##..#..\n##..#..#.#\n.....##.##\n#....#.#.#\n.....###..\n####....#.\n\nTile 1097:\n#####.##..\n.#...#.##.\n..#..#....\n#..#....#.\n#.#....#.#\n.#...#.#.#\n#....#..##\n#....#...#\n...#...#..\n...#.#..#.\n\nTile 1117:\n#..##.#.##\n#.#.....#.\n...#.#...#\n#.#..##.#.\n#.###..#..\n#....#...#\n....#.....\n.#...#...#\n..##..#..#\n.#.#.....#\n\nTile 2551:\n.#..#.####\n#...#.....\n##....##.#\n#....#....\n.##.....#.\n.#...#....\n#....#.#..\n......#...\n##.#.#....\n.#....#..#\n\nTile 2677:\n.#.####..#\n#.#.....##\n...#.#....\n.#...#...#\n.##...#..#\n##....#...\n...##.#..#\n##...#..##\n##...#...#\n##...###.#\n\nTile 1367:\n.#.##...##\n#.#..#....\n....##.#..\n.........#\n.#....##.#\n....#.##..\n....##...#\n#.#..#...#\n#.#.#..##.\n....#.##.#\n\nTile 1913:\n.##..#..##\n.#...##.##\n..#.....#.\n......#...\n...#...##.\n...####...\n..#..#....\n....#.#...\n#.........\n.####.####\n\nTile 1709:\n.#....##..\n..#...#.##\n.#......#.\n...#....##\n.#.##...#.\n.#.#.#.###\n.........#\n#.......#.\n##....#...\n..#.##.###\n\nTile 1459:\n.##..#.#..\n...##.....\n.#.#...###\n...#.....#\n##..#..#.#\n.........#\n.........#\n....#...#.\n#..#......\n...#.#...#\n\nTile 2137:\n##..#....#\n#.#####.#.\n......#..#\n#.#......#\n#...#..#.#\n#..#..#.##\n###..####.\n.##..#...#\n#.#.......\n.##.##....\n\nTile 2659:\n#.##..#...\n#...##....\n#...#...#.\n#........#\n#....#....\n.......##.\n..#.....#.\n#.#..##..#\n#......#..\n..###.#..#\n\nTile 2657:\n####...##.\n........#.\n..####..#.\n..#.......\n....#.#..#\n#.#.#.#...\n...#....#.\n###...####\n........##\n##.#.#.#..\n\nTile 2099:\n#.###.##.#\n#..#...###\n..#......#\n.#...#.#..\n...##.....\n###.##...#\n..##..#...\n...#......\n..#.#.#.#.\n..#.##....\n\nTile 3209:\n##.###....\n...#....#.\n#..##..##.\n##.##.#...\n.#..#....#\n#..#.#...#\n.#...#...#\n#..#......\n...#......\n..#.#.###.\n\nTile 1879:\n#.##.#.##.\n.#.##.#...\n#..#.#....\n#.....###.\n#..##.....\n....##....\n#..#..#...\n#.........\n..#.##....\n...####.##\n\nTile 1621:\n###....#.#\n.........#\n.#....##..\n.....#.#..\n.#...#.#..\n##...####.\n.....#...#\n#.........\n....#.#..#\n.####...##\n\nTile 3931:\n.####.###.\n#.##.....#\n#..#.#...#\n..#......#\n###..#.##.\n....##....\n#..#......\n..........\n.#.....#.#\n#.##.#..##\n\nTile 2777:\n##....####\n.#.#......\n##......#.\n#.......##\n.#..#.#..#\n##.#...#.#\n##.#.....#\n...##....#\n#..#.#....\n#.#..#....\n\nTile 2909:\n#......##.\n#........#\n..#.#.###.\n.......#.#\n........##\n....#.....\n......#...\n#........#\n#.......#.\n......#.#.\n\nTile 1777:\n.##...####\n.##.....#.\n#..#.#..#.\n.#......##\n.#....#..#\n#.###.#...\n.#.#......\n###..#...#\n.#.......#\n..#...#.##\n\nTile 3251:\n...#.###..\n#....##..#\n#....#..#.\n#....#..##\n.....#...#\n#.......##\n.......#.#\n#....#..#.\n#...##...#\n.#.#.....#\n\nTile 1601:\n#....#....\n.##.##...#\n.........#\n#.........\n.#.....###\n#..##.#.#.\n#......#.#\n.#..#.#..#\n.#...#....\n.#.#.#..##\n\nTile 1283:\n#####.#..#\n..#....##.\n#..#......\n.#....##..\n.#.#.....#\n##......##\n#.....##..\n##..#....#\n#........#\n.#.###..##\n\nTile 3079:\n..#.##....\n.......#.#\n..#...##.#\n..###...#.\n#..#.....#\n..##.....#\n..#..#.#..\n.##.#.#..#\n#..#......\n.#.##..#..\n\nTile 3793:\n##..#####.\n##...#....\n##....#...\n..........\n#.........\n.#....#..#\n#....#..#.\n#....#....\n###..##...\n#.###.##..\n\nTile 3037:\n.##.#..##.\n#..#.###..\n.#....#...\n...####..#\n..#.###..#\n#.#..#....\n.##......#\n#.....#..#\n#...#.#...\n##.######.\n\nTile 1669:\n##.#......\n.#......#.\n##.#...#.#\n#.#.#.#..#\n##........\n##....#...\n#.#.....#.\n..........\n.........#\n####...###\n\nTile 1087:\n.###.#.#.#\n###.......\n.....#...#\n##.....#..\n.#.#......\n...#......\n#...#..#.#\n#........#\n#..#....##\n.#...#####\n\nTile 2617:\n.##..#.#..\n.....#...#\n..#.#.....\n....#...##\n####...##.\n..##......\n...#...#..\n..#.#.##.#\n#.#.......\n###.##....\n\nTile 3943:\n.#.####..#\n.........#\n#.........\n.#........\n###..#....\n...#....#.\n#...#.#...\n.#......#.\n...##.#...\n..##....#.\n\nTile 2273:\n##.#.#...#\n...##.#..#\n..##......\n..#.....#.\n#......#..\n...#....#.\n.##....#.#\n...#.#.#..\n#..###.#.#\n###.#..##.\n\nTile 3803:\n##....#..#\n##...#.#.#\n..##....#.\n#...#..###\n....#.....\n....#.####\n#.....##..\n##....###.\n#....#..##\n#####.##..\n\nTile 1697:\n....####.#\n#....#.#.#\n#.....#.##\n#......#..\n#.#...#...\n#....#.#..\n.##....#..\n##...#.#.#\n#.#..#..#.\n.......#..\n\nTile 3343:\n######.#..\n#....##...\n#.#.##...#\n#...####..\n#......#..\n##.#..##.#\n#.....##.#\n..##.##..#\n..#......#\n###..##...\n\nTile 1549:\n#.##.###.#\n.....###..\n...#.###..\n##...##..#\n#.#.......\n#.........\n....#....#\n..#.....##\n.....##...\n#.#.##.##.\n\nTile 1619:\n..###.###.\n##.###...#\n#...##...#\n....##...#\n..##..#.#.\n#...#.#..#\n#.......##\n#..#.....#\n....##...#\n.#...#.#..\n\nTile 2971:\n..##.###..\n#.....#..#\n#..#.....#\n#..#...#.#\n...#......\n#......###\n#....####.\n.#....#...\n...#.....#\n#...###..#\n\nTile 3617:\n####...#..\n.......#.#\n.#.#......\n#..##..###\n.##.......\n.#....#..#\n.....#.###\n....##.#..\n#....#...#\n.#.##.####\n\nTile 1543:\n......#.##\n#......#.#\n##.....###\n#...#...##\n#.#....#..\n.#........\n#....#....\n......##..\n##...#..#.\n#...#.##.#\n\nTile 2111:\n####..#...\n#..#...#.#\n#.#.#.##..\n##........\n#...#..#..\n#.##..#...\n#.........\n##.#..#...\n.##.#.###.\n#.##.####.\n\nTile 1499:\n#.####.#..\n..##.#...#\n#..#......\n....#.....\n.#..##...#\n#.#...##.#\n...#.##.##\n###..#.###\n.....#....\n...##.##.#\n\nTile 3461:\n.#####.#.#\n#.........\n..#..#....\n..#......#\n###...####\n...#.##..#\n.#........\n#..#....##\n#...#...##\n####.....#\n\nTile 1483:\n.....#.##.\n##........\n#.#.....#.\n##......#.\n#.....#...\n..#.......\n##....#..#\n##........\n..#...####\n......###.\n\nTile 2467:\n###.#.#...\n#.#.....#.\n#...#....#\n#....#...#\n...#..#..#\n##...#....\n#.#.###...\n#..##..#.#\n#.........\n..######.#\n\nTile 3631:\n###.#...##\n.........#\n#.##..#...\n...##..#..\n##..#.#..#\n#..#.#....\n......#.#.\n..........\n#......##.\n..##.#....\n\nTile 3767:\n#...#.#..#\n..........\n#......#.#\n#...#.#..#\n##.......#\n..#......#\n........#.\n##...##.##\n#........#\n....#....#\n\nTile 2381:\n.#.#.##...\n#.##.#....\n...##.#.##\n#.....#.#.\n#......#..\n...#....#.\n......####\n#.#.#.....\n##...##..#\n...#...#.#\n\nTile 2687:\n###...####\n.....#.###\n..#.#.#.#.\n##..#...##\n#.###...#.\n..#.##..##\n##.....#..\n##..#..#.#\n#...#..#.#\n#.#..###.#\n\nTile 3719:\n..####.#..\n.#......##\n#......###\n##....###.\n.#...##.##\n.#.....#.#\n..##..#.#.\n#......###\n...#...#..\n......###.\n\nTile 3259:\n######.#.#\n#..#......\n.........#\n#.......#.\n..##...#..\n##...##.##\n#......#.#\n##.......#\n#.......#.\n#..##.#.##\n\nTile 3643:\n###..#..##\n#.#.#.#...\n..##....#.\n##....##..\n..##......\n#..#..#.##\n......##..\n#.......#.\n#...##..##\n#.#..#.###\n\nTile 2767:\n####....##\n..........\n.........#\n..#....#.#\n#......###\n#.##..#..#\n#.#..#.#..\n...#.#...#\n#..####..#\n##..#####.\n\nTile 2333:\n###..#.##.\n..##.....#\n..#.#..##.\n#.....#..#\n....#.#...\n##...#....\n#.#......#\n###.......\n#...#....#\n..#..#..##\n\nTile 2857:\n..#..##..#\n#.....#...\n##....#..#\n#...##....\n....#.#..#\n#.#.##....\n#...##..#.\n.#...##..#\n#...#.#...\n.#.###.#.#\n\nTile 1193:\n#.#..#.#.#\n##..####..\n###..##.#.\n#.......##\n###....##.\n...#...#..\n#...#....#\n##.......#\n#####.##.#\n..#####.##\n\nTile 2351:\n.##..#####\n#.........\n.#..#.....\n#.##.#...#\n..#.#..#..\n#.###....#\n###..#....\n##.......#\n#...#..#..\n.....#...#\n\nTile 1129:\n..##..####\n.....##..#\n##........\n.........#\n#...#.....\n....#...##\n..#....##.\n..#.....#.\n..#.......\n.##.###...\n\nTile 3433:\n.##..#....\n...###.###\n.......##.\n#..#.#.#.#\n........#.\n...###...#\n...#......\n.##...###.\n.#.#..#..#\n##..##..#.\n\nTile 1091:\n###.####..\n.#..#.....\n##.......#\n#.#...#...\n...##.....\n#..###...#\n..##...#.#\n#...#..###\n.....#...#\n###.#....#\n\nTile 3407:\n.####.#...\n.#..#.#..#\n..#..#....\n......#..#\n.........#\n#...##...#\n...#.###.#\n#....#...#\n#.....###.\n.#.#.#.#..\n\nTile 2591:\n.##..##...\n..#...##.#\n...#..####\n.#....#.##\n#...##.#..\n#...#....#\n#..#.....#\n#..#.....#\n..........\n.#.###.#.#\n\nTile 3613:\n###.######\n.#...##..#\n#.##.....#\n#.........\n#...#.....\n###.....##\n.#.##.#..#\n##..#...##\n####......\n..#...#...\n\nTile 3967:\n#.#..#.#..\n#..#.....#\n...##...#.\n.#.##...#.\n#####..#.#\n..##.#..#.\n..........\n#.#.#..#.#\n#.#.....##\n#..#####.#\n\nTile 1999:\n#.#.#..##.\n####.##.##\n..##...#.#\n....#....#\n.##.#.#...\n..........\n.......##.\n#.#......#\n##...#.#.#\n.#.#.#.#..\n\nTile 2689:\n.#..#####.\n.#........\n..#....#.#\n#......#.#\n.#.#..#.##\n###...#..#\n...#...#.#\n##......##\n......##.#\n.##.#..##.\n\nTile 3533:\n.####.#...\n#........#\n#......#..\n.........#\n#..#.##..#\n###....#.#\n...##..#..\n..#.....#.\n#...#..###\n..###.##.#\n\nTile 2267:\n#.##...#.#\n#....#....\n.#.#.##...\n.#....#.##\n..#.#.....\n.##.......\n##.....#..\n####....#.\n......#..#\n#..##..#.#\n\nTile 2297:\n###..##...\n#..##..##.\n..#....#.#\n#.#.##...#\n..#.##..#.\n...##...#.\n#...#.....\n.....#.#.#\n#..#....#.\n.###..##..\n\nTile 2711:\n##..##...#\n...##....#\n...#..#.#.\n#........#\n...#.....#\n........##\n##....##..\n#.##.....#\n#.###.....\n###...#..#\n\nTile 1931:\n.###...###\n......#.##\n....##..##\n#...#...#.\n..#..##.#.\n#.....#..#\n#...#....#\n#........#\n...#..#.#.\n#.##..###.\n\nTile 1787:\n#...##..##\n..#.......\n#..#.#.#..\n...#..#..#\n.##.#..###\n#.#.#.....\n..........\n....##...#\n..........\n.#.#...#..\n\nTile 2549:\n##.#...###\n.....#...#\n#......###\n##.###....\n#..#....#.\n##.......#\n.#........\n..###...##\n##..##...#\n#.##...#.#\n\nTile 2789:\n#.#.#.#.##\n#...#.##..\n.##...#.##\n#.##.#....\n...#......\n###.......\n#.......##\n#.#...#..#\n..#.#....#\n.##.#..#..\n\nTile 2707:\n#..#.#...#\n#.#.#.#...\n...#..#..#\n##.#.....#\n#....#.##.\n.....#...#\n#.....#...\n....#.#...\n#..###...#\n##..##.###\n\nTile 3313:\n###.#..#..\n.#....#..#\n...#.....#\n....#..###\n....#..#..\n#..#.#....\n##.#..##..\n..#...#.##\n##..##....\n.##.###.#.\n\nTile 1607:\n..#...###.\n#.....#...\n#.......##\n#.....#...\n###.#.#..#\n#.#.....#.\n#..#...###\n.........#\n..#.......\n##.#.#####\n\nTile 3889:\n###.#...##\n##.......#\n....#..#..\n#.#......#\n.##......#\n#...##....\n#....##..#\n.......#..\n#...#...#.\n##.#####.#\n\nTile 3821:\n..###.##..\n........##\n#..##..#.#\n.##.#..#.#\n#....##.##\n#.....##.#\n#.....#..#\n##........\n#.#..#....\n##.#.###..\n\nTile 3347:\n.##..#...#\n#.#...#...\n#..#..###.\n.#......#.\n#..###.##.\n......#...\n##..##.#..\n.#.###.#..\n........#.\n#.###..##.\n\nTile 1907:\n.#.##...#.\n#......#..\n...#......\n##.......#\n.#.....#..\n.#.....###\n........##\n.##.#..#.#\n##.....#..\n#.########\n\nTile 2903:\n##.....#.#\n....#.##..\n...#.....#\n.#..#####.\n.....##.#.\n.#......#.\n..........\n#..#.....#\n....#...##\n.#..##..##\n\nTile 1399:\n#....###.#\n..#..#####\n.#....##.#\n...#...#..\n#..##.#..#\n.....#....\n..#......#\n........##\n#..###....\n#..###.###\n\nTile 1993:\n###.##..#.\n##........\n##..#..##.\n.........#\n.........#\n#..##.#.#.\n.##.......\n#..#.....#\n#.##.#..##\n##.#.#..#.\n\nTile 3671:\n...##.#..#\n##....##.#\n#..#....##\n#..#...#.#\n.#.#.#...#\n........##\n..........\n##.......#\n#.##....##\n.#..#..##.\n\nTile 3167:\n###..##..#\n.....##...\n.......#..\n#...#.#..#\n.#.##.#..#\n###....##.\n##........\n#.........\n..#..#....\n.....##.#.\n\nTile 1109:\n..#...#..#\n#..#.#.#..\n.#........\n.......#.#\n#..#..#...\n.........#\n##.#......\n........##\n#.#.##..#.\n..#..#.#..\n\nTile 3089:\n.###.#####\n#..#..#.#.\n#......#.#\n...#.....#\n.........#\n.#.#...#..\n.#..#.#.##\n.......###\n.#.#..#.##\n..#..###..\n\nTile 1051:\n.....##..#\n#...##.#..\n..........\n..........\n#.#.##..#.\n...##...##\n.##.#####.\n.#...##..#\n..#.#...#.\n#.......##\n\nTile 2113:\n#...###.##\n.#.....##.\n...#....##\n...##..#..\n#....#...#\n..##.#....\n##....#.#.\n..#...###.\n.....#.#.#\n.##......#\n\nTile 2131:\n#....#####\n#.#.......\n.###.#..##\n###.##.#..\n#...#.....\n.#.#.....#\n###....#..\n..#.....##\n.#...##.##\n#..###....\n"},b03d:function(n,e,a){"use strict";a.r(e),e["default"]="It's getting pretty expensive to fly these days - not because of ticket prices, but because of the ridiculous number of bags you need to buy!\n\nConsider again your shiny gold bag and the rules from the above example:\n\n- `faded blue` bags contain `0` other bags.\n- `dotted black` bags contain `0` other bags.\n- `vibrant plum` bags contain `11` other bags: `5` `faded blue` bags and `6` `dotted black` bags.\n- `dark olive` bags contain `7` other bags: `3` `faded blue` bags and `4` `dotted black` bags.\n\nSo, a single `shiny gold` bag must contain 1 `dark olive` bag (and the 7 bags within it) plus 2 `vibrant plum` bags (and the 11 bags within **each** of those): `1 + 1*7 + 2 + 2*11` = `32` bags!\n\nOf course, the actual rules have a small chance of going several levels deeper than this example; be sure to count all of the bags, even if the nesting becomes topologically impractical!\n\nHere's another example:\n\n```\nshiny gold bags contain 2 dark red bags.\ndark red bags contain 2 dark orange bags.\ndark orange bags contain 2 dark yellow bags.\ndark yellow bags contain 2 dark green bags.\ndark green bags contain 2 dark blue bags.\ndark blue bags contain 2 dark violet bags.\ndark violet bags contain no other bags.\n```\n\nIn this example, a single `shiny gold` bag must contain `126` other bags.\n\n**How many individual bags are required inside your single shiny gold bag?**"},b52e:function(n,e,a){"use strict";a.r(e),e["default"]="Impressed, the Elves issue you a challenge: determine the `30000000`th number spoken. For example, given the same starting numbers as above:\n\n- Given `0,3,6`, the `30000000`th number spoken is **`175594`**.\n- Given `1,3,2`, the `30000000`th number spoken is **`2578`**.\n- Given `2,1,3`, the `30000000`th number spoken is **`3544142`**.\n- Given `1,2,3`, the `30000000`th number spoken is **`261214`**.\n- Given `2,3,1`, the `30000000`th number spoken is **`6895259`**.\n- Given `3,2,1`, the `30000000`th number spoken is **`18`**.\n- Given `3,1,2`, the `30000000`th number spoken is **`362`**.\n\nGiven your starting numbers, **what will be the `30000000`th number spoken?**"},b6f2:function(n,e,a){"use strict";a.r(e),e["default"]="77\n10\n143\n46\n79\n97\n54\n116\n60\n91\n80\n132\n20\n154\n53\n14\n103\n31\n65\n110\n43\n38\n47\n120\n112\n87\n24\n95\n33\n104\n73\n22\n66\n137\n21\n109\n118\n63\n55\n124\n146\n148\n84\n86\n147\n125\n23\n85\n117\n71\n48\n136\n151\n130\n83\n56\n140\n9\n49\n113\n131\n133\n74\n37\n127\n34\n32\n106\n1\n78\n11\n72\n40\n96\n17\n64\n92\n102\n123\n126\n90\n105\n57\n99\n27\n70\n98\n111\n30\n50\n67\n2\n155\n5\n119\n8\n39"},b6fc:function(n,e,a){"use strict";a.r(e),e["default"]="As you're walking to yet another connecting flight, you realize that one of the legs of your re-routed trip coming up is on a high-speed train. However, the train ticket you were given is in a language you don't understand. You should probably figure out what it says before you get to the train station after the next flight.\n\nUnfortunately, you can't actually **read** the words on the ticket. You can, however, read the numbers, and so you figure out **the fields these tickets must have** and **the valid ranges** for values in those fields.\n\nYou collect the **rules for ticket fields**, the **numbers on your ticket**, and the **numbers on other nearby tickets** for the same train service (via the airport security cameras) together into a single document you can reference (your puzzle input).\n\nThe **rules for ticket fields** specify a list of fields that exist **somewhere** on the ticket and the **valid ranges of values** for each field. For example, a rule like `class: 1-3 or 5-7` means that one of the fields in every ticket is named `class` and can be any value in the ranges `1-3` or `5-7` (inclusive, such that `3` and `5` are both valid in this field, but `4` is not).\n\nEach ticket is represented by a single line of comma-separated values. The values are the numbers on the ticket in the order they appear; every ticket has the same format. For example, consider this ticket:\n\n```\n.--------------------------------------------------------.\n| ????: 101    ?????: 102   ??????????: 103     ???: 104 |\n|                                                        |\n| ??: 301  ??: 302             ???????: 303      ??????? |\n| ??: 401  ??: 402           ???? ????: 403    ????????? |\n'--------------------------------------------------------'\n```\n\nHere, `?` represents text in a language you don't understand. This ticket might be represented as `101,102,103,104,301,302,303,401,402,403`; of course, the actual train tickets you're looking at are **much** more complicated. In any case, you've extracted just the numbers in such a way that the first number is always the same specific field, the second number is always a different specific field, and so on - you just don't know what each position actually means!\n\nStart by determining which tickets are **completely invalid**; these are tickets that contain values which **aren't valid for any field**. Ignore **your ticket** for now.\n\nFor example, suppose you have the following notes:\n\n```\nclass: 1-3 or 5-7\nrow: 6-11 or 33-44\nseat: 13-40 or 45-50\n\nyour ticket:\n7,1,14\n\nnearby tickets:\n7,3,47\n40,4,50\n55,2,20\n38,6,12\n```\n\nIt doesn't matter which position corresponds to which field; you can identify invalid **nearby tickets** by considering only whether tickets contain **values that are not valid for any field**. In this example, the values on the first **nearby ticket** are all valid for at least one field. This is not true of the other three **nearby tickets**: the values `4`, `55`, and `12` are are not valid for any field. Adding together all of the invalid values produces your **ticket scanning error rate**: `4 + 55 + 12` = **`71`**.\n\nConsider the validity of the **nearby tickets** you scanned. **What is your ticket scanning error rate?**"},b70f:function(n,e,a){"use strict";a.r(e),e["default"]="1891\n1975\n1987\n1923\n1928\n1993\n1946\n1947\n2005\n1897\n1971\n1929\n1875\n1945\n1680\n811\n1901\n1396\n1942\n1282\n1941\n1978\n1884\n1879\n1230\n2010\n1881\n1979\n1996\n1904\n1934\n1865\n2003\n2006\n1966\n1860\n1259\n1959\n1931\n1963\n1878\n1880\n151\n1925\n1663\n1908\n1863\n1391\n1922\n1968\n1998\n1084\n1982\n1960\n1938\n1876\n1937\n1882\n1873\n1926\n1986\n1416\n1864\n1862\n1969\n1913\n532\n1866\n1242\n1933\n1903\n965\n1927\n1890\n1991\n1388\n1992\n1902\n1907\n1964\n1394\n2009\n1920\n630\n1932\n1854\n1951\n1852\n1983\n1314\n1855\n1954\n1921\n1989\n1871\n1995\n1885\n1974\n1915\n1872\n1251\n1899\n1985\n1889\n1935\n1912\n946\n1965\n1739\n1973\n1911\n1910\n1917\n1918\n1900\n1886\n1477\n2000\n1916\n1077\n2004\n1456\n1867\n1970\n1999\n1919\n1726\n706\n1930\n1994\n1988\n1997\n1870\n1953\n652\n1893\n1898\n1883\n1957\n1972\n1874\n1977\n1955\n2001\n1906\n1389\n1848\n1940\n1877\n1962\n1948\n1887\n1924\n1403\n1408\n1861\n1892\n1990\n1222\n677\n1392\n1113\n1085\n1894\n1106\n1939\n1961\n1944\n1952\n1643\n1404\n1895\n1958\n1976\n1206\n1905\n1076\n1888\n1896\n1943\n1950\n2008\n1967\n164\n1981\n1868\n1914\n1909\n1956\n341\n1379\n2007\n1563\n1980\n1072\n1949\n1250\n1258\n1092\n2002"},b8ca:function(n,e,a){"use strict";a.r(e),e["default"]="zihrtxagncfpbsnolxydujjmqv\nzihrtxagwcfpbsoolnydukjyqv\naihrtxagwcfpbsnoleybmkjmqv\nzihrtxagwcfpbsnolgyduajmrv\nzihrtxgmwcfpbunoleydukjmqv\nzihqtxagwcfpbsnolesdukomqv\nzihgtxagwcfpbsnoleydqkjqqv\ndihrtxagwcqpbsnoleydpkjmqv\nqihrtvagwcfpbsnollydukjmqv\nzihrtgagwcfpbknoleyrukjmqv\ncinrtxagwcfpbsnoleydukjaqv\nzihrtxagwcfubsneleyvukjmqv\nzihrtxagwcfpbsvoleydukvmtv\nzihrtpagwcffbsnolfydukjmqv\nzihrtxagwcfpbsxoleydtkjyqv\nzohrvxugwcfpbsnoleydukjmqv\nzyhrtxagdcfpbsnodeydukjmqv\nzihrtxaghffpbsnoleyduojmqv\noihrtbagwcfpbsnoleyduejmqv\nzihrtnagwcvpjsnoleydukjmqv\niihrtxagwcfpbsnoliyaukjmqv\nziartxagwcfpbsnokeydukjmpv\neibrtxagwccpbsnoleydukjmqv\nzihrtxagwczwbsaoleydukjmqv\nziiatuagwcfpbsnoleydukjmqv\nzzhrtxagwckpbsnsleydukjmqv\ncihrtxaqwcfpbsnoleydkkjmqv\nzihrtxaywcfpbsnoleydukzdqv\nzihrtxagwjfpbvnoleydukjmql\nzihrtxagwcfpbsnoleuduksmql\nzizrtxxgwcfpbsnoleydukzmqv\nzihrteagwcfpbsnobeydukjmqe\nzihrtxafwhfpbsgoleydukjmqv\nzitrtxagwcfpbsnoleyduvymqv\nzihrtxauwcfebsnoleygukjmqv\nzihrtxagwcfpbsnoleydubjrqh\nzihrtxauwmfpbsnoleydukjmqo\nzihrtxagwcdpbsnoleydukxmov\nzihrtmagwcfpbsnoleydukvmlv\nziwrtxhgwcfpbsnoleodukjmqv\nzihytxagacfpbsnoceydukjmqv\nzihrtxagwcfpbsnolebdugjnqv\nzihrzxagwcfpbsnjleyduktmqv\nzihrtxygwcfpbinoleysukjmqv\nzihrtxagwcfpbmnoveydujjmqv\nzidrtxagwcfpbsnolexaukjmqv\nzshrtxagwcepbsnoxeydukjmqv\nyibrtxagwzfpbsnoleydukjmqv\nzehrtxagwclpbsnoleymukjmqv\nzihruxagwcfpbsnoleyhukwmqv\nzihrwxagwcfpbszolesdukjmqv\nzihrtpagwcfpbwnoleyuukjmqv\nziortxagwcfpssnolewdukjmqv\nzohrtxagwcfpbwnoleydukjmjv\nzihrtxagwcfpbsnvleyduzcmqv\nzihrvxaghcfpbswoleydukjmqv\nzihrtxagwcfpssnolwydukzmqv\nzjhrttagwcfpbsnolfydukjmqv\nzihrtxagwjfpbsnoljydukpmqv\nziwrtxagwczpbsnoljydukjmqv\nzinrtxagwcfpbvfoleydukjmqv\nzihrgragwcfpbsnoleydutjmqv\nzihrtxagwcfpbsnozeydukffqv\nzihrtxagwcfpbsmoleydxkumqv\nrihwtxagwcfpbsxoleydukjmqv\nziqrtxagwcfpbsnqlevdukjmqv\nzihrtxagwchpbsnoleydufamqv\nsihrtxagwcfpbsnoleldukjmqp\nzihrtxagwcrpbsnoleydvojmqv\nzihrtxacwcfpbsnoweyxukjmqv\nzihrtxagwcfpbsnolajmukjmqv\nzzfrtxagwcfpbsnoleydukjmvv\nzixrtxagwcfpbqnoleydukjgqv\nzihitxaqwcfpbsnoleadukjmqv\nzilrtxagecfxbsnoleydukjmqv\nzihrtxagwcfpbypoleycukjmqv\nzidrtxagdtfpbsnoleydukjmqv\nlehrtxagxcfpbsnoleydukjmqv\nzihrlxagwcfpbsncneydukjmqv\nzihroxagbcspbsnoleydukjmqv\nzihrtxagwcfkzsnolemdukjmqv\nzihrtxagwcfpbsqeleydukkmqv\nzihrjxagwcfpesnolxydukjmqv\nzifrtxagwcfpbsooleydukkmqv\nzirwtxagwcfpbsnoleydukzmqv\nzjhntxagwcfpbsnoleydunjmqv\nziorexagwcfpbsnoyeydukjmqv\nzhhrtlagwcfybsnoleydukjmqv\nzirrtxagwvfsbsnoleydukjmqv\nbihrtxagwofpbsnoleadukjmqv\ndihrtxagwcfpksnoleydukjlqv\nzihrrxagecfpbsnoleydukjmyv\nzijrtxagwmfpbsnoleyduljmqv\nzihrtxagwcfpbsnolecdukjpqs\nzchrtxagwcfpbsnolehdukjmwv\nrmhrtxagwcfpbsnoleydkkjmqv\nzohrotagwcfpbsnoleydukjmqv\nzihwtxagsifpbsnwleydukjmqv\nzihrtxagicfpbsnoleydukjxqn\nzihrtxsgwcfpbsntleydumjmqv\nzihrlxagzgfpbsnoleydukjmqv\naihjtxagwdfpbsnoleydukjmqv\nzifrtxagwcfhbsnoleddukjmqv\nzihrtyagwcfpbsooleydtkjmqv\nzihrtxxgwcfpbsnolerhukjmqv\nzihqtxalwcfppsnoleydukjmqv\nzfkrvxagwcfpbsnoleydukjmqv\nzihptxagwcfpbseoleydukjmdv\nzihrtxagwcfpeonoleyiukjmqv\nnidrtxagwcfpbsnoleyhukjmqv\nzihrtxagwcfjbsnolsydukjmqg\nzghryxagwcfgbsnoleydukjmqv\nzihwtxagwcfpbsnoleydugjfqv\nzihryxagwjfpbsnoleydujjmqv\nzihrtxagwcfpbsnolekdukymql\nzfhrtxaownfpbsnoleydukjmqv\nzamrtxagwcfpbsnoleyduzjmqv\nibhrtxagwcfpbsnoleydukjmfv\nzihrtxagwcfpssnoseydukjmuv\nzihrtxagwcfpbsnoljydukjhqs\nzihrtxagwqfmbsnoleidukjmqv\nzfdrtxagwchpbsnoleydukjmqv\niihrtxagqcfpbsnoleydukjmqn\nmihrtxagwcfpbsqoleydukjbqv\nzihttxagwcfpbsnoleyduljmqk\nzzhrtxagwcfpzseoleydukjmqv\nzdhrtxagbcfpbsnoleyduyjmqv\nzihxtxagwcfpbsnolwrdukjmqv\nzghrtxagwcypbynoleydukjmqv\nzihrtxaiwcfppsnoleydukgmqv\nzitatxagwcfobsnoleydukjmqv\nznhrtxagwcfpysnoleydukjqqv\nzihrtxagwcfppsnoleoyukjmqv\nziorgxagwcfpbsnolekdukjmqv\nzihrtxagwcfpbfnoleydwkjpqv\nzihrtxnrwcfpbsnolnydukjmqv\nrihrtxagwcfpbsnolepdjkjmqv\nzihrtxagwcfzbsnoceydukjmkv\nzihrtxagwcfpysnoaeidukjmqv\nzihrmxagwcfpbsnoleydukjmuq\ngihrtxagwcvpbsnoleydukcmqv\nzihrtxagocfpbsnoleydukqmnv\nzihrtxagwcfpesnoleyluklmqv\nzghrtxagwcfzbsnoleydukjmgv\nzihrtxugqqfpbsnoleydukjmqv\nzirrtcagwcfpbsnoleydfkjmqv\nzihitxagwcfpjsnoleydnkjmqv\nzihrtxqgwcfpbsnsleydukjmqy\niihrtxagwyfpbsnoleydukjmqu\nzihrsxagwcfpbsnsleydukzmqv\nzihrtxawwcfpbsnoleydzkjmuv\ndihrkxagwcfpbsfoleydukjmqv\nzihrtxaqwcfpbvnoleydukjmqt\nzihntxdgwcfpbsnogeydukjmqv\nzihrtxagwcdpxsnolxydukjmqv\nzihrtxagwcfpbsaoleydunjaqv\nzihrtyagwcfpbsnoleyduqjmqt\nzihrtxagwtfpbsnoleoyukjmqv\nzihrjiagwcfpbsnobeydukjmqv\nzihrtxqgwcfpbsnoleydykdmqv\nzihrhxmgwcfpbsnmleydukjmqv\nzihatxlgwcfpbsnoleydukpmqv\nzihrtxcgwcspbsnoleypukjmqv\nzihrtkagqcfpbsaoleydukjmqv\nziqrtxagwcfabsnoleydukrmqv\nzihwtxagwifpbsnwleydukjmqv\nzitrtnagwcfpbsnoleddukjmqv\nwihrtxagwcfpbsioyeydukjmqv\nzihrtxagwclpystoleydukjmqv\nzihmtxagwcfpbsnolfydukjmlv\nzihrtxagechpbsnoleydutjmqv\nzihrtxagwcfebsnolnydukjmuv\nzihrtxagncmpbsnoleydukjmqs\nzihrvxagocfpbsnoleydukcmqv\nzihrtxagwcjcbsnolejdukjmqv\nwihrtxagwcfpbogoleydukjmqv\nkivrtxagwcfpgsnoleydukjmqv\nzihrtxagwafpbhnoleydukjcqv\nzihrtwagtcfpbsnolxydukjmqv\nvihrtxagwcfpbsneletdukjmqv\nzihlnxagwcfpbsnoleydukjmqb\nzihrtxagwcfpbsnoleydukjuuc\nzihrtxagwcfpbwntleadukjmqv\nfihrtxagwcfpbsnoleydvkjmqw\nzihrtxaowcfpbunoleyduljmqv\nzthrtxagwcfpbtnoleydukomqv\nxihltxagwcfpbsnoleydukjrqv\nziyrnxagwcfpbsnoleydukjmhv\nzihrtxazwcfpbsnileyduejmqv\nzihrtxagwcfibsnoliydukjmsv\nzihrtxggwcfpbsnoleydugjmqj\nzrartxagwcffbsnoleydukjmqv\nzidrtxaqwcfpbsnoleyduksmqv\nzirrtxagwcypbsnoleydtkjmqv\nrihrtxagwcrpbsnoheydukjmqv\nzihrtxagwcfpbsnoleydpkjmzs\nzihrtxagbcfpbsnodbydukjmqv\nfihrtxaqwcfpbsnolaydukjmqv\nvihrtxbgwcfpbsnolemdukjmqv\nzihrtxapwcfubsnoleydukmmqv\nzihrtxagwcfpbgnolfydunjmqv\nzihrtxagwcypbsnokeyduvjmqv\nzihntxagwcfpbsnoieydukbmqv\nzihbtxagwkfpbsnolpydukjmqv\nzihrtxagwcfibsnoleydikjmqb\njihrtxvgwcfpbsnoleydukjmqp\nzihrtxagwcfpbjnqleydukjmlv\nzibrtxagwcfpbzvoleydukjmqv\nzihrtxagwafgbsnbleydukjmqv\nzihjctagwcfpbsnoleydukjmqv\nzahrtxagwcepbsnoleddukjmqv\nzihetxagwcfpbsnoleydumjmsv\nzihrtvagwcfpbbnoleydukdmqv\nzbhrxxagwkfpbsnoleydukjmqv\njfhrtxagwcftbsnoleydukjmqv\nyihrtxagwcfvbsnoleyduksmqv\nziartxaewcfpbsnoleyduhjmqv\nzihrtxagwcfpbsnoozyduzjmqv\ncihotxagwcfpysnoleydukjmqv\nzihrtxagwcfpusnolwydxkjmqv\nzihrtxagwcfpbsnoleedmgjmqv\nzihrtxaghcfpmsnoleydukqmqv\nziortxagwcfpbsboleidukjmqv\nzihrtxagwcfybsnoleyqxkjmqv\nzihrtxamwcfpbsngleydukjmqx\nzihrtxagwcfpbsnoleyduusmqu\nzihftxagwcfpssnwleydukjmqv\nzihrtxagwcfkbsnomeydukjmsv\nzihrtxagwcvpbsnooeydwkjmqv\nzihrtxagwcfpbsnoleycekumqv\njahrtxagwcfpbsnoleydukjmmv\nzihrtxabwcfpbsnzheydukjmqv\nzihrtxagwctpbsnoleydwkjmhv\nzihrtpagwcfpbsnoleydzkjmqh\nzihwtxagwcfpbsnollydukjrqv\nzihrtxagwcfpusnoleydsvjmqv\nzibrtxagwcfpasnoleydukjmbv\nzchrtmagwcfpbsnoleydukjmwv\nziertxbgwyfpbsnoleydukjmqv\nzitrtxagwcfpbhnoweydukjmqv\nzisrtxkgwcfpbsnopeydukjmqv\nzihrtxcgwdfpbynoleydukjmqv\niihrtxajwcvpbsnoleydukjmqv\nzihuwxapwcfpbsnoleydukjmqv\nzihrtxngwcfqbsnoleyiukjmqv\nziqrtxagjcfpbsnoleydukjmqi\nzifrtxarwctpbsnoleydukjmqv\nzihxgxagwcfpbpnoleydukjmqv\ngiprtxagwcdpbsnoleydukjmqv\nzihrtxagwmfpbsnodeydukjbqv"},b930:function(n,e,a){"use strict";a.r(e),e["default"]="For some reason, the sea port's computer system still can't communicate with your ferry's docking program. It must be using **version 2** of the decoder chip!\n\nA version 2 decoder chip doesn't modify the values being written at all. Instead, it acts as a [memory address decoder](https://www.youtube.com/watch?v=PvfhANgLrm4). Immediately before a value is written to memory, each bit in the bitmask modifies the corresponding bit of the destination **memory address** in the following way:\n\n- If the bitmask bit is `0`, the corresponding memory address bit is **unchanged**.\n- If the bitmask bit is `1`, the corresponding memory address bit is **overwritten with `1`**.\n- If the bitmask bit is `X`, the corresponding memory address bit is **floating**.\n\nA **floating** bit is not connected to anything and instead fluctuates unpredictably. In practice, this means the floating bits will take on **all possible values**, potentially causing many memory addresses to be written all at once!\n\nFor example, consider the following program:\n\n```\nmask = 000000000000000000000000000000X1001X\nmem[42] = 100\nmask = 00000000000000000000000000000000X0XX\nmem[26] = 1\n```\n\nWhen this program goes to write to memory address `42`, it first applies the bitmask:\n\n```\naddress: 000000000000000000000000000000101010  (decimal 42)\nmask:    000000000000000000000000000000X1001X\nresult:  000000000000000000000000000000X1101X\n```\n\nAfter applying the mask, four bits are overwritten, three of which are different, and two of which are **floating**. Floating bits take on every possible combination of values; with two floating bits, four actual memory addresses are written:\n\n```\n000000000000000000000000000000011010  (decimal 26)\n000000000000000000000000000000011011  (decimal 27)\n000000000000000000000000000000111010  (decimal 58)\n000000000000000000000000000000111011  (decimal 59)\n```\n\nNext, the program is about to write to memory address `26` with a different bitmask:\n\n```\naddress: 000000000000000000000000000000011010  (decimal 26)\nmask:    00000000000000000000000000000000X0XX\nresult:  00000000000000000000000000000001X0XX\n```\n\nThis results in an address with three floating bits, causing writes to **eight** memory addresses:\n```\n000000000000000000000000000000010000  (decimal 16)\n000000000000000000000000000000010001  (decimal 17)\n000000000000000000000000000000010010  (decimal 18)\n000000000000000000000000000000010011  (decimal 19)\n000000000000000000000000000000011000  (decimal 24)\n000000000000000000000000000000011001  (decimal 25)\n000000000000000000000000000000011010  (decimal 26)\n000000000000000000000000000000011011  (decimal 27)\n```\n\nThe entire 36-bit address space still begins initialized to the value 0 at every address, and you still need the sum of all values left in memory at the end of the program. In this example, the sum is `208`.\n\nExecute the initialization program using an emulator for a version 2 decoder chip. **What is the sum of all values left in memory after it completes?**"},baa6:function(n,e,a){"use strict";a.r(e),e["default"]="Time to check the rest of the slopes - you need to minimize the probability of a sudden arboreal stop, after all.\n\nDetermine the number of trees you would encounter if, for each of the following slopes, you start at the top-left corner and traverse the map all the way to the bottom:\n\n- Right `1`, down `1`.\n- Right `3`, down `1`. (This is the slope you already checked.)\n- Right `5`, down `1`.\n- Right `7`, down `1`.\n- Right `1`, down `2`.\n\nIn the above example, these slopes would find `2`, `7`, `3`, `4`, and `2` tree(s) respectively; multiplied together, these produce the answer **`336`**.\n\n**What do you get if you multiply together the number of trees encountered on each of the listed slopes?**"},bc7f:function(n,e,a){"use strict";a.r(e),e["default"]="On the other hand, **if the coordinates are safe**, maybe the best you can do is try to find a **region** near as many coordinates as possible.\n\nFor example, suppose you want the sum of the [Manhattan distance](https://en.wikipedia.org/wiki/Taxicab_geometry) to all of the coordinates to be **less than 32**. For each location, add up the distances to all of the given coordinates; if the total of those distances is less than 32, that location is within the desired region. Using the same coordinates as above, the resulting region looks like this:\n\n```\n..........\n.A........\n..........\n...###..C.\n..#D###...\n..###E#...\n.B.###....\n..........\n..........\n........F.\n```\n\nIn particular, consider the highlighted location `4,3` located at the top middle of the region. Its calculation is as follows, where `abs()` is the [absolute value](https://en.wikipedia.org/wiki/Absolute_value) function:\n\n- Distance to coordinate `A`: `abs(4-1) + abs(3-1) =  5`\n- Distance to coordinate `B`: `abs(4-1) + abs(3-6) =  6`\n- Distance to coordinate `C`: `abs(4-8) + abs(3-3) =  4`\n- Distance to coordinate `D`: `abs(4-3) + abs(3-4) =  2`\n- Distance to coordinate `E`: `abs(4-5) + abs(3-5) =  3`\n- Distance to coordinate `F`: `abs(4-8) + abs(3-9) = 10`\n- Total distance: `5 + 6 + 4 + 2 + 3 + 10 = 30`\n\nBecause the total distance to all coordinates (`30`) is less than 32, the location is **within** the region.\n\nThis region, which also includes coordinates D and E, has a total size of **16**.\n\nYour actual region will need to be much larger than this example, though, instead including all locations with a total distance of less than **10000**.\n\n**What is the size of the region containing all locations which have a total distance to all given coordinates of less than 10000?**"},bdde:function(n,e,a){"use strict";a.r(e),e["default"]="BBFFBFBRLL\nFFFFBFBRLR\nBFFBBFBRLR\nBFBBBFBLLL\nFFBBFBBLRR\nBFBFFFFRRL\nBBBBFFFRLR\nBFFFBBFRLL\nFFFFBFBRRL\nBFBBFFFRRL\nBBFBBBFRLL\nFBFFBFFRLL\nFBBBBBBLRL\nFFFBBFBLRL\nFFBBFFFLLR\nFBBFFFBLLL\nFFBFBBBRRL\nFBFBBBFRRL\nFFBBBFFLRL\nBFBBBBFRLR\nFBBBFFBRRL\nFBBFBFFRLL\nFBFBFBBLLL\nBFBFFFFLRR\nFFFBBFFLLL\nFFFFBFFRLL\nFBBBBFBRRR\nFBBFBBBLRL\nBBBBFFFLLL\nFFFFBFBLLR\nBFFFFBBRLL\nBFFFFBBRLR\nBFFFFFBRLL\nBFFBBBFRRL\nFBFFBBBLRR\nBFBFFBFRRR\nBBBBFFBLRR\nFFFFFBBRLR\nBFFFBBBRLR\nBBFBFFBRRL\nFBBFBFBLRR\nBFBBFBFRLR\nFFFFFBFRRR\nBFFFFFBLRL\nFFFBFBBLLR\nBFFFBBBLRR\nFFBFFBBRRL\nFBBBBBBLLL\nFBBBBFBLRL\nBBFFFBFRRL\nBBFFFBBRRL\nFFBFBFBLRL\nFFFFBBBRLR\nFBBFFBFLRL\nFBBBBFBRLR\nBBFBFBBLRL\nBBBBFFFLRR\nBFBBFFBRLL\nBFBBFBBRLR\nFFFBBFBRRR\nBFFBBBFRRR\nBFBBFBBLRR\nFBBFFBBLRL\nFFFBFBBRRL\nBFFFBFBRRR\nFBBBFFBLRR\nBBFFBBBLLR\nBFFBBBBRLR\nBBBBFBFRRR\nBBBBFFFRRL\nBBFFBBBRRL\nFFBBBBBRRL\nFFFFBBFRRL\nBFFFFFBLLL\nFFBFFBBLRL\nFFFBBFFLRL\nBFBFBFFLLR\nFFFFBFFRRL\nFBBBBFFRLR\nFBBBBFBRRL\nFBBBFBFLLR\nFBBBBBBRRR\nFBBFFFFRRL\nFBFBFFFRLL\nBBFFFBFRLL\nBFFBFFFRLL\nFFFFBFFLRL\nFBBFFFFLLR\nBBBBFFBRLL\nFBFBFBBRLL\nBBFBBBFLLL\nFFBFBBBRRR\nBFBBFBFRRR\nBFBFBBFLRR\nBBFBBBFLRL\nBBFFFBBLRL\nFBFFFBFRLR\nFFBFFBBRLL\nFFBFFBFRLR\nBBBFBFFLLR\nBBFBFBBLRR\nFBBBBFFLLR\nBFFBFBFLRL\nFFFBFFFLRR\nFBBFBBBRRL\nFBFBBBBRRL\nBFBFBBFLLL\nBFBFBBFRLL\nFBFBFFBLLR\nFBFFFFBRLR\nBBFBBBFRRL\nBBBFFFFLLL\nFFFFBFBLRL\nFFBFFFBLLR\nFFFBBBBRRL\nFFBFFFBLRL\nBBBBFBFRRL\nFFFBFFFLLR\nBBBBFBBRLR\nBBFBBBBRRL\nFBFBFFBRLL\nFBBBFBFRLL\nBFFBFBBRLR\nFBFBFBBLRR\nFBBFFFBLRR\nFFFBBFFRLR\nBBBFFFBRLR\nBBFFBFFLLL\nBFFFFBBLLR\nBFBFBBFLRL\nFFBFBFBRLL\nFBBFBFBRRL\nBBBFBFFLLL\nFFBBFFFRRR\nBFFBBFBLLL\nBBBFFBFLLR\nFFFBFBBLLL\nFFBFBFFRLL\nBFFBBBBLRL\nFBFBBFFLRL\nFBFFBFBLRL\nBFBBBBFLRR\nBBBFBFFRRR\nFBFBBFFRLR\nBFBBFFFLLR\nBFFFBFBLRR\nFBFBFBBRLR\nFFFFFBFRLR\nFFFFBBBRRL\nFBBFFBFLLL\nFBBBBBBRLR\nFBBFFFBRLR\nFBBBFBBRLL\nFFFBFBFRLL\nBFBFBBFLLR\nFFBFFBFRRL\nBBFBBBFRLR\nFFBBBBBLRL\nBBFBBFBRLL\nFFBFFFBRLL\nFFBBBFFRLR\nBFFBBBFLRL\nFFBFBFBRRL\nFBBFFFBRRR\nBBFBBFFLLL\nFBFFFFFRLL\nFBFFFFBLRL\nFFFBFFBRRR\nBBBFBFBRLL\nBBBBFBBRLL\nBFFBFBBLLR\nBBBFFFBLRL\nBFFBFFBRLL\nBFFBBFBRRL\nFBFFFFFRRL\nFFBBFBBRRR\nBBFFBBFLLR\nFFBFFBBLRR\nBBBFBFFLRL\nBBBBBFFLLL\nFFBBBBBLRR\nBFFBFFBRLR\nBFFBBFBLRL\nBBFFBBFRRL\nFFFBFFBRLR\nBFBFBBBLLR\nBFFBFFFLLL\nFBBFBBBRLR\nBFBFBBBRRL\nFBFBFFBRRL\nBBBFBFBLRL\nBFFFBBBLLR\nFBBBFBFLRR\nFFBBBBBRLR\nFFBFFBBLLL\nBBFFBFBLRL\nBFBFBFBRRL\nBFBFFBFLRR\nFFBBBFBLLR\nBFBFBBBRRR\nFBFFBBFLRR\nBBBFBFFRLR\nBFFFFBFRLL\nFFFFBBFLRL\nFBBBBFBLLR\nBFBFFFFLLR\nFFBBFBBRLL\nFBFBBFFRRL\nBFFFBBFLRR\nBBBFFBFLRR\nFBBBFFFLRR\nBBFFFBFRLR\nFFFBFBBRLR\nFFBBFBBLRL\nFBFFBBBRRR\nBBFBBBBLLR\nBFFFFFBRLR\nBBFBFBFRLR\nFBFBBBFLRR\nBBFFFBBLLL\nBBBFBFBLLR\nBFFBBFFLRL\nFFBFFFFRLR\nBFFFFFBRRR\nFFBBBFBLRR\nBBBFBBBLRR\nBBBBBFFLRL\nFBFFFBFRRR\nBFFFFFBLLR\nFFBBFBFLRL\nBBFFFBFRRR\nBBBFBFBRLR\nBBFBBFBLRL\nFFFBFFBLRL\nFFFBFFBRLL\nBBBBFFFRLL\nFBBFFFFLRR\nFFBBFFBLLR\nFBFFBFBRLL\nFFBFBFFLLL\nBFBBFFBLRR\nBFBFFFBRLR\nBBBFFBFRRL\nFFBBFBBRLR\nBBFFFFBRLL\nBBFFBFBLLR\nBBFFBFBRRL\nFBBBFBBRRL\nFFFFFBBRLL\nFBFFFBFRRL\nFBBFBFFLRL\nFBFBBBFRLL\nBFFFBFFLRR\nBFFBBFBRRR\nBFBBFBBLLL\nBBFBFFFLRL\nBFBFFFFRRR\nFBBFBBBLRR\nFFBBBBBLLR\nFFFFBBFRRR\nFFBBFFBRRR\nBBFFFBBLLR\nBFFBFFBLLR\nBBBFFFFRLL\nFFFBFBFLLR\nBBFBFFBLRL\nFFBBBFBRRL\nBBFBBBBRRR\nBBFBBFBRRR\nFFFFBFBRLL\nFFFBFFBLLR\nFFBFBBBLLR\nFBBBFBFLRL\nBFBBBBBLLL\nBFBBFBFRLL\nBFBFBBBLRR\nFFBFBFBLLL\nBFBFFFBLLR\nBBBBFBBRRL\nFFBFFBFLRR\nFBFBBFFLLL\nBFBFBBBRLL\nBFBFFFBRRR\nFBBFBBFRRR\nBFFBFBFRLL\nBBFFFFBRRL\nBFBFBFBLRL\nFBBBFFBRRR\nFFFFBBBLLR\nBBBFFFFRRR\nBBBFFFFLRR\nFFBFBBFLLL\nBFBFBFFRRR\nBBFFFBBRLR\nFBBBBBFLRR\nFBFFBFBLLR\nFFBFFFBLLL\nBFFFFBBLRL\nBBBFBBBRRR\nBBBFFFBRRL\nBFFFFBBLRR\nBBFFBBBRLL\nBFBFFFFLRL\nBBFFFFFLRR\nBBFFFBFLRR\nFBFFBBFRRL\nBFFFBBBLLL\nBFBBBFFRRL\nBFFFBFBLRL\nFBBBBFFRLL\nBFBFBBBLLL\nBFBBFFBLLR\nBBBBFBBLLL\nFBFBFBFLRR\nFBBBFFFRLR\nBFFBFBFRRL\nBFBBFFFRLR\nFBBBFFFLRL\nFBBBBFFLRR\nFBFFFFBLLL\nBBBFFBBRLL\nFBBFBFFLLL\nBFFBBFBRLL\nBFFFFBFRLR\nFFFBBFFRRR\nFFFBBBFRLR\nFBBFFBFRRR\nFBFFFFBRRR\nBFBFBFBRLL\nBBBBBFFRLL\nBFFFFBFLLL\nBBFFBBFRRR\nBFBFFFBLLL\nFFFBFBFRRR\nFBFBBFBRRL\nBFBFFFBRRL\nFFFBBBBRRR\nBFBFFBBLLR\nFBBBFBBLLR\nBBFBBFBLLR\nBFFFFFFLLL\nFBBFBFFRLR\nFFBBBBFLLL\nBFBBFBFLRL\nBFBFBFBLLL\nFBBBFBBLLL\nBFBFBFBRRR\nFBFBFFFLRR\nFBFBBFBLLL\nFBFFFFBLRR\nBBBFFBFRLL\nFFFBFFBRRL\nBBFBFBFRRR\nFBBFFBFRLL\nBBBFBBFRRR\nFBFBBFFLRR\nBBFBBBBLLL\nFFBFFBBLLR\nFBBBFFFRRR\nFFFFFBBLLL\nFBFFBBBRRL\nBFFBBBFRLL\nBFFFBFFLLR\nFBFFBBBLLL\nFFFBBBBRLR\nBFBBBFFLLR\nFBFBBBBLLR\nFBBFBFBRRR\nBBFFBFFRRR\nFBBFFFFLRL\nFBFBBBBLRR\nFFBBFBFRRR\nFBFBBFBRLR\nBBFBFBFRRL\nFBBBBBFLLL\nFBFFBFFLLR\nFBFBFBFLLL\nBFFBFBFLRR\nFBBBBBFRLL\nBFFBBBFRLR\nBBFFFFFLLL\nFFFFBBFRLR\nBFBBBBBLLR\nBBFFFBBRLL\nFBFFFFFLRR\nBBBFFBBRRR\nFFFBFFBLRR\nBFFFFFFRLL\nBBFFFBFLLR\nBFFBBFFLLL\nFBBBFFFRRL\nBBBBFBFLLL\nFBBFFFFRLL\nFBFBBFBRRR\nBFFFFFFRLR\nBFBFFFFLLL\nFBFBBFBLLR\nBFBBFBFLLR\nBFBBFBBLRL\nBFFFBFFRLR\nBBFBBFFRRR\nFBFBFBFRLL\nFFBBFBFRRL\nBFFFBFFLRL\nFBFFBBBLRL\nBBBFFBFLRL\nFFBBBFBRRR\nBFFFBFBRRL\nFFBBFBFLLR\nBFFBFFFLRL\nBBBFFFFLRL\nFFBBFFBRLR\nBFFBFBBRRR\nBFFBFFBLRR\nBFFFBBBLRL\nFFBFBFFRRR\nFFBFBBFRRL\nFFBBBBFRLR\nBBBFBBFLRR\nBFBBFFFLRL\nBFBBBBFRRR\nFFBFFFBLRR\nFFBFBFFLLR\nFBFFBFBRRL\nBFFFFFFLRR\nFBBBBBBLRR\nBBFFBBFLLL\nBFBBBBFRRL\nFFBFFFFLLR\nBBFFFBFLLL\nFFBFBFFLRR\nFFBBBBFLRL\nFFFBBBFRRR\nFBBFFBFLRR\nFBFBBBBRLL\nFFFBBBBLLL\nFFBBBBFRRL\nFBBBBBBLLR\nFBBFBFFLLR\nBFBBFBFRRL\nBBFFBFBLRR\nFBFFBFFRRR\nFFFBBBBRLL\nBFFFFFFLLR\nBFFFFBFLLR\nFFFBBBFRRL\nBFFBFFFLLR\nFBFFFFFLLL\nBBBBFBBLRR\nBBFFBFFRRL\nBFBBFFBLRL\nFBBBBFFRRR\nFFFBBFBLLR\nFBBFFFFRLR\nFFFBFBBLRL\nBFBBBBFLLR\nBBFFFBBRRR\nBFBFBBFRRR\nFFFBFFFRRL\nBBFBFBFRLL\nFBFFBFFRLR\nBFFBFFBLLL\nFFFFBFBRRR\nBFFBBFFRLR\nFBBBFBBLRL\nFBFFBBBRLL\nFBBBBBFRLR\nFBBBFFBLLR\nFBFBBFFRLL\nFFBBBFFRRL\nBBFBBBBLRR\nBFFFFBBRRL\nBFFFBFFRRL\nFBBFBBFRRL\nBFBBFFBRLR\nBFFFFBFLRL\nBBFFFFBLLR\nFBFFFFFRRR\nFFFFBBBRLL\nFFFFBBFLLR\nBBBFBBBLLR\nFFBFFFFRLL\nFBBBFFFLLR\nFFFFBBBLRL\nFBFBBBFLLL\nFBFFFBFLLL\nBBBFFBBLRR\nFBBBFFFLLL\nBBFBBFFRLR\nFFFFBFFLLL\nBBFFBFFLLR\nBFBBBBFRLL\nBFFBBFFRLL\nBBFFFFBRLR\nFBBBBFBRLL\nBFBBFFBLLL\nFBBFFFFLLL\nFFBFFBBRRR\nFBFFBBBLLR\nBFBBBFBLRL\nBBFFBBFRLR\nFFBBBFFRRR\nBBBBFBFRLL\nBFFFBBBRRR\nBBFFFFFRLR\nFBFBFFFLLR\nBBFFBBFRLL\nBFFBBFFLLR\nFFFFBBBRRR\nFFFBFBFRRL\nBBBFBBFRRL\nFBBBFBBRLR\nFBFBFFFRRR\nBFFBBBBLLR\nBBBFBFBLRR\nFBFBBFBLRR\nBBBFFBBRLR\nFBFBFBBLRL\nBBBFFBBLLR\nBBFBFBBRLL\nFBBBFFBRLL\nFFBBFFFRLL\nFBFFBFFRRL\nBBBBFFBRRR\nFBFBFFFLLL\nFFFFBBFRLL\nBFFBFFFRRR\nBBFFBFBRLR\nFFBBBFBRLL\nBBFBFFFLLL\nFBBFBBFRLR\nFFFBFFFRLL\nFBBFFBFRRL\nBFBFFBFLRL\nBBBFFFFRRL\nBBFFBBBRRR\nFFBFBFFRLR\nFFBBFFFRLR\nFBFBFBBRRL\nFFBBFBBLLR\nFBFFFFFRLR\nBBBBFBBLRL\nBBFFBFFRLL\nFBBBFBFLLL\nBBBFBFBLLL\nBFFBFFFLRR\nBFBFFBFRLL\nBFBBBBFLRL\nBBBBFFFLRL\nFFFBFFBLLL\nFFFFBFBLRR\nFFFFFBBRRR\nFFFBFBBLRR\nBFFFBBFRRL\nFFBFBBFLRR\nBBFBBBBRLL\nFBBBBBFRRR\nBFFFFBFLRR\nBFBFFBBRRL\nFBFBBFBLRL\nBBBFFBBLLL\nFFBBBFFLRR\nBBBBFBFLRL\nBBBBFFBLLL\nBFFFBBBRLL\nFBBFFFBLLR\nBFBBBFFRLL\nFBBFFBFRLR\nBBFBBFBRRL\nBFBBFBBRLL\nBBFBFFFRRR\nFBBBFFBRLR\nBBFFBBBLLL\nBFFFBFBLLR\nBBFBFFBRLR\nFFBFFFBRRL\nFFBFBFBRLR\nBBFFBFBLLL\nBFBFBBBRLR\nFBFFFBFLRL\nBFBFFFFRLR\nBBFFFFFRLL\nBBBFFFBRRR\nFBFFBBFRRR\nFFFBBFFLLR\nFFFBFBFRLR\nFFBBBBFLRR\nBFFFBFBRLR\nFFBFFBBRLR\nFBBFFFBRLL\nFBBFBFFLRR\nBFFFFFFRRR\nBBBFBBBRLL\nFBFFFBBRRL\nFFBBBFBLRL\nFBFFBFBLLL\nFFFFBFFRLR\nFBFFBFFLRL\nFFBFBFFRRL\nFBBBFFBLLL\nBFFFFBBRRR\nBBBBFFBLLR\nFFFFFBBLRL\nFFBBBFFLLR\nFBBBFFFRLL\nFFBFFBFRRR\nBBBBFFBRLR\nFFBBFBFLRR\nBFBBBBBRLL\nBFBBBBBLRL\nFFBFBBFRLR\nFFBFBBBRLL\nBFFBBFBLLR\nBFBFFFFRLL\nBBFBBFFRRL\nBFBFFBFRLR\nFFBBFFFLRL\nFFBBBFFLLL\nBFFBFBFLLL\nBFBFBFBRLR\nFBBFBFBLLR\nBFBFFBBLRR\nFFFFBFFLRR\nBBFBBFBLLL\nFBFFFFFLRL\nBBBBFBFRLR\nBFFFBBFRRR\nBBFBBFFLRR\nBFBBBFBRLL\nBFFBFFBLRL\nBFBFFFBLRR\nBFFFBFFRRR\nFBFFFBBLLL\nFBFBBBBLRL\nFBFBFFFRLR\nBBFFBBFLRL\nBFBFBFBLLR\nFBFFFBFLRR\nBFFBFBBRRL\nFBFBBBFLLR\nFBFBFFBLRL\nBBFBFBBRRR\nFBBFFBBLRR\nBBFFFFBLLL\nFBFFBBBRLR\nFBFFFBFLLR\nBFBBFFFLLL\nBBBBFBFLRR\nBFFBFBBRLL\nBFFFFFFRRL\nBFBFBFFRRL\nFFBFBFBLRR\nFFFBFBFLRR\nFFFBFBBRRR\nFBFFFBBRLR\nFFBBFFBRRL\nBBFBBBBRLR\nFFFBBFBRLR\nFBFFBBFLRL\nBBBFFFBRLL\nBBBFBBBRLR\nFFBFFFFRRR\nFBBFBFBLLL\nBFBBBFBRRR\nBFBBFFBRRL\nFFFBBBFLLL\nFBBBBFBLLL\nFFBFBFBLLR\nBFFBFFFRLR\nBBBBFBFLLR\nFBBFBBFLLL\nFBFFFBBLRR\nFFBFBBFRRR\nFBFBFBBRRR\nFFBFBFBRRR\nFFBBFBFRLL\nFBFBBBBLLL\nBFBFFBBLLL\nBBBFFFFRLR\nBBBFBFBRRR\nBFBFBFBLRR\nBFBFBBFRLR\nBFBBBFFLLL\nFBBFFBBRRR\nBFFFFFBLRR\nBFFBFBFRLR\nBBFFBFFRLR\nBFBBBBBLRR\nFBFFFBBLRL\nBFFBFBFRRR\nBFFFFBFRRL\nFFBFBBBLLL\nFBBBFBFRLR\nFFFBBFBLLL\nFBFBBBFRLR\nBFBFFFBRLL\nBFFBBBBLRR\nBBFFBFFLRL\nBBBFBBFRLL\nBBBFFFBLRR\nFBBFFBBRLR\nFBBFBBFLRR\nBBFBFBBRRL\nFFBBBBBLLL\nBFBBFBBLLR\nBFBBBFFLRR\nBBBFFFBLLL\nFBFBBBBRLR\nFBFBFFBLRR\nFFFBBBFLRL\nBBBFFBBLRL\nFBBFBFBRLL\nBBBBFBBLLR\nFFBBBBBRRR\nBBBFBBFLRL\nBFBBBFBRLR\nFFFBFFFRRR\nBFFFBBFRLR\nFBFFFFBRLL\nBFFBFFBRRL\nBBBFBBBRRL\nFFBFFBFRLL\nFBFBBFFRRR\nFFBFFFBRLR\nFFFFBFFLLR\nFFBBFFFLLL\nFBFFFBBLLR\nFFBFBBFLRL\nBFFBFBBLLL\nFBBBFBBLRR\nFFFBFBFLLL\nFBBFBFBLRL\nFFBBFFFRRL\nBFBFBFFRLL\nBFFFFBFRRR\nBBBBFFFRRR\nBFFBFFBRRR\nFFFFBFFRRR\nFFBBFBBRRL\nFBBFBBBRLL\nBBBBFFBLRL\nFBBFBBFRLL\nBFFBBBBRLL\nBFBBBFBRRL\nBBFBFBFLLR\nFFFBBBBLLR\nBFFBBFFLRR\nBBBFBBBLRL\nFBBFBFFRRL\nBBFBFFFRRL\nBBFBFFBLRR\nBBBFBBFRLR\nFBBBFBFRRR\nBBFBFBFLRL\nFBBFBBFLRL\nFFBFFFFLRR\nBFBBFBBRRL\nFBBBBFFRRL\nFBFBFFBRRR\nBBBFFBFLLL\nFFFBFFFLRL\nFBFBBBFRRR\nBBBFBFFRRL\nBFBFFFBLRL\nBBBFBFFLRR\nBFFFBFFLLL\nFFBFBBFLLR\nFFBFBBFRLL\nFBFBBBFLRL\nBFFBBBBRRL\nFBBBFBFRRL\nFFBBBFBLLL\nBFBBBFFLRL\nBBBBBFFLLR\nFBFBFFFRRL\nBFFBFBBLRR\nBBFFFFBLRR\nFBFFBFBLRR\nFBFFBBFRLR\nFFBBFFBLRL\nFFFFFBBLRR\nBBBBBFFLRR\nBFBBBBFLLL\nFBBFBFFRRR\nFFFFFBBLLR\nFFBFFBFLLL\nFFBFBBBLRR\nFFBBFBFRLR\nBFBBBFFRRR\nFBFFBFBRLR\nBBBFBBFLLR\nBFBBFBFLRR\nFBBBFFBLRL\nBFBBBBBRLR\nFBBFBBFLLR\nBFBBBFFRLR\nFBBBBBFLRL\nBFBBBBBRRR\nBFFBBBBRRR\nBBFBFBFLRR\nBFFBBBBLLL\nBBFFFBFLRL\nBFBBFBFLLL\nFBFFFFBRRL\nFFBBBBFRRR\nFFBFBBBRLR\nBBFBFBFLLL\nFBFFBFBRRR\nFFFBBBFLLR\nFFFBFBFLRL\nBFBFBBBLRL\nFBBFFBBLLL\nBBBFBFBRRL\nFBFFFBBRRR\nBFFFBFBLLL\nFFFFBFBLLL\nFFFBBFBRLL\nFBBFFFBRRL\nFFBBFBFLLL\nFFBBFFBRLL\nFBFBFBFLLR\nBBFFFFBLRL\nBFBFBBFRRL\nFFFBFBBRLL\nFBBFFBBRLL\nBBFBFBBLLR\nBFFFBFFRLL\nBFBFBFFLRR\nFBFFFFBLLR\nFFFBBFBRRL\nFFFBBBBLRL\nFFBBFFBLRR\nBFFFBBFLLL\nFFFBFFFLLL\nFBFBFBFRRR\nBFBBBFBLLR\nBFFBFFFRRL\nFFFFBBFLRR\nFBFBFBFRRL\nBFBBFBBRRR\nBFBFFBBLRL\nFBFBBFBRLL\nFBBBBFFLRL\nFFBFBFFLRL\nFBBFBBBRRR\nFBFBFBFRLR\nFFBFFFFLRL\nBBFBFBBRLR\nBFBFFBBRLL\nBBFFBFBRRR\nBFBBBBBRRL\nBBFBBBFLLR\nBBFFBBBRLR\nBBFBFFFLLR\nFFFFBBFLLL\nFBBFFFFRRR\nBBFBFFBRLL\nFFBBFBBLLL\nBFBBFFFRRR\nBFBBFFFRLL\nBFFBBFFRRL\nBBFBBBFRRR\nBFFFBFBRLL\nBFFFBBBRRL\nFBFBBFFLLR\nFBFFBBFRLL\nBBFBBFBLRR\nBBBFFFFLLR\nFBBFBBBLLL\nFBFFBBFLLL\nBFFBFBBLRL\nBBFFFFFRRL\nFFBBBBBRLL\nFBFFBFFLLL\nFFFFFBFRRL\nBBBBFFBRRL\nFBBFBFBRLR\nBBFBBFBRLR\nBFFBBFBLRR\nBFFFFBBLLL\nBBBBFBBRRR\nBBBFFFBLLR\nFFBFFFFLLL\nFBBFFBFLLR\nBBFFFFFLRL\nFFFFBBBLRR\nFBBBBFFLLL\nFFBBFFBLLL\nBBFBFFBRRR\nFBFBFBFLRL\nFFFBBBFLRR\nBFBBBFBLRR\nFBBBBBFLLR\nBBFFBBBLRL\nFFBFFBFLLR\nFFFBBBFRLL\nFBFFFBBRLL\nBFFBFBFLLR\nFFBBBFBRLR\nBBFFFBBLRR\nBFFFBBFLRL\nFFFBBFFLRR\nBBBFBBBLLL\nBBFBFFFRLL\nFFFBBFFRRL\nBFBBFFFLRR\nBBFFFFBRRR\nBBFFFFFLLR\nBBFBBBBLRL\nFFBFBBBLRL\nBBFFFFFRRR\nFBFBFFBLLL\nBFFBBBFLRR\nFFFFFBBRRL\nBFFFFFBRRL\nBBBFBFFRLL\nFBFFBBFLLR\nBBBFFBFRRR\nBBFBFFFLRR\nBBFFBBFLRR\nBFBFFBFRRL\nFBBBFBBRRR\nBBFFBFFLRR\nBBFBFFFRLR\nFBBBBBFRRL\nBFFFBBFLLR\nBBFBBFFLLR\nFBFFFFFLLR\nFFFBBFFRLL\nBBFBBFFRLL\nFFFFBBBLLL\nBFBFFBBRLR\nFBBFBBBLLR\nBFFBBBFLLR\nBFFFFFFLRL\nBFFBBBFLLL\nBFBFFBFLLL\nBBFBFFBLLL\nFFBBBBFRLL\nFBFFBFFLRR\nBBBFFBBRRL\nBFFBBFFRRR\nBBBBFFFLLR\nBFBBFFBRRR\nFBFFFBFRLL\nFFBBBFFRLL\nFBBBBFBLRR\nFFFBBFBLRR\nFFBBFFFLRR\nBBFBBBFLRR\nFBFBFFBRLR\nFBBFFBBLLR\nBBFFBBBLRR\nBBFBFFBLLR\nFBBFFFBLRL\nBFBFBFFLRL\nFFFBFFFRLR\nFBFBFFFLRL\nBBBFFBFRLR\nBBBFBBFLLL\nFBFBFBBLLR\nBFBFBFFLLL\nFFBFFFBRRR\nBFBFBFFRLR\nFFFBBBBLRR\nBBFBBFFLRL\nFFBFFFFRRL\nBFBFFBFLLR\nFFBBBBFLLR\nFBFBBBBRRR\nFFBFFBFLRL\nFBBBBBBRLL\nBBFBFBBLLL\nFBBFFBBRRL\nFBBBBBBRRL"},be9b:function(n,e,a){"use strict";a.r(e),e["default"]="You notice that the device repeats the same frequency change list over and over. To calibrate the device, you need to find the first frequency it reaches **twice**.\n\nFor example, using the same list of changes above, the device would loop as follows:\n\n- Current frequency  `0`, change of `+1`; resulting frequency ` 1`.\n- Current frequency  `1`, change of `-2`; resulting frequency `-1`.\n- Current frequency `-1`, change of `+3`; resulting frequency ` 2`.\n- Current frequency  `2`, change of `+1`; resulting frequency ` 3`.\n- (At this point, the device continues from the start of the list.)\n- Current frequency  `3`, change of `+1`; resulting frequency ` 4`.\n- Current frequency  `4`, change of `-2`; resulting frequency  `2`, which has already been seen.\n\nIn this example, the first frequency reached twice is `2`. Note that your device might need to repeat its list of frequency changes many times before a duplicate frequency is found, and that duplicates might be found while in the middle of processing the list.\n\nHere are other examples:\n\n- `+1, -1` first reaches `0` twice.\n- `+3, +3, +4, -2, -4` first reaches `10` twice.\n- `-6, +3, +8, +5, -6` first reaches `5` twice.\n- `+7, +7, -2, -7, -4` first reaches `14` twice.\n\n**What is the first frequency your device reaches twice?**"},c0b8:function(n,e,a){"use strict";a.r(e),e["default"]='As you look out the window and notice a heavily-forested continent slowly appear over the horizon, you are interrupted by the child sitting next to you. They\'re curious if you could help them with their math homework.\n\nUnfortunately, it seems like this "math" [follows different rules](https://www.youtube.com/watch?v=3QtRK7Y2pPU&t=15) than you remember.\n\nThe homework (your puzzle input) consists of a series of expressions that consist of addition (`+`), multiplication (`*`), and parentheses (`(...)`). Just like normal math, parentheses indicate that the expression inside must be evaluated before it can be used by the surrounding expression. Addition still finds the sum of the numbers on both sides of the operator, and multiplication still finds the product.\n\nHowever, the rules of **operator precedence** have changed. Rather than evaluating multiplication before addition, the operators have the **same precedence**, and are evaluated left-to-right regardless of the order in which they appear.\n\nFor example, the steps to evaluate the expression `1 + 2 * 3 + 4 * 5 + 6` are as follows:\n\n```\n1 + 2 * 3 + 4 * 5 + 6\n  3   * 3 + 4 * 5 + 6\n      9   + 4 * 5 + 6\n         13   * 5 + 6\n             65   + 6\n                 71\n```\n\nParentheses can override this order; for example, here is what happens if parentheses are added to form `1 + (2 * 3) + (4 * (5 + 6))`:\n\n```\n1 + (2 * 3) + (4 * (5 + 6))\n1 +    6    + (4 * (5 + 6))\n     7      + (4 * (5 + 6))\n     7      + (4 *   11   )\n     7      +     44\n            51\n```\n\nHere are a few more examples:\n\n- `2 * 3 + (4 * 5)` becomes **`26`**.\n- `5 + (8 * 3 + 9 + 3 * 4 * 3)` becomes **`437`**.\n- `5 * 9 * (7 * 3 * 3 + 9 * 3 + (8 + 6 * 4))` becomes **`12240`**.\n- `((2 + 4 * 9) * (6 + 9 * 8 + 6) + 6) + 2 + 4 * 2` becomes **`13632`**.\n\nBefore you can help with the homework, you need to understand it yourself. **Evaluate the expression on each line of the homework; what is the sum of the resulting values?**'},c8f2:function(n,e,a){"use strict";a.r(e),e["default"]="acc -7\nacc +2\nacc +20\nacc +14\njmp +191\nacc +47\nnop +339\nacc +49\njmp +104\njmp +629\njmp +374\nacc +24\njmp +220\nnop +474\nacc +25\njmp +340\nacc +16\nacc +3\nacc +41\njmp +566\njmp +296\nacc +15\njmp +452\nacc +21\njmp +129\nacc +10\nacc -8\nacc +39\njmp +396\nacc +5\nacc -4\nacc +0\njmp +496\nnop +181\nacc +48\nacc +7\njmp +1\njmp +370\nacc +16\nacc -18\nacc +47\nacc +48\njmp +99\nnop +17\nacc +25\nacc -15\njmp +285\nnop +545\nnop +147\nnop +479\nacc -4\njmp +386\nacc +36\nacc -12\njmp +50\nacc +37\nnop +133\nacc +11\nacc +20\njmp +32\njmp +1\nnop +210\nacc -15\nacc -6\njmp +446\nacc +25\nacc +1\nacc +17\nacc -4\njmp +355\nacc -4\njmp +292\nacc +16\nacc +44\nacc +26\njmp +157\nacc -18\nacc +15\nacc -8\nacc -3\njmp +46\nacc +30\nacc +16\njmp -7\nacc +34\njmp +515\nacc +11\nacc -8\nacc -9\nacc -3\njmp +548\njmp +278\nnop +332\nacc -19\nacc +49\njmp +536\nacc -9\nacc +46\njmp +124\nacc +41\nacc +47\nacc -5\nacc -13\njmp +41\nnop +178\nacc +12\nacc +45\njmp +461\nacc +37\nacc +12\nacc +38\njmp -68\nacc -6\nnop +494\nacc -9\njmp -63\nacc +42\nacc +16\nacc +30\njmp +70\nacc +13\njmp +1\nacc -18\njmp +528\nacc +48\njmp +493\nnop +402\njmp +381\nacc -8\njmp +372\nacc +20\nacc +25\njmp +425\nacc -10\njmp +510\njmp +439\nnop +78\nacc +36\nacc +7\nnop +281\njmp +504\njmp -108\nacc +40\njmp -122\nacc +23\nacc -2\nacc +7\njmp +370\nacc +25\nnop -5\nacc +33\nacc +37\njmp +70\nacc -6\nnop +336\njmp +34\njmp +1\nacc -18\njmp +473\njmp +1\nacc +20\nacc +4\nacc +25\njmp -87\nacc -12\nacc +47\nacc +49\njmp +323\njmp +1\njmp +1\njmp +167\nacc -10\nacc +45\njmp +355\nacc +32\nacc +38\nacc +2\njmp -93\nacc +8\nacc +20\nacc +4\nacc -1\njmp +108\nnop +164\nacc +41\njmp +440\nacc -16\nacc +47\njmp +355\nacc -13\nacc +29\nacc +50\njmp -101\nacc -8\njmp +316\nacc +27\nacc +31\nnop -29\njmp +1\njmp +250\nacc +12\nacc -13\njmp +73\njmp +72\nacc +36\nacc +44\njmp +1\njmp -33\nacc -18\nacc +16\nacc -8\nacc +6\njmp +104\njmp +295\nacc +10\nnop -80\njmp +74\nacc -13\njmp +1\nacc +22\nacc +50\njmp +280\njmp +265\njmp +278\nacc +46\nacc -14\nacc -17\njmp -19\nacc +39\nacc +31\nacc -11\njmp +400\njmp +80\nacc +0\nacc +27\nnop +209\njmp -184\nacc +12\nacc +21\nacc +23\njmp +352\nacc +29\njmp -5\nacc +15\nacc +7\njmp +6\nacc +31\nacc -5\nnop +83\nacc +31\njmp -239\nacc +8\nacc -2\nacc +49\nacc -12\njmp -52\nacc -15\nacc -14\njmp +126\njmp +385\nacc +30\nacc -5\nacc +6\njmp -187\nacc +39\nacc +40\nacc +0\nacc +6\njmp +24\nacc +20\njmp +131\njmp -127\nacc +8\nacc +30\njmp -265\nacc -2\njmp -265\nacc +22\nacc -19\nacc -9\nnop +10\njmp +148\nacc -14\nacc +38\nacc +50\nacc -7\njmp +197\nacc +11\nacc +22\njmp +201\njmp -155\njmp -32\nacc +48\nnop -50\njmp -99\njmp -5\nacc +11\nacc -18\njmp -186\nacc +6\nacc +43\njmp +159\njmp +249\nacc +44\nacc +29\nnop +313\nacc +23\njmp +311\njmp +152\nacc +0\nacc +41\njmp -251\njmp +102\nnop -17\nnop +176\njmp +40\nacc +28\njmp -21\nacc -4\nacc -10\nacc -19\nacc -15\njmp +23\nnop +144\nacc +9\nacc +18\njmp +141\nacc -19\nacc -10\nacc +48\njmp -7\nacc +46\nacc -9\njmp -174\nacc +30\nacc +30\njmp -201\nacc +34\nacc +24\nacc +37\nacc +44\njmp -158\nacc +4\nacc +39\njmp -52\njmp -329\njmp +68\nacc +25\nnop -105\nacc -15\nacc +34\njmp -6\njmp +1\nacc +1\njmp +163\nnop -285\nacc +8\nacc +48\njmp +143\nacc -3\nnop -269\nacc -16\njmp -310\nacc -5\njmp -304\nacc +45\nnop -231\njmp +1\njmp +245\nnop -243\njmp +187\nacc -6\nacc +7\nacc +17\nacc +6\njmp -111\nacc +24\nacc -10\nacc +21\njmp -97\njmp +1\nacc -12\nacc +10\njmp +127\nacc +0\njmp -211\nacc -11\nacc +36\nacc +45\nacc -19\njmp -182\njmp -366\nacc +38\nacc -11\nacc +32\njmp -260\nacc +6\nacc +31\njmp +3\nacc +5\njmp +101\njmp -64\nacc +48\nacc +5\nnop +40\nacc -13\njmp +95\nnop +76\nacc +44\nacc +43\nacc +43\njmp +196\nacc +34\njmp +161\nacc +5\nacc +45\nacc +7\njmp +20\nacc +13\njmp -127\nacc +5\nacc +18\njmp -239\njmp -76\nnop +214\njmp -284\nacc +10\nacc -8\njmp -81\nacc +48\nacc -3\njmp -55\nnop -288\nacc +37\nacc +1\nacc -12\njmp +1\nnop +91\nacc +20\nacc +18\njmp +4\nacc -7\nacc -10\njmp -229\nnop -230\nnop +45\nacc +37\njmp +127\njmp +69\njmp -153\nacc -15\nacc -19\nacc +32\njmp -33\nnop +164\nacc +32\njmp -133\nacc +20\nacc -8\njmp +8\nacc -11\nnop +82\nacc +7\nacc +40\njmp +79\nacc +0\njmp +159\nacc +4\nacc -8\nacc +20\nnop +143\njmp -351\nacc -7\njmp +78\nacc +0\nacc +4\njmp +20\njmp -3\nacc +2\nacc +23\njmp -256\nacc +33\njmp -473\nacc +29\nacc -13\njmp +77\njmp +158\nacc -16\njmp -10\njmp -181\njmp -135\nnop -95\nacc +46\nacc +39\nacc -3\njmp -94\njmp -67\nacc +49\nnop -78\nnop -9\njmp +107\nacc -19\nacc -1\nacc +0\nacc -4\njmp -189\nacc +11\njmp -106\njmp -200\njmp +122\nacc +8\nacc +48\nacc +15\nacc +0\njmp -493\nacc +13\njmp -8\nacc +36\nacc -10\njmp +1\nacc +9\njmp +7\njmp +85\nacc +22\nacc -8\nnop -124\njmp -517\njmp -338\nacc +39\nnop -438\nacc -11\njmp +69\nacc +8\nacc +34\nacc +34\nacc -9\njmp -205\nnop -528\njmp -495\nacc +47\nacc +40\nacc +30\njmp -328\nacc -2\nacc +41\njmp -475\nacc +42\nacc +48\nacc +2\nacc +7\njmp -415\nnop -249\nacc -3\njmp +65\nacc +23\nnop -4\njmp -254\nacc -12\nacc +22\nacc +27\njmp -176\njmp -408\nacc -15\nacc +14\nacc +30\nacc +0\njmp -363\njmp -426\nacc +38\nnop -425\njmp -440\njmp +1\nacc +22\njmp -63\njmp -406\nnop -445\nacc -5\nacc +34\nnop -425\njmp +65\nacc +33\njmp -91\nacc -12\njmp +1\njmp -541\nnop -489\njmp -490\nacc +20\nacc +20\nacc +38\nacc -18\njmp -548\nacc +43\nacc -7\njmp -351\nacc -9\nacc +50\nacc +1\nnop -587\njmp -230\njmp +1\nnop +43\njmp -65\nacc +31\nacc +5\nacc +1\njmp -105\nnop -477\nacc +21\nnop -92\njmp -263\nacc +28\njmp -265\njmp -311\nacc +2\nacc +23\nacc +50\njmp -4\nacc +42\nacc +42\nacc +31\njmp -167\nacc +49\nacc +46\njmp -73\nnop -135\nacc +43\njmp -236\nacc -14\nacc -3\njmp -406\nacc +2\nacc -3\nacc +47\njmp -420\nacc -8\nacc +18\njmp -604\njmp -218\nacc +37\nacc -16\nnop -278\nacc -15\njmp -214\nacc -6\nacc +18\nacc +7\nacc +0\njmp -252\nacc +14\njmp -266\nacc +27\nacc -16\nnop -533\nnop -534\njmp +1"},cad6:function(n,e,a){"use strict";a.r(e),e["default"]="1000508\n29,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,37,x,x,x,x,x,467,x,x,x,x,x,x,x,23,x,x,x,x,13,x,x,x,17,x,19,x,x,x,x,x,x,x,x,x,x,x,443,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,41"},cbaf:function(n,e,a){"use strict";a.r(e),e["default"]='The light turns green and the door unlocks. As you collapse onto the bed in your room, your pager goes off!\n\n"It\'s an emergency!" the Elf calling you explains. "The [soft serve](https://en.wikipedia.org/wiki/Soft_serve) machine in the cafeteria on sub-basement 7 just failed and you\'re the only one that knows how to fix it! We\'ve already dispatched a reindeer to your location to pick you up."\n\nYou hear the sound of hooves landing on your balcony.\n\nThe reindeer carefully explores the contents of your room while you figure out how you\'re going to pay the *50 stars* you owe the resort before you leave. Noticing that you look concerned, the reindeer wanders over to you; you see that it\'s carrying a small pouch.\n\n"Sorry for the trouble," a note in the pouch reads. Sitting at the bottom of the pouch is a gold coin with a little picture of a starfish on it.\n\nLooks like you only needed *49 stars* after all.'},ce3d:function(n,e,a){"use strict";a.r(e),e["default"]="position=< 52484, -20780> velocity=<-5,  2>\nposition=<-52068,  31483> velocity=< 5, -3>\nposition=< 21120,  52398> velocity=<-2, -5>\nposition=<-10264, -31236> velocity=< 1,  3>\nposition=< 52501,  52392> velocity=<-5, -5>\nposition=<-31144,  52394> velocity=< 3, -5>\nposition=<-41603,  21031> velocity=< 4, -2>\nposition=<-41630, -31239> velocity=< 4,  3>\nposition=< 21126, -20780> velocity=<-2,  2>\nposition=<-31150, -10326> velocity=< 3,  1>\nposition=<-41598,  21033> velocity=< 4, -2>\nposition=<-10252, -20787> velocity=< 1,  2>\nposition=<-20677, -52149> velocity=< 2,  5>\nposition=< 21102, -31236> velocity=<-2,  3>\nposition=<-20734,  41942> velocity=< 2, -4>\nposition=< 42018, -41696> velocity=<-4,  4>\nposition=<-52071, -41691> velocity=< 5,  4>\nposition=<-20720, -41693> velocity=< 2,  4>\nposition=<-20710,  10574> velocity=< 2, -1>\nposition=< 31540,  10578> velocity=<-3, -1>\nposition=< 31581, -41693> velocity=<-3,  4>\nposition=< 31540,  10576> velocity=<-3, -1>\nposition=<-31184,  31490> velocity=< 3, -3>\nposition=<-31168, -41689> velocity=< 3,  4>\nposition=<-41641,  10575> velocity=< 4, -1>\nposition=<-41590,  41940> velocity=< 4, -4>\nposition=<-31179, -41695> velocity=< 3,  4>\nposition=<-10232,  31481> velocity=< 1, -3>\nposition=< 42012,  31481> velocity=<-4, -3>\nposition=<-31192,  31486> velocity=< 3, -3>\nposition=< 10685,  21029> velocity=<-1, -2>\nposition=< 31535, -41692> velocity=<-3,  4>\nposition=< 31561,  41942> velocity=<-3, -4>\nposition=<-20719,  31481> velocity=< 2, -3>\nposition=< 42007,  10581> velocity=<-4, -1>\nposition=<-20726,  21027> velocity=< 2, -2>\nposition=<-31136,  21034> velocity=< 3, -2>\nposition=< 10680, -31241> velocity=<-1,  3>\nposition=< 31559,  21027> velocity=<-3, -2>\nposition=< 21088, -20780> velocity=<-2,  2>\nposition=< 52472,  41939> velocity=<-5, -4>\nposition=< 21126, -41692> velocity=<-2,  4>\nposition=<-10268,  41937> velocity=< 1, -4>\nposition=< 31551,  52393> velocity=<-3, -5>\nposition=<-52097,  10578> velocity=< 5, -1>\nposition=<-52087, -52145> velocity=< 5,  5>\nposition=<-10223,  21034> velocity=< 1, -2>\nposition=< 52483, -20785> velocity=<-5,  2>\nposition=< 10660, -20780> velocity=<-1,  2>\nposition=< 10648, -41694> velocity=<-1,  4>\nposition=< 41988, -31239> velocity=<-4,  3>\nposition=< 42010, -52149> velocity=<-4,  5>\nposition=< 52440, -10327> velocity=<-5,  1>\nposition=< 41991,  41943> velocity=<-4, -4>\nposition=< 10636, -52142> velocity=<-1,  5>\nposition=<-52071, -52146> velocity=< 5,  5>\nposition=< 10672, -31237> velocity=<-1,  3>\nposition=<-52095,  31484> velocity=< 5, -3>\nposition=< 31568, -41688> velocity=<-3,  4>\nposition=<-10236, -10331> velocity=< 1,  1>\nposition=<-52095,  21031> velocity=< 5, -2>\nposition=<-31187,  21027> velocity=< 3, -2>\nposition=< 31577,  21036> velocity=<-3, -2>\nposition=<-10284, -20784> velocity=< 1,  2>\nposition=<-10271, -20783> velocity=< 1,  2>\nposition=< 10650, -10335> velocity=<-1,  1>\nposition=<-20706, -41694> velocity=< 2,  4>\nposition=< 10636,  31490> velocity=<-1, -3>\nposition=<-41590,  21028> velocity=< 4, -2>\nposition=< 52480, -52142> velocity=<-5,  5>\nposition=<-52050, -31239> velocity=< 5,  3>\nposition=<-31183, -10326> velocity=< 3,  1>\nposition=< 42038,  52393> velocity=<-4, -5>\nposition=<-31176,  31486> velocity=< 3, -3>\nposition=<-10276,  10581> velocity=< 1, -1>\nposition=<-31168, -31236> velocity=< 3,  3>\nposition=< 41986, -52151> velocity=<-4,  5>\nposition=< 10656,  52398> velocity=<-1, -5>\nposition=< 42046,  52393> velocity=<-4, -5>\nposition=<-31139,  41936> velocity=< 3, -4>\nposition=< 41991, -20786> velocity=<-4,  2>\nposition=<-10243,  21033> velocity=< 1, -2>\nposition=<-41641,  31488> velocity=< 4, -3>\nposition=<-52095,  21032> velocity=< 5, -2>\nposition=<-20728,  31490> velocity=< 2, -3>\nposition=<-31163, -31237> velocity=< 3,  3>\nposition=< 41999,  52392> velocity=<-4, -5>\nposition=<-10279,  31485> velocity=< 1, -3>\nposition=<-10275,  31481> velocity=< 1, -3>\nposition=< 52484,  21030> velocity=<-5, -2>\nposition=< 31537, -20785> velocity=<-3,  2>\nposition=< 52493, -52148> velocity=<-5,  5>\nposition=< 21129, -52147> velocity=<-2,  5>\nposition=<-10241,  52398> velocity=< 1, -5>\nposition=<-10279,  31489> velocity=< 1, -3>\nposition=< 52496, -10330> velocity=<-5,  1>\nposition=< 10651, -41692> velocity=<-1,  4>\nposition=< 52480, -10326> velocity=<-5,  1>\nposition=<-41596,  41939> velocity=< 4, -4>\nposition=<-31174, -52151> velocity=< 3,  5>\nposition=< 42014, -41692> velocity=<-4,  4>\nposition=< 41986, -10334> velocity=<-4,  1>\nposition=< 10656, -20781> velocity=<-1,  2>\nposition=< 31564,  41935> velocity=<-3, -4>\nposition=<-20717, -20787> velocity=< 2,  2>\nposition=< 31540, -20789> velocity=<-3,  2>\nposition=<-10265, -41692> velocity=< 1,  4>\nposition=<-10260,  41940> velocity=< 1, -4>\nposition=<-10247, -10326> velocity=< 1,  1>\nposition=< 21094, -10328> velocity=<-2,  1>\nposition=<-41646, -52142> velocity=< 4,  5>\nposition=<-10284,  52395> velocity=< 1, -5>\nposition=< 21086,  52394> velocity=<-2, -5>\nposition=< 52500, -31239> velocity=<-5,  3>\nposition=<-20689, -41697> velocity=< 2,  4>\nposition=<-41636,  52389> velocity=< 4, -5>\nposition=< 42026,  41943> velocity=<-4, -4>\nposition=< 31549, -31239> velocity=<-3,  3>\nposition=< 52488,  52398> velocity=<-5, -5>\nposition=< 21086, -52145> velocity=<-2,  5>\nposition=< 31573, -31237> velocity=<-3,  3>\nposition=< 21139,  10573> velocity=<-2, -1>\nposition=<-31188, -20781> velocity=< 3,  2>\nposition=< 52488,  21035> velocity=<-5, -2>\nposition=<-10273,  52398> velocity=< 1, -5>\nposition=<-41642,  10581> velocity=< 4, -1>\nposition=< 42034, -10328> velocity=<-4,  1>\nposition=<-31187,  31489> velocity=< 3, -3>\nposition=< 41994, -10328> velocity=<-4,  1>\nposition=< 21110, -41692> velocity=<-2,  4>\nposition=< 41994, -31236> velocity=<-4,  3>\nposition=< 31532, -41692> velocity=<-3,  4>\nposition=<-41645, -41696> velocity=< 4,  4>\nposition=<-41617, -52148> velocity=< 4,  5>\nposition=< 42027,  21036> velocity=<-4, -2>\nposition=<-10268,  21029> velocity=< 1, -2>\nposition=<-41614, -20785> velocity=< 4,  2>\nposition=< 21097, -31238> velocity=<-2,  3>\nposition=< 10645,  10575> velocity=<-1, -1>\nposition=<-10243,  41944> velocity=< 1, -4>\nposition=< 21118,  21034> velocity=<-2, -2>\nposition=< 41994, -41691> velocity=<-4,  4>\nposition=< 21083, -31240> velocity=<-2,  3>\nposition=<-41596,  52389> velocity=< 4, -5>\nposition=<-31172, -10328> velocity=< 3,  1>\nposition=< 52464,  41944> velocity=<-5, -4>\nposition=<-31176,  52398> velocity=< 3, -5>\nposition=< 10669, -10326> velocity=<-1,  1>\nposition=<-31172, -10328> velocity=< 3,  1>\nposition=< 10653,  41940> velocity=<-1, -4>\nposition=<-10242, -20784> velocity=< 1,  2>\nposition=<-10279, -31234> velocity=< 1,  3>\nposition=< 21134,  10573> velocity=<-2, -1>\nposition=<-31160, -31239> velocity=< 3,  3>\nposition=< 21126,  41935> velocity=<-2, -4>\nposition=<-41617,  31485> velocity=< 4, -3>\nposition=<-10279,  10574> velocity=< 1, -1>\nposition=< 10672,  21027> velocity=<-1, -2>\nposition=< 42022, -20780> velocity=<-4,  2>\nposition=<-52100,  10573> velocity=< 5, -1>\nposition=<-52052, -20788> velocity=< 5,  2>\nposition=< 52461,  31489> velocity=<-5, -3>\nposition=< 10672,  10577> velocity=<-1, -1>\nposition=< 21094, -10334> velocity=<-2,  1>\nposition=<-52074, -31238> velocity=< 5,  3>\nposition=<-10249,  10582> velocity=< 1, -1>\nposition=< 52480, -31235> velocity=<-5,  3>\nposition=< 42042,  10582> velocity=<-4, -1>\nposition=< 52496,  31481> velocity=<-5, -3>\nposition=<-31136,  10578> velocity=< 3, -1>\nposition=<-52095, -41695> velocity=< 5,  4>\nposition=< 52460,  21027> velocity=<-5, -2>\nposition=< 21107, -41695> velocity=<-2,  4>\nposition=<-52051, -52147> velocity=< 5,  5>\nposition=< 31564,  31487> velocity=<-3, -3>\nposition=< 52481, -31237> velocity=<-5,  3>\nposition=<-20722, -31241> velocity=< 2,  3>\nposition=<-20735, -41692> velocity=< 2,  4>\nposition=<-52079,  52390> velocity=< 5, -5>\nposition=< 41994, -52142> velocity=<-4,  5>\nposition=< 52497, -20785> velocity=<-5,  2>\nposition=<-41638,  10577> velocity=< 4, -1>\nposition=<-31175, -20789> velocity=< 3,  2>\nposition=<-20719,  21031> velocity=< 2, -2>\nposition=< 52460,  52389> velocity=<-5, -5>\nposition=<-31136, -31237> velocity=< 3,  3>\nposition=< 21086,  52397> velocity=<-2, -5>\nposition=<-52084,  21027> velocity=< 5, -2>\nposition=< 41994, -41694> velocity=<-4,  4>\nposition=<-20706,  31486> velocity=< 2, -3>\nposition=<-20682, -52147> velocity=< 2,  5>\nposition=< 41999,  41942> velocity=<-4, -4>\nposition=< 41994, -52151> velocity=<-4,  5>\nposition=< 41986,  41943> velocity=<-4, -4>\nposition=<-20738, -20788> velocity=< 2,  2>\nposition=< 52464, -20780> velocity=<-5,  2>\nposition=< 31543,  31485> velocity=<-3, -3>\nposition=< 52448, -10334> velocity=<-5,  1>\nposition=<-20713,  31486> velocity=< 2, -3>\nposition=< 21099,  10576> velocity=<-2, -1>\nposition=< 52440,  31490> velocity=<-5, -3>\nposition=< 52441, -31241> velocity=<-5,  3>\nposition=< 42002, -52147> velocity=<-4,  5>\nposition=< 52469,  31483> velocity=<-5, -3>\nposition=< 10658, -41688> velocity=<-1,  4>\nposition=<-10273,  21031> velocity=< 1, -2>\nposition=<-52083, -10331> velocity=< 5,  1>\nposition=<-52044, -31234> velocity=< 5,  3>\nposition=< 21110,  31482> velocity=<-2, -3>\nposition=<-41590, -52145> velocity=< 4,  5>\nposition=<-20689,  10577> velocity=< 2, -1>\nposition=< 31593, -41697> velocity=<-3,  4>\nposition=< 10673,  41935> velocity=<-1, -4>\nposition=<-20677, -10331> velocity=< 2,  1>\nposition=< 52469,  41940> velocity=<-5, -4>\nposition=< 31593, -31242> velocity=<-3,  3>\nposition=< 52467, -41697> velocity=<-5,  4>\nposition=< 42007,  10582> velocity=<-4, -1>\nposition=<-31173, -41692> velocity=< 3,  4>\nposition=< 21083,  21032> velocity=<-2, -2>\nposition=<-20730,  41939> velocity=< 2, -4>\nposition=< 31574, -10335> velocity=<-3,  1>\nposition=< 21139, -52143> velocity=<-2,  5>\nposition=<-52099, -52150> velocity=< 5,  5>\nposition=<-10252,  52398> velocity=< 1, -5>\nposition=< 42047,  21029> velocity=<-4, -2>\nposition=< 42030,  31484> velocity=<-4, -3>\nposition=<-10268, -41697> velocity=< 1,  4>\nposition=< 21080,  31484> velocity=<-2, -3>\nposition=< 41997,  41935> velocity=<-4, -4>\nposition=< 10653, -41693> velocity=<-1,  4>\nposition=< 21089, -52142> velocity=<-2,  5>\nposition=< 10652,  31486> velocity=<-1, -3>\nposition=< 21107, -52145> velocity=<-2,  5>\nposition=<-20718, -10335> velocity=< 2,  1>\nposition=< 21094,  41941> velocity=<-2, -4>\nposition=< 21097,  41935> velocity=<-2, -4>\nposition=< 10624, -20785> velocity=<-1,  2>\nposition=< 21078, -10328> velocity=<-2,  1>\nposition=< 52464,  41938> velocity=<-5, -4>\nposition=< 42006,  21031> velocity=<-4, -2>\nposition=< 10675, -20789> velocity=<-1,  2>\nposition=<-20677,  52396> velocity=< 2, -5>\nposition=<-52095,  52396> velocity=< 5, -5>\nposition=< 21079, -10333> velocity=<-2,  1>\nposition=<-41589,  10577> velocity=< 4, -1>\nposition=< 31556, -41691> velocity=<-3,  4>\nposition=< 31545,  31482> velocity=<-3, -3>\nposition=< 10644,  31487> velocity=<-1, -3>\nposition=<-20706, -41690> velocity=< 2,  4>\nposition=<-10266,  31481> velocity=< 1, -3>\nposition=< 21087, -41693> velocity=<-2,  4>\nposition=<-10239, -41695> velocity=< 1,  4>\nposition=<-52090,  21031> velocity=< 5, -2>\nposition=<-10236,  10578> velocity=< 1, -1>\nposition=<-10236,  41942> velocity=< 1, -4>\nposition=< 21086,  31483> velocity=<-2, -3>\nposition=<-31176, -10330> velocity=< 3,  1>\nposition=< 31574, -10330> velocity=<-3,  1>\nposition=<-41598,  31482> velocity=< 4, -3>\nposition=<-52087, -52144> velocity=< 5,  5>\nposition=< 21090, -31243> velocity=<-2,  3>\nposition=<-20695, -41693> velocity=< 2,  4>\nposition=< 31574, -41692> velocity=<-3,  4>\nposition=<-10240, -52148> velocity=< 1,  5>\nposition=< 42042,  31481> velocity=<-4, -3>\nposition=< 41986,  31481> velocity=<-4, -3>\nposition=< 52484, -10326> velocity=<-5,  1>\nposition=< 31593, -10330> velocity=<-3,  1>\nposition=< 31548,  52398> velocity=<-3, -5>\nposition=<-20719,  21027> velocity=< 2, -2>\nposition=<-20697, -31243> velocity=< 2,  3>\nposition=< 10680, -20781> velocity=<-1,  2>\nposition=<-52088,  21031> velocity=< 5, -2>\nposition=<-31176,  41943> velocity=< 3, -4>\nposition=< 41996, -52147> velocity=<-4,  5>\nposition=<-31176,  41944> velocity=< 3, -4>\nposition=<-52056, -41697> velocity=< 5,  4>\nposition=< 31593,  41944> velocity=<-3, -4>\nposition=< 21099, -41695> velocity=<-2,  4>\nposition=<-20697, -31243> velocity=< 2,  3>\nposition=< 31588,  41938> velocity=<-3, -4>\nposition=<-20728,  21031> velocity=< 2, -2>\nposition=<-31149,  21027> velocity=< 3, -2>\nposition=<-10223, -10329> velocity=< 1,  1>\nposition=<-10236,  21034> velocity=< 1, -2>\nposition=< 10632, -10333> velocity=<-1,  1>\nposition=< 10680,  10581> velocity=<-1, -1>\nposition=<-41641, -41688> velocity=< 4,  4>\nposition=< 31545, -41696> velocity=<-3,  4>\nposition=<-31139,  41937> velocity=< 3, -4>\nposition=<-31189,  52395> velocity=< 3, -5>\nposition=< 42036, -10335> velocity=<-4,  1>\nposition=< 41998,  31485> velocity=<-4, -3>\nposition=<-41637, -10326> velocity=< 4,  1>\nposition=<-20682, -20787> velocity=< 2,  2>\nposition=<-10241,  31490> velocity=< 1, -3>\nposition=< 21135, -31239> velocity=<-2,  3>\nposition=< 31561, -31240> velocity=<-3,  3>\nposition=<-31192, -20786> velocity=< 3,  2>\nposition=<-10236,  41944> velocity=< 1, -4>\nposition=<-52059, -41697> velocity=< 5,  4>\nposition=<-20733, -20787> velocity=< 2,  2>\nposition=< 31540, -20781> velocity=<-3,  2>\nposition=<-52055,  10573> velocity=< 5, -1>\nposition=<-31152, -31236> velocity=< 3,  3>\nposition=< 52496, -31240> velocity=<-5,  3>\nposition=<-52052,  31484> velocity=< 5, -3>\nposition=< 52453,  41940> velocity=<-5, -4>\nposition=<-41646, -10333> velocity=< 4,  1>\nposition=< 42042,  41941> velocity=<-4, -4>\nposition=<-31131,  21036> velocity=< 3, -2>\nposition=<-10281, -52145> velocity=< 1,  5>\nposition=<-41598,  31485> velocity=< 4, -3>\nposition=<-31179, -10327> velocity=< 3,  1>\nposition=< 41988, -10332> velocity=<-4,  1>\nposition=< 52456,  41936> velocity=<-5, -4>\nposition=<-41595, -10335> velocity=< 4,  1>\nposition=< 52445,  52390> velocity=<-5, -5>\nposition=<-20693,  31483> velocity=< 2, -3>\nposition=<-41630,  31484> velocity=< 4, -3>\nposition=< 41986,  10581> velocity=<-4, -1>\nposition=<-20734,  21035> velocity=< 2, -2>\nposition=<-10223,  52395> velocity=< 1, -5>\nposition=< 42012, -31238> velocity=<-4,  3>\nposition=< 52445, -31237> velocity=<-5,  3>\nposition=< 21110, -20784> velocity=<-2,  2>\nposition=<-31179, -10328> velocity=< 3,  1>\nposition=<-10251,  41944> velocity=< 1, -4>\nposition=< 31593,  21028> velocity=<-3, -2>\nposition=<-31167, -52150> velocity=< 3,  5>\nposition=< 42003, -52151> velocity=<-4,  5>\nposition=< 52485, -10334> velocity=<-5,  1>\nposition=<-20690, -20786> velocity=< 2,  2>\nposition=< 10625, -31242> velocity=<-1,  3>\nposition=<-52087, -10332> velocity=< 5,  1>\nposition=< 10672, -20783> velocity=<-1,  2>\nposition=< 42026,  31489> velocity=<-4, -3>\nposition=< 10672,  41937> velocity=<-1, -4>\nposition=< 41995, -41697> velocity=<-4,  4>\nposition=< 31572,  31481> velocity=<-3, -3>\nposition=<-20688,  52389> velocity=< 2, -5>\nposition=<-20725,  10574> velocity=< 2, -1>\nposition=<-10260, -10328> velocity=< 1,  1>\nposition=< 10685,  21034> velocity=<-1, -2>\nposition=< 52499,  10577> velocity=<-5, -1>\nposition=< 31536,  31488> velocity=<-3, -3>\nposition=<-10260,  41941> velocity=< 1, -4>\nposition=<-52089, -20789> velocity=< 5,  2>\nposition=< 41994,  21034> velocity=<-4, -2>\nposition=< 31549, -52147> velocity=<-3,  5>\nposition=< 31564, -10328> velocity=<-3,  1>\nposition=< 10645,  41943> velocity=<-1, -4>\nposition=<-31168, -52147> velocity=< 3,  5>\nposition=<-31187,  21034> velocity=< 3, -2>\nposition=<-41598, -31241> velocity=< 4,  3>\nposition=< 10653,  21035> velocity=<-1, -2>\nposition=< 31576,  52398> velocity=<-3, -5>\nposition=<-10249,  10582> velocity=< 1, -1>\nposition=<-31136, -31240> velocity=< 3,  3>\nposition=<-20712, -52151> velocity=< 2,  5>\nposition=<-10279,  10579> velocity=< 1, -1>\nposition=< 52469, -10326> velocity=<-5,  1>\nposition=< 21103, -20784> velocity=<-2,  2>\nposition=< 21136, -20785> velocity=<-2,  2>\nposition=<-41605, -52142> velocity=< 4,  5>\nposition=< 31551, -52147> velocity=<-3,  5>"},cf25:function(n,e,a){"use strict";a.r(e),e["default"]="9717666\n20089533"},cffc:function(n,e,a){"use strict";a.r(e),e["default"]="You manage to answer the child's questions and they finish part 1 of their homework, but get stuck when they reach the next section: **advanced** math.\n\nNow, addition and multiplication have **different** precedence levels, but they're not the ones you're familiar with. Instead, addition is evaluated **before** multiplication.\n\nFor example, the steps to evaluate the expression `1 + 2 * 3 + 4 * 5 + 6` are now as follows:\n\n```\n1 + 2 * 3 + 4 * 5 + 6\n  3   * 3 + 4 * 5 + 6\n  3   *   7   * 5 + 6\n  3   *   7   *  11\n     21       *  11\n         231\n```\n\nHere are the other examples from above:\n\n- `1 + (2 * 3) + (4 * (5 + 6))` still becomes **`51`**.\n- `2 * 3 + (4 * 5)` becomes **`46`**.\n- `5 + (8 * 3 + 9 + 3 * 4 * 3)` becomes **`1445`**.\n- `5 * 9 * (7 * 3 * 3 + 9 * 3 + (8 + 6 * 4))` becomes **`669060`**.\n- `((2 + 4 * 9) * (6 + 9 * 8 + 6) + 6) + 2 + 4 * 2` becomes **`23340`**.\n\n\n**What do you get if you add up the results of evaluating the homework problems using these new rules?**"},d17e:function(n,e,a){"use strict";a.r(e),e["default"]="You talk to the Elves while you wait for your navigation system to initialize. To pass the time, they introduce you to their favorite [marble](https://en.wikipedia.org/wiki/Marble_(toy)) game.\n\nThe Elves play this game by taking turns arranging the marbles in a **circle** according to very particular rules. The marbles are numbered starting with `0` and increasing by `1` until every marble has a number.\n\nFirst, the marble numbered `0` is placed in the circle. At this point, while it contains only a single marble, it is still a circle: the marble is both clockwise from itself and counter-clockwise from itself. This marble is designated the **current marble**.\n\nThen, each Elf takes a turn placing the **lowest-numbered remaining marble** into the circle between the marbles that are `1` and `2` marbles **clockwise** of the current marble. (When the circle is large enough, this means that there is one marble between the marble that was just placed and the current marble.) The marble that was just placed then becomes the **current marble**.\n\nHowever, if the marble that is about to be placed has a number which is a multiple of `23`, **something entirely different happens**. First, the current player keeps the marble they would have placed, adding it to their **score**. In addition, the marble `7` marbles **counter-clockwise** from the current marble is **removed** from the circle and **also** added to the current player's score. The marble located immediately **clockwise** of the marble that was removed becomes the new **current marble**.\n\nFor example, suppose there are 9 players. After the marble with value 0 is placed in the middle, each player (shown in square brackets) takes a turn. The result of each of those turns would produce circles of marbles like this, where clockwise is to the right and the resulting current marble is in parentheses:\n\n```\n[-] (0)\n[1]  0 (1)\n[2]  0 (2) 1 \n[3]  0  2  1 (3)\n[4]  0 (4) 2  1  3 \n[5]  0  4  2 (5) 1  3 \n[6]  0  4  2  5  1 (6) 3 \n[7]  0  4  2  5  1  6  3 (7)\n[8]  0 (8) 4  2  5  1  6  3  7 \n[9]  0  8  4 (9) 2  5  1  6  3  7 \n[1]  0  8  4  9  2(10) 5  1  6  3  7 \n[2]  0  8  4  9  2 10  5(11) 1  6  3  7 \n[3]  0  8  4  9  2 10  5 11  1(12) 6  3  7 \n[4]  0  8  4  9  2 10  5 11  1 12  6(13) 3  7 \n[5]  0  8  4  9  2 10  5 11  1 12  6 13  3(14) 7 \n[6]  0  8  4  9  2 10  5 11  1 12  6 13  3 14  7(15)\n[7]  0(16) 8  4  9  2 10  5 11  1 12  6 13  3 14  7 15 \n[8]  0 16  8(17) 4  9  2 10  5 11  1 12  6 13  3 14  7 15 \n[9]  0 16  8 17  4(18) 9  2 10  5 11  1 12  6 13  3 14  7 15 \n[1]  0 16  8 17  4 18  9(19) 2 10  5 11  1 12  6 13  3 14  7 15 \n[2]  0 16  8 17  4 18  9 19  2(20)10  5 11  1 12  6 13  3 14  7 15 \n[3]  0 16  8 17  4 18  9 19  2 20 10(21) 5 11  1 12  6 13  3 14  7 15 \n[4]  0 16  8 17  4 18  9 19  2 20 10 21  5(22)11  1 12  6 13  3 14  7 15 \n[5]  0 16  8 17  4 18(19) 2 20 10 21  5 22 11  1 12  6 13  3 14  7 15 \n[6]  0 16  8 17  4 18 19  2(24)20 10 21  5 22 11  1 12  6 13  3 14  7 15 \n[7]  0 16  8 17  4 18 19  2 24 20(25)10 21  5 22 11  1 12  6 13  3 14  7 15\n```\n\nThe goal is to be the **player with the highest score** after the last marble is used up. Assuming the example above ends after the marble numbered `25`, the winning score is `23+9=`**`32`** (because player 5 kept marble `23` and removed marble `9`, while no other player got any points in this very short example game).\n\nHere are a few more examples:\n\n- `10` players; last marble is worth `1618` points: high score is **`8317`**\n- `13` players; last marble is worth `7999` points: high score is **`146373`**\n- `17` players; last marble is worth `1104` points: high score is **`2764`**\n- `21` players; last marble is worth `6111` points: high score is **`54718`**\n- `30` players; last marble is worth `5807` points: high score is **`37305`**\n\n**What is the winning Elf's score?**"},d1d0:function(n,e,a){"use strict";a.r(e),e["default"]="....#...##.#.........#....#....\n#.......#...#...#.#............\n#..#..#.#.##....#.#........#...\n........##...................#.\n........#...##...#.#.###.......\n##............#...#.....#.##...\n...........#....###...#.....#..\n.......#......#..##..#.....#...\n..#.#..#....#.........#...#..#.\n.........##......#.....##..##..\n........#.....#....#..##......#\n..#..#.......#..............#..\n.....#.#.......................\n.#.#....#.........#............\n.......#.....#.###.............\n......##......#...........#..#.\n.#...............##...#........\n.....#..##........###.........#\n#...........#..#............#..\n.........#....#..#.#......#....\n.......#.........#..##.........\n.##.....#..................#...\n....#............#.#....#.....#\n..#....#...##....#...#.#...#...\n..........#................#.#.\n#...#.#.#.####..#.#..........#.\n..#...#.##......#...........#..\n..#.....#...#.......#......#..#\n..............#.......#........\n.#..#..........#.....#...#..#.#\n#........#...#......#.......#..\n#..................#...........\n..#...#........#...#..#........\n..............#.....#.....#..#.\n#.#.......#..............##.##.\n....#.#.....##....#...........#\n......#....#...#..#.......#....\n....#..#.#.....#..##.....#....#\n...........#.......#.#.#.......\n#.......#..##........#..#......\n.........#.##..#..............#\n...........#............###.#..\n..#.....#.....##...#.........#.\n....##............##........#..\n.....###..........#......##....\n#...##..#..#..........#........\n....#.....#.......#..#.#...##..\n.#....#........#.#.........#.#.\n##...#.#.....#......#..........\n.....##.....#....#.....###.#..#\n..............#..###..#...#..#.\n....#...#....#.............#.#.\n.#.........#.....#........#.##.\n....#.........#..........#.....\n.......#........#.#.#..........\n#........##....#.........#.....\n..##..........#....#.#...#....#\n#...#.#......#..##..........#.#\n.....#..#...#..#...............\n#...#..............#...........\n.#...#....#..##.....#....#.#...\n.#...#.......#...#..#.##....#..\n#....#........#....#...#.......\n#..#......#.....#.....#..##....\n......#.#....##....##..#...#...\n..#....#.#.###..............#..\n.#.##.......#.#.#..#...#..#....\n..#..........#.#....#..#.#....#\n..........#...#...#..........#.\n..........#.....#.#..#..#....##\n.#.#...##...#...........####...\n........##..#.#..........#.##.#\n#......###...........#...#.....\n..#.#....##.........##....#....\n#....#.##..##..#..#.....#.....#\n.##.....##....##....#.......#..\n#...#.....##....#..........#...\n............#.#.##....#....#...\n....#............#.....#......#\n....................#..........\n..#....................#..#....\n....#.....#........#..##...#...\n#.....#.#....................##\n.#....#.#.#...#..........#....#\n....#...#......#...#.....##...#\n.....#.........................\n.......#..#.#...#...#...#.....#\n...#......#.##.#...#..#...##.#.\n...........................#..#\n..#.#.....#........##..........\n....#...##........#.#.#..#...##\n..##.....#..###.........##.##..\n.#..#.....#...#.............#..\n#..............##...#....##....\n.##......#.#............#......\n.............##...#.#.......#..\n.........#..#..#...............\n........##......#....##........\n...#.........#.#.#.............\n#..........#......#......#..#..\n.............##.#.#..#.#.#...#.\n.....#.........#...............\n..##.#..#.....##..#........#.#.\n.#..........#.#.......#......##\n.#........................#....\n#....#....#...#..#......#......\n........#.......#......#.....#.\n.....#....##..#...###...#....#.\n....#.........#....#......#....\n.............#...#....#.......#\n.....#.........#..#.#..........\n.........#..#........#.#.#.....\n......#.##......#....#.#.##.#..\n.#...#.#...#...#.#......#....##\n.#................#......#.....\n#.#.#...............#..........\n.....#.#.......#...#........#..\n#...#.#.#.##..#...........#..#.\n.............###.........#....#\n.#.....#.......##....##.......#\n....#...#.......#.##.....#.....\n...........##.........#...#....\n..............#.#..#.....#..#..\n#.#...#..#.#.........#......#.#\n#.##.....##....#........#.#.#.#\n##.#.###.........##.......#..#.\n#.....#.....................#..\n.........##........#...........\n.###........##....#...#........\n....#.#........##...........#..\n..........#.....#..........#..#\n......#..............#......#..\n.....#...#......#...#...#......\n..........#.#..#....#...#..###.\n#..##........#................#\n..#............................\n.....#.........#.#.............\n........#...#.....#...##......#\n..#........#................#..\n......#....#..#......#.........\n...........##....#..#.#........\n.....#.............###.........\n#............#......#..#.......\n..#..#.................#..#..##\n.......#......#.....#........#.\n....................#..#.##...#\n.#..##...............##...#....\n...#...#....#........#.........\n.....##...#.....###............\n.###.........#........#.....##.\n.............#...#.............\n...#.#...............#..##..#.#\n...#...............#..#.....#..\n....#.#..................#...#.\n..........#...........#.#...###\n#...#......#................#..\n...#.#.......#...#......#.##...\n......#..........#.............\n##.......#.##.#...........#....\n......#...#.#.....#............\n.#.....#.....#.....#.........#.\n..................#............\n.#.#.#.....#......#.##.........\n.......#..##.##......#..#....#.\n...#.#.#......#...#........#...\n..#............#......#.......#\n..#......#........#.........#..\n..#..#.#.#.....#.............#.\n..#.#..##......#...#...##......\n.##...#....##.#.#...........#..\n..............#..#...#....#....\n.......#.#........#............\n.....##..###........#..........\n......................#........\n..##....#....#.................\n.##.#.###.#........#.##..#...#.\n##................#...........#\n....#..##.....##...............\n.#.....#..#............#.....#.\n#.........#..............#.....\n...##.#......#...#.............\n................#..............\n...#.....#....##...#..#....#...\n..............##..#...#.##..#..\n......................#..#....#\n.......#....#..#.##.........#.#\n#...#........##.......#........\n...##...............#.....#....\n.##...##...#...................\n.........##.#...#.........#....\n............#............#..#..\n.............................#.\n....#.#....#...................\n......#......#...#..##.........\n#........#.#.#.#.#......#....#.\n.#.........#.#...#......#..#.#.\n..............#....##.........#\n.#.......#..#....#.#.#....#....\n...###.#.#..#...#....#....#....\n#........#....................#\n......#...##.###..#..##...#....\n.....#........#.......#........\n#..#...........#.#.............\n....##.#...#..##............##.\n#.#..##..#...#...#.....#.......\n..#.............#.##..#...#.##.\n.#.....##.#..#...#...........#.\n....#...#....................##\n....##......#.###......#......#\n...#...#.........#..#.##....#..\n#......#..#....###.........#...\n#...........##.............#.#.\n#..............##....#......#..\n.........#...#.#...#...#.......\n....#....#............#.......#\n........#...#....#......##.....\n..........#.#..#.........#.....\n#........#.##....##......#.....\n...#.......#...................\n###...#...#..#.##....#.....#...\n........##..........#.##..#....\n.....#......#..#.....#.....#.#.\n...#..#..##..###.....##.#......\n#..#......##...#............#..\n#............#....#..#.........\n#........#.......#......#..##.#\n...#.#.........#.#.............\n#..............#..............#\n#.#......#..........##.........\n#..##...........#..##...#......\n.....#.#.....#......#.....#.#.#\n.#.##...#...##...........#....#\n#.............#........#.......\n..##.............#...#.........\n....#.#......###....#..........\n...#..#.....#..##.#....#...#.#.\n.............##................\n#.#............#........#..#.#.\n.#......#.....#...........#....\n...#.........#...........#.##..\n.....#...#.....#..#..........#.\n........#.#...............#.#..\n.......#..#..#.....#.......##..\n.#...#...#..#...##...#.........\n..........##....#..#.##..#.....\n....#.................#...#....\n.........#...#......#....#....#\n.........#..#...#.##........##.\n#.#....##.......#.#............\n##.......##..................#.\n......#...#......##............\n##.#...#.#...........#..#......\n.........#.........#..#.#...#..\n.#...#.......#.#...###.........\n................#.#.....#......\n..#...#.....#........#.........\n.........##.###.#.#.....#...#..\n#..#..........#....#.#...#...##\n##.#.#....#..##.............#.#\n.###....#..#...............##..\n............#......#.#.#....#..\n........#...#..#...#...........\n##.........#................#..\n...###...#.#..#...#..........##\n...#......#......##........#...\n.......#............#..........\n.....#.....##....#.....###.....\n.#...#...#.....#..#..#....#..#.\n#.#........#..#.......##...#.##\n.....#.....##..#.##........#..#\n.....#...#...........#.........\n..#....#.#...#..#....##...#...#\n...........#...##.........#....\n..#....#....##........#.####...\n#.............#.#.............#\n...................#.....#.#..#\n.#....#.#.............#.#......\n#...........#............#.#...\n..#.........#.#....#.......##..\n#....####......#...#......#....\n....##....#...................#\n....#.##....#.............#....\n.........##........#.....#..#..\n............#...#..............\n............#..##....#.....##.#\n............#.....#......#.....\n........#..#........##.#.......\n...#.#........#..............#.\n............#.........#..#.#...\n................#.............#\n..##..........##......#.#......\n..#..#.##....#.........#...#...\n...........##...#.#.#..........\n.#.#.......#.#...#.........#...\n.........#..#........#..#.#....\n..........##..#.##....#....#...\n....#...............#.......#..\n##..........##.................\n....#.#.#.....#..........##.#..\n..............#.##..........##.\n##...............#...#..#......\n..#..#..........#......#.......\n#...#..##.#.#..................\n....#....##......##.#...#....##\n.#...#.#....##.............#..#\n................#......###.....\n..#..#.............#.#.......#.\n..#..................#.......#.\n.....#.......#....#.##...#.##..\n.....##.......#......#..#......\n#..#.......#........#..........\n..#...#..#....#.........#......\n#..#..#......##..#.##....####..\n......##.#.....#..#.......#....\n.##...#.....#..#...#.#.........\n#.....#........###....#...#..#.\n.#....#.#..#......#............\n.........#..#..#.....#........#\n..#.......#..........#..#......\n......#.......##.#....#.#.#....\n.#............#.....#.......#..\n...#..#...............#........\n.....#........................."},d784:function(n,e,a){"use strict";a("ac1f");var s=a("6eeb"),t=a("d039"),b=a("b622"),i=a("9263"),r=a("9112"),o=b("species"),l=!t((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")})),w=function(){return"$0"==="a".replace(/./,"$0")}(),L=b("replace"),c=function(){return!!/./[L]&&""===/./[L]("a","$0")}(),h=!t((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var a="ab".split(n);return 2!==a.length||"a"!==a[0]||"b"!==a[1]}));n.exports=function(n,e,a,L){var d=b(n),g=!t((function(){var e={};return e[d]=function(){return 7},7!=""[n](e)})),p=g&&!t((function(){var e=!1,a=/a/;return"split"===n&&(a={},a.constructor={},a.constructor[o]=function(){return a},a.flags="",a[d]=/./[d]),a.exec=function(){return e=!0,null},a[d](""),!e}));if(!g||!p||"replace"===n&&(!l||!w||c)||"split"===n&&!h){var m=/./[d],u=a(d,""[n],(function(n,e,a,s,t){return e.exec===i?g&&!t?{done:!0,value:m.call(e,a,s)}:{done:!0,value:n.call(a,e,s)}:{done:!1}}),{REPLACE_KEEPS_$0:w,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:c}),f=u[0],y=u[1];s(String.prototype,n,f),s(RegExp.prototype,d,2==e?function(n,e){return y.call(n,this,e)}:function(n){return y.call(n,this)})}L&&r(RegExp.prototype[d],"sham",!0)}},e366:function(n,e,a){"use strict";a.r(e),e["default"]="#1 @ 179,662: 16x27\n#2 @ 609,961: 25x21\n#3 @ 73,376: 23x28\n#4 @ 599,405: 26x25\n#5 @ 28,933: 19x29\n#6 @ 441,852: 29x23\n#7 @ 512,396: 15x17\n#8 @ 702,415: 14x10\n#9 @ 730,587: 27x21\n#10 @ 252,715: 17x27\n#11 @ 541,822: 21x13\n#12 @ 901,802: 12x24\n#13 @ 759,349: 15x26\n#14 @ 862,839: 22x25\n#15 @ 862,576: 17x16\n#16 @ 265,967: 11x25\n#17 @ 124,444: 23x25\n#18 @ 971,141: 25x15\n#19 @ 864,246: 22x27\n#20 @ 841,34: 17x15\n#21 @ 173,462: 19x22\n#22 @ 122,22: 27x20\n#23 @ 327,178: 12x19\n#24 @ 576,663: 21x10\n#25 @ 410,958: 11x12\n#26 @ 676,145: 14x10\n#27 @ 177,676: 10x22\n#28 @ 663,60: 23x15\n#29 @ 686,352: 24x19\n#30 @ 68,618: 18x12\n#31 @ 20,643: 19x18\n#32 @ 683,128: 19x22\n#33 @ 88,45: 28x25\n#34 @ 442,736: 20x29\n#35 @ 824,825: 13x13\n#36 @ 668,253: 25x27\n#37 @ 254,404: 27x25\n#38 @ 712,260: 26x17\n#39 @ 588,470: 21x20\n#40 @ 114,148: 11x26\n#41 @ 242,409: 17x26\n#42 @ 342,481: 24x21\n#43 @ 104,187: 27x12\n#44 @ 440,919: 13x22\n#45 @ 177,312: 22x15\n#46 @ 249,925: 29x15\n#47 @ 376,750: 19x20\n#48 @ 157,760: 21x21\n#49 @ 760,833: 28x15\n#50 @ 955,909: 26x12\n#51 @ 941,896: 17x25\n#52 @ 154,33: 29x20\n#53 @ 236,275: 27x29\n#54 @ 848,800: 11x18\n#55 @ 950,130: 28x24\n#56 @ 351,564: 21x11\n#57 @ 32,70: 17x11\n#58 @ 215,219: 22x18\n#59 @ 816,714: 15x21\n#60 @ 738,879: 16x27\n#61 @ 218,896: 26x27\n#62 @ 953,363: 16x19\n#63 @ 836,508: 28x13\n#64 @ 839,14: 12x21\n#65 @ 831,683: 24x15\n#66 @ 809,698: 12x26\n#67 @ 887,296: 23x11\n#68 @ 770,771: 29x21\n#69 @ 383,762: 14x25\n#70 @ 542,962: 28x14\n#71 @ 236,286: 18x10\n#72 @ 517,363: 12x18\n#73 @ 171,753: 16x17\n#74 @ 272,910: 18x20\n#75 @ 658,202: 25x14\n#76 @ 534,906: 18x25\n#77 @ 468,342: 27x12\n#78 @ 426,350: 28x26\n#79 @ 277,968: 12x20\n#80 @ 390,877: 10x27\n#81 @ 859,603: 26x12\n#82 @ 491,937: 13x16\n#83 @ 19,883: 20x15\n#84 @ 47,400: 27x15\n#85 @ 627,191: 14x26\n#86 @ 164,326: 17x28\n#87 @ 768,216: 20x24\n#88 @ 947,765: 15x19\n#89 @ 917,142: 11x20\n#90 @ 351,87: 24x29\n#91 @ 872,451: 29x10\n#92 @ 749,900: 20x26\n#93 @ 935,30: 25x12\n#94 @ 221,943: 15x10\n#95 @ 344,602: 12x24\n#96 @ 677,578: 16x26\n#97 @ 452,606: 21x10\n#98 @ 2,722: 19x22\n#99 @ 310,605: 17x29\n#100 @ 262,390: 26x23\n#101 @ 640,499: 19x13\n#102 @ 852,924: 26x16\n#103 @ 309,81: 20x16\n#104 @ 108,918: 18x11\n#105 @ 249,160: 9x17\n#106 @ 26,62: 26x25\n#107 @ 407,587: 14x24\n#108 @ 956,98: 18x27\n#109 @ 944,459: 16x26\n#110 @ 209,699: 28x25\n#111 @ 710,856: 12x22\n#112 @ 744,288: 27x25\n#113 @ 489,344: 20x21\n#114 @ 438,488: 12x16\n#115 @ 884,95: 15x22\n#116 @ 60,617: 24x24\n#117 @ 957,191: 10x11\n#118 @ 315,527: 22x23\n#119 @ 199,117: 18x26\n#120 @ 255,642: 10x15\n#121 @ 957,962: 11x14\n#122 @ 193,131: 10x13\n#123 @ 2,931: 21x11\n#124 @ 36,961: 27x23\n#125 @ 863,38: 29x14\n#126 @ 31,731: 13x15\n#127 @ 357,741: 28x15\n#128 @ 209,354: 27x23\n#129 @ 524,8: 22x20\n#130 @ 302,247: 15x12\n#131 @ 76,857: 10x16\n#132 @ 531,502: 24x10\n#133 @ 559,962: 17x15\n#134 @ 233,710: 29x15\n#135 @ 762,70: 15x24\n#136 @ 934,186: 25x20\n#137 @ 808,252: 29x29\n#138 @ 550,694: 22x19\n#139 @ 265,368: 23x25\n#140 @ 640,637: 11x14\n#141 @ 736,484: 15x10\n#142 @ 946,571: 27x17\n#143 @ 332,174: 20x20\n#144 @ 797,775: 11x23\n#145 @ 684,63: 22x13\n#146 @ 932,36: 20x12\n#147 @ 375,882: 19x17\n#148 @ 656,227: 12x20\n#149 @ 455,223: 12x15\n#150 @ 732,619: 20x20\n#151 @ 292,615: 19x29\n#152 @ 615,0: 15x28\n#153 @ 463,174: 16x15\n#154 @ 322,456: 27x15\n#155 @ 352,224: 10x15\n#156 @ 966,673: 29x21\n#157 @ 527,42: 23x27\n#158 @ 632,775: 15x15\n#159 @ 871,805: 22x15\n#160 @ 667,240: 15x27\n#161 @ 607,880: 25x25\n#162 @ 447,44: 10x21\n#163 @ 445,126: 17x15\n#164 @ 844,933: 11x29\n#165 @ 471,423: 24x27\n#166 @ 715,867: 16x16\n#167 @ 778,279: 10x18\n#168 @ 490,630: 23x16\n#169 @ 687,301: 28x13\n#170 @ 476,432: 11x18\n#171 @ 123,794: 23x26\n#172 @ 738,256: 22x25\n#173 @ 336,60: 26x28\n#174 @ 698,766: 4x10\n#175 @ 511,10: 13x10\n#176 @ 580,702: 18x20\n#177 @ 218,620: 13x22\n#178 @ 476,488: 13x25\n#179 @ 154,617: 14x29\n#180 @ 620,563: 11x6\n#181 @ 168,433: 28x10\n#182 @ 60,685: 10x24\n#183 @ 880,680: 18x18\n#184 @ 859,616: 17x25\n#185 @ 114,80: 26x19\n#186 @ 236,868: 25x10\n#187 @ 135,13: 26x29\n#188 @ 810,677: 22x10\n#189 @ 938,932: 16x14\n#190 @ 427,434: 14x11\n#191 @ 83,731: 29x23\n#192 @ 960,148: 25x16\n#193 @ 577,669: 24x16\n#194 @ 67,267: 18x29\n#195 @ 603,928: 15x26\n#196 @ 881,39: 29x11\n#197 @ 963,957: 19x23\n#198 @ 891,868: 12x13\n#199 @ 799,34: 14x12\n#200 @ 529,785: 24x27\n#201 @ 596,936: 12x21\n#202 @ 832,289: 13x10\n#203 @ 664,232: 17x22\n#204 @ 171,345: 24x26\n#205 @ 283,521: 28x22\n#206 @ 702,469: 14x10\n#207 @ 490,531: 21x27\n#208 @ 411,388: 26x21\n#209 @ 120,780: 13x28\n#210 @ 711,391: 24x12\n#211 @ 347,848: 22x13\n#212 @ 956,507: 20x18\n#213 @ 844,696: 20x26\n#214 @ 550,230: 28x25\n#215 @ 71,625: 14x26\n#216 @ 701,305: 29x23\n#217 @ 629,488: 21x14\n#218 @ 966,362: 10x26\n#219 @ 802,763: 17x19\n#220 @ 631,858: 22x17\n#221 @ 175,656: 24x26\n#222 @ 822,185: 17x15\n#223 @ 110,390: 11x19\n#224 @ 328,13: 28x26\n#225 @ 479,262: 22x12\n#226 @ 178,796: 25x25\n#227 @ 23,782: 18x21\n#228 @ 597,578: 10x12\n#229 @ 692,683: 26x29\n#230 @ 268,713: 21x28\n#231 @ 112,197: 21x15\n#232 @ 619,282: 21x19\n#233 @ 765,56: 21x29\n#234 @ 96,163: 29x11\n#235 @ 229,927: 18x29\n#236 @ 588,775: 27x29\n#237 @ 498,293: 23x15\n#238 @ 311,166: 14x25\n#239 @ 134,371: 27x28\n#240 @ 450,173: 24x16\n#241 @ 700,398: 28x12\n#242 @ 216,282: 25x10\n#243 @ 886,817: 16x15\n#244 @ 291,967: 29x25\n#245 @ 406,283: 14x20\n#246 @ 601,779: 26x28\n#247 @ 767,213: 20x10\n#248 @ 802,36: 15x17\n#249 @ 264,361: 19x27\n#250 @ 565,236: 23x28\n#251 @ 260,394: 21x18\n#252 @ 506,427: 17x26\n#253 @ 479,946: 28x10\n#254 @ 463,505: 24x19\n#255 @ 42,314: 27x27\n#256 @ 901,709: 26x14\n#257 @ 716,194: 21x29\n#258 @ 404,285: 18x21\n#259 @ 838,243: 29x28\n#260 @ 276,510: 23x11\n#261 @ 66,605: 29x16\n#262 @ 225,3: 26x16\n#263 @ 451,355: 22x21\n#264 @ 423,41: 19x17\n#265 @ 942,912: 14x11\n#266 @ 915,613: 22x11\n#267 @ 316,786: 25x24\n#268 @ 640,185: 24x17\n#269 @ 4,564: 29x18\n#270 @ 535,912: 21x16\n#271 @ 95,633: 13x17\n#272 @ 517,170: 21x19\n#273 @ 857,812: 14x23\n#274 @ 682,515: 12x21\n#275 @ 615,847: 22x14\n#276 @ 547,47: 26x18\n#277 @ 461,552: 19x28\n#278 @ 866,29: 28x28\n#279 @ 725,878: 17x15\n#280 @ 604,454: 19x24\n#281 @ 529,452: 28x12\n#282 @ 731,633: 23x22\n#283 @ 505,447: 27x18\n#284 @ 75,694: 12x16\n#285 @ 212,909: 29x13\n#286 @ 96,630: 15x29\n#287 @ 168,34: 28x18\n#288 @ 935,481: 23x26\n#289 @ 892,235: 27x16\n#290 @ 942,945: 13x15\n#291 @ 759,221: 13x25\n#292 @ 604,339: 10x27\n#293 @ 699,313: 17x23\n#294 @ 319,716: 22x24\n#295 @ 718,219: 26x26\n#296 @ 11,917: 13x19\n#297 @ 666,632: 13x24\n#298 @ 85,791: 25x29\n#299 @ 179,204: 20x17\n#300 @ 292,234: 27x11\n#301 @ 527,488: 15x19\n#302 @ 651,158: 22x10\n#303 @ 727,98: 25x25\n#304 @ 452,9: 23x26\n#305 @ 520,386: 23x22\n#306 @ 755,196: 26x11\n#307 @ 321,107: 13x25\n#308 @ 654,563: 20x25\n#309 @ 188,228: 11x23\n#310 @ 416,355: 22x19\n#311 @ 679,567: 12x8\n#312 @ 319,282: 17x27\n#313 @ 276,620: 23x23\n#314 @ 50,242: 11x19\n#315 @ 759,918: 23x19\n#316 @ 599,84: 18x21\n#317 @ 675,230: 15x28\n#318 @ 96,480: 13x13\n#319 @ 386,254: 24x19\n#320 @ 682,199: 22x19\n#321 @ 14,819: 12x14\n#322 @ 231,451: 19x17\n#323 @ 36,396: 27x13\n#324 @ 459,917: 18x26\n#325 @ 149,874: 11x10\n#326 @ 182,325: 11x25\n#327 @ 142,279: 17x12\n#328 @ 954,276: 27x24\n#329 @ 512,263: 16x19\n#330 @ 446,841: 25x25\n#331 @ 79,247: 15x11\n#332 @ 378,881: 20x17\n#333 @ 958,324: 18x22\n#334 @ 583,501: 13x23\n#335 @ 966,133: 16x20\n#336 @ 236,395: 19x19\n#337 @ 588,910: 18x10\n#338 @ 35,406: 20x25\n#339 @ 326,404: 20x29\n#340 @ 293,761: 16x24\n#341 @ 420,371: 5x5\n#342 @ 694,764: 12x17\n#343 @ 617,15: 10x14\n#344 @ 859,915: 11x15\n#345 @ 522,430: 20x17\n#346 @ 727,180: 15x14\n#347 @ 208,679: 11x16\n#348 @ 523,670: 28x22\n#349 @ 512,436: 15x13\n#350 @ 170,11: 25x18\n#351 @ 353,588: 23x12\n#352 @ 201,605: 26x12\n#353 @ 561,681: 15x12\n#354 @ 500,357: 12x12\n#355 @ 813,438: 26x26\n#356 @ 759,853: 14x28\n#357 @ 152,737: 27x27\n#358 @ 646,721: 11x13\n#359 @ 588,446: 15x21\n#360 @ 713,927: 21x28\n#361 @ 189,43: 21x29\n#362 @ 655,722: 29x22\n#363 @ 614,184: 17x14\n#364 @ 465,10: 12x19\n#365 @ 493,612: 11x24\n#366 @ 594,442: 13x18\n#367 @ 392,893: 11x16\n#368 @ 77,740: 12x21\n#369 @ 628,138: 12x27\n#370 @ 173,500: 20x11\n#371 @ 363,587: 13x27\n#372 @ 852,276: 25x19\n#373 @ 410,949: 13x10\n#374 @ 359,948: 25x25\n#375 @ 546,677: 11x29\n#376 @ 854,582: 23x19\n#377 @ 761,145: 11x10\n#378 @ 300,888: 22x17\n#379 @ 284,791: 27x16\n#380 @ 758,255: 13x20\n#381 @ 453,16: 21x16\n#382 @ 525,183: 21x22\n#383 @ 114,307: 18x15\n#384 @ 556,225: 28x20\n#385 @ 463,19: 19x13\n#386 @ 601,579: 24x14\n#387 @ 314,870: 19x21\n#388 @ 541,438: 22x17\n#389 @ 704,543: 26x11\n#390 @ 420,537: 21x22\n#391 @ 728,211: 10x17\n#392 @ 232,822: 25x16\n#393 @ 482,339: 16x17\n#394 @ 460,129: 22x18\n#395 @ 223,181: 24x28\n#396 @ 270,740: 25x24\n#397 @ 220,22: 16x17\n#398 @ 416,414: 15x21\n#399 @ 391,524: 10x20\n#400 @ 448,282: 12x29\n#401 @ 247,862: 16x13\n#402 @ 967,527: 17x20\n#403 @ 279,637: 12x15\n#404 @ 792,166: 16x29\n#405 @ 597,902: 21x12\n#406 @ 375,729: 11x13\n#407 @ 404,395: 15x27\n#408 @ 852,581: 27x17\n#409 @ 97,859: 14x19\n#410 @ 867,477: 23x24\n#411 @ 419,139: 20x23\n#412 @ 395,956: 23x15\n#413 @ 498,388: 22x24\n#414 @ 880,814: 13x19\n#415 @ 845,417: 12x25\n#416 @ 498,357: 27x29\n#417 @ 366,739: 24x29\n#418 @ 86,66: 20x23\n#419 @ 619,871: 17x4\n#420 @ 896,449: 25x24\n#421 @ 414,64: 13x27\n#422 @ 308,77: 27x10\n#423 @ 105,927: 15x12\n#424 @ 213,110: 18x26\n#425 @ 912,820: 12x15\n#426 @ 755,643: 22x13\n#427 @ 850,256: 17x12\n#428 @ 581,456: 18x29\n#429 @ 881,461: 28x22\n#430 @ 204,903: 27x19\n#431 @ 12,578: 22x13\n#432 @ 69,762: 22x27\n#433 @ 140,879: 15x18\n#434 @ 548,924: 20x23\n#435 @ 256,293: 28x22\n#436 @ 583,438: 29x27\n#437 @ 31,936: 17x11\n#438 @ 53,289: 23x26\n#439 @ 753,871: 16x27\n#440 @ 64,856: 21x28\n#441 @ 832,962: 11x15\n#442 @ 305,969: 17x29\n#443 @ 562,103: 24x24\n#444 @ 243,231: 18x11\n#445 @ 210,19: 10x29\n#446 @ 62,702: 28x18\n#447 @ 167,127: 13x29\n#448 @ 751,334: 12x20\n#449 @ 404,236: 27x28\n#450 @ 869,107: 20x18\n#451 @ 167,687: 22x22\n#452 @ 79,449: 29x19\n#453 @ 821,288: 15x26\n#454 @ 235,926: 18x10\n#455 @ 902,705: 16x18\n#456 @ 777,189: 23x25\n#457 @ 560,141: 23x17\n#458 @ 711,900: 28x12\n#459 @ 650,864: 23x19\n#460 @ 965,91: 25x29\n#461 @ 366,589: 24x18\n#462 @ 262,423: 25x21\n#463 @ 775,176: 25x10\n#464 @ 634,899: 24x15\n#465 @ 330,489: 21x16\n#466 @ 711,668: 28x14\n#467 @ 283,699: 17x15\n#468 @ 12,741: 14x11\n#469 @ 10,532: 17x19\n#470 @ 763,148: 12x17\n#471 @ 630,884: 13x26\n#472 @ 39,381: 12x19\n#473 @ 313,382: 4x17\n#474 @ 617,862: 22x18\n#475 @ 113,120: 20x21\n#476 @ 913,322: 26x17\n#477 @ 197,33: 22x15\n#478 @ 760,220: 22x29\n#479 @ 395,195: 17x4\n#480 @ 25,469: 16x19\n#481 @ 289,620: 13x20\n#482 @ 41,395: 15x21\n#483 @ 50,148: 24x22\n#484 @ 787,117: 29x24\n#485 @ 456,623: 28x15\n#486 @ 938,37: 19x10\n#487 @ 475,340: 16x22\n#488 @ 221,808: 28x22\n#489 @ 387,452: 17x19\n#490 @ 835,789: 21x23\n#491 @ 153,456: 29x20\n#492 @ 462,344: 19x13\n#493 @ 927,8: 16x27\n#494 @ 172,734: 19x15\n#495 @ 562,52: 27x15\n#496 @ 781,826: 19x26\n#497 @ 204,123: 17x13\n#498 @ 839,514: 26x25\n#499 @ 324,417: 29x11\n#500 @ 746,828: 19x11\n#501 @ 737,580: 18x14\n#502 @ 802,22: 28x20\n#503 @ 974,392: 19x17\n#504 @ 426,55: 16x14\n#505 @ 845,795: 19x13\n#506 @ 261,102: 10x27\n#507 @ 415,400: 14x22\n#508 @ 62,0: 19x29\n#509 @ 643,429: 28x10\n#510 @ 713,121: 18x19\n#511 @ 829,23: 17x16\n#512 @ 268,80: 10x11\n#513 @ 826,654: 28x29\n#514 @ 73,96: 19x18\n#515 @ 696,417: 22x13\n#516 @ 253,437: 26x29\n#517 @ 842,523: 16x10\n#518 @ 274,960: 28x10\n#519 @ 410,317: 16x22\n#520 @ 334,981: 26x18\n#521 @ 183,480: 25x29\n#522 @ 794,659: 26x26\n#523 @ 416,188: 25x10\n#524 @ 735,400: 17x21\n#525 @ 836,779: 15x26\n#526 @ 913,298: 12x15\n#527 @ 28,507: 10x18\n#528 @ 596,697: 20x20\n#529 @ 322,163: 12x20\n#530 @ 626,94: 21x10\n#531 @ 39,391: 14x10\n#532 @ 894,108: 11x29\n#533 @ 384,173: 25x18\n#534 @ 557,974: 11x23\n#535 @ 780,805: 10x11\n#536 @ 448,734: 27x14\n#537 @ 68,349: 27x17\n#538 @ 215,700: 15x13\n#539 @ 921,309: 26x16\n#540 @ 312,665: 15x3\n#541 @ 301,946: 16x22\n#542 @ 798,747: 11x22\n#543 @ 850,675: 28x28\n#544 @ 438,425: 11x18\n#545 @ 477,537: 16x25\n#546 @ 869,878: 22x22\n#547 @ 830,106: 26x15\n#548 @ 16,880: 23x28\n#549 @ 89,598: 25x10\n#550 @ 911,746: 25x20\n#551 @ 132,268: 27x14\n#552 @ 107,54: 22x16\n#553 @ 617,920: 17x25\n#554 @ 888,796: 17x17\n#555 @ 911,21: 21x13\n#556 @ 901,126: 12x28\n#557 @ 501,378: 25x26\n#558 @ 231,749: 28x10\n#559 @ 534,889: 12x24\n#560 @ 388,923: 17x14\n#561 @ 113,84: 15x28\n#562 @ 924,424: 19x27\n#563 @ 669,933: 29x22\n#564 @ 317,796: 22x24\n#565 @ 149,894: 18x11\n#566 @ 815,914: 21x17\n#567 @ 686,540: 28x10\n#568 @ 531,331: 20x24\n#569 @ 459,576: 15x28\n#570 @ 127,520: 15x24\n#571 @ 466,572: 13x26\n#572 @ 935,555: 18x19\n#573 @ 461,946: 12x20\n#574 @ 918,162: 11x12\n#575 @ 279,305: 21x15\n#576 @ 650,714: 15x13\n#577 @ 486,776: 12x27\n#578 @ 81,253: 20x17\n#579 @ 906,18: 22x14\n#580 @ 306,26: 16x16\n#581 @ 184,724: 17x28\n#582 @ 751,225: 15x10\n#583 @ 26,783: 21x11\n#584 @ 103,41: 21x26\n#585 @ 283,5: 12x24\n#586 @ 733,375: 13x27\n#587 @ 193,973: 11x21\n#588 @ 47,306: 19x14\n#589 @ 964,124: 11x19\n#590 @ 856,321: 19x12\n#591 @ 437,655: 29x14\n#592 @ 368,437: 25x24\n#593 @ 537,154: 28x17\n#594 @ 574,451: 11x13\n#595 @ 963,342: 21x26\n#596 @ 250,492: 22x18\n#597 @ 962,740: 22x14\n#598 @ 697,784: 29x22\n#599 @ 153,323: 23x23\n#600 @ 534,713: 13x12\n#601 @ 75,73: 22x18\n#602 @ 166,755: 15x12\n#603 @ 273,622: 22x12\n#604 @ 660,432: 10x24\n#605 @ 119,965: 25x25\n#606 @ 751,294: 28x14\n#607 @ 676,358: 13x11\n#608 @ 204,588: 17x29\n#609 @ 792,828: 21x14\n#610 @ 163,141: 27x12\n#611 @ 159,33: 22x19\n#612 @ 158,364: 13x15\n#613 @ 711,929: 16x14\n#614 @ 811,654: 18x29\n#615 @ 903,828: 24x20\n#616 @ 323,111: 23x26\n#617 @ 891,258: 28x28\n#618 @ 551,826: 25x12\n#619 @ 660,935: 29x19\n#620 @ 41,27: 28x19\n#621 @ 590,491: 26x24\n#622 @ 174,31: 10x25\n#623 @ 563,817: 21x25\n#624 @ 961,746: 13x27\n#625 @ 599,403: 13x11\n#626 @ 852,661: 22x27\n#627 @ 84,473: 18x19\n#628 @ 580,98: 28x27\n#629 @ 138,506: 28x15\n#630 @ 981,544: 16x26\n#631 @ 418,908: 23x24\n#632 @ 371,926: 22x25\n#633 @ 701,291: 11x20\n#634 @ 66,889: 28x25\n#635 @ 641,689: 14x26\n#636 @ 177,960: 10x16\n#637 @ 60,39: 20x18\n#638 @ 378,445: 14x25\n#639 @ 113,794: 17x16\n#640 @ 197,627: 22x16\n#641 @ 324,530: 12x25\n#642 @ 8,206: 18x29\n#643 @ 359,893: 23x15\n#644 @ 795,198: 19x17\n#645 @ 239,900: 12x20\n#646 @ 504,343: 19x10\n#647 @ 708,677: 29x10\n#648 @ 63,697: 14x12\n#649 @ 403,203: 25x18\n#650 @ 305,183: 16x18\n#651 @ 609,447: 20x22\n#652 @ 508,394: 16x29\n#653 @ 178,144: 29x27\n#654 @ 870,490: 23x19\n#655 @ 130,855: 27x14\n#656 @ 333,563: 25x14\n#657 @ 862,252: 18x16\n#658 @ 40,384: 20x29\n#659 @ 639,299: 13x10\n#660 @ 869,856: 12x23\n#661 @ 35,495: 13x28\n#662 @ 545,322: 16x26\n#663 @ 671,566: 11x12\n#664 @ 342,10: 10x17\n#665 @ 932,940: 21x14\n#666 @ 726,480: 11x11\n#667 @ 249,632: 17x21\n#668 @ 939,830: 11x14\n#669 @ 812,241: 19x25\n#670 @ 739,641: 15x21\n#671 @ 307,873: 21x25\n#672 @ 845,687: 13x11\n#673 @ 953,676: 26x17\n#674 @ 137,960: 26x13\n#675 @ 853,498: 29x13\n#676 @ 396,599: 17x17\n#677 @ 431,839: 27x27\n#678 @ 745,290: 23x16\n#679 @ 336,849: 12x23\n#680 @ 852,492: 28x15\n#681 @ 467,781: 25x23\n#682 @ 525,668: 18x15\n#683 @ 941,189: 25x24\n#684 @ 130,323: 17x26\n#685 @ 410,612: 12x20\n#686 @ 967,499: 13x23\n#687 @ 947,263: 16x22\n#688 @ 158,434: 13x13\n#689 @ 920,298: 13x15\n#690 @ 361,415: 16x21\n#691 @ 302,600: 21x20\n#692 @ 65,356: 20x24\n#693 @ 855,427: 13x12\n#694 @ 877,366: 10x10\n#695 @ 138,415: 20x14\n#696 @ 818,653: 27x12\n#697 @ 829,540: 15x29\n#698 @ 636,121: 19x28\n#699 @ 324,960: 16x23\n#700 @ 680,614: 10x11\n#701 @ 380,819: 21x21\n#702 @ 873,107: 11x15\n#703 @ 42,644: 11x17\n#704 @ 62,860: 17x21\n#705 @ 728,704: 27x27\n#706 @ 604,488: 17x25\n#707 @ 418,252: 28x14\n#708 @ 715,408: 28x17\n#709 @ 747,225: 21x13\n#710 @ 124,787: 18x18\n#711 @ 394,376: 29x18\n#712 @ 182,552: 13x16\n#713 @ 129,424: 19x23\n#714 @ 852,526: 18x12\n#715 @ 849,634: 21x19\n#716 @ 220,22: 14x21\n#717 @ 327,870: 18x15\n#718 @ 627,170: 10x13\n#719 @ 108,768: 17x22\n#720 @ 870,303: 11x28\n#721 @ 616,917: 19x18\n#722 @ 118,316: 10x11\n#723 @ 476,355: 12x13\n#724 @ 235,946: 23x12\n#725 @ 310,723: 24x21\n#726 @ 28,483: 14x28\n#727 @ 746,202: 26x12\n#728 @ 736,404: 19x28\n#729 @ 973,143: 21x26\n#730 @ 226,9: 18x24\n#731 @ 717,746: 29x26\n#732 @ 793,668: 28x19\n#733 @ 446,177: 11x25\n#734 @ 86,243: 27x11\n#735 @ 73,13: 15x25\n#736 @ 225,706: 13x13\n#737 @ 852,950: 25x10\n#738 @ 502,427: 13x15\n#739 @ 950,504: 26x17\n#740 @ 761,290: 21x24\n#741 @ 90,378: 28x29\n#742 @ 431,457: 27x13\n#743 @ 196,666: 15x29\n#744 @ 439,105: 10x29\n#745 @ 788,261: 28x10\n#746 @ 947,904: 13x12\n#747 @ 328,973: 17x25\n#748 @ 255,758: 22x26\n#749 @ 320,426: 21x21\n#750 @ 735,258: 16x24\n#751 @ 883,333: 21x25\n#752 @ 5,510: 10x23\n#753 @ 389,972: 20x14\n#754 @ 671,937: 18x10\n#755 @ 728,342: 20x18\n#756 @ 247,617: 26x13\n#757 @ 301,241: 25x19\n#758 @ 971,653: 18x25\n#759 @ 807,30: 25x14\n#760 @ 318,525: 14x12\n#761 @ 640,618: 26x24\n#762 @ 788,253: 25x26\n#763 @ 393,192: 23x12\n#764 @ 522,920: 13x26\n#765 @ 232,204: 14x18\n#766 @ 953,862: 22x25\n#767 @ 41,239: 22x18\n#768 @ 760,535: 11x25\n#769 @ 84,868: 28x26\n#770 @ 920,703: 19x26\n#771 @ 678,544: 27x17\n#772 @ 814,591: 18x11\n#773 @ 15,181: 18x10\n#774 @ 725,661: 22x11\n#775 @ 241,691: 18x17\n#776 @ 84,81: 14x29\n#777 @ 909,818: 14x23\n#778 @ 357,478: 27x25\n#779 @ 537,878: 24x15\n#780 @ 812,832: 16x18\n#781 @ 528,394: 24x29\n#782 @ 411,603: 15x12\n#783 @ 94,727: 10x16\n#784 @ 968,146: 24x27\n#785 @ 755,195: 22x11\n#786 @ 948,802: 21x13\n#787 @ 509,266: 10x28\n#788 @ 626,463: 21x19\n#789 @ 766,203: 19x22\n#790 @ 450,28: 12x24\n#791 @ 290,589: 25x12\n#792 @ 294,195: 22x28\n#793 @ 481,949: 22x20\n#794 @ 732,708: 25x13\n#795 @ 292,706: 17x20\n#796 @ 502,6: 13x10\n#797 @ 119,382: 29x23\n#798 @ 300,953: 16x22\n#799 @ 978,231: 18x16\n#800 @ 119,409: 23x12\n#801 @ 390,634: 27x13\n#802 @ 958,124: 19x21\n#803 @ 423,437: 27x13\n#804 @ 394,299: 27x19\n#805 @ 973,910: 24x10\n#806 @ 462,133: 29x11\n#807 @ 529,750: 17x15\n#808 @ 80,744: 12x17\n#809 @ 56,99: 19x17\n#810 @ 926,721: 12x28\n#811 @ 916,569: 27x15\n#812 @ 723,376: 13x27\n#813 @ 852,824: 26x23\n#814 @ 953,944: 17x10\n#815 @ 786,937: 28x17\n#816 @ 188,705: 17x24\n#817 @ 543,456: 13x18\n#818 @ 676,918: 20x10\n#819 @ 97,706: 24x29\n#820 @ 722,656: 29x18\n#821 @ 182,328: 24x15\n#822 @ 490,397: 28x20\n#823 @ 247,217: 19x20\n#824 @ 217,592: 12x21\n#825 @ 452,201: 14x25\n#826 @ 348,612: 11x26\n#827 @ 652,935: 22x21\n#828 @ 650,925: 29x21\n#829 @ 495,247: 15x29\n#830 @ 594,561: 20x15\n#831 @ 220,460: 29x25\n#832 @ 642,117: 12x20\n#833 @ 235,533: 24x13\n#834 @ 285,755: 14x11\n#835 @ 739,473: 23x21\n#836 @ 268,387: 20x16\n#837 @ 459,275: 28x10\n#838 @ 493,572: 13x21\n#839 @ 320,720: 18x20\n#840 @ 168,757: 5x6\n#841 @ 496,368: 29x18\n#842 @ 419,45: 15x22\n#843 @ 749,524: 23x19\n#844 @ 413,68: 25x19\n#845 @ 250,698: 16x27\n#846 @ 101,697: 26x13\n#847 @ 968,332: 11x19\n#848 @ 953,137: 19x11\n#849 @ 134,396: 27x19\n#850 @ 891,465: 13x28\n#851 @ 40,931: 24x18\n#852 @ 170,775: 25x10\n#853 @ 187,26: 18x15\n#854 @ 677,28: 19x17\n#855 @ 752,274: 22x16\n#856 @ 217,376: 15x17\n#857 @ 379,249: 15x28\n#858 @ 308,661: 25x16\n#859 @ 514,704: 28x16\n#860 @ 281,235: 26x23\n#861 @ 430,650: 15x28\n#862 @ 784,125: 26x25\n#863 @ 212,123: 19x14\n#864 @ 946,191: 15x8\n#865 @ 405,399: 21x27\n#866 @ 443,484: 19x16\n#867 @ 769,626: 17x25\n#868 @ 119,786: 29x19\n#869 @ 890,20: 26x28\n#870 @ 12,161: 11x24\n#871 @ 957,869: 11x12\n#872 @ 332,736: 28x15\n#873 @ 178,967: 27x10\n#874 @ 323,441: 23x10\n#875 @ 229,436: 28x16\n#876 @ 734,578: 23x17\n#877 @ 433,614: 25x27\n#878 @ 30,160: 28x18\n#879 @ 217,279: 26x21\n#880 @ 621,130: 27x15\n#881 @ 465,601: 26x28\n#882 @ 231,580: 25x11\n#883 @ 300,512: 25x23\n#884 @ 422,258: 22x19\n#885 @ 308,530: 15x13\n#886 @ 164,202: 10x12\n#887 @ 412,181: 18x21\n#888 @ 121,766: 25x18\n#889 @ 177,945: 14x16\n#890 @ 30,162: 13x26\n#891 @ 437,565: 23x27\n#892 @ 454,280: 26x27\n#893 @ 379,526: 23x12\n#894 @ 834,707: 13x5\n#895 @ 859,357: 24x28\n#896 @ 891,303: 16x14\n#897 @ 385,116: 28x20\n#898 @ 53,12: 24x22\n#899 @ 428,979: 24x20\n#900 @ 916,602: 28x17\n#901 @ 19,739: 16x21\n#902 @ 871,32: 18x22\n#903 @ 207,110: 12x16\n#904 @ 932,15: 26x19\n#905 @ 691,232: 11x18\n#906 @ 965,799: 20x20\n#907 @ 241,526: 24x23\n#908 @ 931,915: 18x14\n#909 @ 662,584: 24x14\n#910 @ 30,148: 10x17\n#911 @ 50,466: 24x29\n#912 @ 265,504: 22x10\n#913 @ 59,857: 28x24\n#914 @ 170,780: 18x27\n#915 @ 436,51: 27x12\n#916 @ 921,139: 16x17\n#917 @ 532,377: 16x23\n#918 @ 237,188: 20x27\n#919 @ 672,653: 11x20\n#920 @ 333,546: 13x18\n#921 @ 830,191: 25x27\n#922 @ 745,644: 24x23\n#923 @ 877,371: 17x28\n#924 @ 926,426: 12x19\n#925 @ 731,977: 13x21\n#926 @ 12,122: 14x14\n#927 @ 65,896: 17x28\n#928 @ 126,609: 29x13\n#929 @ 557,244: 24x22\n#930 @ 80,21: 14x24\n#931 @ 725,184: 18x28\n#932 @ 654,181: 18x12\n#933 @ 439,283: 14x21\n#934 @ 974,95: 26x15\n#935 @ 235,9: 10x17\n#936 @ 306,422: 24x21\n#937 @ 383,952: 29x10\n#938 @ 738,201: 23x15\n#939 @ 254,624: 26x19\n#940 @ 421,672: 17x14\n#941 @ 221,751: 12x28\n#942 @ 730,768: 13x18\n#943 @ 342,13: 17x18\n#944 @ 594,639: 24x17\n#945 @ 127,323: 16x12\n#946 @ 861,701: 13x10\n#947 @ 696,541: 28x24\n#948 @ 804,363: 12x25\n#949 @ 958,296: 29x13\n#950 @ 126,868: 16x20\n#951 @ 916,483: 26x15\n#952 @ 318,52: 19x22\n#953 @ 240,938: 18x11\n#954 @ 849,275: 16x11\n#955 @ 712,412: 27x26\n#956 @ 913,613: 14x15\n#957 @ 756,476: 20x18\n#958 @ 656,906: 14x11\n#959 @ 461,633: 12x26\n#960 @ 398,208: 19x12\n#961 @ 490,333: 14x14\n#962 @ 816,658: 16x27\n#963 @ 579,562: 17x19\n#964 @ 961,552: 16x29\n#965 @ 393,947: 27x19\n#966 @ 68,464: 18x13\n#967 @ 318,537: 21x13\n#968 @ 904,171: 28x13\n#969 @ 629,974: 23x22\n#970 @ 415,366: 15x19\n#971 @ 401,976: 26x13\n#972 @ 18,44: 26x12\n#973 @ 18,804: 27x26\n#974 @ 134,446: 25x22\n#975 @ 158,464: 19x13\n#976 @ 623,437: 9x3\n#977 @ 376,181: 19x15\n#978 @ 738,397: 26x27\n#979 @ 338,207: 20x23\n#980 @ 218,403: 27x17\n#981 @ 530,937: 27x10\n#982 @ 134,958: 11x19\n#983 @ 675,514: 13x17\n#984 @ 891,383: 10x27\n#985 @ 935,748: 15x11\n#986 @ 943,956: 25x22\n#987 @ 18,649: 11x14\n#988 @ 740,243: 21x10\n#989 @ 404,309: 14x22\n#990 @ 134,19: 13x19\n#991 @ 406,381: 14x23\n#992 @ 428,395: 18x13\n#993 @ 121,971: 18x15\n#994 @ 62,794: 25x17\n#995 @ 134,403: 20x13\n#996 @ 347,567: 20x29\n#997 @ 615,358: 3x18\n#998 @ 852,28: 15x16\n#999 @ 259,379: 27x24\n#1000 @ 268,617: 20x20\n#1001 @ 956,657: 20x22\n#1002 @ 924,876: 26x18\n#1003 @ 748,411: 12x14\n#1004 @ 882,249: 29x10\n#1005 @ 979,25: 21x17\n#1006 @ 559,126: 25x28\n#1007 @ 569,712: 28x13\n#1008 @ 623,781: 25x16\n#1009 @ 422,607: 25x10\n#1010 @ 613,904: 11x26\n#1011 @ 128,411: 16x17\n#1012 @ 9,195: 22x12\n#1013 @ 83,362: 14x23\n#1014 @ 617,149: 26x18\n#1015 @ 382,436: 12x21\n#1016 @ 613,855: 23x16\n#1017 @ 956,222: 24x17\n#1018 @ 400,977: 12x15\n#1019 @ 181,333: 18x17\n#1020 @ 610,174: 25x14\n#1021 @ 825,26: 13x24\n#1022 @ 296,778: 26x14\n#1023 @ 465,135: 24x16\n#1024 @ 638,807: 10x14\n#1025 @ 547,697: 19x15\n#1026 @ 103,663: 15x21\n#1027 @ 71,113: 20x28\n#1028 @ 325,498: 27x28\n#1029 @ 525,808: 23x19\n#1030 @ 828,949: 15x27\n#1031 @ 46,699: 11x18\n#1032 @ 676,396: 29x29\n#1033 @ 552,889: 25x27\n#1034 @ 943,865: 15x22\n#1035 @ 480,310: 27x20\n#1036 @ 714,270: 29x17\n#1037 @ 647,711: 18x15\n#1038 @ 590,431: 24x16\n#1039 @ 675,554: 20x26\n#1040 @ 287,13: 17x20\n#1041 @ 886,310: 16x28\n#1042 @ 219,353: 15x22\n#1043 @ 215,12: 14x17\n#1044 @ 307,541: 29x22\n#1045 @ 151,734: 22x22\n#1046 @ 517,785: 14x24\n#1047 @ 617,89: 15x26\n#1048 @ 726,978: 13x22\n#1049 @ 404,546: 25x29\n#1050 @ 395,372: 23x15\n#1051 @ 249,583: 21x21\n#1052 @ 941,455: 23x15\n#1053 @ 801,651: 19x11\n#1054 @ 186,120: 10x22\n#1055 @ 562,177: 11x10\n#1056 @ 504,441: 14x29\n#1057 @ 401,274: 11x16\n#1058 @ 69,463: 24x28\n#1059 @ 409,955: 20x27\n#1060 @ 856,263: 26x20\n#1061 @ 747,821: 23x11\n#1062 @ 243,158: 20x22\n#1063 @ 694,957: 27x10\n#1064 @ 370,666: 29x23\n#1065 @ 74,640: 14x24\n#1066 @ 330,223: 11x21\n#1067 @ 93,659: 27x10\n#1068 @ 916,571: 20x24\n#1069 @ 681,208: 10x26\n#1070 @ 62,125: 27x28\n#1071 @ 163,527: 14x24\n#1072 @ 353,71: 23x22\n#1073 @ 938,1: 12x27\n#1074 @ 561,956: 20x26\n#1075 @ 850,491: 29x23\n#1076 @ 762,231: 16x28\n#1077 @ 391,96: 13x24\n#1078 @ 359,435: 14x17\n#1079 @ 150,326: 15x20\n#1080 @ 615,695: 29x17\n#1081 @ 477,123: 24x14\n#1082 @ 851,99: 12x26\n#1083 @ 328,627: 22x29\n#1084 @ 925,616: 14x23\n#1085 @ 59,897: 23x19\n#1086 @ 152,379: 23x15\n#1087 @ 255,415: 19x22\n#1088 @ 921,476: 19x24\n#1089 @ 946,215: 23x16\n#1090 @ 384,725: 23x11\n#1091 @ 612,353: 18x29\n#1092 @ 443,193: 22x20\n#1093 @ 41,141: 18x10\n#1094 @ 288,10: 24x19\n#1095 @ 623,908: 11x20\n#1096 @ 424,159: 27x19\n#1097 @ 896,878: 16x29\n#1098 @ 466,334: 27x18\n#1099 @ 589,755: 23x25\n#1100 @ 341,592: 13x27\n#1101 @ 220,387: 16x12\n#1102 @ 958,510: 15x9\n#1103 @ 252,435: 11x23\n#1104 @ 143,853: 15x10\n#1105 @ 841,205: 14x29\n#1106 @ 439,456: 11x19\n#1107 @ 937,828: 18x21\n#1108 @ 725,650: 24x26\n#1109 @ 851,222: 19x26\n#1110 @ 248,423: 5x4\n#1111 @ 740,325: 10x23\n#1112 @ 474,960: 20x22\n#1113 @ 943,946: 11x26\n#1114 @ 590,580: 18x25\n#1115 @ 472,370: 19x17\n#1116 @ 804,427: 29x16\n#1117 @ 679,42: 16x14\n#1118 @ 318,272: 12x28\n#1119 @ 372,878: 10x12\n#1120 @ 685,223: 16x26\n#1121 @ 853,19: 23x12\n#1122 @ 532,63: 27x18\n#1123 @ 456,320: 28x19\n#1124 @ 888,828: 25x24\n#1125 @ 348,461: 19x25\n#1126 @ 873,395: 15x13\n#1127 @ 705,451: 27x28\n#1128 @ 730,589: 11x26\n#1129 @ 667,727: 20x24\n#1130 @ 101,130: 24x23\n#1131 @ 563,688: 28x21\n#1132 @ 5,143: 26x19\n#1133 @ 522,671: 19x23\n#1134 @ 481,350: 19x23\n#1135 @ 4,125: 25x18\n#1136 @ 118,943: 26x24\n#1137 @ 371,834: 20x26\n#1138 @ 523,751: 22x10\n#1139 @ 92,181: 18x16\n#1140 @ 904,145: 20x17\n#1141 @ 280,513: 25x28\n#1142 @ 43,61: 17x19\n#1143 @ 602,643: 12x9\n#1144 @ 499,293: 12x10\n#1145 @ 155,345: 28x25\n#1146 @ 572,503: 17x21\n#1147 @ 537,595: 28x12\n#1148 @ 256,841: 18x25\n#1149 @ 621,431: 16x14\n#1150 @ 657,258: 23x12\n#1151 @ 305,436: 24x18\n#1152 @ 907,820: 12x15\n#1153 @ 65,744: 26x23\n#1154 @ 230,861: 18x17\n#1155 @ 333,12: 23x24\n#1156 @ 248,418: 23x27\n#1157 @ 469,958: 19x12\n#1158 @ 35,931: 11x14\n#1159 @ 288,563: 10x29\n#1160 @ 43,378: 14x11\n#1161 @ 88,739: 12x25\n#1162 @ 804,900: 21x29\n#1163 @ 381,76: 22x24\n#1164 @ 30,502: 16x14\n#1165 @ 527,603: 12x14\n#1166 @ 956,209: 15x19\n#1167 @ 960,546: 29x14\n#1168 @ 188,744: 10x19\n#1169 @ 175,744: 12x29\n#1170 @ 133,778: 22x21\n#1171 @ 174,205: 14x20\n#1172 @ 690,959: 21x12\n#1173 @ 619,491: 13x22\n#1174 @ 813,594: 18x12\n#1175 @ 876,607: 29x13\n#1176 @ 900,6: 19x18\n#1177 @ 967,721: 13x25\n#1178 @ 189,232: 19x26\n#1179 @ 827,553: 24x18\n#1180 @ 402,245: 28x17\n#1181 @ 162,896: 14x17\n#1182 @ 914,1: 22x27\n#1183 @ 208,134: 22x19\n#1184 @ 526,331: 29x22\n#1185 @ 145,202: 22x13\n#1186 @ 409,861: 25x13\n#1187 @ 801,730: 28x18\n#1188 @ 624,487: 20x15\n#1189 @ 393,687: 15x29\n#1190 @ 279,958: 15x29\n#1191 @ 653,395: 26x27\n#1192 @ 179,26: 10x19\n#1193 @ 260,76: 29x25\n#1194 @ 859,406: 18x10\n#1195 @ 296,932: 21x23\n#1196 @ 301,974: 16x26\n#1197 @ 727,757: 29x10\n#1198 @ 657,397: 17x20\n#1199 @ 442,937: 18x26\n#1200 @ 29,508: 19x15\n#1201 @ 636,245: 24x12\n#1202 @ 960,402: 28x12\n#1203 @ 139,256: 17x29\n#1204 @ 168,117: 23x15\n#1205 @ 770,785: 27x29\n#1206 @ 752,276: 21x21\n#1207 @ 883,889: 13x13\n#1208 @ 62,918: 21x10\n#1209 @ 163,517: 17x12\n#1210 @ 470,613: 19x11\n#1211 @ 451,661: 26x29\n#1212 @ 211,38: 19x13\n#1213 @ 539,439: 19x28\n#1214 @ 339,229: 23x21\n#1215 @ 591,542: 26x25\n#1216 @ 41,643: 29x21\n#1217 @ 806,823: 14x19\n#1218 @ 628,245: 11x18\n#1219 @ 378,619: 20x19\n#1220 @ 250,444: 14x22\n#1221 @ 713,891: 17x12\n#1222 @ 144,430: 27x21\n#1223 @ 125,200: 27x29\n#1224 @ 525,664: 15x22\n#1225 @ 369,485: 23x27\n#1226 @ 868,564: 29x20\n#1227 @ 642,700: 11x12\n#1228 @ 951,6: 14x25\n#1229 @ 532,331: 24x13\n#1230 @ 937,480: 15x12\n#1231 @ 81,65: 27x25\n#1232 @ 153,263: 11x26\n#1233 @ 970,364: 14x19\n#1234 @ 143,454: 26x27\n#1235 @ 495,574: 7x15\n#1236 @ 850,209: 20x17\n#1237 @ 126,965: 23x29\n#1238 @ 870,675: 23x28\n#1239 @ 308,376: 14x28\n#1240 @ 578,755: 14x24\n#1241 @ 844,481: 23x22\n#1242 @ 734,769: 25x16\n#1243 @ 723,219: 22x27\n#1244 @ 159,695: 23x18\n#1245 @ 754,285: 26x22\n#1246 @ 345,974: 26x23\n#1247 @ 29,69: 27x12\n#1248 @ 181,784: 15x12\n#1249 @ 682,616: 5x6\n#1250 @ 208,28: 27x28\n#1251 @ 665,234: 18x23\n#1252 @ 961,288: 11x22\n#1253 @ 363,57: 19x21\n#1254 @ 662,137: 25x24\n#1255 @ 7,41: 21x15\n#1256 @ 693,784: 12x28\n#1257 @ 186,543: 29x13\n#1258 @ 596,354: 13x10\n#1259 @ 824,705: 28x16\n#1260 @ 468,614: 25x20\n#1261 @ 542,10: 28x18\n#1262 @ 231,942: 18x29\n#1263 @ 979,39: 12x13\n#1264 @ 345,77: 16x25\n#1265 @ 715,127: 14x28\n#1266 @ 618,560: 16x16\n#1267 @ 687,397: 22x25\n#1268 @ 880,229: 16x18\n#1269 @ 806,358: 29x16\n#1270 @ 106,846: 23x29\n#1271 @ 61,299: 16x14\n#1272 @ 644,818: 19x22\n#1273 @ 557,157: 29x24\n#1274 @ 29,710: 25x28\n#1275 @ 207,585: 21x27\n#1276 @ 83,715: 26x14\n#1277 @ 325,51: 13x10\n#1278 @ 717,97: 16x12\n#1279 @ 602,139: 26x11\n#1280 @ 26,933: 29x12\n#1281 @ 815,755: 13x22\n#1282 @ 786,950: 23x21\n#1283 @ 403,978: 29x19"},e858:function(n,e,a){"use strict";a.r(e),e["default"]="Due to what you can only assume is a mistranslation (you're not exactly fluent in Crab), you are quite surprised when the crab starts arranging **many** cups in a circle on your raft - **one million** (`1000000`) in total.\n\nYour labeling is still correct for the first few cups; after that, the remaining cups are just numbered in an increasing fashion starting from the number after the highest number in your list and proceeding one by one until one million is reached. (For example, if your labeling were `54321`, the cups would be numbered `5`, `4`, `3`, `2`, `1`, and then start counting up from `6` until one million is reached.) In this way, every number from one through one million is used exactly once.\n\nAfter discovering where you made the mistake in translating Crab Numbers, you realize the small crab isn't going to do merely 100 moves; the crab is going to do **ten million** (`10000000`) moves!\n\nThe crab is going to hide your *stars* - one each - under the **two cups that will end up immediately clockwise of cup `1`**. You can have them if you predict what the labels on those cups will be when the crab is finished.\n\nIn the above example (`389125467`), this would be `934001` and then `159792`; multiplying these together produces **`149245887792`**.\n\nDetermine which two cups will end up immediately clockwise of cup `1`. **What do you get if you multiply their labels together?**"},e9e1f:function(n,e,a){"use strict";a.r(e),e["default"]="initial state: ###....#..#..#......####.#..##..#..###......##.##..#...#.##.###.##.###.....#.###..#.#.##.#..#.#\n\n..### => #\n..... => .\n..#.. => .\n.###. => .\n...## => #\n#.### => .\n#.#.# => #\n##..# => .\n##.## => #\n#...# => .\n..##. => .\n##.#. => .\n...#. => .\n#..#. => #\n.#### => #\n.#..# => #\n##... => #\n.##.# => .\n....# => .\n#.... => .\n.#.#. => #\n.##.. => .\n###.# => #\n####. => .\n##### => #\n#.##. => #\n.#... => #\n.#.## => #\n###.. => #\n#..## => .\n#.#.. => #\n..#.# => ."},ebce:function(n,e,a){"use strict";a.r(e),e["default"]='62: 110 112 | 92 68\n85: 38 92 | 102 110\n63: 92 6 | 110 23\n82: 110 | 92\n99: 110 122 | 92 54\n33: 110 61 | 92 103\n24: 110 92 | 110 110\n76: 3 92\n109: 26 92 | 81 110\n94: 92 78 | 110 28\n17: 110 115\n61: 92 110 | 110 82\n25: 9 110 | 61 92\n114: 47 110 | 63 92\n21: 30 82\n103: 82 82\n69: 5 110 | 43 92\n73: 110 116 | 92 69\n52: 92 81 | 110 103\n22: 119 92 | 50 110\n108: 37 92 | 35 110\n2: 71 92 | 20 110\n119: 103 110 | 88 92\n102: 101 92 | 49 110\n92: "b"\n91: 92 54 | 110 3\n64: 92 115 | 110 24\n68: 92 30 | 110 81\n89: 115 110 | 26 92\n80: 61 110 | 81 92\n19: 110 73 | 92 1\n16: 115 92 | 103 110\n15: 123 110 | 58 92\n115: 110 110 | 92 110\n70: 92 30 | 110 9\n40: 110 96 | 92 99\n50: 88 110 | 115 92\n18: 26 92 | 48 110\n81: 92 110\n107: 110 30 | 92 115\n38: 84 110 | 12 92\n44: 40 92 | 66 110\n27: 125 92 | 2 110\n41: 92 128 | 110 118\n56: 81 92 | 30 110\n88: 110 92\n13: 75 92\n55: 75 110 | 26 92\n12: 13 92 | 52 110\n28: 122 92\n121: 75 92 | 24 110\n113: 92 81 | 110 54\n98: 103 110 | 3 92\n6: 92 62 | 110 126\n96: 75 92 | 9 110\n9: 82 92 | 92 110\n0: 8 11\n32: 104 92 | 91 110\n116: 110 32 | 92 67\n104: 92 81 | 110 30\n5: 110 109 | 92 105\n117: 110 22 | 92 59\n128: 92 24 | 110 9\n66: 92 98 | 110 21\n46: 76 92 | 89 110\n36: 92 90 | 110 127\n20: 110 115 | 92 3\n4: 48 110 | 30 92\n26: 92 82 | 110 110\n39: 30 110 | 115 92\n127: 61 110 | 9 92\n84: 110 104 | 92 78\n100: 97 92 | 68 110\n106: 110 7 | 92 18\n123: 110 64 | 92 68\n111: 110 74 | 92 46\n42: 114 110 | 19 92\n58: 28 92 | 16 110\n47: 110 15 | 92 124\n54: 92 92 | 110 92\n51: 110 117 | 92 111\n130: 92 41 | 110 106\n30: 92 92 | 110 110\n72: 17 110 | 109 92\n129: 130 92 | 108 110\n14: 85 110 | 51 92\n53: 87 92 | 44 110\n112: 92 30 | 110 122\n45: 61 82\n105: 75 92 | 61 110\n90: 110 122 | 92 9\n122: 110 92 | 92 110\n83: 110 33 | 92 56\n118: 110 61 | 92 75\n74: 120 92 | 78 110\n29: 110 65 | 92 60\n31: 14 92 | 10 110\n110: "a"\n87: 36 110 | 94 92\n57: 92 48 | 110 81\n78: 92 115 | 110 54\n97: 92 48 | 110 122\n1: 110 27 | 92 34\n95: 92 107 | 110 86\n79: 110 55 | 92 77\n37: 92 109 | 110 25\n126: 4 110 | 39 92\n101: 45 92 | 80 110\n59: 110 70 | 92 105\n7: 61 92 | 48 110\n48: 92 92\n35: 104 92 | 57 110\n120: 48 92 | 48 110\n34: 29 110 | 79 92\n93: 54 92 | 26 110\n71: 115 110 | 61 92\n125: 121 110 | 45 92\n60: 122 92 | 54 110\n86: 54 110 | 9 92\n49: 97 110 | 91 92\n3: 110 110\n23: 110 95 | 92 72\n65: 92 103 | 110 115\n10: 129 110 | 53 92\n8: 42\n11: 42 31\n77: 103 92 | 81 110\n67: 93 92 | 112 110\n75: 92 110 | 92 92\n124: 83 110 | 100 92\n43: 92 113 | 110 56\n\nabbabbbbaaabbbbabbbababaaabaabaabbaabbba\nbabaaaabbaaabbbbbbbbbaba\nbbbbaaaabaaabbabaababbbabaaaaaababaabaaaaabbabbb\nbaabbbbbbbaababaababbbabbababbbbaaaabbbbbabaabbabaaababb\naabbaabbbbbaabbbbaaabaab\nbbaaabbaaaabababbbbaabaa\nabbbbbababbaabaabaaaabbbaaaabaab\nabaabbbbabaaabaabbbbaabbabaabaaabbaaabbbabbaabbbaabbbabb\nbaabbbbbaabbaaabbabbabaa\nbabbabbbabaabaaaaabbababaaaabaaaabbababbabababbaaababaaa\naaababaabababbbbabaaaaab\nbbabaabaabbaabaabbbbbbab\nbbbbaaaabaaabbabbbbbbaababaabbaabaabbaab\naaabbabbbabababbaabbabba\nabbbbbbabbababbbbabbabbabbabaabbaaabbaab\nbbbbabaaabbaabbabaaabbbababababbabaabbaabbabbbaa\naabaaaaabaabaaabaaabbaababbbaaababbbbbbabbbbabababbbabbaabaaabaa\nbaaaababbaaaaaabaabbbabbaaabaaab\nabbabbbaaabaaabbaaaaabbb\nababaaaababaaaaaaababbaa\nbabbabbabbababababbaaabb\nbbabbaabaaabbabbababaaababababaaaaababaabbaababb\nbbababbbbbabaaabaaabaaaa\nabbaaabaaaabaabbbbbaaaba\naaaabababbbbabaabaabaaabbabbabbabaaababaaabaabbaabaaabbabbaaaabababbbaab\naabaababaaaaaabbaabaaabbbabbbaaabaabaaaaabbaaaba\nbababaaaabbaabbbaaaabbab\nabababaabbbbbaababbaaaabbabaabbbabbbbaaaabaaabbbabbbbaba\nababababababbbaaababbbba\nababbabbabaabbbaabaaaabbaaaaaaaaaaabaaaabbbababb\naaabbabbbaaabaaaabaabaaa\nabbbbabbabbbbaaabbbbabbbbabaaaababbbabaababbaabbabaaabba\nbbbababaaaaabaaabaabaaabbaababba\naaaabbbbbbabababbbaaabab\naabaababbbbbaabaabaaabaaabababbbbababbabbbbabbaa\nbabbabbaabababaaabbbabaa\nbaaaaaaabbabababbbaabaaa\naaababaaaaabaaaaabaaabbaabaaaaab\nabaaabaabaaabaabaaabaaaabbaabaaabbbbbbab\naaabbbabaababbbbbaabaaba\nbababbbaabababaabababaab\nbababbbaaaabaaaabbbaaabbabbaaabb\nababaaabbababaaabbabbbbabaabaabaabaababb\nbbabbaabbabaabbbabbabbbaaabbaabaaaaaaaababbbbaaaabbaabab\naaababababaaaabbaaaaabba\nbabaababbbbabababaabaaaaababbabaabaaabba\naaaabaaaabababaaaaabbaaa\naabaaaaababbbaaaabbbabababbabbaa\nbbbbaababaabbbabbbbabbaa\nbaaaaaabaabaaaaaabbaabbaabbabbbbbbbabbabbbbbabbbabaabbab\nababababbaaaaaabaabaabbb\nabbbababababbbaababbaabb\naabbaaabaabbaabbaaaaaabbbbaaabbaabbbaaaa\nbbabbbbaaababaababbbbbbaabbbbbabbabbabbb\nbabbbabaabaabbbabaabbaab\nbbabbbabababbbabaababbbaaabaaaababbbbaba\nbabbaaaabbbabbbbabbaaaba\nbbbbababbbababbbbbabbbabbbaabbbbaaabbaaa\nababbbaababbbabaaaaaaabaabaaaaaabbabaabbaaaaaabababaaabaaaaaababbbbabbbbaababbaabbbbaaab\naabbbabbaabbaabbbaaabababaaabaabbbabbaba\nbbbabaabbbabbaabbaabaaaababbababababbbba\nabaabbbabaaaaabbabaaabbb\nbababbabaabaabaaaabbbbaabbababba\naabbaaabaabbbabbaababaaa\nbaababbbbbabaabaaaaabbab\nbbbbabbaabbbbbbbabbbaaaaaaabaabababaaaaaabababbbbaababab\nbaaaabbabbaaaaaababaaaaaabaabbbbababbbbb\nbaababbbabbbbaaabbaabaaa\nbbbabbabbbbbabbbbaaaaaaaaaabbabaabaababb\nbbbbbbaabaabbbaaabbbaaba\nbbbababaaabbbbbbbbbbababaabaabaababbbbba\nabbaabbaabbaaaababaaaaababaabaaaaabbbaabaabaaaabaabbabbbbabaabba\nbaaaabbbaaabbaabaabbbabababbaaab\nabaaabaaabababaababbbbbb\nbbbbaaaabbabaabaabaaabaabaabbaaa\nbbaaabbbbaaaaaaabaabbbbbbbbaabbbaaaaabbb\nabbaabbabaaabbabaaabbbbabbababba\nbaabaaaaaabbabaaaabaabbbbaabbaab\nbabbbababaaababaabaabbaa\naabbbbaaababbbaaabaaaaab\nbbaaabbbaabaaabaabbbabba\nbabbbaaabababaaababbbaab\naaaaaaaaabbbababaaabbaab\nbbaabaabbabbbaaababbbaaabbbbbaabbbababba\nababababbaaabbabbababbbbbbbbabba\nabbaabbababbbabaabbabbbabbaaaaababbbabababaabbaa\naabbbabaaaabbbbbababbbbbbabbaaabbabaababaabbabab\nbabbbaaababaabbbbbbabbaa\nababaabaaabbaaababaabbbb\naabaabaaaabbbbaaaabbabaa\nbaaaabbbbbbababbaabaababaabbabaaababbbbabaaabbbbbbbaaabbabbbbbbaaaaaaabaaaaaabbbbbbaaaba\nbaaabbabbabbbabaaaabaaba\nbaaaabbbbbbbbaababbbbbbb\nbaaaabbaaabbbbbbaababaaa\naabaababbaaaababaabbabba\naabbbbaaaabbaaaabaababba\nbbaaabaaaaaabbbabbabaabababbabbaaababbababaabbab\nabbabbbaaabaaabbabbabbaa\naaaaabbbbbbbbbbbabaababbababbbbabbbabbbaabaababb\nbbbbababbbabaabababbbabaaabaabababaaaabbabaabbabbbaabbab\nbabbbabbbababbbbabbaabbbabaaaabbbbabbaabaabbabaaabbbbaab\nbaabaabbaaababbaaababbbbbbaaabbbabaaaaabbbbbaaabbbbaaaaa\nabaaababaaaabababbaabbab\nabababaaaaaabaaababbabba\nabbbaaabbaabbbbbbaaababb\nbaabbbbbbbbbabbbbbaabbba\nabaaabaaabbbbbabbbbabbba\nbabbbabbaabaabaaabaaaaaa\naaabbabbabaaababbbbabbabbabaaaabaabbababbbbbabba\naabaaaaaababaaaabababaaaabbbbbbababbaabaabbbaaaa\nabaaaabbbbbabaaaaabbbbababaabaaa\naaabbbabaaaabaaaabbabbab\nbbbbaabbbabbbabbbaaabbbabaabaabbbabbabbbabaaabbaabbababb\nbabaabbbbbbbababbbaabaababbaaabb\nabbbbabbbbbbbbbababbaabb\nabaaaabbaabbbbaabaabbbbbbabbabbababbbbbbabbabbaabababaab\naaabbabbaaaabbbaabbbabaa\nbabbbabaabababaaababbaba\nabbaabbababaaaaaaababaaa\naabbbabbabababbbabbbbbaa\naababbbbbaaaaabbbaabbaab\naabbaabaaabaabaaaabbbaab\nabaabbbabababaaaaabababb\nabbbbbbaabaaabaababbabbb\nbaabaaaaaaabbabaaabbaabbaabbaaab\nbaababbaababbaabbbbabbaa\nababababbabaaaabbaaabaab\nabbabbbbabbbababaabababb\nbbabbabbbbabaaabaabbbbba\naaaaaabbbaaaaabbabbababb\nbaaabaaababbbabaaababbbbbbaabbab\nbbbbbbbababaababaababbaa\nbaaaaaaaabaabbbaababbabbbaaaaaabbaabaaaaababbbbaaabaabaa\naaabbbabbaaaabbbbabbbabababaaabababaabba\nbbbabbabababbabbbabaaabb\nbbaaabaaaaaaaaaababaaabb\naabaabbaaabbbaabbaaabaaaababbaab\nabbbbaaabbabbbbbbbbbbbaabbabbabbbabbbbab\naaababaabaababaabbbaabab\nbaabaabbbbabbbabababbaaa\nabbbaaabaabaababbbbbababababbaabbabaaaaaabbbbbaa\naabbbbbbbbbabbbbabaabaab\nbababaaabbbabbbbababbaba\nbbabaabbbababaaabaaaaabb\nbbbbbbaababaababababbbbb\nbababbbbabbbbbabbaabaaba\naabaababbbbbbbbabaabbbabbbabbbabbbabbaabaabaaabbababbaba\nababbbabbaaabbabababbbbbababaabaaabaabaabbbaaaaaaaaabbaabbbababbaaabbabbbbaabbaa\nbbabbbabaaabbabaabaabaaa\nbbabbaabbbaaaaabababbbbb\nbbbbbbaaababbabbaababbaa\nbbbbbbaabbabababaaaabaab\nabbaaabbabbababbabababbaaabbbbababbaabbbabbbbbab\nbbbbababbabbbabbbbaabaaa\nbbaabaabbababbaaaabbaaaabaaaaaba\nabbaabaaababbabbabbbabaaaaaabaab\nbaaaababbbabbabbbbbbaabbabbaaaaabaabbbaaaaabbaaaabaaaaab\nbbbbbbbabaabaaabbbabbbbaaabbbbababbaaabb\nbbaaabaaabbaaaaaaaabbaaa\nbabaabbbabbabbbbbaaabbbbababaabb\nbbbbabbbbababbbabbabbbaa\nbaaaaaababbaaaabbbbaabba\nabbbaaabbbbbababaabbbbbb\naabbaaaaaababaabbabaabbbbabbaabaaaaaaaaaaababbab\naaabbabbbbbabababbbbbbab\nbabaabaabbbabaaaaaabbababaababba\nabaabbbaabbbbbababaaaaab\naaabbabbaabababbaabbbbba\naabaaabaaaaabbbaabbbaabaababbbbbbbbbaabbbbbbaabbbaabbaaa\nabbaabbbbaaaabbbabbbaabb\nbbaaabbaaaababaabbbabaababaaaabaaabbbaabbbaababbbaababba\nbabaababbabaaaaaaaaaabaabbbbbaababbabbaa\nbbaaabbabbabbbabaaaaabbb\naaaabababbababbbaabbbbababbaaaaabaaaaaba\nbbabaabbbbbbbbbaabaaaaab\nbbabaaababaaababbaaaabaa\naabbaaabaabbbabaabbbabaa\nbababaaabbbbbbbabababaaaabaaaaab\nabaaaabbaaaaababaaaaaaba\nbaaaabbaaaababababaabaabbaaaaabbbaababba\nbbababbbbbaaaaabaabababb\nbbbabbbbbbbbaababbbbaabaabbbbbaa\nbbbabbbbabaabaaaababbbbaababaabb\nbbbbababbabbbabbbabbabaa\nbaaabababaabbbaabbabaabababbabbaabbaabab\naaababbabaaaaaaabbbaaaba\nbaaaaaabaabaaabaaabaabba\nbabbaabababababbaaabbaaa\nbbbababaaaaaaaabbbbaaaab\nbababbaabbbabaabbaaaaaba\nabababbbbbbbabababbabbaa\naaabbbabbaaabbabaabababa\naaaabbbababaabbbabbaaaaaabaababbbabbabab\nbbaaaaababaaabaababaaaabbabaabbbaaaabbaa\nabbabaabaabbaaabbababbbabaaabaab\nabbbababaaabbabbaaabbaab\nabbabbbbabaaababaaabbbaa\naababaababbaabbbaababbaa\nbabaabaaaaabaaabbbbbaaab\naababbbbbaababbbbaabbabb\nbbbbaaaaabaaaaabbbbaabaabbababbabaaabbaabbbaabab\nababababbaaaabbbbbbaabbbabbbbbaa\nbbabbbbbbbababbbbabbabab\nbbbbbbbbbbabbaabbabbbaaaaabbbabaaabbbbba\nbbabbbabaabbaaabbbbabbba\naabaabbbbbaababbaabababa\nbbaabaabbbbbababbbbbbaaa\nbababbaaaaaaaabbabbbbaaabbbabaababbbbababbabbbaaabbbaabb\naabbbbbbbbbbabaabbbbbaaa\nababbbaabbbaabbbbaaaaaabababaaababbbababbbabababbbaabbbb\naabbbbbbbaabbbabbbabbaaa\nbababbababaaaabbabaabbab\naababbbbababababaaabbaaa\nbbbbababbbabbbabbaababaa\nabbbbaaabbaaabbbbaaaaabbaaaaabba\nabbaabbabbaabaabbabbaabb\nbaaaabbbaaabbbbabaaabaab\nbaaabaaabbaababaaaabbaab\nbaabbbabbbbbbaabbabaabbbbaababab\nbbabababaaabbbababaababa\naabaabaabbabbbbababbaaababbbabbbaabbabaabbbbabbabbbbbbbb\nabaaaababbbbababaabababb\nabbabbbbaaaabbbbabbabbbbababaabb\naababaabaaaaabaababaaaba\nabbbbaaabbaaaaabaaabbaaa\naabaaabaaabbaaaaaaaabaab\nbbaaabbbbbbababaaabababa\nbbbabbabbaaaababbabaabbbaabbbbbbabbaaaaabbababba\nbbbbababbaaaaabbabbbbbabbaabbabb\nbbabaabbbbbbaabbbaabbbabaabaaaaabaabbaaa\nabbaaaabbbbbabbbabaabaaa\naaabbbbaaaababbabaaaaaba\nbababbaabaaaabbaaaabbaaa\nababababaaaabaaaababbaab\naabaaababbabaabaabaabbbb\nabbaabbbbbbbabbbbbbbbaabbbababbbaaabbaaabbababaa\nabbabbbbaaaabaaababbbabaabbbabaaaabbabaa\naababbbbbaabaabbbbbabaabaababbbbbbbbaaabbbabbaaa\nbabaaaabbbabbaabbaababba\nbbabbbabbbbbabaabaaaabaa\naaaaaabbaabbbababaaabaab\nabaaaababbbbbbaaabaabaab\nabaabbbabaaaaabaaaaabbaaaaaababbabbbaabb\nbbbbaaaaabbaabbabbbbabbbbbabaabaaaabaaab\nbbabaaabaababbbabbababbbababbaaa\nbbbbbbbbbbabaaabbaabbabb\nbbbabbbbabbaabbbbaababbbabbababb\nbbaaabbabaabbbaabaababab\nbbabaabaabbbababbaaabbabbbbbaaab\nabbbbaaaababababbabaabbbabbbbbbb\nbabaaaaaaabaaabababaababbabbaabbbbaabaaa\nbaaaabbabbaababaabbababb\naaaaaaabbaaaabbbbbbaaaaa\naabaaaaabbbabaabbaababaa\nabbabaabbbabbbbbbaabaaaaaaaabbaaaaabbaab\nbaaaabababbbbaaabaababaa\nbabaaaaabaaabbbbaaabaaaa\naaabbababaaaaaaaabbbabaa\nbbabaaabbaaaababaaabaaaa\nbbaaabbbbabbbbbaaabbbbbaaabbbbbabbabaabababbbbbaabbabbaabbbabbbaaaaaaaababbbbababaabaabb\naabaaaaaaabababababbabaaaaabbaaa\nbbbabaaabbaaaaaabbbaaaab\nabaaaaaabbabaaaabbbaabbabbababaa\nbbaaabbaaabbbabaababbbbb\nbbabaaabbababbbababaaaabbabaaaba\nabbabbbabaaabbbaaabaaaab\nbaaabbbbbabbbaaabbbaaabb\nbbaaabbaababbbababaaabba\naaaaabaaaabbbbabaabbbbaaaababbbbbabaabbbbbabbbaa\nbbaaaaaaabababbbbabbbbaa\nababbabbaabaaaaaaaababbb\nbabbabbabaabaaabbabaababbbbaabbbbbababababaababb\nabbaaaaabababbbbaaaabababbaaaaabaabaabbb\nbbaaabbbbaaaabbbaaabbaaa\nbbabaaabbaaaaaaabbabbaba\nbbabaabaaabaaabbbaaabababaaaabaa\nbbbbababbbbabaaababbbaaaababababbaabbbaaabaabbaaaaabbbbb\nbbaaaaabbbaaabaabaababab\naaaabaaabaaabbbaaababbab\naabbaababbabbbbbabbababa\nbaaaaaaaaabbaabaaabbbbabbaaaaaababaababb\naabbaaabababababaaaaabbb\naabaaaaabbbbaabaaaaabaab\nbbaaaaabbbbabaaaabbbabba\nbabaaaababbabbbbbbbaaaaa\nbbbbaabaaaabbbbababbaabaabbbababaabaaaabbaababba\nbababbbbbabbbaaabbabbaba\nabbaaaabbabbbaaabaabbabb\naabbbababaaaababbabbbbab\nabaaabaabbbbabababbbaaababbabaaababaabba\nbbbabbabaaabbabbabbabbbabaaababbaaaababababbbbabbabbabaaabaaabaaaaaabaaababbaabb\nabbbaaabbabaaaaabababbbabababbbbabaabbaa\naabaaaaabaababbbbaaaaaba\naaaaaaabbabaaaababbbbaab\naabaaababbaaabbabaaabaaaaabbaaaababaababbbbbbbbbabaaaaab\nbbbbbbbbbbaabababbbbbbbbaabbabbb\nabbbbbbaaabbbbbbaaaaabaabbbbababbabbabab\nbaaababaabbbaaabababbbbb\nbababbbabbabaaabbbabababbbbbabbaabbbabbb\nbaaabbbabaabbabbbbabbaba\nababbbbabbaaaabbbaababbbaaabbbbbbbabbbabaabaabaabbaabbaabbbaabbaaabaabba\nbababbbaababbabbaabaabaabbbbaaab\naaabaabaaabaabbabbaabbaaabbbaaab\nabaaababbbbbbaabbaabbaab\naaabbabbaaaaaabbaaabaabb\nbbbabbabbbbabaabbbabbbabbabbaabbabbaaabb\nbbaababaabbaabaaaabbbbba\nababaaaabaabbbaaaaaababb\nbabaabababaaabaabbbabbbbbbbbbbbbbabaabbbabbbbbaaabbaababbaaabaababbbbaba\nababbabbbaababababbababbbbabaabaababbabbaabbbbaa\nbaaaabababbaababaaabaaaaaaabbbaabbababbabaaaaaabbaaabbaaaabaaaaababbbbababbabaab\naaabbbbaabbabbbbbababaaabababbbbabaabaabaabbbaaaabbbbaab\naabbbbbbabbaaaabaaabaabb\nbbbaabbbaaaaaaabbbaabaabbababbbaabababbaabbaaabb\nbbbbaaaababbbabababaaabb\nbbaaabbbbababbbababbbaab\nbbabbabbaabbbbabaaaabababaababaa\nabaaabaaabaaababbaababaa\naabaaabbbaabaaaabbbbbbab\nbaabaaabbabaabababbbabaa\nababbabbbaabbbbbbabbabaa\nabbbbaaabbbabbbbbababaaa\nbbbbbbaabababaaaabaababa\naabbaabaabaaaabbbaabbaba\nbbbbbbaaaabbaaaaaabbaabaaaaaabbb\naaaabbbbaaaaabaabaaaaaabaaabaabb\nabaaababbaaaababaaaaaaaaabaabbabababbaab\nbabababbabbabaabaabaabbb\nbabaaaabbbabbabbbaababab\naaabbababbbbbbbaabbbbabbbbbbaabbaaabbabbaaaabababaaabbaaababbaab\nabaabbbabaaaabbbabbbababbaaaabbbbabbabaa\naabbbbaababbaababbbaabaa\nbbaabababbaababaaaabbbaa\nbabaababbbbbabaaaabaaabaabbabbbbaaaaaabbbbaababbabaabaaaaabbbaaababbbbbb\nbaababbbbaaaaaaabbabbaab\naaaabbbaababababbbbbbabb\nbbaaaaaaababbbaaaabbabbabbabaaababbbbbbabbbaaaaabbaababbbaababaa\naaaaaaabbbaaabaabbbabaabbbabaababbaaabaabbaababb\nbabaaaabaabbbbaabaaaaaabbaaaaaba\naabbbaabababbbabbabaaabababbbbbabaababbaaabbaabaaabbaaaabaabbbbbbaaaababbbaabaab\nbabaaaaaababbbabaabababb\nbabbabbbabbaababbabbbaab\nbaabbbabbabbbabbabbbbaaaaaaaaaaaaabaabbaaaababbbabbbaabb\nbbbaabbbbababbabbbbaaabb\nbabaabbbbaabaaabaaabababbbaabbbbbbbabbba\nbababbabbaaabbbabbbbbabb\nbbabbbabbbabbbbbbbbaaaab\nbaabaaaaabbaaaabababaaaaaaabbaaa\nababbbaabbabbabbbaabbbba\nabbaabbbaaaabbbbaaaaabba\nbbaababbbbababaaabbaababbabbabaababbbbab\nbbbabbbbaaaaaabbbbaabaaababaaabbaaaababb\nbaaaaaabbbbbbabbbbaabbaaababbbbb\nabbbbbbbababbaaaababaabababbabbaabaaabaababaaaaaabababab\nababababbbaaaaaabababbbbabaaabbb\nbaaabbabbbabbbbbbbaaaaabaabababa\nbaaababaabbaaaaaabababaababbaababaaaabbbbbbbbaaaabaabbaa\nabbbbbbaababbaabbababaaaaabbbbbaaababbbbaaabbbbb\naaababaaabaaabaaabaaabbb\nbaabaaaabbbbbbaabbaabbba\nababbbabbbbbabbababbabab\nbbbababaababbbaaaaaaaaaaaaaabababaababab\naababbbbbabababbbbaaaabb\nbbaaaaaabbabaabaababbbba\nbbabaabaabbabaabbaabbabb\nabbbabaabbbbbbabaaaaabaababaabab\nbaabbbaabbbababaaaaabbab\nbabaabababbaabbbabaabbbb\naabaaaaaababbabbabaabbbb'},ef76:function(n,e,a){"use strict";a.r(e),e["default"]="**Ding!** The \"fasten seat belt\" signs have turned on. Time to find your seat.\n\nIt's a completely full flight, so your seat should be the only missing boarding pass in your list. However, there's a catch: some of the seats at the very front and back of the plane don't exist on this aircraft, so they'll be missing from your list as well.\n\nYour seat wasn't at the very front or back, though; the seats with IDs `+1` and `-1` from yours will be in your list.\n\n**What is the ID of your seat?**\n"},f072:function(n,e,a){"use strict";a.r(e),e["default"]="The sleigh is much easier to pull than you'd expect for something its weight. Unfortunately, neither you nor the Elves know which way the North Pole is from here.\n\nYou check your wrist device for anything that might help. It seems to have some kind of navigation system! Activating the navigation system produces more bad news: \"Failed to start navigation system. Could not read software license file.\"\n\nThe navigation system's license file consists of a list of numbers (your puzzle input). The numbers define a data structure which, when processed, produces some kind of [tree](https://en.wikipedia.org/wiki/Tree_(data_structure)) that can be used to calculate the license number.\n\nThe **tree** is made up of **nodes**; a single, outermost node forms the tree's **root**, and it contains all other nodes in the tree (or contains nodes that contain nodes, and so on).\n\nSpecifically, a node consists of:\n\n- A **header**, which is always exactly two numbers:\n   - The quantity of child nodes.\n   - The quantity of metadata entries.\n- Zero or more **child nodes** (as specified in the header).\n- One or more **metadata entries** (as specified in the header).\n\nEach child node is itself a node that has its own header, child nodes, and metadata. For example:\n\n```\n2 3 0 3 10 11 12 1 1 0 1 99 2 1 1 2\nA----------------------------------\n    B----------- C-----------\n                     D-----\n```\n\nIn this example, each node of the tree is also marked with an underline starting with a letter for easier identification. In it, there are four nodes:\n\n- `A`, which has `2` child nodes (`B`, `C`) and `3` metadata entries (`1`, `1`, `2`).\n- `B`, which has `0` child nodes and `3` metadata entries (`10`, `11`, `12`).\n- `C`, which has `1` child node (`D`) and `1` metadata entry (`2`).\n- `D`, which has `0` child nodes and `1` metadata entry (`99`).\n\nThe first check done on the license file is to simply add up all of the metadata entries. In this example, that sum is `1+1+2+10+11+12+2+99=`**`138`**.\n\n**What is the sum of all metadata entries?**"},f22b:function(n,e,a){"use strict";a.r(e),e["default"]="With your neighbor happily enjoying their video game, you turn your attention to an open data port on the little screen in the seat in front of you.\n\nThough the port is non-standard, you manage to connect it to your computer through the clever use of several paperclips. Upon connection, the port outputs a series of numbers (your puzzle input).\n\nThe data appears to be encrypted with the eXchange-Masking Addition System (XMAS) which, conveniently for you, is an old cypher with an important weakness.\n\nXMAS starts by transmitting a **preamble** of 25 numbers. After that, each number you receive should be the sum of any two of the 25 immediately previous numbers. The two numbers will have different values, and there might be more than one such pair.\n\nFor example, suppose your preamble consists of the numbers `1` through `25` in a random order. To be valid, the next number must be the sum of two of those numbers:\n\n- `26` would be a **valid** next number, as it could be `1` plus `25` (or many other pairs, like `2` and `24`).\n- `49` would be a **valid** next number, as it is the sum of `24` and `25`.\n- `100` would **not** be valid; no two of the previous 25 numbers sum to `100`.\n- `50` would also **not** be valid; although `25` appears in the previous 25 numbers, the two numbers in the pair must be different.\n\nSuppose the 26th number is `45`, and the first number (no longer an option, as it is more than 25 numbers ago) was `20`. Now, for the next number to be valid, there needs to be some pair of numbers among `1`-`19`, `21`-`25`, or `45` that add up to it:\n\n- `26` would still be a **valid** next number, as `1` and `25` are still within the previous 25 numbers.\n- `65` would **not** be valid, as no two of the available numbers sum to it.\n- `64` and `66` would both be **valid**, as they are the result of `19+45` and `21+45` respectively.\n\nHere is a larger example which only considers the previous **5** numbers (and has a preamble of length 5):\n\n```\n35\n20\n15\n25\n47\n40\n62\n55\n65\n95\n102\n117\n150\n182\n127\n219\n299\n277\n309\n576\n```\n\nIn this example, after the 5-number preamble, almost every number is the sum of two of the previous 5 numbers; the only number that does not follow this rule is **`127`**.\n\nThe first step of attacking the weakness in the XMAS data is to find the first number in the list (after the preamble) which is not the sum of two of the 25 numbers before it. **What is the first number that does not have this property?**"},f63c:function(n,e,a){"use strict";a.r(e),e["default"]="The Elves managed to locate the chimney-squeeze prototype fabric for Santa's suit (thanks to someone who helpfully wrote its box IDs on the wall of the warehouse in the middle of the night). Unfortunately, anomalies are still affecting them - nobody can even agree on how to cut the fabric.\n\nThe whole piece of fabric they're working on is a very large square - at least `1000` inches on each side.\n\nEach Elf has made a **claim** about which area of fabric would be ideal for Santa's suit. All claims have an ID and consist of a single rectangle with edges parallel to the edges of the fabric. Each claim's rectangle is defined as follows:\n\n- The number of inches between the left edge of the fabric and the left edge of the rectangle.\n- The number of inches between the top edge of the fabric and the top edge of the rectangle.\n- The width of the rectangle in inches.\n- The height of the rectangle in inches.\n\nA claim like `#123 @ 3,2: 5x4` means that claim ID `123` specifies a rectangle `3` inches from the left edge, `2` inches from the top edge, `5` inches wide, and `4` inches tall. Visually, it claims the square inches of fabric represented by `#` (and ignores the square inches of fabric represented by `.`) in the diagram below:\n\n```\n...........\n...........\n...#####...\n...#####...\n...#####...\n...#####...\n...........\n...........\n...........\n```\n\nThe problem is that many of the claims **overlap**, causing two or more claims to cover part of the same areas. For example, consider the following claims:\n\n```\n#1 @ 1,3: 4x4\n#2 @ 3,1: 4x4\n#3 @ 5,5: 2x2\n```\n\nVisually, these claim the following areas:\n\n```\n........\n...2222.\n...2222.\n.11XX22.\n.11XX22.\n.111133.\n.111133.\n........\n```\n\nThe four square inches marked with X are claimed by **both `1` and `2`**. (Claim `3`, while adjacent to the others, does not overlap either of them.)\n\nIf the Elves all proceed with their own plans, none of them will have enough fabric. **How many square inches of fabric are within two or more claims?**"},f70d:function(n,e,a){"use strict";a.r(e),e["default"]="3 * (2 + (9 * 2 * 2 + 8) * (7 * 6 * 7 * 3) * (3 * 9 * 7) * (6 * 6)) * 9 * 8 + 6\n6 + 4 + 6 * 2 + 5 * (8 + 5 + 5 + (8 * 7 + 2 + 6 * 5 * 4))\n9 + 3 + 5 + 3 * (5 + (8 + 7 * 8 * 8) * (5 + 9 + 9 * 9 * 4)) * (6 * (8 * 5 * 6 * 8 + 4 * 5))\n4 * ((8 * 6 + 3 * 3 * 9 * 8) + (2 * 3 * 4 + 9 * 2 * 3) + 4)\n4 * 9 + (6 + 4) * 6\n6 * 7 + (8 * 2 + 9) + 4 * 7\n(2 + 6 * 4 + 3 + 7 * 2) * 2 + 7 + 2 + (9 * 4 + 9 + 7 + 9) + (2 * 4 + 3 + 5 + 2 + 7)\n(7 * 5 + 4) * 7\n3 + 8 + (5 + 9 * 8 + 6 + 4 * (3 + 3 * 8 + 7)) + (2 * 4 + 4 * 3)\n2 + 2 + ((8 * 9 + 2 * 8) * 7 + 5 * (5 + 7 * 3) + 7 * 5) * 3 + 8 * 7\n5 * 9 + (5 * (9 * 7 * 9 * 9) + 9 * 2 + 6 * 2)\n9 + 9 * (4 + 9 * 9 * 6 + 5) * 7 * 8 * ((7 + 6 * 6 * 4 * 8) * (7 * 8) + 7 * 6 * 8 * 9)\n6 + ((3 + 4) + (2 * 9 + 8 + 9 * 3 * 7) * 3 + (7 * 8 + 9 * 3))\n6 + (3 * (9 + 2) * 9 + 4 + (5 + 4 + 3 * 2 * 4 + 4) + 6)\n(8 * 3) * ((8 * 4 + 4) + 7 * 2 * 7 * 8 * 9) + 2 + (4 * 3 + (7 + 6) + 4 * (3 * 8 * 3 * 8) * 3)\n(9 * (3 * 6 + 7) + (2 * 3 * 2) + (7 + 8 + 7 * 4 * 4) + 6) + 3\n6 * (3 + (5 + 6 * 2 * 3) + (8 + 7 + 2 + 7 * 2 * 5) * 3) + 4 * 4 + 7 * 7\n4 + 3 + 9 + 5 * 3 * (7 + 6 + (5 + 2 + 7) + 8)\n5 * 4 + 4 * 4 + (2 + 9)\n8 + 6 + ((8 + 5 + 2 * 9 * 3 + 3) * 8 * 4) + (7 + (7 * 4 + 9) * 4)\n2 * 8 * 4 + ((3 + 2) * 8) + 3\n4 * ((6 + 8 * 6 * 7 + 3) * 6 + 9 + 8 * 6 * (5 * 9 + 4)) * (2 + 8 + 6 * 3 + 9)\n(3 + 6 + 3) * 3 * 4 * 6 + ((9 + 9 + 7) * 6 + 9 + 6) + (7 * 7 + 8 * 2 * 2)\n(3 * 8 + 9 * 2 * 8 * (2 + 3 * 4)) + 3 * 3\n(7 + 9 * 5 + 6 * 4) + 9 * 4 + 2 * 2\n(6 + 9 + 2 * 7 * 6) * 9 * (5 + 9 * 6)\n(2 * 4 * 8 + 2 * (4 + 3 + 2 * 2)) * 4 * 3 + 6 + ((8 * 5) + (9 * 5 * 3 * 9 * 7 + 7) * 7 + 9) + (4 * 8 + 9 + 5 + 2)\n3 + ((6 + 3) * 3 * 8 + 9 + 5)\n9 + 7 * (9 + 5 + (2 * 7 + 8 + 3 + 9 * 2)) + 4\n4 * (8 * 7 + 9 * 9 * 3) * (5 + 5 + 9 + 4 * 9 * 6) + (4 + 3) * (9 + 3 + 4 + 7 * 5) + 7\n(7 + 9 + 5) + 3 * ((6 + 7 * 7 + 4) + (3 * 3) + 3)\n5 + (6 * (5 + 6 * 5) + 9 * (3 * 5 + 7 + 6) + (2 * 3 * 4 + 5 * 9) + 4)\n((2 + 3 + 5 + 5 + 2 * 7) + 5 + 2 * 7 + 6) + 8 * 9 + 4 + 5\n3 * 3 * 4 * 4 * 6 + (4 + (7 + 6))\n(2 + 8 + 6 + 7 + 6) * (8 + 4) + 4 + 3\n(7 + 3 + (5 + 3 + 3 + 5)) * 5 + 4 * (7 * 3)\n4 * 2 * (5 + 5 * 7 + 8 * (4 * 6 * 8 + 6 + 7 + 2) * (4 + 3)) * (2 * 3 * 7 * 3 + 8 + 5) * 4\n6 + (2 * 6 * 7 + (6 * 6 + 8 + 4 * 2) + 6 + 5) * (8 + 3 * (4 * 4)) + (2 * 5 + 6 + 8 * 3 + 6) * 9 + (3 + 3 * 3 + 8)\n2 + (4 * 3 * 9 + (2 + 4)) * (3 + (5 * 8 + 9) + 6 * (7 * 3) + 6 + 6) + 8 * 2 * 7\n8 * (4 * 5 * 7 * (4 * 8 + 4 + 3) + 6) + 5 * 2\n((5 + 5) * 9) + 2 + 8 + 3 + 6\n8 * (9 + 7 + (5 * 3 + 7 * 3)) + 5\n5 + 5 * 2 + (6 * 4 + 4 * (5 + 7 * 4 * 8 + 7 + 5) * 5 + 7)\n(5 + 9 + 6 * 7 + 4) * 3 * 9 + 7 * (2 + 9 + 8 * 4)\n7 * 4 + 7 + (7 + 4 + 8) + 9 * (6 + 5)\n2 + 3 * 2\n8 * (3 + 4 * 7 + 6 + 9 * 2) + (7 * 2 * 5)\n(4 + 3 + 3) * (6 * 8 + 2 + (6 * 5)) * 8 * 9\n8 * (2 + 8 * 3 * 5 + 2) + 9 * 4 + ((4 * 8 * 4) * 9 * 4 + 3 * 4) * 8\n(4 + 3) * 5\n3 + 8 * 8 * (3 * 7 + 5 * 7 * (2 * 8 + 3 + 8) * (5 + 2 * 6 + 3 * 2 + 3))\n3 * ((5 * 9 + 2 + 8) * (9 + 9)) + (4 + 9 * 2 + 8 * 6) * 7 * (8 + (3 + 6 * 3 + 5)) + 3\n5 + 2 * 7 * 8 + 2 + (8 * 3 * 2 * 7 * 5)\n(3 + (6 + 5) * (2 * 2 * 6) + 8 + 5 * 8) + 9 + 2 * 8\n(8 + 3 * 8) + 7 + ((9 + 3 + 2) * (8 * 5 + 3 + 7) + 9)\n2 + 5 + ((5 * 8 + 7) * 2) + 7 + 6\n6 * 5 * 3\n5 * ((3 * 7 * 6) * 2 * 5) * 5 * 8 * 6 * (9 + 9 + 2 * 3 + 6 + 4)\n9 * (6 * (4 + 9 + 9 + 7 * 5 * 3)) + 7 + 7 + 6 * 5\n9 * (4 + (3 * 9 + 3 + 6 * 7) * 7 * 9 + 3 * 6) + 7\n(4 * 3) + 4 * 6 * 3 * 5\n3 * 9 * 8 * (9 + 8 * 6) + 8 + (7 + (5 * 5 * 8 + 6))\n6 * 3\n2 + (3 + (6 + 2) + 5 + 9 * 7 * (3 + 5)) + 4\n(7 * (8 * 6 + 3) * 4 * 5) * 6 * 9 + 9 + 9\n((3 * 4 * 7 + 8) + 5 + 5) + 9 + (2 + (5 + 9 + 7 * 7 + 8) + (3 + 3 + 2) + 9) * (3 + (6 * 3) * 9) * 5\n(6 * 6 + 7) + 7 + 8 * 5\n(6 + 2 + 3 + 4) + (6 + 9 + 5 + 8) + (4 + 3 * 2) * 7\n5 * ((5 + 5 * 9 * 7 * 8 + 2) * 7 + (7 + 5 + 5 + 5 * 9 * 8) + 5 * 6 * 3)\n(9 * 6 * 5) + (7 + 2 + 4 * 7 + 8) * (3 * 6) + (9 + 7 + 3 * 7 + 4)\n4 + ((5 + 8 + 3) + 7 + 4 + 9 * 3) + 5 + 2 + 6\n2 + 6 + 5 * (6 + (9 + 8 * 4 * 5 * 4) + 6 + 9) * (7 * 4 + 6 + 4 + 7) * 6\n((9 + 8 * 5 * 9 * 9 * 2) * 5) + 8 * 9\n9 * 7 * 5 + (8 + 4 + 3 * 5 + 2 * 6)\n8 * 7 * 7 * 9 + (6 * 3 + 8 * 7 * 8 * (2 * 9))\n7 * (5 + (7 + 3 + 2 * 4 + 8)) * 8 * 3\n6 * (8 + 3) + ((7 * 9 + 7 * 8 * 9 * 8) + 3 * (9 * 7 + 3 * 7) + 3 * 6 * 7)\n7 + 6 * 7 * 4 * (4 * 2) + ((7 + 5 * 9 + 5 + 9) + 7 * 4 * 4 + 8)\n5 + 6 + 4 + 9 * 2 * (9 * 4 + (7 + 6 * 7) + (2 * 8 + 9 + 6) * 2 + 8)\n6 + 6 * 8 + 9 + (3 + 2 + 7 * 7 * (7 * 7 * 3 + 3 + 5 * 6) + 9)\n3 + 2 + 2 + 6 + 6 + 9\n8 * 3 * (7 * 6 + 6 * 9 * 9 * 9)\n7 + 5 + (6 * 4 + (7 + 7 + 9) + (5 + 7) + 9) + (9 * 7 + 6 * 8)\n7 + (5 + (9 + 4) * (8 * 8 + 2 + 6 + 8) * (5 * 5) * 5 * 9)\n5 * 7 + 6 + (7 * 4 + (7 + 2 + 8 + 5) * 8 * 6 * (3 * 4 * 9 * 5)) + 9\n(7 * 5 + 7 + (6 * 5) + 3 + 5) + 4 * 2 + ((5 + 2) + 5 * (6 + 7 + 4 * 8 * 6) + (8 * 4) + 5 * (2 + 5 * 8 + 6 + 2 * 8))\n6 * 9\n9 + (3 * 7 + 8 + 9 * 5) * 3\n(4 * (7 * 7) + 8 * 5 + 8) * 3\n6 * (5 + 2 * 2 * 2 + 2)\n(2 * 3 * 6 + 9) * 8\n2 * 7 * 4 * (4 + 2) * (3 + 5 * 8 + 5 * 9)\n((2 * 8 + 7 * 2 * 6 + 6) * 5 + 9 + (8 + 7 * 4) + 8 + 6) * (6 * (5 + 5 * 7 + 2 + 3) + 4 * 4 + 5 + 3) + 8\n6 + 7 * (9 * 7 * (4 + 2 * 5) * 4 * (7 + 3 + 2) * 2)\n8 * 3 * 5 + (3 + (3 * 5 + 8 + 9) + 5 + 2)\n2 * ((5 * 6 + 3 * 6) * 8 * 4 * 9) * 3\n5 + (3 + 8 * 8 + (8 * 8 * 2 * 7) + 8 + 4) * 4 + 2 * 5\n7 * (4 * (2 * 8 + 2 * 8) + 2) * 8\n8 * 4 * 3 * 6 + (6 + 2 * 5 + (8 + 3 + 8 * 7 * 8) + 6 * 2)\n(3 * (8 * 4 + 9 + 8 + 8) * (4 + 5 * 3 * 3) * 6 + (8 + 5)) + 9 * 7 + 4\n6 + (5 * 5 + 5 * 8 + 2) * 8 + 9 * 5\n2 + 4 + (9 * 2 + 7 + (6 * 2 * 5 * 8 + 2 * 8) + 5 + 9) + 3 * 4\n3 * (9 * 4) * 8\n2 + 8\n7 * 9 * 5 * 4\n8 + 8 * (2 + 5 * 4 * 6 * 8) + 9 + 9\n(8 * 5 * 4 + 3 * 7) + 5 + 9 * 3 * (4 * 7 + (7 * 8 + 4 * 7 + 7) + (4 + 6 + 9 + 5 + 5)) + (5 + (4 * 2 * 3) * 2 + 6 * 3)\n(2 + 8) * 3 * (8 + 6 + 5) * 2 * 3\n(6 + 7 + (8 * 2 * 5 * 4 * 4) + 2) * (6 * 8 + 6)\n(6 * 9 * (8 * 6 * 8)) * 6 + (4 + 7 * 6 + 7 + 8 + (2 * 6 * 3 + 9 + 5))\n((3 + 9 + 9 + 4 + 3 * 4) + 5 * 9 + 5 + 6 * (2 * 5 * 3)) * 4\n9 * 9 + (8 + (8 * 3 + 4 + 7 * 7 + 3) + 4 * 7 * 4) * (6 * 6 * (5 * 7 + 8) * 2 * 4 * 7)\n2 + 8 * (5 + 5) * (3 + 9 + 8)\n8 * (4 * 7 * 9 * 8 + 8 * 7) * (6 + 7) * 6 * 3\n2 * 6 + ((7 * 3) + 6 * (5 + 4 * 7 * 9 + 9 + 5) + 5) * 9 + 9 + 2\n2 + (3 + 2 + 9 * 6 + 3) + 2 * 9 + (4 + 9 + 4 + 4)\n2 * (8 * 9 * 4 + 9) + 6 + (6 + 5 * (2 + 4 + 5 + 9 + 5 * 6) * (3 * 2 + 5 + 4) + 5)\n3 * 9 + (6 * 9) + 9 * ((5 + 2 + 3 * 2 * 4) * 8 + 8) + 3\n((9 + 8 * 9 + 4 * 5) * 2 + 8 + 7) + 8\n(6 + 8 + 2 + 4 + 8 * 6) + 7\n6 * 9 + 9 * (6 + 6 * 8) * (5 + 4 + 4) * 7\n((4 * 4 * 7 * 8) + 6) * 3\n7 * 3 + (7 * 5 * 3 + 4)\n5 * ((8 * 9 * 8 + 4 + 2 * 6) + 7) + ((7 + 7 * 3) * 5 + 9 + 9 + 5) + 2 * ((3 * 2 * 9 * 2 * 5) + (6 + 4) * 6 + 6) * 8\n(3 + 6 * (9 + 4 + 5 * 2 * 5) * 2) + ((8 * 9) * 5 + 4 + (8 * 8 + 8 + 2 * 8 * 5)) + 4\n3 * 4 + ((7 + 6 + 9 * 7) * 7 * 9) + (6 + 3 * (2 * 9 * 2 * 3) + 6 * (8 + 2 * 8 + 9))\n3 * 3 + ((7 * 7) + 4 + 3 + 5 + 8 + 8) + 3 * (7 + 8) + (8 + 9 * 2 + 5 * 9)\n6 + 9 + ((3 + 2 * 2 + 6 * 7) * 9) + 8 + 4 + 2\n(5 * 4 + 7 + (5 * 4) * 8 + 2) * 5 + (8 * (6 + 7 + 7 + 9 * 7 + 5) + 6 + 3 + 3) + 6 + (4 * 4 * 2) + (9 * 7 + 6)\n5 + 3 * (2 + (8 * 9 * 4 * 3) * (2 + 8))\n(6 * 5 + 3 + (4 + 9 * 7 * 2 + 3 * 6)) + 6 * ((3 * 2 * 2 * 6) + 7) * 5 + 7 * 5\n6 + (8 * 5 * 3 + 9 + 6 + (7 * 5 * 4 + 4 + 2)) * 4 + 7 * (4 + 8) + 7\n2 * 2 * 9 * 6 * ((6 * 8 * 8) * (2 + 7 + 3 * 9 * 5 + 2) * 9) * 5\n8 * 8\n(9 * 2) + 5 + (5 * 8 * (2 + 3 + 9 * 8)) * 4 + 6\n((4 * 8 + 9 + 5 + 8) + 6 * 8 * (2 + 3)) * 8 * 3 * 2 + (2 * 7)\n8 + 4 * ((2 + 4 + 7 + 4 * 2) * 3 * 6 + 3 * 7 + 3) * 8 * 9 + 4\n5 + ((2 + 9 * 3 * 9) + 6 * (3 * 7 + 2 + 7 * 5 + 9)) * (9 + 8)\n9 * (5 + 7) + 5 * 6 * 9 + 7\n9 * 5 + 8 * 5 * (5 * 7 * 9) * (5 * 3 + 9 + (7 + 2 + 5 * 6) * 5 + 5)\n3 * 7 * (8 + (3 * 4 * 6 + 4 + 2 * 8) * 8 + 2 * 9) + 2 * 6\n2 + 6 + 9 * (6 * 2 + 9 * 9 * 8) * 3\n(2 + 4 * 4 + 7 + 3) * 2 * 8\n6 * 6 + 4 + 5 * 4 * 2\n(3 + 6) * 3 + 9 + (7 + 8 * 3 + (2 + 5 + 4 * 4 * 8 * 5)) + 9\n(5 + 5 * (5 + 3 + 5 * 4)) + ((3 * 7 * 9 + 7 * 7) * 4 * 6)\n(6 * 3 * 3 + (8 + 8 * 6 + 3) * 2) * (5 + 3 * 8 * 4) + (6 + 6) * ((3 + 9 + 7) + (5 + 2 + 2) * 7 + (7 * 2 * 4 + 7 + 2 * 9)) * 2 + 5\n(8 + 8 + 2 * 4) + (6 * 8 + (6 * 4 + 2 + 9 * 9 * 8) * (4 + 4 + 2 + 4)) * ((8 + 6 * 5) + 6 * (2 + 6 + 3 * 5 + 4 + 8)) + 9 + 8 + 3\n5 + 7 + ((7 + 9 + 9) * 3 + 6) + 6 * 2 * 4\n(8 + 5) + 8 * 7 * (9 * 2 + 6) * (2 * 2)\n7 * 6 * (2 + 7 + 6) * 8\n5 + 6 * (5 + 4 + (8 * 4)) * 3 + 3\n5 * 4 + 7 + 7 + (2 + 6 * (6 + 3 * 9 + 7 * 4 * 5) * 6) * 8\n(9 * (9 + 8 + 4 * 8)) + 6 + ((8 + 6) * 5 * 5 * 2 + 9 + 2) * 5\n5 * (4 * 9 + (3 + 7 + 9 * 6 * 2 * 4)) * 4 * 6\n4 + 2 * (7 + 2 + 8 * 3) + 2\n5 * ((9 * 3 * 4 * 2) * 2 + (2 * 7) * 2 * 4 * 6)\n9 + (6 + 8) + 9 * 9 * ((6 * 7 + 2 * 8 * 8) * 8) + 8\n9 + 9 * 2 * (8 * 3 + 2 + 4 + 2) * (4 * 4 + 3 + 2) + 2\n3 * (5 + 9 + 5 * (8 * 3) * 6) + 3 * 6 * (4 * 8 + 6 * (4 * 8) * 5) + 3\n3 + (3 + 7 + 7 * (3 + 5 + 8 + 5 * 7 + 6) + 3) * 8 + 4 + 7\n3 * (7 * 6 * 6 + 9 * 8) + 5 + 7 + 4 + (7 * 3)\n8 + (4 * 9 * 5 * 5 + 9) * 3 * 5 * ((7 * 5 + 8 * 9 + 2) + 6 * (9 * 5 * 6 + 7 + 7) * 8)\n(3 * 4) + (7 + 2 + (2 * 7) + 6 + 8 + (5 * 6 * 5 * 2 + 8 * 2)) + ((7 + 9 * 3 + 7 + 8) * (9 * 3 + 5 + 4 * 5) + (4 + 9 * 7 * 4 * 3) + 5) + 6 * 2\n(3 + 2 * 4 * (6 * 6 + 5 * 2)) + 7 * 8 + (3 + (5 * 6 * 3) + (8 + 9 * 6 * 6 * 2 * 6) * 8) * 2 * (2 + 6)\n8 * 6 * (8 * 5 + (7 * 7 + 7 * 5 + 4 + 8) + 5 + (6 + 8 * 4 + 2 + 7)) * 2 + 9\n5 + 9 * 5 * 9 + (8 * 6 + (7 + 6) * 6 * 5 + 7) + 4\n4 * ((4 + 8 + 6 + 7 * 2 + 6) * 2 + 5) + ((5 + 8 + 9 + 9) + (7 * 3 + 3 + 2 + 9) + 6 * 8 * (9 + 5 + 8 + 5) * (6 + 9 * 9 * 6 * 7 + 8)) * (2 + 6 * 9 * 7) + 3 * 2\n(4 + 7 + 5 * 8) + (3 + 5) + 7\n7 * 8 + (6 * 4)\n6 * 3 * 7 + 4 + 3 * 4\n(6 * (6 * 7 * 9 + 9) + 4 * 3 * 2) + 8\n8 * 3 * 9 + 5 + 6 * 6\n5 + 4 * 2 + 9 * 5 * 8\n5 + 8 + 3\n(6 + 2 + 9 * 8) + 3 * 4 + (5 + 7 * 3 + 5)\n((5 * 5) * 6) * 7\n8 + ((2 + 6 + 6 * 3 + 2) + 6) + 4\n(5 * 2 * 9 + 2 * 2) + 4 + (3 + 2 + 3 * 4) * 3 + ((5 * 3 * 7) * (8 * 2 + 3 * 2) + 9 * 8 + (8 * 7 + 8 + 9 * 3) + 7)\n6 + 5 * 6 + 8 * (3 * 8 + (7 + 4 * 4 + 3))\n6 * (7 + (2 * 3) + 2) * 8 + 4 + 6 + 5\n7 * 3 * 6 * 4 + 3\n(8 * 8 + (5 + 5 + 5 + 9)) * 5 + 3 + 5 + 5\n(2 * 3 * 6) + 9 + (3 * 2 * 6) * 4 + ((6 * 6 + 9 * 3 + 3) * 7 + 7 * 6) + 6\n7 + 6 * 3 * ((7 + 5 + 2 + 8) * 4 * 5 * 3) + 7 * 6\n6 * ((8 * 3 + 6 + 5 * 6 * 7) + (9 + 6 * 2 + 6) * 8 * 8) + (4 * 5 + 9 * 6) * 7\n(9 + 7 + 2 + 2) + 9 + 7 * 4\n(9 + 3 * 2 * 4) * 7 * 6 + 2 * (4 * (3 * 9) + 4 * 3 * 3) + 9\n7 + 2 + 2 + 6 * 2 + (6 * 7)\n6 + ((2 * 3 * 3 + 3) + 3 * 9 + 7 + 4 * 2) + 3\n7 + 6 + 9 * (8 * 4) * 9\n2 * ((4 * 3) + 5) + 7 + 4 + 3\n(5 * 4 * (8 * 6) + 4) * 6 * (3 * 3 + 5 * (3 + 3 + 6 * 7 * 6) + 6 + 8)\n4 * 7 + 3 * 8\n5 + 3 + 7\n5 * 8 * (3 + 4 + (3 + 6) * (4 + 6 * 3 * 5 + 8) + (5 + 2 + 3 + 2 * 3 * 8)) + 7 * 4\n(7 + 8) + (6 * 7 + 9) * ((2 * 4 * 7 + 2 + 8) + 9 * 9 + 5 * 3 + 3) * 6 + 4 * 6\n2 + 4 * 5 + 3 + (7 + 9 * (6 + 2))\n8 + (9 + 2 * 4) * 4 * (7 * 7 * 5) * (4 * (3 + 2 + 3 * 4)) + 9\n7 * 2 * 7 * 4 + 2 * (2 + 4 * 5 + 2)\n5 * (3 * 7 * 8 * (4 + 2 + 8)) + 5 * 4 + 3\n((8 + 6 + 4 * 9 * 7 + 8) * 9 * (7 * 9 + 5 * 8) * 4) * 9 + (5 * (5 * 7 * 4 + 3 * 9) + 6 + 2 * 9 * 2)\n6 * (5 + 2 * 3) + 5 + 5 * 2\n(4 * (7 * 3 * 3 + 4 * 6) + 6 * 9 * 6 + (8 * 4)) * 5 * 9 + 3 * 9\n4 * (2 * 8 * 8) * 5 * ((4 + 2 * 7 * 4 * 4 * 3) + 5) + 4\n7 * ((8 + 8 + 6) * (5 * 5 * 2 * 8 + 7) * 8 * 2 * 8 * 8) * ((3 * 3 + 9 * 8) * 3 * 3)\n8 + (4 * (3 + 6 + 9 * 6 * 9) + 5 * 6) * 9 + 2 + 6\n(6 + (6 + 9 + 5)) + (3 * 7 * 7 * 8) * 4 * 7 * (2 * (9 + 2 * 4 + 7 * 2))\n2 + (6 + 6 * 6) * 9 * 4\n9 * (9 + 3 * 4 + 8 + (4 * 4 + 5 + 8 + 8 * 2) + 5) * 9 + 5\n((9 * 6 * 9) + (4 + 4 * 3 + 2 * 2 * 6) * 4 * 6 * (9 * 4 * 9 + 9 * 3)) + (5 * 6 * 9 * (8 * 5 * 9 * 6 + 4) + 3) + 8\n6 + (2 * 3 + 5 * 7 * 7) + 2 + 4\n2 * 9 + 6 + (2 * 7 + 7 * 3) * (7 * 5 * 7 + 5 * 4) * 2\n6 + 6 * 5 * 7 + (3 * (2 * 7) * 3 * (9 * 4 * 5 + 5 * 7 * 5))\n8 * ((4 + 9 + 9) + 8) * (5 * 4 * (9 + 3 * 3 + 6) + 3) * (8 * 7 * 9 + (8 + 8 * 3 + 9 * 7) * (3 + 7 + 9) * 7) + 6\n8 + 8 * 3 * 8 + 5\n2 + 3 * ((4 * 7 + 3 * 2 * 8 * 4) + 7 + 3 + (3 * 5) * 5) * 9 + 5\n(3 + 7) + 6 * 4 * 7 * 3 * (4 * 7 + 3 * 6 + 5)\n3 * (3 * (2 * 5 * 4 + 9 * 8 * 8) * (6 * 4 + 2 + 5 * 4) * 4 * 6) + (9 + 9 * 9 + 3 + 5) + 7 * (7 + 7)\n((9 + 8 + 8 * 8) * 9 + 8 + (2 * 7 * 4) * 2 + 5) * (9 + (7 * 3 + 4 + 2 * 2) * 4) * 7 * 2\n2 * (7 + 9 * 7 + (3 + 2 + 2) + (9 + 5 * 2 * 8 * 6) * 2) * 4 + 3 * 5 * (5 * (7 * 8) * (5 + 3 + 4 + 3 * 3) + 7)\n(7 * (9 + 7) + 5 * 7 + 3) * (2 + 8) * (2 + 9 * (7 * 7 * 7 + 4) + 6 * 2) * 9 * 8\n(3 + 5) + (8 * 4 * 4 + 3 * 8 + 7) + 5 * 5 * 7\n5 * 9 + (2 + 9 * 9 * 6 * 4) + 5\n3 * 6 * 2 * ((2 * 3) + 6 * (6 + 8 + 9 * 2 + 5) * 2 + 5 + 5) * (7 + 6 + 4 + 9 + 6 + 3) + 4\n8 * 9 * 3 * 7\n(2 + 8) * 3 + 7\n(9 + 7 + 8 * 5 * 9) + 9\n3 + ((7 * 6 * 4 * 5 * 9 + 3) * 5 + 4 + 3 * 5)\n(2 + 8 * (8 + 3 * 3 + 4 * 5)) + (5 + (3 + 8 + 4 + 7 + 3 + 3) + (9 * 8 + 3)) + 9 * (7 * 5 * 2 + 2 * (4 * 7 * 3 * 4 + 8 + 4) + (2 * 2 + 4 * 7 + 9 + 8))\n((4 * 9) + 5 * 3 * 3 + 6 * 7) * 7 * 7\n(9 + 4 + 4 + 6 + 7 * 2) + 2 + 3 * 7 + 9\n5 * (4 * (9 * 3) + 9) * 7 * (6 * 8 + 3 * 4 + 7 + 3) * 9 * 6\n6 * ((8 + 7 * 3 + 7 * 4) * 5 + (5 * 5 + 9) + 6 * 3) * (6 * 6 + 7 * (3 + 4 + 9 * 5 + 7) * (8 + 3 * 7 * 6) + 4) + 8 * 7 + 6\n(9 + 3 * 9 * (5 * 6 * 8) * (4 * 2 + 3) * 6) + ((6 + 2 + 6 + 8 + 4) + 4 * 7 + 7) * 5 + (6 * 8 * 5) + 7 * 6\n8 + 3 * (9 + 6 + 2 + (4 * 2 * 8) * 7 + (7 + 7 * 7 + 5 * 4 + 6)) * 9 + 9 + 7\n(2 * 2 + 7 * 3 * 3 * 4) * 9 * 9 * 7\n(2 * (9 * 6 * 6 * 5 + 2 + 7) * 3 + 3 * 4) + 2 * 6 + (9 + (2 + 2 + 9)) * (2 + (7 * 6 * 5 * 9) + 6 * 3) * 9\n8 * 2 * 5 + 9 + ((3 + 7) * 7 * 6 + 5)\n9 * 8 * 4 + (8 + 9) + (4 * 7 * 4 + 6)\n5 * (8 * 4 * 6 * 7 * 6) * 9 * 7 * (6 + 6 * 6 + 7 + 4)\n7 + (2 + 2 * 3) * 6 * 8 + 9 * 6\n3 * 4 * (4 + (6 * 9) + 3 + 8 * 9 * 5)\n3 * (5 * 6 * (8 * 4 + 6 + 3)) + 4 + (9 + 8) + ((6 * 3 + 2) * 9 * 5 + 5 + 8 * 3)\n3 + ((4 + 9 * 2 + 2 + 2) * (9 * 3 * 4 * 7) * (8 * 7 + 2 * 6 * 2) * 2 + 3 * 4)\n5 * (2 + 2 + 9 * 5) + 7 * 8 + 7\n4 + 2 + 8\n7 + (2 + 8 + 9 * 4) + 4 * ((9 * 4 * 4 * 4 * 4 + 3) * 3)\n2 + (9 + 4 * 3) + ((2 + 5 * 5 * 5 + 5) + (5 * 6 * 9 * 8)) + 4 + 9\n(7 + 4 + (5 + 3 + 3 + 8 + 9) + 9 * 6) + 4 * 9 + 3 + 5\n2 + (4 + 2 + 7) + (5 + 9 + 3 + 7) + 7 * ((2 + 8 + 5 + 4) + 5 + 6) * (4 * 8 * 4 * 8)\n(8 + 7 + 3 + (8 * 3) + 6 * 2) * 4 + ((5 + 6 * 4) * 6 + 4 + 5)\n(8 + 2 * 7 * 3 + 5) * 2 * ((9 + 3 * 4 * 6 + 2) * 2 * (7 * 9 * 4 * 5 + 8 * 5))\n((9 + 8 + 3 * 2 + 8) + (8 + 4 + 2 * 5 + 3 * 9) + (9 * 3 * 2 * 4 * 8) * 8) + (8 * 5 + 3 + 3 + 9) * 8 + (4 + 7 * 7 + (3 + 7 * 9 + 8 + 2) * 5 + (5 * 5)) + 9 + 2\n(5 + 3 + (6 * 2 + 5 + 4 + 3 + 9) + 5) + 5 * 9 * 8 * 8 + 3\n(3 + 8 * 8 * 2 * 3) + 7 + 4 + 3 + 5 + 4\n7 + 9 + 5 * 6 * 9 + ((4 * 8 * 7 + 8 * 2 * 8) + (7 * 2 + 9 + 4 + 2 * 4) * 2)\n((6 * 4 + 8 * 7) + 9 + 5 * 5) * 8 + 8 + 4\n(6 + 2 * 6 + 4) + ((5 * 4 + 5) * 4 + 3)\n6 + (2 * 4 * 4 + 6) + (8 * 5 * 2) * 4\n7 + (4 + 3 * 5 * 5 * 5 * 4) * 4\n(6 + 2) + (9 + 6 + (9 + 3) + (3 + 7 + 2 * 6) + 6) * 3 + 5 + 8 + 7\n2 + (9 * (4 * 7 * 9) + 7 * 5 + 2) * 3\n6 * (6 * 8 * 3 * 6 * 3 + 4)\n4 + (2 + (3 + 3 * 8) + 8 + 4 + 3 + 6) * (6 + (3 + 9 + 9 + 7 * 6 * 7) + 9 + 9 + 6) + 5 * 5\n(9 * (6 + 7 * 5 * 9 + 3 + 8) + 4 + 4 * 6) + 8 * 3\n7 * (7 * 5 * 5) + 8\n8 * 8 * 2 + ((4 + 2 + 5 + 4 + 3) + 2) + (3 * 5 * 3 + 4)\n9 + 2 * 9 * (8 * 7 + 2 * 3) * 2\n8 * (6 * 6) * 7 + 3 * 5 * ((8 + 3) + 3 + 7 * 3)\n7 * 8 * (7 + (2 + 6) * 5) + 5 + 2\n3 * 2 + 5 + (5 * 9 * 8) + 7\n(8 * 7 + 9) + (7 * 7 * 8 + 9 * 3) + (8 * 9 * 4 * 9)\n8 * 9 + 7 * 2 + 3 + (2 + 3 * (4 * 2 * 3 * 3) + 4)\n(5 + 4 * 3 + 8) * (8 * (2 + 3 + 2 + 2) + 9 * 8 * 9)\n7 * 7 * 9 * (5 * 9 * 4 * 5 + (9 * 3 * 4 * 4))\n4 * ((2 + 6 * 4) + 7) * 8 + 7 + ((9 + 2 + 3 + 8) + (5 * 9)) * 2\n6 + 5 + 4 * 7 * 6 + (6 * 7 * 2 * 6 + 8 * 2)\n4 * (8 * (5 + 2 * 2 + 4) + 4 + (2 + 8 * 3 + 7 + 8)) + (4 + 7 + 9 * 4 + 8 * (8 * 6 * 6 * 9)) + 6 * 8 * ((3 + 3 * 7 * 2 + 7 + 5) * 2 * 5)\n5 * (2 * (4 * 4 * 6 + 3 + 4 + 8) * 7 * (8 * 3 + 9 + 2 * 8) * 5) + 5 * ((7 + 7 * 3 * 5 * 7 + 3) * 7 + 3 + 6 * 7) + 8\n(2 * 3 + 8 * 5 * 6 + 2) * 6 + (6 * 5 + 2 * 9 + 3 * (9 + 5 * 2))\n9 + ((8 + 9 * 7 * 5 * 8) * 4 * 2)\n3 * 6 * 4 + 4 + 3 * (4 + 3 + 4 + 6 + (4 + 6 + 2) + 3)\n5 * 2 * ((9 + 9) * 2 + (4 + 2) + 9 * 4 * 3)\n(4 + 8) + 2 * 4 + 5\n(3 * 7 * 5 * (7 + 6 * 9 * 2 * 7 * 3)) * 4 * 4 * 8 + 9 * 5\n6 * 8 * ((5 + 4 * 4 + 9) * 4 * 6 * 9) + 9 * 9 + (2 + (9 + 3 + 7 * 7 + 2 + 8) + 7 + 4 * 8 * (8 * 3 * 3))\n((9 * 6 * 6 + 3) * 2) + 7 + 6\n9 * 6 * 5 + 6 * (7 * 6 * 9 + 4 * 4)\n9 * (4 * 9 + 9) * (2 * 3 * 6) + 7 + (6 + 9 * 6 * 7 + 4) * 6\n(2 * 9) * 2 + 5 + 6 + 8 + (8 + 7 + 3)\n(2 + 3 + 6 + 2) * (6 * 3 + 7 * 5 + 5 + 7) + 4 * 4 + 2\n5 + (4 + (8 + 2 + 9 + 6 + 6 * 7) + 2 + 9 + 4) * 8 * 8 * ((3 + 3 + 7) * 7 + 9 * 7 + 6 * 9) * 9\n7 * (7 * 5 + 6 + (6 * 7 + 8 * 5 + 3 + 5) + 4)\n6 + 4 * (3 + 2 * (5 * 7 + 6 + 2) * (8 + 8 + 2) + (7 + 2))\n5 * ((4 + 5 * 9) + 3 * 4 + (2 * 3 * 2) * 5 + 4) + (7 + 9) * 6 + (8 + 2 * 6 * 9)\n(4 + 9 + 2) * (4 + 8 * 9 + 6 * 8) + 4 + 8 * 9\n4 + 8 + 3 + 5 + (5 * 9 * (3 * 3 * 8))\n(5 + 4 * 8 + 9 * 3) * 2 + 5 + 8\n(3 + 3 * 9) + 6 * (2 * 9 + 6) + 5\n3 + 4 + 3 * 9 * 2 + ((7 * 7) * 3 * (9 * 5 * 7 * 4 * 2))\n7 * 7 * (8 + 4) * (7 + 9 + (6 * 7 * 7 * 2 * 6 * 6) * 7)\n7 + (4 + (5 + 4 + 9 * 2 + 6 * 5) + 2 + 6) + 7\n(3 + (5 + 9) * 8 * 3 + 9) * 5 + ((6 * 7 * 5) * (4 * 8 + 6 + 5) + 3 + 4 + 8) + (4 * (2 + 7 + 5 * 7 + 2) * 8 * 8 + 6 + 3)\n6 * (5 * 3) * 4 * 8 * 6\n4 * 5 * 4 * 3 * 5\n3 + 6 * 2 + 7 + ((3 + 7 + 3) + 5) * 8\n9 * 5 + (6 + 7 * 9 + 8 + 3 + 8) + (9 + (2 + 9 * 4) * 9 * 9 * (3 * 2 * 3 * 5 + 3) * (2 + 9 * 3 * 4 * 7))\n5 * 6 * 3 * (7 * 3 + 3 + (2 * 7))\n9 + 8 * 5 + (7 * 6) * 9 + 3\n8 + 6 + 4 * (6 * 8)\n3 * (4 * (2 * 4 + 4 * 8 + 7) * (2 + 7 * 4 * 6 + 3) + 8 * 4) * (7 + (7 * 9 + 8 + 7 + 8 * 8))\n3 + (8 * 9) * 6 + (5 + 6)\n6 + 2 + (7 * 6 + 7 * 6 + 3)\n5 + 9 * (9 * 7 + 4 + 6) + (9 + 7 + 6)\n(9 * 7 * (3 + 6 * 3)) + 3 + 6\n5 * (9 * 5 * 2 * 5) * 8\n((2 + 9 * 6) * 5 * (2 + 2) + 7 * 9 + 3) + 4 + 6 + 5\n6 + 8 + 9 * (4 * 2 * 7) + 4 + 6\n4 * (9 * (4 * 8 + 3 * 3)) * 2\n(7 * (3 + 3) * 8 * 8 * 9) + 5 + 4 + 6 * 2 + (8 * (6 * 6) + 5 * 2 * 8)\n((9 * 3 * 4 + 4 + 4) + 8 * 3 + 2 + 9) + ((4 + 4 + 8 + 7 + 7 * 9) + (7 + 8 + 9 + 3 + 7) * 9 * 7 * 8)\n(8 + 6 + 3 * 8 + 3) * 6 * 4 + 9 * 2 * (7 * (3 * 2 * 2 + 7 * 7 * 3) * 7 * 2 * (3 + 2 + 2 + 5) + (7 * 8 + 3))\n7 + 5 * 5 * (4 + (7 * 3) * 5 + (7 + 5) + 3) * 4 * 8\n4 * (3 + 6) + 8 + 6\n5 * 2 * 7 + 8 * 5\n3 + (9 + (4 * 5) + 5 * (9 + 3 * 3) * 3 * 5)\n7 * (5 * 3 + 3 * (9 + 9 + 6 * 6 + 8 * 9) + (8 * 2 * 9 * 4))\n((5 + 7 * 7 * 9 + 3) * 3 + 6) * 7 * 5\n(7 * 7 * 9) * 5 + 8 * 6 * 5 + 5\n2 * 6 + 3 * 4 + (9 + 4) + 4\n6 * 6 + 2 * ((5 + 9 * 2 + 6) + 9 * 9 * 6 * 4 + (9 * 4 + 2)) + 3\n5 * 3 * ((6 + 7 + 6 + 3 * 9 + 3) + 8 * 5 + 2) * 9 * (7 * (7 + 2 * 6 + 2 * 2) * 4 * 3) + 5\n9 + ((7 + 4 + 5 * 5 * 6) + 4 + 4 * 9)\n((5 + 9) * (4 * 6) * (8 + 3 * 8 + 8 + 3)) * 8 + ((5 * 5 + 5 + 4) + (4 + 9) + 2 * (7 + 5 * 4) * 5) + (5 * 5 + 2 * 3 * 6)\n8 * 4 + 8 * 8\n(4 + 8) + (7 + 4)\n8 + (8 + 6 * 5 + 6 + 9 * 8) + 7 * 2\n3 + 9 + 4 + (6 + (9 * 6 + 6 + 6) * 7) + 7 * 3\n2 * (8 + 9 + 7 * 4 + (2 * 9) * 6) + 3\n6 + (5 + 2)\n3 * 9 * 3 + 2 + 3\n4 * 3 + 8 * 2 + (2 * (8 + 2 * 5) * 3 * 4 * 3)\n9 + (2 + 4 * 8 * 7 * 5) + 8 + (6 + (3 * 4 + 6) * 5 * 8 + (2 * 5 * 4 * 8 * 3 * 5))\n5 + 4\n4 + 8 * (6 + (3 + 9 + 5 * 4 * 8) * (8 + 3 * 2 * 5) + 9 + (9 + 2 + 6 + 6) + 4) + 5 + (6 * (3 + 3 + 5 * 6 * 9 + 2) + 4 * 4)\n(9 * (6 + 9 + 4 + 6 * 9)) * 9 * 8 * 7 * 8\n(4 * 6 * 6 * 7 * 3) + (3 + (3 * 8) + 3 * (8 * 4)) * 2\n(7 + 2 + 6 + 2) + (4 + 5 * (5 * 2 + 4) * 3) * 5 + 4 * 5 * 8\n(3 * 3 + 7 + 7 + 8) * (3 * 4 * (6 * 2 * 3 + 6 * 7 * 7) + 5 * 3 * (7 * 9 + 7 + 9 * 2))\n7 + (8 + 9 * (4 + 5 + 4 + 2 + 2 * 3) * 7 + 8 * (4 * 6 * 7 * 6 * 2)) * 5 + 6 * 3 + (4 + 8)\n(4 + 3) + ((9 * 7) + 2 * 2 + 4 + 6 + 7) * 6 * 3 * 8\n7 + (4 * (7 * 9 + 2) + 3) * 2 * 8 + 9 + 2\n8 * 5 * (7 * 8 + (7 + 6)) * 7\n(4 * 6 * 9 + 7) + 3 + 6 + 2 * 3\n2 * 2 * 9 * (4 * (9 * 8 * 4 + 2 + 3))\n9 + 6 * ((2 * 6 + 6 + 9) + 9 * 5 + (7 * 3 * 9 * 3 + 5 + 6)) + 2 * 4\n5 * 7 + (9 + 3 * 4)\n5 * 3 * 3 + (9 + 3 * 9 + 5) * 7 + 8\n3 + 2 + 7 + (6 + 8 + (2 * 6 + 5) * 2)\n8 * 8 * (6 * (3 + 6 + 4 * 7 * 8) + 7 + 9 * (3 * 8) + 8) + 3\n5 + 3 * 9 + 2 * 4 * (8 * 7 * (7 + 6) + (9 + 3 * 8 * 7 * 7 * 3))\n(4 + 8 * 3 + 6 * 9) * 2 + 4 * (7 * 4) + 7 + 5\n7 + ((8 + 6 + 7) * 2 * 8 + (9 * 3 + 8) + 2)\n6 * 9 + (3 + 4 * 5 * (8 * 6) + 4) * 8 * (7 * 7) + 5\n5 + 7 + 4 + (2 * (5 + 3 * 2 * 5 + 7 * 4))\n3 + 6 * 9 + (5 + (7 + 3 * 4 * 3 * 5) * 6 * 5 * 2 * (8 * 5 * 5)) + 8\n((9 + 8 * 2) + 9 * 8 * 3) + ((8 * 7 + 3 + 4 * 7 * 5) * 4 + 3) + 3 + 9 + 2\n(8 + (6 * 7 + 5 * 7 * 7 + 3) + 9 + 6 * 2) * 3 + 4 + 2 + 4\n5 + 8 + ((5 * 9 * 7 * 9) * 8 * 8) + (8 * 7 + 8 * (6 + 9 * 3 * 2) * 6 + 6) + 3 * 9\n5 * ((3 * 5 + 3) * 7 * 3 * 3 * 6) + 4 + 6\n((2 + 6 * 8 + 7) * (6 + 2 * 2) + (4 * 8 + 9) * 4 + 5) * 4 * 3\n9 * 9 * 2 * 2\n2 * (4 * 2 * 8 * 8) * 5 * (7 + 9 + 8)\n4 + (2 + 5 + 8 + 8) * (9 + 4) * 8 + ((6 * 3 + 5 + 8 * 5 + 2) * (4 + 7 + 9) * 9 + 3 + (4 * 4 * 6 + 2 + 2) * 4) + 7\n5 + 5 * 9 * (2 * 6 * 2 + 3 * 7 * (3 + 7 * 4 + 5)) + 6 + 8\n9 * 4 + 2 + (6 * 8 + 5 * 7)\n(6 * 5 * 7 * 8 + 3) + ((9 + 5 * 5 + 8 * 4 + 3) * 6 + (6 * 4 + 8 * 6 * 3) + 3 + 5 + 5) * 7 * 5 + 7 * 5"},f82f:function(n,e,a){"use strict";a.r(e),e["default"]="neesewweeseeseesewseeenwneswe\nneneswnenenwnenenwnwenesenenwnwnenenwne\nneswnweswseswnesewsesweswwswswneswsew\nneneeneneeneewnenweneneeeeswswe\nseeeeseseseeeeweeeseneenweeee\nswseswwswswswswwswswswswswswneswwswsw\nseseswsenwseseseseseseseesenwswswsenwse\nseswnesenwsesweseswesenwsesesesewsenwsese\nenwwwsewwnwwwwnenw\neeewseeeeseseseeeeseseseeneese\neseneswwseseseseseswsesenwseseseswswwse\nnesweeeneneneenenwnenenenwseseeneenew\neseeeeseeneewnwseseenwnweeeene\nnwswnwsenwwnewnenwnwnwnwnwnwenwnenwnwnwse\nswneseneseseswseswwseneswnwseseesesesesw\nwswnwwwwewnwwwwnwwwwwwnwnww\newwwswwwwnww\nwwnwwwwwwwseswwewwwnewsww\nswwwnewswwseswswswswswswswswsw\nwswwwwnewwwsewwwswwwwwww\nnenweseswsesesesenwsewsesewsesenenesesw\nswswswnwsenwseseseswseseswsesw\nseseewseeseseseesesesesesesesesesese\nswesweeeseneeneeeeeeeswenwese\nwnwnwnwwwnwnwnwwnwwwnenwnwse\nneseeseseseswsenesewesenesewswnwnwse\nsweeneswwswswswnwswswsw\neeeeeeweeeeeeeeswenwneeew\nswwesewwnwswenenenwnwnewseswwswew\nseswswswnwesenwwswswsweeswwenwnwenw\nnwnewenwwswnwewsewswnesenwenwwsew\nnwnwnwnwswenwnwswsenenwwnwnenwnwseese\nwwnewwwwwwnwwwswnwnwnwnw\nnwenwwnwnwnwnwnwnwwnwnwnw\nsewnenewwnenenwswnwenwnwseneeswnenwne\nenewneenwneneeenewswseseneewewne\nneneneswnwswneewnenenenwneeneneeneene\nnweeeneeneseneneneneneneneeneneee\nswwnenwnwnwwnwsenwwnwsewnwnwnwnwnwnenw\nwwseswwwwnwneesewwseswnwsenwwwnew\nseseswseswneswseswswseswwswseswneswsw\nnenenwswnenwswnwneneswswenewewneene\nsweswnwwneswseseseneseswseseswneseswsesesw\nnwnwnenwnwwsenwnwnwnenwwnwnwswsenwnww\nwnewwsenwwsenwwswwwnwwnenwnenww\nnwwwwswseswwswnesw\neseeeeeeeeeeeeeswenewee\nneeneneeswneneeneneneeenewnwnenenene\nwneeswnwwsewenwneneswnwneesewneesw\nnwwnwneseswnwwenwwsenwenenwnwseeseww\nswnewwswswswswwswswwnwswswswseswwsw\nsesenwseswneswswswswswnwswnwseswseeeswsese\nnwnwnwswnweseswnwnwnwnenwnwnwne\nswsweeeeeneeseeneswneswnwnewsesw\nseswseswseseswswseseswseneseweseswsesese\neeneenenenenenesweneneenene\nseeseeeeeseeeeeeeeeenwese\nnenwnewwswwwnwwswwnwnwneswwsewnw\nseseseswsesesesenweeesenwseseseesesese\nwwwnesenesweswswnwwwwnwnwnwsewne\nswswweseseswswsweseswswswswswseswsww\neneeseseneenwwnwwneneeseeseswnwne\nseswswswenesesweseswnwswsesenwwsesw\nwwwwswwwwnwwswnwneesewswswsew\nwnwseeneswseeeseseeseewwseenwnee\nwseeseseseeseseseseseesesesese\nseswswseeseseswseswswseswseswnw\nwwwwwwwwwewswwswnwnwseswwwwsw\neeeenwsweeeesweeneeeswenene\nnwneewnwnewnenwenweneneswsewsenwsw\nneeeneneeeeeeeneeeneeeneew\nnwnwnenwwnwnwnwnwnwwnwnwnwnwnwnwsenwnw\nsweenwnwswnwnwnwnwnwnenewnwsenwneeswnenw\nseswseneneswnwswnweseseswsesewsesewswwe\nwswwnwsewnewnwwswwewwswwsesewnww\nwseswseseswswsesewnenwnwseneseneswsew\nswseswwsesenesenwnwswseeswneswswseseswnesw\nswnenwneneneenenewnwnenwnwseeswnwwne\nsenewnwnewseseneeseswswnenwsewwsesese\nnwsweswswswseswswsweswswswnwseswswwnwsw\nnwnenwnenwswnwnenenenwnwnenwnenwswneneenw\nnwnwnwnwnwnwnenesenwnwnenwnenwnwnwnenwnw\nwwnewwnwwwwsewwwwnwwwwww\nswseneseseswseswseswseseesesesesew\neswswwswswswswwwswswswnenesweswswsw\nswneneweneneneneneseneenenweeenene\neseeeseseesesenweseneseesenwnwsewse\neeeeeeeeeeeweeeeeeee\nswneesewneenwnenesenenesenenenwwnewne\nseseswsewseneneseswseswsewsewseswesese\nenweneeneneeneeswneeseeneeee\nnenenenwsenwnenwenenwwneneneswnenenesw\nseseseeseneneeseseeseesesesewewse\nneswseswseseseswswseswwseenwseswswnwswsw\neneneeweeeeneseeeneeeeeewnene\nnwenwswesweswenwe\nseswswswseswswseswswswswwneswswswswneswsw\nenenenenenwnenenenenenenenenesenenene\nwseswnewneswwwswswwswewnenewwse\nwwseneseweneswneeneeswnwne\nwnwwwwwwwewnwwnenwwsewwsww\nseneswneneenewswnenenwenweenenenesee\nseseeseeswewseeeeenwenwsweene\neneeeneeeeeneneeeneeneswwesenene\nnewswnwsenwwswenwnewne\nnwnwnwnwwnwsenwnwwnwwnwnwnwnwnwnwnwnw\nneneeeeneeneneeeeneeeesweee\nwnenenwswsewenenwnenwneneswnweenenwwe\nnwwsenenwseswwsenwwnewnenwswwnwsenw\nwnwwnwwwwewnewwwwwsewwwwswnw\nnwnwsenwnweseswwswsenenenwnw\nneenenenwnwnenwneneswnenesenenwnenwnenwne\nnwwsenewnenwnesene\neeeeeeesewsweeeswenweenwe\nswwnewwseseswwswwnwnenewwnwsenese\nwwswswseeneswswnwwswswswwswswswswswsw\nsewnwnwnenenwenenwnwnwnwsenwswnwnwnwnenwnw\nnwnwnenenwneswnwnenwnwswnwneenwnwnenwnwnw\nnesenenwnwnwnwenenwnewnwnwnwnenwnwnww\nwnesesesweseeeswneseenew\nnenwewesenwnewwwnwenewswnwnwseenw\nweeseeseeseneseseseeseeseesesee\nswwswwwswswswwswwwwswswwwew\nnwnenenenenwneswnwnwsenenenenenenenwnwnwnwe\nseseseseeseseseseseseeesenwseeswseee\nswseseseswseseswseswswsenesesesesesw\nnwnenwnesenwnwnenwnwnenenwnwwnwnenwnwnwne\nswswswswswseseswsesweseseswnwswswsw\newwnwwwnwwwswweww\nseewsenenwswseswswnwseswseseswneseswsesw\nwnewwnwwwwwwwwwwwsewwwww\nsesesesesenwseseseseseswseseseesenwnwse\nswswswswswswswswswswswswswswsweswswnwsww\nswswewseswswwwsewswwnweswswswswnenw\nnwsewwnwnwnwnwwnwnwwwwnwnwnwnwnww\nwneneseneneneneneesewnenenenenene\neenwseeswswswnweseeseswneeenwnwne\nneneneneneneneneneneswswnenenenenenenenene\nswswswsesewswswnenwswswswseswswswswseesw\nnesenenwseswswswnwswseseswseswsweswseswe\nseeswenwsewneswneneswswnwswnwseswsene\nnenwnenwnwnwnwnesenenenenenenwwnwnwnwnwnw\nwneeneneneeneneneenenenesweneneenene\nnwenenwnenenwnwnwnenwnwswseenwswwnesw\nneseseneneseswswswwswsenesesw\nswswswwnweswsewewswswswswswswswsww\nnwswswseseswswseseeswsesesewseseswnesesw\nwnenwneswnenenwseenwnwenewnwnenenw\neeeneneneswnenenenenene\nswswwswswswswwswweswwswswwnwwwww\nnwswnwwnwwnwswnweseswenenwesenwnwnew\nseeseseseseeeseseeseseenweeweee\nswseseseseseseseswseseneseseseseseswsenw\nnenwnenenenenenesenenenwnenenewnene\nnenenenweenewneneswnesenenwnesenewne\nswswswswwswswswneswswswswswswswsw\nnwsesenwnwseseseseweeseseswsesesesese\neeneneneneneseneenenenenwnenenenenene\nsweswneswneneseswneenenenwneneswne\neswseeseseeseseseseneseeeseewnee\nneneeeweeeneneneeneneneeneeese\nsweswswneswwwwswswswnwswnwseswswswwsw\nwnwseseseeswnwenwsesweseweseseswnwse\nseseeeswsewseseseesesenee\nnenenenwneneneneneneneneneseenenenenene\nnwnwnwenwnwnwnwnenwwnwsenwnwnwnwnwnwnw\nwsewwwwswnwnenwwneenwwwnwsenwwnwse\neseeeswenweneweseseeeeeeeee\nnwnwwwnwswnwwwwewnwnwwwwwnwwnw\nesesesenesesewseseswsesenee\nseswenwnesenweswsenwnewsese\nnwnwswnwnwenwenwnwnwnwwnwnwnwnwswnwnwnwnw\nseswnwwsesewneseseseeeswseswswsenesenw\nwseswnewsewwwseswnenenwneswswne\nesweeeeewneeneneneeeeeeee\neeweseswwswswwwnwswnwesenwwnenww\nwswswwneswwnwwwswswwsewe\nenwswwnwnwnenwnwnwnwnwnwnwnw\nnwnwneneneneneneenenenenwnwneseswnwnwnww\nwnwnwwwnwnwnwnwsenwnwwwnwenwswnenw\nneseseneseewnesesenwseeeseswwseese\nswswswwswswswswnewswswswswswswswsww\nwwwsewwwnwswwnwnwnwnewnwwwnwnw\nenwwwneesesweseeseneswewsesenesesese\nesesesesesesenwsenwseseesesesesesesesesww\neweeeeesweeeeeeeenweee\nnewswseswseseseswsweswswnwneswwswsesw\nnenwswnwsenwseswnwnwwswweesesewnenwse\nseseseseseswseeswseswseswsenwswseswseswse\nseseenewesesesesesesesesesenesesesesw\nsweneesewsenwswswseseeeseenwenee\nseeweseswnweseseeseeweeeeese\nesweseeeeseeeeeewneeeeese\nwwwswnwswswswweewswswswswwswwsw\nswseswsenesesesesesesesenee\nswenwnwnwswnwneswnwnwnwnenwnwnwseeswe\nswnwnenwnwnenwnenwnwnwnenenenwnweenwwnw\nnwswswenwneseswseenwnesenenewwnwwse\nesweewneneeseneswnenee\neeeseneweneneeneeseneneneneneenenew\nswneswswwwwswswswswwwwswswswwsww\neeseeweneeeesesese\nsenenwsenwwnenenwnwwnwnwnwnenwsenwsenenene\neneeenewwsweeeneneseeswneewenw\nsenwnenewenwnwneswweneneneseeneenesw\neesenweeseesweewewneeeseee\nwsenwewnwwwwnwse\nnwnwnwsenwnwnwnwnwnwnwnwnwnwnwsenwnwnwnwnw\neeweseneeeeweeneneeeneeenw\neseeeeseeseeseseeseseseenweese\nsweeswneseesenenenwswwneneswnweenwnw\nnwneenwswnenenenenwnwnwnwnenwnenwnenwnene\nwnwnwnwwnwwwnwnwnwwsewnwnwenwswnwww\nwwwwnwwwwwwwwwwwwwwenw\nwwwswwswsewwswnewnwwwewswwneww\nsenwswseseesenesewseseseneeswsesesesesese\nnwnwswsewsewswnenenwew\nnewnenwnenwnwneneenenenenenenwnwnenene\nwnwnwnwnwnwwnwsewnwwwwwnwwnwwe\nswswswswneswswswswswseswswswswswswseswsw\neneneneeneneseswnenenenenenenenewnenene\nnwnwnwnwnwnwenwnenenwnwnwnww\nnenwwswnwnesewenwnesewwnwsenesewswsw\nnwwnenenwneeneneseenewnenwnwnenwnenwne\nswswswswswswswswswswwwwsweswneswswe\neneneneneneneneswneswnenenenenewnenenene\neeeneeeeeneewseneeeeeeene\neseseeseneseswwsesesesesewsesesenwsw\nnwnenenesenewnenenwnenenenenwnenesenenenene\nwnweewswnwswewneswnesenwwewswew\nwswswswsenweeeweneeeneewneeesene\neeeeseeeseeeseseeenweeesesw\nswswswnwnwenwnwswnenwnenwnene\nswwswswswswwwwswwweswwwswswneswsw\nwwswwswseneswwwswswswenwsweswsenew\nswwswswseswseswswseswswneseswswswseseswnesw\neeneeeeesweeeee\nswwswswwswwswwneswwneswswswswswwsw\nseesesenwseseseswse\nnenwnwnwesweneswnenenenenenenwswne\nnwnwwnwnwwnwsenwnwnwwsenenwnw\nswseswwnwswswswswswseswswswenew\nenweeenwesweeeeeeeeeesenwsw\neswseenwswnwsesesesenwseewwseenesenw\nwswseeswneeeneewneneneeenwneeswnw\nnewnwsenwnenweneeeneesweseeswnw\nnwnwwswwnwwwnenwnwnw\nwnesenenenwnenenenewnenwnenenesenenene\nswswwswsenwswswswswswswsw\nsewseswswneseseswseneswswseesesenesese\nswwseswwswswswwnwswwwwnewwwwww\nwwwnewsewwwwwwwwwwwwwww\nnewnenwwnwesewnwnwwenwwnwsenwwnwsw\nnwwsewwwnweseneneswswwsenewwsenw\nswswswwswswnwsweswswseswswswweswswswswne\nwswseseswsenwnweseeseswswse\nnwnwnwnwnwswnwwnwnwnenenwnwswwnwnwewnw\nneswswswseswswsenwesweseneseswwwnwswnwsw\newwswswwswswswwswswswswswnweswwwsww\neeseeseeseeeeseeeeewseeese\nneeeenwneweeeeswseeeneeneee\nneenenwswnenesenenenwneneneneneneewwne\nneneeeneneneswnenenenenenewnenenenenee\nneswnenenenwnwswnwnenenenenee\nwwwwenwwnewwwwnwwwwwwwnwsw\nnenewsenesweseneeneenwwnenwneswwsw\nsewwwnewwnewswwwww\nsenwnwenwwnwsenenwnwswenenwnwswnwnwsenew\nnwnwnwnwnenwnwnwswnwnwnenenwnwne\nwswseeenwewnweeeewswseesesese\nwwswwwwwwwseneeenewwwwwse\neeeseeeeeneesweeeeeeeese\nneesewneneneneeneeeseeeenweneee\nseseseseseswseseseseseseswsesenesesesese\nsenenwnenenenwnenenenenweneswnewnwnenene\nsewswwesweewswwnwswswwwwswsww\neeneneeneneesweneeneneneswnenenwe\nswneswswsesesesenwswesewwneseswsweswnw\nnenesweneeeneeneneneneneneneee\nnwwsewnwnwnwwnewnwnwnwwnwwwnwsenw\nwnenenwseswneneneswenenwsenwneswnwne\neeeeesweeeeeeeeneeneeee\nnwnwnwnwwwnenwswnwnwewnwwwwwnwnww\nnewnwnwnwnwsenwnwnwsenwsenenwnwwnwnwnwnww\neseseswseseseseseneseseseeswenwesew\nwswwwwswwwwwwwwwnwwwsewsw\nnwnwnwnwwnwnwnwnwnwwwwnwnwnwwnwnwe\nnweneseneneseewnwnenwwseseneneeenee\nnwnwnenwnwnwnwnwnwnwnwnwnenwsenwnwnwnwse\nseseseseesesesewsenwsesese\nsweenweesenwwewsenwswsesweenene\nnwswnwnenwenwnwnwnwneeswenwnwnwwnwnwne\nnenenwwnenesenesenenenenenenesenenewswnw\nsenweswnweseesweeesenwseenweenw\nseswsweseswewswnwnwswswseswnwseswswne\nenwnenwnwnwnwsewnwnwswwnwnewnwsew\neneeneweneeeeeeneeeeenweesw\nseseseseenweseswwewneeew\nneenwsesweeenesweeee\nnweenenenwneneseswesweeneneneneene\neseeeeesenweeesweeseeseeseee\nnwnwnenwnwnwsenwnwnwnwnwnwnwnenwnwnwnwwnw\nseseseswswswswseswnwswsw\neeswenwneneeeeneneeneeeeeenene\nwnwnwnwwwnwwnwnwwswe\nesenenenenenenwneeswnwnwnenenenwnwwnw\nseseseswsesenesesesesewse\nnwnwswnwswwnwnwnwnwnwnwnwwnwenwnwwew\nseseseeeeeesweeseeseene\nseeswwwneeswswnesweswswwenwswnwsww\nnenenwnwnwswenenenwnwnenwnenenwnwnwnwne\nswseswswwswswswnwnwnwseswwwwewwsw\nneenwseeneesesenewneenwnwneeenwsesw\nwswswswseesenwneswnwswseseneseswwswswsw\nswenesenesesenwswsesweswwnwswnwwsenwsw\nnwnwnenenwnwnwnwnenenenwnwnese\nswswseswseeswsweswswseseseswswswwnwswswse\nswswsweswwwswswswsweswswseswswswswsw\nnwnwsenwwnwnwnwsenwnwnwnenwnwnenwnwwnene\nnwwnwnwnwwnwwwwwwwnwewwewww\nswwswswseswswswswswswsweswswswswswswsw\nnesesesesenwewswnwsesesesesenw\nseseeeseseeseeseeeesenwseseeswwe\nswseswswswswseseswsenwnwswsw\nswswwwwwewswswewnwnwnwswewwsw\nswswnewswswsenewswnenwneeesenwswwsw\nswswswswswswswswswswswswnewswswswwswsw\neweseeenwseseeseeseseeseseseee\nsewseseswesewseseneseswswseesenwnwsw\nwswwswwwwwnwswswswsenewwswwswww\nnwnwnenwwnwwwwwnwwnwwwnewswnwsw\nneseswwsenwnwswwsenwneesenene\nsewewwswwwswswwsewnwneswswwwnw\nnenenewnewsweeeeeseswswseenwnee\nwwwnwnwneseswewswwswseswwswenewsw\nneswsewswswswwswwswswswwwswswsw\nnwnwnwenwwnwenwsewenwnwswwwnwnwnwnw\nnwnwnenenwnenwnwnenewnwseneswnwnwseenwnw\nneweeseenwseeeeeeseseenwneeew\nseswnwnweseweeswnwnewnesweswnenenw\neneewneneeneeneenenwnesweeseene\neenwsweeneneneneeeneeneeeneenene\nneneswnesweneenewneseneswnenwnenwwse\nswneswswsesewwseswseswswswseneswswwswne\nnwnwnwnwnwnwnenwnwnwnwnenwnwswenwnwnw\nwswwswwwnewswsenwwwswswsewwswsw\nwsewwwwwwwwewwnwwwwwww\nseswsweseswswnwswsesenwseseseswwseswse\nwwwswwswwwswswswswswswwswswswew\nswswseseswswsesesenwneswswswseseeseswwsese\nenwswnwnwnwnwneneneeswnwneeswnewnwnenw\nswswsewswswnwswnwneswswwwwnwwewse\nnewneeneneneneneenenenenenewnewenese\nnwnwnewnwewenenw\nswwnesenwseneneswnenenenwnw\neeeeeeeneeeeeseweeneeene\nswswswwwsesewswswswwwnwwwswwswwne\newsenwwewwewnwwwwwwnewwww\nnenewneeneenenenenewneneeneneneseneene\nswswsewseswswseswweswswswswneswswseswsw\nswseswseswsesenwsweswwseswseswseswenese\nswewwnewseswnwwwwswswwwsewnene\nseenesesweseenwnwseseesesewsesesweese\nnwswsenwenwnwnwswnwewnwnwnwnwnwne\nwsewwnewwwwwnwswwwewwwnw\neeeeenwswnwswee\nwswwwwwwwwwwsenewwwwwwww\nnenenenwseseneeseneneneeswnwesenwnwnwse\neneswswsweweseswswsenwswswswwwnesese\nnenwnwnwsenwnewnwnwnwewenwnenwnwnwnwnw\nnewnwswwwwwnewswsewwwwwwswswne\nsewseneseseseseseseseseseeseewsesese\nenenenweeneeeeneneneeeneeneeesw\nesweeeneeseeeesweeeseswnwnwenw\nseseswsweeswswwseseswswseswseswsesenw\nnenwneneenwnenwnwnenwneneneeswneneneneswnw\nnwnenenwnwswnwnwnwnenwnenwnwnwnwnwneswne\newnewnwswswweeswwewnwenenewwswse\neeesweseenwenwesweweeeeseswne\nnenwswnenewwnweneneswewneneeneneswnee\nswseseseseeswseseswseseswsenwseswsesenw\neneseeeswseseesesweeenwse\nenenenenwwnwneenewnenwnenenwswnwsesenw\nwswwswswswswnwswsweswwswswswswswswswsw\nnenwneswnenenenenenenenenesenenenenenenene\nswnenwnenewsewneneneneneneseeneenenenenw\nwwswwnewswswwwwwenwsw\nseeeseeenwneseseseeeeeewsesese\nseneseseseswseseseswnwswseseswsenenewsw\nswseseeswseswswswseswswwswswswswswswsw\nnwnenenewnenenwneenenwseseneneneswnewne\nnewneneneneneneneenenesenenenenwnenew\neeneeeeweeneneeeeeeeeswenwsw\nnwesesweseseswsesewsesesesesesesesesese\nwesweeweewswwnenweeneenesenene\nswswnewswswwnweneseseseneseswwwseesw\nwwswnewnenwswswswwewwwswswnewwse\nneswseseseseseswseseseswswsesesw\nneneneneneneswnenenenenenenenenwnene\nwnwenwwnwnwnwnwwnwnwwnwnwwwnw\nsenwneswnenenwnwseneneswnenwnenewnwnenee\nnewwwnewwwwwwsewwswwsewneww\nnwsenenenenwswnenenwsenenenenwnenenenene\neseeseeseseseeseweseseeseesesee\nwswswwneewnwnwsewwwnenewseneswww\neeseeeeeeeeeeeneeeeeew\nsenwwneneswnesenwsewnenwnwnwnenwnwnew\nsewneseseseneswswswswswsweseseswseswwsw\neseseeneseeewneenweeenwnwswenee\nswnwneswweneeneewneswsenwesenwesee\nneneswnenenwnwnenenenenenwswneneeswnene\neeseseeesewsesee\nseseesenwswseseseswsese\nneenwseeenwsewwwseesenesesesesesw\nenweseneeeneneenewenewenwswese\nwwwsewwwswewwswwwnwswwwswsw\nswnwnwwseewnwnwwswnwwnwnwwnwwwnewse\nseseseseeseseseseseseeswenwseesesesese\nneneneneneneeneneenenenenewneeneee\nweenwnenwwsweseseswnwsee\nsesewwwnwwwnewwww\nneewewneeneweeeeeeneenesenene\nnwwnwwsewnwnwnwnwnwwnwnwwnwsenwnwnwnw\nsenwnwnwseseseseswwsenwsesenwseneesenw\nwewswwswswswwswswwwwsww\nnwseneseswwnwswnwseseenwewseeeenwsee\nneneswnenenenenwnenesesenenesenenenwnenw\nnwneneeeswnewsenweenenenweswne\neeenwneswseenewswnwneenwseneneeeee\nneneneeeneseesenewneenwwneneneneswne\nswswswswswswswswswswswswswswswswneswswsw\nenweeeseeseeeenwswweeeeeee\nwenwnewseenwnwneweenwnwnewnwnwnwnw\nswswswsweswwwswswwnewswwswwwseww\nnwwnwnweseswnwwswnenenwnwnwwswewnw\nwnewwwwsewwwewwwwwwswww\nswseswswswwswswswswseesweswswsesenwsw\nsweswnwseeswswseswwswnwswswswswneswsw\nwwswswseswwneneswseswswwswnwwswseww\nsweswswswswseswswswswswswesweswwswnwwsw\nsewnenwnenwswnwswenenewnwnenwseewnw\nwnwwneenesewneeneenwnesewnewnwnenene\nseswswswneneswswswseswswwswesenww\nswswswwseneswswwswseswswswswesw\nnwwnwnwwwnewwwsewnwnwnwnwnwsenenwnww\nseseseswseswswseseseswseneeseseswswsewsw\neeneweseseneesesweseeeeseeseese\nswseswswseseswswnenweseswswseswseswsenw\nwwwwwwwwweswewwwwwwwnew\nswseswswswswswswswseseseswswswswwneswswsw\nwwwswwwwswwwwwwwwnewsesww\nnenenewneneneneneneneeneswnenenene\nnenenwneneneneneneewneneneneneswnwnene\nnwneeneneneneeeneeeswneswenwswneswse\nnesenwseeseswneseesenwsesesweneeesesw\nswwswwswwwseswwwwnwwswsewneww\nwwwwwwwsewwwnew\neenwesweeeeweneneeseneeewee\nswsenwswnwwwswneenwwnwnwenwenenwnw\nswnesweswnwswneenwsesweneneswnwnwnwnw\newswwnwseswsenewnewwsweeneneneese\nsweseneseswnewenenwnwwswseseseseswsene\nnwnwnwnwwsenwnwwwnwnwnwnwwneewnwnw\nnwnesenenwnwnenenwnwnenwwnenenenenwnene\nnwnwswnwnwnwsenwnwnenwnenwnwnenwnenwnwnwnw\nwsenwwenwnwwswwnenwwewnwnwnwwwse\nwwswswnewwswwwwwwwswwweww\nwswswwswswwswnwswswswswseswswswswsww\nwwnwwewnwnwnwnwnwseeswwww\neeeeeeeeeesweeeeenwseeeew\neewneseenesenweneswseseeeweee\nswwwswswwswswswswseswswwswnwswswwsw\nnweeeeneneeeeseweweesweeeene\nweewneweswnwwsenenenenenwesene\nsesenwseseseseeweseeseswenwsenwsee\nesweeeeeeswnenenwenweeeeee\nwswswwnwswswwswewnwswswswswswswswewsw\nsweswswswswswnwswseseswswseseswswswswsw\nnwewseeseeeneswswseeweseeeneenw\neseswnwneneeneneeenwneneenee\nswwswswwneswsewswnwnwwseeswwwsew\nneesewweneseseswnwnewnweneswnwneswnee\nnwseswseswswswswnwswsweswwswseseswswe\nwnwwwsewnwenwwwswnwwnwnwwwwww\neseseseeneesesesenesewsesewsesesewse\nswnwnwswnewwenwnwnwnwwwnwnenwnwwsww\nnwnwnwnwnwnwnwenwnwnwnwwnenwnwsewsenew\nneseswseswwseseswenwnwswseswseseesew\nnwwnwnwnwnwswesweeenwnwswseeswnwnw\neeeeeeseeeeeesenweeeesese\nnwenwwnenwnenenwnwnwnenwnwneneswnw\nnwswswseswnwsesenwseseswswse\nswseswneswsweseswseswwwswswswnwswswswsee\nenwsesesesewseeseeeseseee\nwenenesesesewnwneneswnwsweweneeswenw\nsewwswswnewsewewswswwwswswnenesesww\nseewseseeseseseseseneseseeeeeeee\nnwnwnwnwnwenwswnwnwnwnwnwenwnwnwnwnww\nswswswswswwsweneswswswnwswswswswswswswse\nneneeneeneneneswnenenewnenenenenenene\nnenenwewnenenwnene\nsesesewseseseseseswseseseswnesesenesew\nnwnwnwwnewseenwnenwswnwswnwneneneene\neseeeeseseenwesweeeenweeswee\nneswwnewswsewswwseswswswswwwnwseswswsw\nnwnwnwnwnenenwnenwnwneswneenwnwnwnwseswsw\nwswwwwwswewswwwwnewsewswwnw\nnwwneenenenwnwneenenwnenenesenenwnesw\nwwewwnwwswewswwwneewwneeww\nwswnweseseseseswseseswsesesenesesenese\nwnwewnenwnwwnesenwnwnwnwsenwnwnwnwnwnwse\nseenewswswswswsewswswswseseswswswswsese\neweseswseeeenweeeeeeeeeee\neswsenwneswswswswwnwswneswneseseenwnenw\nnenwnwnenenwnenesenwnw\nneneneneneneeswnenwneneseneneenwsw\nnwwnwwwwnwwnwnwwnwwe\nneeneswsesesesenesenesewseseswesenwsewse\nseenwswsweeswswswswwwnwseswseswsee\nsweswnewwwswnwnwewswwswwswswwww\neewneenwneeeeswneeseseeee\nwewwwwwwwwwwewwwwwwww\nnwsweneneneewnwnenwnenenwnwnwne\nnenwneneeneswenenewneneseneswwnenenene\nswnwseswseswswseswswseswswswseswswswsese\nwnwwnwnwnwneenwnwnwnwnwnwnwenwnwnwnw\nwwswnwnewenwwswswwnewwwwwwwne\nneewnwnwwnenenesweneneeenwseneneswnwne\neneswnenwswnwnenwnwnwne\nwswnenewneswwswwwseswneswswnewswnenw\neseeseeeseseenweeeenweeeeeswse\neswsenweneeeeeneeeweneeneneeene\nnenewnesesenenenenewsenenwnwne\nnewwwnwwnwnwnwwwseswwwwnwnwnenwww\nnwnwnwnwnwenwnenwnwnwwnwnwnwnw\nswswswswswswswswnwseswswseswswswswswsw\nnwnwwsenwnesenwnenwnwnwnwnwwswwnwww\nsenenwswswswwswswswswswswswswsewswswswsw\nnwwwwwwwsewwwwwwnewwwe\nwnenwswnenweswnewnwnwenwnwswnwnweesenw\nnweseeeswenewseeeneeeweswneenwe\neswnwseswnwswswswewswswwswswswswsww\nswsesesenwsenwswswsewneseseseenwsw\nseseseswseseneseseseseswswseswseswneswse\nnenenenenwsenwsenwswsewwwwwswnwenwse\nneeneneneseneneneeeswnweneeee\neeneneeneneswneneenweneswnenenenewne\nesenwwswwnwswewwwswswswswnwwwsw\nwwwseseswnwnwneeenwwnewswnwswwwe\nwswseswseswswswswnwswswsweneswswswsesw\nnwswnwwwnwnwenwnw\nswsesenwneseseseseseseseseseeseseesese\nswsenewwsewnwwwwswewwneewwse\nwwsweswnwnwnwsenesewswneneneseewne\nnwnwnwnwnwnwnwswnwnwnwnwnwnenwnwsewnwnwne\nswseswswsesewswsesweswswswswswswseswsw\nnwnesewnenenenenesenenenenenenenene\nnwnwnenwwnwnenwnwnwnwnwnwnwnenenwnwnwnwse\nneeesweneneenee\neeseseseneswweeesesenweeesenweenw\nwswwswswwwwwwwwewwwswweww\nseseseesesewsesesewsesesesesesenesese\nnwnenewseseneswneneweeswnenesenwewne\nneseeneneneseenenenenenenenenwewnenee\nseseseswseseseseseswesesenwswseseswsesw\nswswsenenwewneseeeneeeneenesenwwe\nsewwwnesesenwwnewwwwwwnww\nnwseesweseswseswnwwsesweswsenwnesenenw\nwwneseseeeseseeseseseseseneewseseee\nnenenenwnenwnwnwneenwnewwneenenenwnw\nsweeneeeeeeneeeeeeswneeee\nwseeswwswwwwwsweswwnwswswswswww\neneneneeneswneneeneswneeneneneeee\nenenenenenwnwwswnenenese\nswnewnweseseewneneeswswswwnweww\nseswsesesesesesesesesesesesenesesesesese\nwswswswswseswnewswneswwwswswneswewsw\nwnenenenenwnenwwenwnwsenwnwnwnenwnw\nseseeeeeweeeeeeeenwseesesese\neeeesweeeeneeseeenweesewesene\nswnewswneswwseneswwswneswswswenwswse\nnweneeneneneneneneesenwswswenenesenww\nseneneneeenenenenenenwneneneeeenene\nswwswswswswswwwwswswswweswwswsww\nnenwneswnenenwnenenenenesenenwneneenwnwne\nswswswsweswswnwswswswswswswswswswswswsw\nsesewnenwnenenwnenenwneenenenwnwnwswnenwnw\nsesenwseseseseseseseseseeseswsesesesese\nseseseesenwsenwseseswseseseseseswsewnese\nwwswnwwswwwwwwwwwneewnwww\neeeseswsesesesenwnweseweese\nneeeseeeweneeeeeneenwswnwnesw\nwnwnwwwnwnwnwewswnenwwwwwswwnw\nswnwseseswwswneseswneseswswswseseeswsw\neswnwnwswswwswswswswsweneswseswswneswswsw\nnwseseeseseseseesesesesesee\nseswseswswewwswnewnwswwwswnwswww\nwwwwwnwnwnwnwnwewswnwwnwwnwnww\nneseswnwswswseswseseseswseswseswseswswsesw"},f95a:function(n,e,a){"use strict";a.r(e),e["default"]="431 players; last marble is worth 70950 points"}}]);
//# sourceMappingURL=chunk-1016671a.2dfb7afb.js.map