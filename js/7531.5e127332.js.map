{"version":3,"file":"js/7531.5e127332.js","mappings":"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","sources":["webpack://advent-of-code/./src/components/2021/Day5.vue?c508","webpack://advent-of-code/src/components/2021/Day5.vue","webpack://advent-of-code/./src/components/2021/Day5.vue?0d47","webpack://advent-of-code/./src/components/2021/Day5.vue","webpack://advent-of-code/./src/util/color.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":5,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged},scopedSlots:_vm._u([{key:\"partOne\",fn:function(){return [_c('div',{staticClass:\"canvas-holder\"},[_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"partOne\",\"width\":\"800\",\"height\":\"500\"}})])]},proxy:true},{key:\"partTwo\",fn:function(){return [_c('div',{staticClass:\"canvas-holder\"},[_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"partTwo\",\"width\":\"800\",\"height\":\"500\"}})])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"5\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n    <template v-slot:partOne>\n      <div class=\"canvas-holder\">\n        <canvas id=\"partOne\" class=\"canvas\" width=\"800\" height=\"500\" />\n      </div>\n    </template>\n    <template v-slot:partTwo>\n      <div class=\"canvas-holder\">\n        <canvas id=\"partTwo\" class=\"canvas\" width=\"800\" height=\"500\" />\n      </div>\n    </template>\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\nimport { createColorGradient } from '@/util/color'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const points = []\n      input.forEach(r => {\n        const coords = r.split(' -> ').map(c => c.split(',').map(i => +i))\n        if (coords[0][0] === coords[1][0]) {\n          // Same x\n          coords.sort((a, b) => a[1] - b[1])\n          for (let i = 0; i <= coords[1][1] - coords[0][1]; i++) {\n            points.push({\n              x: coords[0][0],\n              y: coords[0][1] + i,\n              diag: false\n            })\n          }\n        } else if (coords[0][1] === coords[1][1]) {\n          // Same y\n          coords.sort((a, b) => a[0] - b[0])\n          for (let i = 0; i <= coords[1][0] - coords[0][0]; i++) {\n            points.push({\n              x: coords[0][0] + i,\n              y: coords[0][1],\n              diag: false\n            })\n          }\n        } else {\n          // Diagonal\n          // Sort by x\n          coords.sort((a, b) => a[0] - b[0])\n          // Then determine delta x and y\n          const deltaX = Math.sign(coords[1][0] - coords[0][0])\n          const deltaY = Math.sign(coords[1][1] - coords[0][1])\n\n          for (let i = 0; i <= coords[1][0] - coords[0][0]; i++) {\n            points.push({\n              x: coords[0][0] + deltaX * i,\n              y: coords[0][1] + deltaY * i,\n              diag: true\n            })\n          }\n        }\n      })\n\n      const map = new Map()\n      // Only use points that aren't diagonal\n      this.solutions.partOne = points.filter(p => !p.diag).map(p => this.addToMap(p, map)).filter(p => p > 0).length\n      this.$nextTick(() => this.draw(map, 'partOne'))\n\n      const map2 = new Map()\n      // Use all points this time\n      this.solutions.partTwo = points.map(p => this.addToMap(p, map2)).filter(p => p > 0).length\n      this.$nextTick(() => this.draw(map2, 'partTwo'))\n    },\n    addToMap: function (p, map) {\n      const c = `${p.x},${p.y}`\n      if (map.has(c)) {\n        // Increase the counter\n        const oldValue = map.get(c)\n        map.set(c, oldValue + 1)\n\n        // Count how many have 2 or more\n        if (oldValue === 1) {\n          return 1\n        } else {\n          return 0\n        }\n      } else {\n        map.set(c, 1)\n        return 0\n      }\n    },\n    draw: function (map, id) {\n      let minX = Number.MAX_SAFE_INTEGER\n      let maxX = -Number.MAX_SAFE_INTEGER\n      let minY = Number.MAX_SAFE_INTEGER\n      let maxY = -Number.MAX_SAFE_INTEGER\n      let maxV = 0\n\n      map.forEach((value, key) => {\n        const coords = key.split(',').map(c => +c)\n        minX = Math.min(minX, coords[0])\n        minY = Math.min(minY, coords[1])\n        maxX = Math.max(maxX, coords[0])\n        maxY = Math.max(maxY, coords[1])\n        maxV = Math.max(maxV, value)\n      })\n\n      const gradient = createColorGradient('#C4E538', '#006266', maxV)\n\n      // Initialise the canvas\n      const canvas = document.getElementById(id)\n      const ctx = canvas.getContext('2d')\n      // Set the canvas size\n      canvas.width = minX + maxX\n      canvas.height = minY + maxY\n\n      map.forEach((value, key) => {\n        const coords = key.split(',').map(c => +c)\n\n        ctx.fillStyle = gradient[value - 1]\n        ctx.fillRect(coords[0], coords[1], 1, 1)\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.canvas-holder {\n  overflow: auto;\n  height: 800px;\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day5.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day5.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day5.vue?vue&type=template&id=624ec195&scoped=true\"\nimport script from \"./Day5.vue?vue&type=script&lang=js\"\nexport * from \"./Day5.vue?vue&type=script&lang=js\"\nimport style0 from \"./Day5.vue?vue&type=style&index=0&id=624ec195&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"624ec195\",\n  null\n  \n)\n\nexport default component.exports","const VIRIDIS = ['#440154', '#48186a', '#472d7b', '#424086', '#3b528b', '#33638d', '#2c728e', '#26828e', '#21918c', '#1fa088', '#28ae80', '#3fbc73', '#5ec962', '#84d44b', '#addc30', '#d8e219', '#fde725']\n\n/**\n * Converts a HEX value into an RGB object\n * @param {String} hex The hex color\n */\nconst hexToRgb = (hex) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    }\n    : null\n}\n\n/**\n * Converts the given R, G, B values into a HEX color\n * @param {Number} r The red color component\n * @param {Number} g The green color component\n * @param {Number} b The blue color component\n */\nconst rgbToHex = (r, g, b) => {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)\n}\n\n/**\n * Creates a linear gradient between the two given colors with the given number of steps\n * @param {String} one The first color in HEX\n * @param {String} two The second color in HEX\n * @param {Number} steps The number of steps between the two colors\n */\nconst createColorGradient = (one, two, steps) => {\n  const oneRgb = hexToRgb(one)\n  const twoRgb = hexToRgb(two)\n\n  if (steps < 2) {\n    return [one]\n  }\n\n  const result = []\n  for (let i = 0; i < steps; i++) {\n    const iNorm = (i / (steps - 1))\n    result.push(rgbToHex(\n      Math.floor(oneRgb.r + iNorm * (twoRgb.r - oneRgb.r)),\n      Math.floor(oneRgb.g + iNorm * (twoRgb.g - oneRgb.g)),\n      Math.floor(oneRgb.b + iNorm * (twoRgb.b - oneRgb.b))\n    ))\n  }\n  return result\n}\n\nconst createMultiColorGradient = (colors, steps) => {\n  if (colors.length > steps) {\n    return colors.slice(0, steps)\n  }\n\n  const sections = colors.length - 1\n\n  let result = []\n\n  for (let i = 0; i < sections - 1; i++) {\n    result = result.concat(createColorGradient(colors[i], colors[i + 1], Math.max(1, Math.floor(steps / sections))))\n  }\n\n  while (result.length < steps) {\n    result.push(colors[colors.length - 1])\n  }\n\n  return result\n}\n\nexport {\n  hexToRgb,\n  rgbToHex,\n  createColorGradient,\n  createMultiColorGradient,\n  VIRIDIS\n}\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","scopedSlots","_u","key","fn","staticClass","proxy","staticRenderFns","components","Day","data","partOne","partTwo","methods","input","coords","points","x","y","diag","addToMap","map","draw","minX","minY","maxX","maxY","maxV","canvas","ctx","component","VIRIDIS","hexToRgb","hex","result","exec","r","parseInt","g","b","rgbToHex","toString","slice","createColorGradient","one","two","steps","oneRgb","twoRgb","i","iNorm","push","Math","floor","createMultiColorGradient","colors","length","sections","concat","max"],"sourceRoot":""}