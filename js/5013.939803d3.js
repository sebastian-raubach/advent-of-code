"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[5013],{17930:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day16)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day16.vue?vue&type=template&id=e1f51fd0\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":16,\"year\":2018,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n// EXTERNAL MODULE: ./src/util/Opcode2018.js\nvar Opcode2018 = __webpack_require__(59217);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2018/Day16.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ const Day16vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Keep track of all samples (3-row examples)\n      this.samples = [];\n      this.program = [];\n      let current = {};\n      let blankCount = 0;\n      let programPart = false;\n      for (let i = 0; i < input.length; i++) {\n        const line = input[i];\n        if (line === '') {\n          // If everything is set, store the sample\n          if (current.before && current.after && current.ins) {\n            this.samples.push(current);\n          }\n          // Create a new sample\n          current = {};\n          blankCount++;\n\n          // If there's more than one blank line, the program code starts\n          if (blankCount > 1) {\n            programPart = true;\n          }\n        } else if (line.includes('Before: ')) {\n          // Parse the 'before' configuration\n          blankCount = 0;\n          current.before = line.replace(/\\D/g, '').split('').map(d => +d);\n        } else if (line.includes('After: ')) {\n          // Parse the 'after' configuration\n          blankCount = 0;\n          current.after = line.replace(/\\D/g, '').split('').map(d => +d);\n        } else {\n          blankCount = 0;\n          if (programPart) {\n            // If we're in the program part, store it as an instruction\n            this.program.push(line.split(' ').map(d => +d));\n          } else {\n            // Otherwise it's a sample instruction\n            current.ins = line.split(' ').map(d => +d);\n          }\n        }\n      }\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    solvePartOne: function () {\n      // Keep track of the possible mappings between numeric code and opcode name\n      this.opcodeMapping = {};\n\n      // Iterate through all samples\n      this.solutions.partOne = this.samples.map(s => {\n        // Get the code number\n        const codeNumber = s.ins[0];\n        // Get all opcodes that create the desired result\n        const matchingOpcodes = Object.keys(Opcode2018/* default */.Z).filter(op => {\n          // Take a copy of the before array\n          const beforeCopy = s.before.concat();\n          // Modify it using the opcode\n          Opcode2018/* default */.Z[op](s.ins[1], s.ins[2], s.ins[3], beforeCopy);\n          // Check if they are the same\n          return beforeCopy.every((v, i) => v === s.after[i]);\n        });\n\n        // Store the mapping between the numeric code and all possible opcode names\n        if (!this.opcodeMapping[codeNumber]) {\n          this.opcodeMapping[codeNumber] = new Set();\n        } else {\n          matchingOpcodes.forEach(c => this.opcodeMapping[codeNumber].add(c));\n        }\n\n        // Return 1 if it's got at least 3 matching opcodes. This is used to sum up in the end.\n        return matchingOpcodes.length >= 3 ? 1 : 0;\n      }).reduce((a, b) => a + b);\n    },\n    solvePartTwo: function () {\n      // The final mapping between numeric code and opcode name\n      const finalMapping = {};\n\n      // While not all have been mapped yet\n      while (Object.keys(finalMapping).length !== Object.keys(this.opcodeMapping).length) {\n        // Find the ones that have a unique mapping\n        const onlyOne = Object.keys(this.opcodeMapping).filter(c => this.opcodeMapping[c].size === 1);\n        onlyOne.forEach(c => {\n          // Get the only code\n          const opcode = this.opcodeMapping[c].values().next().value;\n          // Store the mapping\n          finalMapping[c] = opcode;\n          // Remove that opcode from all other mappings\n          Object.keys(this.opcodeMapping).forEach(k => this.opcodeMapping[k].delete(opcode));\n        });\n      }\n\n      // Start the program with a blank register\n      const reg = [0, 0, 0, 0];\n\n      // Execute each program instruction\n      this.program.forEach(p => Opcode2018/* default */.Z[finalMapping[p[0]]](p[1], p[2], p[3], reg));\n\n      // Get the result\n      this.solutions.partTwo = reg[0];\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2018/Day16.vue?vue&type=script&lang=js\n /* harmony default export */ const _2018_Day16vue_type_script_lang_js = (Day16vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2018/Day16.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2018_Day16vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day16 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17930\n")},59217:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  addr: (a, b, c, reg) => {\n    reg[c] = reg[a] + reg[b];\n  },\n  addi: (a, b, c, reg) => {\n    reg[c] = reg[a] + b;\n  },\n  mulr: (a, b, c, reg) => {\n    reg[c] = reg[a] * reg[b];\n  },\n  muli: (a, b, c, reg) => {\n    reg[c] = reg[a] * b;\n  },\n  banr: (a, b, c, reg) => {\n    reg[c] = reg[a] & reg[b];\n  },\n  bani: (a, b, c, reg) => {\n    reg[c] = reg[a] & b;\n  },\n  borr: (a, b, c, reg) => {\n    reg[c] = reg[a] | reg[b];\n  },\n  bori: (a, b, c, reg) => {\n    reg[c] = reg[a] | b;\n  },\n  setr: (a, _, c, reg) => {\n    reg[c] = reg[a];\n  },\n  seti: (a, _, c, reg) => {\n    reg[c] = a;\n  },\n  gtir: (a, b, c, reg) => {\n    reg[c] = a > reg[b] ? 1 : 0;\n  },\n  gtri: (a, b, c, reg) => {\n    reg[c] = reg[a] > b ? 1 : 0;\n  },\n  gtrr: (a, b, c, reg) => {\n    reg[c] = reg[a] > reg[b] ? 1 : 0;\n  },\n  eqir: (a, b, c, reg) => {\n    reg[c] = a === reg[b] ? 1 : 0;\n  },\n  eqri: (a, b, c, reg) => {\n    reg[c] = reg[a] === b ? 1 : 0;\n  },\n  eqrr: (a, b, c, reg) => {\n    reg[c] = reg[a] === reg[b] ? 1 : 0;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkyMTcuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUVBQWU7RUFDYkEsSUFBSSxFQUFFQSxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0MsR0FBRyxDQUFDSCxDQUFDLENBQUMsR0FBR0csR0FBRyxDQUFDRixDQUFDLENBQUM7RUFBQyxDQUFDO0VBQ3BERyxJQUFJLEVBQUVBLENBQUNKLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEdBQUcsS0FBSztJQUFFQSxHQUFHLENBQUNELENBQUMsQ0FBQyxHQUFHQyxHQUFHLENBQUNILENBQUMsQ0FBQyxHQUFHQyxDQUFDO0VBQUMsQ0FBQztFQUMvQ0ksSUFBSSxFQUFFQSxDQUFDTCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0MsR0FBRyxDQUFDSCxDQUFDLENBQUMsR0FBR0csR0FBRyxDQUFDRixDQUFDLENBQUM7RUFBQyxDQUFDO0VBQ3BESyxJQUFJLEVBQUVBLENBQUNOLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEdBQUcsS0FBSztJQUFFQSxHQUFHLENBQUNELENBQUMsQ0FBQyxHQUFHQyxHQUFHLENBQUNILENBQUMsQ0FBQyxHQUFHQyxDQUFDO0VBQUMsQ0FBQztFQUMvQ00sSUFBSSxFQUFFQSxDQUFDUCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0MsR0FBRyxDQUFDSCxDQUFDLENBQUMsR0FBR0csR0FBRyxDQUFDRixDQUFDLENBQUM7RUFBQyxDQUFDO0VBQ3BETyxJQUFJLEVBQUVBLENBQUNSLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEdBQUcsS0FBSztJQUFFQSxHQUFHLENBQUNELENBQUMsQ0FBQyxHQUFHQyxHQUFHLENBQUNILENBQUMsQ0FBQyxHQUFHQyxDQUFDO0VBQUMsQ0FBQztFQUMvQ1EsSUFBSSxFQUFFQSxDQUFDVCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0MsR0FBRyxDQUFDSCxDQUFDLENBQUMsR0FBR0csR0FBRyxDQUFDRixDQUFDLENBQUM7RUFBQyxDQUFDO0VBQ3BEUyxJQUFJLEVBQUVBLENBQUNWLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEdBQUcsS0FBSztJQUFFQSxHQUFHLENBQUNELENBQUMsQ0FBQyxHQUFHQyxHQUFHLENBQUNILENBQUMsQ0FBQyxHQUFHQyxDQUFDO0VBQUMsQ0FBQztFQUMvQ1UsSUFBSSxFQUFFQSxDQUFDWCxDQUFDLEVBQUVZLENBQUMsRUFBRVYsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0MsR0FBRyxDQUFDSCxDQUFDLENBQUM7RUFBQyxDQUFDO0VBQzNDYSxJQUFJLEVBQUVBLENBQUNiLENBQUMsRUFBRVksQ0FBQyxFQUFFVixDQUFDLEVBQUVDLEdBQUcsS0FBSztJQUFFQSxHQUFHLENBQUNELENBQUMsQ0FBQyxHQUFHRixDQUFDO0VBQUMsQ0FBQztFQUN0Q2MsSUFBSSxFQUFFQSxDQUFDZCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0YsQ0FBQyxHQUFHRyxHQUFHLENBQUNGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO0VBQUMsQ0FBQztFQUN2RGMsSUFBSSxFQUFFQSxDQUFDZixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0MsR0FBRyxDQUFDSCxDQUFDLENBQUMsR0FBR0MsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO0VBQUMsQ0FBQztFQUN2RGUsSUFBSSxFQUFFQSxDQUFDaEIsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsR0FBRyxLQUFLO0lBQUVBLEdBQUcsQ0FBQ0QsQ0FBQyxDQUFDLEdBQUdDLEdBQUcsQ0FBQ0gsQ0FBQyxDQUFDLEdBQUdHLEdBQUcsQ0FBQ0YsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUM7RUFBQyxDQUFDO0VBQzVEZ0IsSUFBSSxFQUFFQSxDQUFDakIsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsR0FBRyxLQUFLO0lBQUVBLEdBQUcsQ0FBQ0QsQ0FBQyxDQUFDLEdBQUdGLENBQUMsS0FBS0csR0FBRyxDQUFDRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztFQUFDLENBQUM7RUFDekRpQixJQUFJLEVBQUVBLENBQUNsQixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHLEtBQUs7SUFBRUEsR0FBRyxDQUFDRCxDQUFDLENBQUMsR0FBR0MsR0FBRyxDQUFDSCxDQUFDLENBQUMsS0FBS0MsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO0VBQUMsQ0FBQztFQUN6RGtCLElBQUksRUFBRUEsQ0FBQ25CLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEdBQUcsS0FBSztJQUFFQSxHQUFHLENBQUNELENBQUMsQ0FBQyxHQUFHQyxHQUFHLENBQUNILENBQUMsQ0FBQyxLQUFLRyxHQUFHLENBQUNGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO0VBQUM7QUFDL0QsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FkdmVudC1vZi1jb2RlLy4vc3JjL3V0aWwvT3Bjb2RlMjAxOC5qcz80OTBmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgYWRkcjogKGEsIGIsIGMsIHJlZykgPT4geyByZWdbY10gPSByZWdbYV0gKyByZWdbYl0gfSxcbiAgYWRkaTogKGEsIGIsIGMsIHJlZykgPT4geyByZWdbY10gPSByZWdbYV0gKyBiIH0sXG4gIG11bHI6IChhLCBiLCBjLCByZWcpID0+IHsgcmVnW2NdID0gcmVnW2FdICogcmVnW2JdIH0sXG4gIG11bGk6IChhLCBiLCBjLCByZWcpID0+IHsgcmVnW2NdID0gcmVnW2FdICogYiB9LFxuICBiYW5yOiAoYSwgYiwgYywgcmVnKSA9PiB7IHJlZ1tjXSA9IHJlZ1thXSAmIHJlZ1tiXSB9LFxuICBiYW5pOiAoYSwgYiwgYywgcmVnKSA9PiB7IHJlZ1tjXSA9IHJlZ1thXSAmIGIgfSxcbiAgYm9ycjogKGEsIGIsIGMsIHJlZykgPT4geyByZWdbY10gPSByZWdbYV0gfCByZWdbYl0gfSxcbiAgYm9yaTogKGEsIGIsIGMsIHJlZykgPT4geyByZWdbY10gPSByZWdbYV0gfCBiIH0sXG4gIHNldHI6IChhLCBfLCBjLCByZWcpID0+IHsgcmVnW2NdID0gcmVnW2FdIH0sXG4gIHNldGk6IChhLCBfLCBjLCByZWcpID0+IHsgcmVnW2NdID0gYSB9LFxuICBndGlyOiAoYSwgYiwgYywgcmVnKSA9PiB7IHJlZ1tjXSA9IGEgPiByZWdbYl0gPyAxIDogMCB9LFxuICBndHJpOiAoYSwgYiwgYywgcmVnKSA9PiB7IHJlZ1tjXSA9IHJlZ1thXSA+IGIgPyAxIDogMCB9LFxuICBndHJyOiAoYSwgYiwgYywgcmVnKSA9PiB7IHJlZ1tjXSA9IHJlZ1thXSA+IHJlZ1tiXSA/IDEgOiAwIH0sXG4gIGVxaXI6IChhLCBiLCBjLCByZWcpID0+IHsgcmVnW2NdID0gYSA9PT0gcmVnW2JdID8gMSA6IDAgfSxcbiAgZXFyaTogKGEsIGIsIGMsIHJlZykgPT4geyByZWdbY10gPSByZWdbYV0gPT09IGIgPyAxIDogMCB9LFxuICBlcXJyOiAoYSwgYiwgYywgcmVnKSA9PiB7IHJlZ1tjXSA9IHJlZ1thXSA9PT0gcmVnW2JdID8gMSA6IDAgfVxufVxuIl0sIm5hbWVzIjpbImFkZHIiLCJhIiwiYiIsImMiLCJyZWciLCJhZGRpIiwibXVsciIsIm11bGkiLCJiYW5yIiwiYmFuaSIsImJvcnIiLCJib3JpIiwic2V0ciIsIl8iLCJzZXRpIiwiZ3RpciIsImd0cmkiLCJndHJyIiwiZXFpciIsImVxcmkiLCJlcXJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///59217\n")}}]);