"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[4055,1978],{21088:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day9)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day9.vue?vue&type=template&id=33527fa9&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":9,\"year\":2017,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(74916);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js\nvar es_string_split = __webpack_require__(23123);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(41539);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__(54747);\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(83024);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2017/Day9.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\n//\n//\n//\n//\n//\n\n/* harmony default export */ const Day9vue_type_script_lang_js_ = ({\n  components: {\n    Day: Day[\"default\"]\n  },\n  data: function data() {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function onInputChanged(input) {\n      var tokens = input[0].split(''); // Create the tree\n\n      var root = this.parseGroup(tokens, 1); // Calculate the score starting from the root\n\n      this.solutions.partOne = this.calculateScores(root, 0); // Calculate the length of garbage starting from the root\n\n      this.solutions.partTwo = this.calculateGarbage(root);\n    },\n    calculateGarbage: function calculateGarbage(group) {\n      var _this = this;\n\n      // Start by counting the garbage of this group\n      var total = group.garbage.length;\n      group.children.forEach(function (c) {\n        // Then add the garbage of all children recursively\n        total += _this.calculateGarbage(c);\n      });\n      return total;\n    },\n    calculateScores: function calculateScores(group, parentScore) {\n      var _this2 = this;\n\n      // Increase the score based on the parent score\n      group.score = parentScore + 1;\n      var totalScore = group.score;\n      group.children.forEach(function (c) {\n        // Then sum together all the child scores recursively\n        var childScore = _this2.calculateScores(c, group.score);\n\n        totalScore += childScore;\n      });\n      return totalScore;\n    },\n    parseGroup: function parseGroup(tokens, startIndex) {\n      // Keep track of the index\n      var index = startIndex; // Keep track of whether we are looking at garbage or noe\n\n      var isGarbage = false; // Keep track of the current group\n\n      var group = {\n        startIndex: startIndex,\n        endIndex: null,\n        score: 0,\n        children: [],\n        garbage: ''\n      };\n\n      while (true) {\n        // Get the next character\n        var token = tokens[index];\n\n        if (isGarbage) {\n          // If it's garbage\n          if (token === '!') {\n            // Skip the next token if we observe a \"!\"\n            index++;\n          } else if (token === '>') {\n            // This is the end of the garbage\n            isGarbage = false;\n          } else {\n            // Keep track of any garbage tokens that aren't skipped or the starting and ending bracket\n            group.garbage += token;\n          }\n        } else {\n          if (token === '{') {\n            // Parse the child group\n            var childGroup = this.parseGroup(tokens, index + 1);\n            group.children.push(childGroup); // Adjust the index to start again from the end of the last child group\n\n            index = childGroup.endIndex;\n          } else if (token === '<') {\n            // We have observed the start of garbage\n            isGarbage = true;\n          } else if (token === '}') {\n            // Update the end of this group\n            group.endIndex = index;\n            return group;\n          }\n        } // Go to the next token\n\n\n        index++;\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2017/Day9.vue?vue&type=script&lang=js&\n /* harmony default export */ const _2017_Day9vue_type_script_lang_js_ = (Day9vue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2017/Day9.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2017_Day9vue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day9 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21088\n")}}]);