(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[6134],{7436:(__unused_webpack_module,exports,__webpack_require__)=>{eval("const { MinHeap } = __webpack_require__(78573);\nconst { MaxHeap } = __webpack_require__(38945);\nconst { CustomHeap } = __webpack_require__(14295);\n\nexports.MinHeap = MinHeap;\nexports.MaxHeap = MaxHeap;\nexports.CustomHeap = CustomHeap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQzNi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxRQUFRLFVBQVUsRUFBRSxtQkFBTyxDQUFDLEtBQWU7QUFDM0MsUUFBUSxVQUFVLEVBQUUsbUJBQU8sQ0FBQyxLQUFlO0FBQzNDLFFBQVEsYUFBYSxFQUFFLG1CQUFPLENBQUMsS0FBa0I7O0FBRWpELGVBQWU7QUFDZixlQUFlO0FBQ2Ysa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9ub2RlX21vZHVsZXMvQGRhdGFzdHJ1Y3R1cmVzLWpzL2hlYXAvaW5kZXguanM/NzdhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1pbkhlYXAgfSA9IHJlcXVpcmUoJy4vc3JjL21pbkhlYXAnKTtcbmNvbnN0IHsgTWF4SGVhcCB9ID0gcmVxdWlyZSgnLi9zcmMvbWF4SGVhcCcpO1xuY29uc3QgeyBDdXN0b21IZWFwIH0gPSByZXF1aXJlKCcuL3NyYy9jdXN0b21IZWFwJyk7XG5cbmV4cG9ydHMuTWluSGVhcCA9IE1pbkhlYXA7XG5leHBvcnRzLk1heEhlYXAgPSBNYXhIZWFwO1xuZXhwb3J0cy5DdXN0b21IZWFwID0gQ3VzdG9tSGVhcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7436\n")},14295:(__unused_webpack_module,exports,__webpack_require__)=>{eval("/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n */\n\nconst { Heap } = __webpack_require__(42613);\n\n/**\n * @class CustomHeap\n * @extends Heap\n */\nclass CustomHeap extends Heap {\n  constructor(comparator, nodes, leaf) {\n    if (typeof comparator !== 'function') {\n      throw new Error('CustomHeap expects a comparator function');\n    }\n    super(nodes, leaf);\n    this._comparator = comparator;\n  }\n\n  /**\n   * Compares parent & child nodes\n   * and returns true if they are in right positions\n   *\n   * @private\n   * @param {object|number|string} parent\n   * @param {object|number|string} child\n   * @returns {number}\n   */\n  _compare(parentNode, childNode) {\n    return this._comparator(parentNode, childNode) <= 0;\n  }\n\n  /**\n   * Returns child's index of two children before an index\n   * @private\n   * @param {number} index\n   * @param {number} leftChildIndex\n   * @param {number} rightChildIndex\n   * @returns {number}\n   */\n  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {\n    const compare = this._comparator(\n      this._nodes[rightChildIndex],\n      this._nodes[leftChildIndex]\n    );\n\n    if (compare <= 0 && rightChildIndex < index) {\n      return rightChildIndex;\n    }\n\n    return leftChildIndex;\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @public\n   * @returns {CustomHeap}\n   */\n  clone() {\n    return new CustomHeap(\n      this._comparator,\n      this._nodes.slice(),\n      this._leaf\n    );\n  }\n\n  /**\n   * Builds a custom heap from an array of items\n   * @public\n   * @static\n   * @param {array} list\n   * @param {function} comparator\n   * @returns {CustomHeap}\n   */\n  static heapify(list, comparator) {\n    if (!Array.isArray(list)) {\n      throw new Error('.heapify expects an array');\n    }\n\n    if (typeof comparator !== 'function') {\n      throw new Error('.heapify expects a comparator function');\n    }\n\n    return new CustomHeap(comparator, list).fix();\n  }\n\n  /**\n   * Checks if a list of items is a valid custom heap\n   * @public\n   * @static\n   * @param {array} list\n   * @param {function} comparator\n   * @returns {boolean}\n   */\n  static isHeapified(list, comparator) {\n    if (!Array.isArray(list)) {\n      throw new Error('.heapify expects an array');\n    }\n\n    if (typeof comparator !== 'function') {\n      throw new Error('.isHeapified expects a comparator function');\n    }\n\n    return new CustomHeap(comparator, list).isValid();\n  }\n}\n\nexports.CustomHeap = CustomHeap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQyOTUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxPQUFPLEVBQUUsbUJBQU8sQ0FBQyxLQUFROztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0JBQXNCO0FBQ25DLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsVUFBVTtBQUN2QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQixhQUFhLFVBQVU7QUFDdkIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZHZlbnQtb2YtY29kZS8uL25vZGVfbW9kdWxlcy9AZGF0YXN0cnVjdHVyZXMtanMvaGVhcC9zcmMvY3VzdG9tSGVhcC5qcz9jODY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgTUlUXG4gKiBAY29weXJpZ2h0IDIwMjAgRXlhcyBSYW5qb3VzIDxleWFzLnJhbmpvdXNAZ21haWwuY29tPlxuICovXG5cbmNvbnN0IHsgSGVhcCB9ID0gcmVxdWlyZSgnLi9oZWFwJyk7XG5cbi8qKlxuICogQGNsYXNzIEN1c3RvbUhlYXBcbiAqIEBleHRlbmRzIEhlYXBcbiAqL1xuY2xhc3MgQ3VzdG9tSGVhcCBleHRlbmRzIEhlYXAge1xuICBjb25zdHJ1Y3Rvcihjb21wYXJhdG9yLCBub2RlcywgbGVhZikge1xuICAgIGlmICh0eXBlb2YgY29tcGFyYXRvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDdXN0b21IZWFwIGV4cGVjdHMgYSBjb21wYXJhdG9yIGZ1bmN0aW9uJyk7XG4gICAgfVxuICAgIHN1cGVyKG5vZGVzLCBsZWFmKTtcbiAgICB0aGlzLl9jb21wYXJhdG9yID0gY29tcGFyYXRvcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wYXJlcyBwYXJlbnQgJiBjaGlsZCBub2Rlc1xuICAgKiBhbmQgcmV0dXJucyB0cnVlIGlmIHRoZXkgYXJlIGluIHJpZ2h0IHBvc2l0aW9uc1xuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge29iamVjdHxudW1iZXJ8c3RyaW5nfSBwYXJlbnRcbiAgICogQHBhcmFtIHtvYmplY3R8bnVtYmVyfHN0cmluZ30gY2hpbGRcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIF9jb21wYXJlKHBhcmVudE5vZGUsIGNoaWxkTm9kZSkge1xuICAgIHJldHVybiB0aGlzLl9jb21wYXJhdG9yKHBhcmVudE5vZGUsIGNoaWxkTm9kZSkgPD0gMDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGNoaWxkJ3MgaW5kZXggb2YgdHdvIGNoaWxkcmVuIGJlZm9yZSBhbiBpbmRleFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtudW1iZXJ9IGxlZnRDaGlsZEluZGV4XG4gICAqIEBwYXJhbSB7bnVtYmVyfSByaWdodENoaWxkSW5kZXhcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIF9jb21wYXJlQ2hpbGRyZW5CZWZvcmUoaW5kZXgsIGxlZnRDaGlsZEluZGV4LCByaWdodENoaWxkSW5kZXgpIHtcbiAgICBjb25zdCBjb21wYXJlID0gdGhpcy5fY29tcGFyYXRvcihcbiAgICAgIHRoaXMuX25vZGVzW3JpZ2h0Q2hpbGRJbmRleF0sXG4gICAgICB0aGlzLl9ub2Rlc1tsZWZ0Q2hpbGRJbmRleF1cbiAgICApO1xuXG4gICAgaWYgKGNvbXBhcmUgPD0gMCAmJiByaWdodENoaWxkSW5kZXggPCBpbmRleCkge1xuICAgICAgcmV0dXJuIHJpZ2h0Q2hpbGRJbmRleDtcbiAgICB9XG5cbiAgICByZXR1cm4gbGVmdENoaWxkSW5kZXg7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIHNoYWxsb3cgY29weSBvZiB0aGUgaGVhcFxuICAgKiBAcHVibGljXG4gICAqIEByZXR1cm5zIHtDdXN0b21IZWFwfVxuICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgcmV0dXJuIG5ldyBDdXN0b21IZWFwKFxuICAgICAgdGhpcy5fY29tcGFyYXRvcixcbiAgICAgIHRoaXMuX25vZGVzLnNsaWNlKCksXG4gICAgICB0aGlzLl9sZWFmXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBCdWlsZHMgYSBjdXN0b20gaGVhcCBmcm9tIGFuIGFycmF5IG9mIGl0ZW1zXG4gICAqIEBwdWJsaWNcbiAgICogQHN0YXRpY1xuICAgKiBAcGFyYW0ge2FycmF5fSBsaXN0XG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNvbXBhcmF0b3JcbiAgICogQHJldHVybnMge0N1c3RvbUhlYXB9XG4gICAqL1xuICBzdGF0aWMgaGVhcGlmeShsaXN0LCBjb21wYXJhdG9yKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGxpc3QpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJy5oZWFwaWZ5IGV4cGVjdHMgYW4gYXJyYXknKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGNvbXBhcmF0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignLmhlYXBpZnkgZXhwZWN0cyBhIGNvbXBhcmF0b3IgZnVuY3Rpb24nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEN1c3RvbUhlYXAoY29tcGFyYXRvciwgbGlzdCkuZml4KCk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIGEgbGlzdCBvZiBpdGVtcyBpcyBhIHZhbGlkIGN1c3RvbSBoZWFwXG4gICAqIEBwdWJsaWNcbiAgICogQHN0YXRpY1xuICAgKiBAcGFyYW0ge2FycmF5fSBsaXN0XG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNvbXBhcmF0b3JcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBzdGF0aWMgaXNIZWFwaWZpZWQobGlzdCwgY29tcGFyYXRvcikge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShsaXN0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCcuaGVhcGlmeSBleHBlY3RzIGFuIGFycmF5Jyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBjb21wYXJhdG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJy5pc0hlYXBpZmllZCBleHBlY3RzIGEgY29tcGFyYXRvciBmdW5jdGlvbicpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgQ3VzdG9tSGVhcChjb21wYXJhdG9yLCBsaXN0KS5pc1ZhbGlkKCk7XG4gIH1cbn1cblxuZXhwb3J0cy5DdXN0b21IZWFwID0gQ3VzdG9tSGVhcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14295\n")},42613:(__unused_webpack_module,exports)=>{eval("/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n *\n * @class\n * @abstract\n */\nclass Heap {\n  /**\n   * Creates a heap instance\n   * @param {array<string|number|object>} nodes\n   * @param {string|number|object} [leaf]\n   * @returns {number}\n   */\n  constructor(nodes, leaf) {\n    this._nodes = Array.isArray(nodes) ? nodes : [];\n    this._leaf = leaf || null;\n  }\n\n  /**\n   * Checks if a parent has a left child\n   * @private\n   * @param {number} parentIndex\n   * @returns {boolean}\n   */\n  _hasLeftChild(parentIndex) {\n    const leftChildIndex = (parentIndex * 2) + 1;\n    return leftChildIndex < this.size();\n  }\n\n  /**\n   * Checks if a parent has a right child\n   * @private\n   * @param {number} parentIndex\n   * @returns {boolean}\n   */\n  _hasRightChild(parentIndex) {\n    const rightChildIndex = (parentIndex * 2) + 2;\n    return rightChildIndex < this.size();\n  }\n\n  /**\n   * Returns heap node's key\n   * @private\n   * @param {object|number|string} node\n   * @returns {number|string}\n   */\n  _getKey(node) {\n    if (typeof node === 'object') return node.key;\n    return node;\n  }\n\n  /**\n   * Swaps two nodes in the heap\n   * @private\n   * @param {number} i\n   * @param {number} j\n   */\n  _swap(i, j) {\n    const temp = this._nodes[i];\n    this._nodes[i] = this._nodes[j];\n    this._nodes[j] = temp;\n  }\n\n  /**\n   * Compares parent & child nodes\n   * and returns true if they are in right positions\n   *\n   * @private\n   * @param {object|number|string} parent\n   * @param {object|number|string} child\n   * @returns {boolean}\n   */\n  _compare(parentNode, childNode) {\n    return this._compareKeys(\n      this._getKey(parentNode),\n      this._getKey(childNode)\n    );\n  }\n\n  /**\n   * Checks if parent and child nodes should be swapped\n   * @private\n   * @param {number} parentIndex\n   * @param {number} childIndex\n   * @returns {boolean}\n   */\n  _shouldSwap(parentIndex, childIndex) {\n    if (parentIndex < 0 || parentIndex >= this.size()) return false;\n    if (childIndex < 0 || childIndex >= this.size()) return false;\n\n    return !this._compare(\n      this._nodes[parentIndex],\n      this._nodes[childIndex]\n    );\n  }\n\n  /**\n   * Bubbles a node from a starting index up in the heap\n   * @param {number} startingIndex\n   * @public\n   */\n  heapifyUp(startingIndex) {\n    let childIndex = startingIndex;\n    let parentIndex = Math.floor((childIndex - 1) / 2);\n\n    while (this._shouldSwap(parentIndex, childIndex)) {\n      this._swap(parentIndex, childIndex);\n      childIndex = parentIndex;\n      parentIndex = Math.floor((childIndex - 1) / 2);\n    }\n  }\n\n  /**\n   * Compares left and right & children of a parent\n   * @private\n   * @param {number} parentIndex\n   * @returns {number} - a child's index\n   */\n  _compareChildrenOf(parentIndex) {\n    if (\n      !this._hasLeftChild(parentIndex)\n      && !this._hasRightChild(parentIndex)\n    ) {\n      return -1;\n    }\n\n    const leftChildIndex = (parentIndex * 2) + 1;\n    const rightChildIndex = (parentIndex * 2) + 2;\n\n    if (!this._hasLeftChild(parentIndex)) {\n      return rightChildIndex;\n    }\n\n    if (!this._hasRightChild(parentIndex)) {\n      return leftChildIndex;\n    }\n\n    const isLeft = this._compare(\n      this._nodes[leftChildIndex],\n      this._nodes[rightChildIndex]\n    );\n\n    return isLeft ? leftChildIndex : rightChildIndex;\n  }\n\n  /**\n   * Pushes a node from a starting index down in the heap\n   * @private\n   */\n  _heapifyDown(startingIndex) {\n    let parentIndex = startingIndex;\n    let childIndex = this._compareChildrenOf(parentIndex);\n\n    while (this._shouldSwap(parentIndex, childIndex)) {\n      this._swap(parentIndex, childIndex);\n      parentIndex = childIndex;\n      childIndex = this._compareChildrenOf(parentIndex);\n    }\n  }\n\n  /**\n   * Removes and returns the root node in the heap\n   * @public\n   * @returns {object}\n   */\n  extractRoot() {\n    if (this.isEmpty()) return null;\n\n    const root = this.root();\n    this._nodes[0] = this._nodes[this.size() - 1];\n    this._nodes.pop();\n    this._heapifyDown(0);\n\n    if (root === this._leaf) {\n      this._leaf = this.root();\n    }\n\n    return root;\n  }\n\n  /**\n   * Pushes a node with down in the heap before an index\n   * @private\n   * @param {number} index\n   */\n  _heapifyDownUntil(index) {\n    let parentIndex = 0;\n    let leftChildIndex = 1;\n    let rightChildIndex = 2;\n    let childIndex;\n\n    while (leftChildIndex < index) {\n      childIndex = this._compareChildrenBefore(\n        index,\n        leftChildIndex,\n        rightChildIndex\n      );\n\n      if (this._shouldSwap(parentIndex, childIndex)) {\n        this._swap(parentIndex, childIndex);\n      }\n\n      parentIndex = childIndex;\n      leftChildIndex = (parentIndex * 2) + 1;\n      rightChildIndex = (parentIndex * 2) + 2;\n    }\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @protected\n   * @param {class} HeapType\n   * @returns {Heap}\n   */\n  _clone(HeapType) {\n    return new HeapType(this._nodes.slice(), this._leaf);\n  }\n\n  /**\n   * Sorts the heap by swapping root with all nodes and fixing positions\n   * @public\n   * @returns {array} the sorted nodes\n   */\n  sort() {\n    for (let i = this.size() - 1; i > 0; i -= 1) {\n      this._swap(0, i);\n      this._heapifyDownUntil(i);\n    }\n\n    return this._nodes;\n  }\n\n  /**\n   * Inserts a node in the right position into the heap\n   * @public\n   * @param {number|string} key\n   * @param {any} [value]\n   * @returns {Heap}\n   */\n  insert(key, value) {\n    const newNode = value !== undefined ? { key, value } : key;\n    this._nodes.push(newNode);\n    this.heapifyUp(this.size() - 1);\n    if (this._leaf === null || !this._compare(newNode, this._leaf)) {\n      this._leaf = newNode;\n    }\n    return this;\n  }\n\n  /**\n   * Fixes all positions of the nodes in the heap\n   * @public\n   * @returns {Heap}\n   */\n  fix() {\n    for (let i = 0; i < this.size(); i += 1) {\n      this.heapifyUp(i);\n    }\n    return this;\n  }\n\n  /**\n   * Verifies that the heap is valid\n   * @public\n   * @returns {boolean}\n   */\n  isValid() {\n    const isValidRecursive = (parentIndex) => {\n      let isValidLeft = true;\n      let isValidRight = true;\n\n      if (this._hasLeftChild(parentIndex)) {\n        const leftChildIndex = (parentIndex * 2) + 1;\n        isValidLeft = this._compare(\n          this._nodes[parentIndex],\n          this._nodes[leftChildIndex]\n        );\n\n        if (!isValidLeft) {\n          return false;\n        }\n\n        isValidLeft = isValidRecursive(leftChildIndex);\n      }\n\n      if (this._hasRightChild(parentIndex)) {\n        const rightChildIndex = (parentIndex * 2) + 2;\n        isValidRight = this._compare(\n          this._nodes[parentIndex],\n          this._nodes[rightChildIndex]\n        );\n\n        if (!isValidRight) {\n          return false;\n        }\n\n        isValidRight = isValidRecursive(rightChildIndex);\n      }\n\n      return isValidLeft && isValidRight;\n    };\n\n    return isValidRecursive(0);\n  }\n\n  /**\n   * Returns the root node in the heap\n   * @public\n   * @returns {object|number|string|null}\n   */\n  root() {\n    if (this.isEmpty()) return null;\n    return this._nodes[0];\n  }\n\n  /**\n   * Returns a leaf node in the heap\n   * @public\n   * @returns {object|number|string|null}\n   */\n  leaf() {\n    return this._leaf;\n  }\n\n  /**\n   * Returns the number of nodes in the heap\n   * @public\n   * @returns {number}\n   */\n  size() {\n    return this._nodes.length;\n  }\n\n  /**\n   * Checks if the heap is empty\n   * @public\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  /**\n   * Clears the heap\n   * @public\n   */\n  clear() {\n    this._nodes = [];\n    this._leaf = null;\n  }\n\n  /**\n   * Convert a list of items into a heap\n   * @protected\n   * @static\n   * @param {array} array\n   * @param {class} HeapType\n   * @returns {Heap}\n   */\n  static _heapify(list, HeapType) {\n    if (!Array.isArray(list)) {\n      throw new Error('.heapify expects an array');\n    }\n\n    return new HeapType(list).fix();\n  }\n\n  /**\n   * Checks if a list of items is a valid heap\n   * @protected\n   * @static\n   * @param {array} array\n   * @param {class} HeapType\n   * @returns {boolean}\n   */\n  static _isHeapified(list, HeapType) {\n    return new HeapType(list).isValid();\n  }\n}\n\nexports.Heap = Heap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42613\n")},38945:(__unused_webpack_module,exports,__webpack_require__)=>{eval("/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n */\n\nconst { Heap } = __webpack_require__(42613);\n\n/**\n * @class MaxHeap\n * @extends Heap\n */\nclass MaxHeap extends Heap {\n  /**\n   * Checks two nodes are in relatively valid position\n   * @private\n   * @param {object} parent\n   * @param {object} child\n   * @returns {boolean}\n   */\n  _compareKeys(parentKey, childKey) {\n    return parentKey > childKey;\n  }\n\n  /**\n   * Returns max child's index of two children before an index\n   * @private\n   * @param {number} index\n   * @param {number} leftChildIndex\n   * @param {number} rightChildIndex\n   * @returns {number}\n   */\n  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {\n    const leftChildKey = this._getKey(this._nodes[leftChildIndex]);\n    const rightChildKey = this._getKey(this._nodes[rightChildIndex]);\n\n    if (rightChildKey > leftChildKey && rightChildIndex < index) {\n      return rightChildIndex;\n    }\n    return leftChildIndex;\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @public\n   * @returns {MaxHeap}\n   */\n  clone() {\n    return super._clone(MaxHeap);\n  }\n\n  /**\n   * Builds a max heap from an array of items\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {MaxHeap}\n   */\n  static heapify(list) {\n    return super._heapify(list, MaxHeap);\n  }\n\n  /**\n   * Checks if a list of items is a valid max heap\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {boolean}\n   */\n  static isHeapified(list) {\n    return super._isHeapified(list, MaxHeap);\n  }\n}\n\nexports.MaxHeap = MaxHeap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg5NDUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxPQUFPLEVBQUUsbUJBQU8sQ0FBQyxLQUFROztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9ub2RlX21vZHVsZXMvQGRhdGFzdHJ1Y3R1cmVzLWpzL2hlYXAvc3JjL21heEhlYXAuanM/YmE3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIE1JVFxuICogQGNvcHlyaWdodCAyMDIwIEV5YXMgUmFuam91cyA8ZXlhcy5yYW5qb3VzQGdtYWlsLmNvbT5cbiAqL1xuXG5jb25zdCB7IEhlYXAgfSA9IHJlcXVpcmUoJy4vaGVhcCcpO1xuXG4vKipcbiAqIEBjbGFzcyBNYXhIZWFwXG4gKiBAZXh0ZW5kcyBIZWFwXG4gKi9cbmNsYXNzIE1heEhlYXAgZXh0ZW5kcyBIZWFwIHtcbiAgLyoqXG4gICAqIENoZWNrcyB0d28gbm9kZXMgYXJlIGluIHJlbGF0aXZlbHkgdmFsaWQgcG9zaXRpb25cbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtvYmplY3R9IHBhcmVudFxuICAgKiBAcGFyYW0ge29iamVjdH0gY2hpbGRcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBfY29tcGFyZUtleXMocGFyZW50S2V5LCBjaGlsZEtleSkge1xuICAgIHJldHVybiBwYXJlbnRLZXkgPiBjaGlsZEtleTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIG1heCBjaGlsZCdzIGluZGV4IG9mIHR3byBjaGlsZHJlbiBiZWZvcmUgYW4gaW5kZXhcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBsZWZ0Q2hpbGRJbmRleFxuICAgKiBAcGFyYW0ge251bWJlcn0gcmlnaHRDaGlsZEluZGV4XG4gICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAqL1xuICBfY29tcGFyZUNoaWxkcmVuQmVmb3JlKGluZGV4LCBsZWZ0Q2hpbGRJbmRleCwgcmlnaHRDaGlsZEluZGV4KSB7XG4gICAgY29uc3QgbGVmdENoaWxkS2V5ID0gdGhpcy5fZ2V0S2V5KHRoaXMuX25vZGVzW2xlZnRDaGlsZEluZGV4XSk7XG4gICAgY29uc3QgcmlnaHRDaGlsZEtleSA9IHRoaXMuX2dldEtleSh0aGlzLl9ub2Rlc1tyaWdodENoaWxkSW5kZXhdKTtcblxuICAgIGlmIChyaWdodENoaWxkS2V5ID4gbGVmdENoaWxkS2V5ICYmIHJpZ2h0Q2hpbGRJbmRleCA8IGluZGV4KSB7XG4gICAgICByZXR1cm4gcmlnaHRDaGlsZEluZGV4O1xuICAgIH1cbiAgICByZXR1cm4gbGVmdENoaWxkSW5kZXg7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIHNoYWxsb3cgY29weSBvZiB0aGUgaGVhcFxuICAgKiBAcHVibGljXG4gICAqIEByZXR1cm5zIHtNYXhIZWFwfVxuICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgcmV0dXJuIHN1cGVyLl9jbG9uZShNYXhIZWFwKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBCdWlsZHMgYSBtYXggaGVhcCBmcm9tIGFuIGFycmF5IG9mIGl0ZW1zXG4gICAqIEBwdWJsaWNcbiAgICogQHN0YXRpY1xuICAgKiBAcGFyYW0ge2FycmF5fSBsaXN0XG4gICAqIEByZXR1cm5zIHtNYXhIZWFwfVxuICAgKi9cbiAgc3RhdGljIGhlYXBpZnkobGlzdCkge1xuICAgIHJldHVybiBzdXBlci5faGVhcGlmeShsaXN0LCBNYXhIZWFwKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYSBsaXN0IG9mIGl0ZW1zIGlzIGEgdmFsaWQgbWF4IGhlYXBcbiAgICogQHB1YmxpY1xuICAgKiBAc3RhdGljXG4gICAqIEBwYXJhbSB7YXJyYXl9IGxpc3RcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBzdGF0aWMgaXNIZWFwaWZpZWQobGlzdCkge1xuICAgIHJldHVybiBzdXBlci5faXNIZWFwaWZpZWQobGlzdCwgTWF4SGVhcCk7XG4gIH1cbn1cblxuZXhwb3J0cy5NYXhIZWFwID0gTWF4SGVhcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///38945\n")},78573:(__unused_webpack_module,exports,__webpack_require__)=>{eval("/**\n * @license MIT\n * @copyright 2019 Eyas Ranjous <eyas.ranjous@gmail.com>\n */\n\nconst { Heap } = __webpack_require__(42613);\n\n/**\n * @class MinHeap\n * @extends Heap\n */\nclass MinHeap extends Heap {\n  /**\n   * Checks two nodes are in relatively valid position\n   * @private\n   * @param {object} parent\n   * @param {object} child\n   * @returns {boolean}\n   */\n  _compareKeys(parentKey, childKey) {\n    return parentKey < childKey;\n  }\n\n  /**\n   * Returns min child's index of two children before an index\n   * @protected\n   * @param {number} index\n   * @param {number} leftChildIndex\n   * @param {number} rightChildIndex\n   * @returns {number}\n   */\n  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {\n    const leftChildKey = this._getKey(this._nodes[leftChildIndex]);\n    const rightChildKey = this._getKey(this._nodes[rightChildIndex]);\n\n    if (rightChildKey < leftChildKey && rightChildIndex < index) {\n      return rightChildIndex;\n    }\n    return leftChildIndex;\n  }\n\n  /**\n   * Returns a shallow copy of the heap\n   * @public\n   * @returns {MinHeap}\n   */\n  clone() {\n    return super._clone(MinHeap);\n  }\n\n  /**\n   * Builds a min heap from an array of items\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {MinHeap}\n   */\n  static heapify(list) {\n    return super._heapify(list, MinHeap);\n  }\n\n  /**\n   * Checks if a list of list is a valid min heap\n   * @public\n   * @static\n   * @param {array} list\n   * @returns {boolean}\n   */\n  static isHeapified(list) {\n    return super._isHeapified(list, MinHeap);\n  }\n}\n\nexports.MinHeap = MinHeap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzg1NzMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxPQUFPLEVBQUUsbUJBQU8sQ0FBQyxLQUFROztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9ub2RlX21vZHVsZXMvQGRhdGFzdHJ1Y3R1cmVzLWpzL2hlYXAvc3JjL21pbkhlYXAuanM/N2RiOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIE1JVFxuICogQGNvcHlyaWdodCAyMDE5IEV5YXMgUmFuam91cyA8ZXlhcy5yYW5qb3VzQGdtYWlsLmNvbT5cbiAqL1xuXG5jb25zdCB7IEhlYXAgfSA9IHJlcXVpcmUoJy4vaGVhcCcpO1xuXG4vKipcbiAqIEBjbGFzcyBNaW5IZWFwXG4gKiBAZXh0ZW5kcyBIZWFwXG4gKi9cbmNsYXNzIE1pbkhlYXAgZXh0ZW5kcyBIZWFwIHtcbiAgLyoqXG4gICAqIENoZWNrcyB0d28gbm9kZXMgYXJlIGluIHJlbGF0aXZlbHkgdmFsaWQgcG9zaXRpb25cbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtvYmplY3R9IHBhcmVudFxuICAgKiBAcGFyYW0ge29iamVjdH0gY2hpbGRcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBfY29tcGFyZUtleXMocGFyZW50S2V5LCBjaGlsZEtleSkge1xuICAgIHJldHVybiBwYXJlbnRLZXkgPCBjaGlsZEtleTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIG1pbiBjaGlsZCdzIGluZGV4IG9mIHR3byBjaGlsZHJlbiBiZWZvcmUgYW4gaW5kZXhcbiAgICogQHByb3RlY3RlZFxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtudW1iZXJ9IGxlZnRDaGlsZEluZGV4XG4gICAqIEBwYXJhbSB7bnVtYmVyfSByaWdodENoaWxkSW5kZXhcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIF9jb21wYXJlQ2hpbGRyZW5CZWZvcmUoaW5kZXgsIGxlZnRDaGlsZEluZGV4LCByaWdodENoaWxkSW5kZXgpIHtcbiAgICBjb25zdCBsZWZ0Q2hpbGRLZXkgPSB0aGlzLl9nZXRLZXkodGhpcy5fbm9kZXNbbGVmdENoaWxkSW5kZXhdKTtcbiAgICBjb25zdCByaWdodENoaWxkS2V5ID0gdGhpcy5fZ2V0S2V5KHRoaXMuX25vZGVzW3JpZ2h0Q2hpbGRJbmRleF0pO1xuXG4gICAgaWYgKHJpZ2h0Q2hpbGRLZXkgPCBsZWZ0Q2hpbGRLZXkgJiYgcmlnaHRDaGlsZEluZGV4IDwgaW5kZXgpIHtcbiAgICAgIHJldHVybiByaWdodENoaWxkSW5kZXg7XG4gICAgfVxuICAgIHJldHVybiBsZWZ0Q2hpbGRJbmRleDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgc2hhbGxvdyBjb3B5IG9mIHRoZSBoZWFwXG4gICAqIEBwdWJsaWNcbiAgICogQHJldHVybnMge01pbkhlYXB9XG4gICAqL1xuICBjbG9uZSgpIHtcbiAgICByZXR1cm4gc3VwZXIuX2Nsb25lKE1pbkhlYXApO1xuICB9XG5cbiAgLyoqXG4gICAqIEJ1aWxkcyBhIG1pbiBoZWFwIGZyb20gYW4gYXJyYXkgb2YgaXRlbXNcbiAgICogQHB1YmxpY1xuICAgKiBAc3RhdGljXG4gICAqIEBwYXJhbSB7YXJyYXl9IGxpc3RcbiAgICogQHJldHVybnMge01pbkhlYXB9XG4gICAqL1xuICBzdGF0aWMgaGVhcGlmeShsaXN0KSB7XG4gICAgcmV0dXJuIHN1cGVyLl9oZWFwaWZ5KGxpc3QsIE1pbkhlYXApO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiBhIGxpc3Qgb2YgbGlzdCBpcyBhIHZhbGlkIG1pbiBoZWFwXG4gICAqIEBwdWJsaWNcbiAgICogQHN0YXRpY1xuICAgKiBAcGFyYW0ge2FycmF5fSBsaXN0XG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgc3RhdGljIGlzSGVhcGlmaWVkKGxpc3QpIHtcbiAgICByZXR1cm4gc3VwZXIuX2lzSGVhcGlmaWVkKGxpc3QsIE1pbkhlYXApO1xuICB9XG59XG5cbmV4cG9ydHMuTWluSGVhcCA9IE1pbkhlYXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///78573\n")},54082:(module,__unused_webpack_exports,__webpack_require__)=>{eval("const { MinPriorityQueue } = __webpack_require__(38192);\nconst { MaxPriorityQueue } = __webpack_require__(28387);\nconst { PriorityQueue } = __webpack_require__(25515)\n\nmodule.exports = { MinPriorityQueue, MaxPriorityQueue, PriorityQueue };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwODIuanMiLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxtQkFBbUIsRUFBRSxtQkFBTyxDQUFDLEtBQXdCO0FBQzdELFFBQVEsbUJBQW1CLEVBQUUsbUJBQU8sQ0FBQyxLQUF3QjtBQUM3RCxRQUFRLGdCQUFnQixFQUFFLG1CQUFPLENBQUMsS0FBcUI7O0FBRXZELG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FkdmVudC1vZi1jb2RlLy4vbm9kZV9tb2R1bGVzL0BkYXRhc3RydWN0dXJlcy1qcy9wcmlvcml0eS1xdWV1ZS9pbmRleC5qcz8xNGJhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTWluUHJpb3JpdHlRdWV1ZSB9ID0gcmVxdWlyZSgnLi9zcmMvbWluUHJpb3JpdHlRdWV1ZScpO1xuY29uc3QgeyBNYXhQcmlvcml0eVF1ZXVlIH0gPSByZXF1aXJlKCcuL3NyYy9tYXhQcmlvcml0eVF1ZXVlJyk7XG5jb25zdCB7IFByaW9yaXR5UXVldWUgfSA9IHJlcXVpcmUoJy4vc3JjL3ByaW9yaXR5UXVldWUnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgTWluUHJpb3JpdHlRdWV1ZSwgTWF4UHJpb3JpdHlRdWV1ZSwgUHJpb3JpdHlRdWV1ZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///54082\n")},28387:(__unused_webpack_module,exports,__webpack_require__)=>{eval("/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\nconst { MaxHeap } = __webpack_require__(7436);\nconst { PriorityQueue } = __webpack_require__(25515);\n\n/**\n * @class MaxPriorityQueue\n * @extends PriorityQueue\n */\nclass MaxPriorityQueue extends PriorityQueue {\n  constructor(options) {\n    super(options);\n    if (!this._compare) {\n      this._heap = new MaxHeap();\n    }\n  }\n}\n\nexports.MaxPriorityQueue = MaxPriorityQueue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgzODcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxVQUFVLEVBQUUsbUJBQU8sQ0FBQyxJQUF5QjtBQUNyRCxRQUFRLGdCQUFnQixFQUFFLG1CQUFPLENBQUMsS0FBaUI7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZHZlbnQtb2YtY29kZS8uL25vZGVfbW9kdWxlcy9AZGF0YXN0cnVjdHVyZXMtanMvcHJpb3JpdHktcXVldWUvc3JjL21heFByaW9yaXR5UXVldWUuanM/ZTY1MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAyMCBFeWFzIFJhbmpvdXMgPGV5YXMucmFuam91c0BnbWFpbC5jb20+XG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuXG5jb25zdCB7IE1heEhlYXAgfSA9IHJlcXVpcmUoJ0BkYXRhc3RydWN0dXJlcy1qcy9oZWFwJyk7XG5jb25zdCB7IFByaW9yaXR5UXVldWUgfSA9IHJlcXVpcmUoJy4vcHJpb3JpdHlRdWV1ZScpO1xuXG4vKipcbiAqIEBjbGFzcyBNYXhQcmlvcml0eVF1ZXVlXG4gKiBAZXh0ZW5kcyBQcmlvcml0eVF1ZXVlXG4gKi9cbmNsYXNzIE1heFByaW9yaXR5UXVldWUgZXh0ZW5kcyBQcmlvcml0eVF1ZXVlIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgIGlmICghdGhpcy5fY29tcGFyZSkge1xuICAgICAgdGhpcy5faGVhcCA9IG5ldyBNYXhIZWFwKCk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydHMuTWF4UHJpb3JpdHlRdWV1ZSA9IE1heFByaW9yaXR5UXVldWU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///28387\n")},38192:(__unused_webpack_module,exports,__webpack_require__)=>{eval("/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\nconst { MinHeap } = __webpack_require__(7436);\nconst { PriorityQueue } = __webpack_require__(25515);\n\n/**\n * @class MinPriorityQueue\n * @extends PriorityQueue\n */\nclass MinPriorityQueue extends PriorityQueue {\n  constructor(options) {\n    super(options);\n    if (!this._compare) {\n      this._heap = new MinHeap();\n    }\n  }\n}\n\nexports.MinPriorityQueue = MinPriorityQueue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzgxOTIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxVQUFVLEVBQUUsbUJBQU8sQ0FBQyxJQUF5QjtBQUNyRCxRQUFRLGdCQUFnQixFQUFFLG1CQUFPLENBQUMsS0FBaUI7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZHZlbnQtb2YtY29kZS8uL25vZGVfbW9kdWxlcy9AZGF0YXN0cnVjdHVyZXMtanMvcHJpb3JpdHktcXVldWUvc3JjL21pblByaW9yaXR5UXVldWUuanM/NjE0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgMjAyMCBFeWFzIFJhbmpvdXMgPGV5YXMucmFuam91c0BnbWFpbC5jb20+XG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuXG5jb25zdCB7IE1pbkhlYXAgfSA9IHJlcXVpcmUoJ0BkYXRhc3RydWN0dXJlcy1qcy9oZWFwJyk7XG5jb25zdCB7IFByaW9yaXR5UXVldWUgfSA9IHJlcXVpcmUoJy4vcHJpb3JpdHlRdWV1ZScpO1xuXG4vKipcbiAqIEBjbGFzcyBNaW5Qcmlvcml0eVF1ZXVlXG4gKiBAZXh0ZW5kcyBQcmlvcml0eVF1ZXVlXG4gKi9cbmNsYXNzIE1pblByaW9yaXR5UXVldWUgZXh0ZW5kcyBQcmlvcml0eVF1ZXVlIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgIGlmICghdGhpcy5fY29tcGFyZSkge1xuICAgICAgdGhpcy5faGVhcCA9IG5ldyBNaW5IZWFwKCk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydHMuTWluUHJpb3JpdHlRdWV1ZSA9IE1pblByaW9yaXR5UXVldWU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38192\n")},25515:(__unused_webpack_module,exports,__webpack_require__)=>{eval("/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\nconst { CustomHeap } = __webpack_require__(7436);\n\n/**\n * @class PriorityQueue\n */\nclass PriorityQueue {\n  /**\n   * Creates a priority queue\n   * @public\n   * @params {object} [options]\n   */\n  constructor(options = {}) {\n    const { priority, compare } = options;\n    if (compare) {\n      if (typeof compare !== 'function') {\n        throw new Error('.constructor expects a valid compare function');\n      }\n      this._compare = compare;\n      this._heap = new CustomHeap(this._compare);\n    } else {\n      if (priority !== undefined && typeof priority !== 'function') {\n        throw new Error('.constructor expects a valid priority function');\n      }\n\n      this._priority = priority || ((el) => +el);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {object}\n   */\n  _getElementWithPriority(node) {\n    return {\n      priority: node.key,\n      element: node.value\n    };\n  }\n\n  /**\n   * @public\n   * @returns {number}\n   */\n  size() {\n    return this._heap.size();\n  }\n\n  /**\n   * @public\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return this._heap.isEmpty();\n  }\n\n  /**\n   * Returns an element with highest priority in the queue\n   * @public\n   * @returns {object}\n   */\n  front() {\n    if (this.isEmpty()) return null;\n\n    if (this._compare) {\n      return this._heap.root();\n    }\n\n    return this._getElementWithPriority(this._heap.root());\n  }\n\n  /**\n   * Returns an element with lowest priority in the queue\n   * @public\n   * @returns {object}\n   */\n  back() {\n    if (this.isEmpty()) return null;\n\n    if (this._compare) {\n      return this._heap.leaf();\n    }\n\n    return this._getElementWithPriority(this._heap.leaf());\n  }\n\n  /**\n   * Adds an element to the queue\n   * @public\n   * @param {any} element\n   * @param {number} p - priority\n   * @throws {Error} if priority is not a valid number\n   */\n  enqueue(element, p) {\n    if (this._compare) {\n      this._heap.insert(element);\n      return this;\n    }\n\n    if (p && Number.isNaN(+p)) {\n      throw new Error('.enqueue expects a numeric priority');\n    }\n\n    if (Number.isNaN(+p) && Number.isNaN(this._priority(element))) {\n      throw new Error(\n        '.enqueue expects a numeric priority '\n        + 'or a constructor callback that returns a number'\n      );\n    }\n\n    const priority = !Number.isNaN(+p) ? p : this._priority(element);\n    this._heap.insert(+priority, element);\n    return this;\n  }\n\n  /**\n   * Removes and returns an element with highest priority in the queue\n   * @public\n   * @returns {object}\n   */\n  dequeue() {\n    if (this.isEmpty()) return null;\n\n    if (this._compare) {\n      return this._heap.extractRoot();\n    }\n\n    return this._getElementWithPriority(this._heap.extractRoot());\n  }\n\n  /**\n   * Returns a sorted list of elements from highest to lowest priority\n   * @public\n   * @returns {array}\n   */\n  toArray() {\n    if (this._compare) {\n      return this._heap.clone().sort().reverse();\n    }\n\n    return this._heap\n      .clone()\n      .sort()\n      .map((n) => this._getElementWithPriority(n))\n      .reverse();\n  }\n\n  /**\n   * Clears the queue\n   * @public\n   */\n  clear() {\n    this._heap.clear();\n  }\n}\n\nexports.PriorityQueue = PriorityQueue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU1MTUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxhQUFhLEVBQUUsbUJBQU8sQ0FBQyxJQUF5Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEI7QUFDQSwwQkFBMEI7QUFDMUIsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsS0FBSztBQUNsQixhQUFhLFFBQVE7QUFDckIsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9ub2RlX21vZHVsZXMvQGRhdGFzdHJ1Y3R1cmVzLWpzL3ByaW9yaXR5LXF1ZXVlL3NyYy9wcmlvcml0eVF1ZXVlLmpzPzRlNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY29weXJpZ2h0IDIwMjAgRXlhcyBSYW5qb3VzIDxleWFzLnJhbmpvdXNAZ21haWwuY29tPlxuICogQGxpY2Vuc2UgTUlUXG4gKi9cblxuY29uc3QgeyBDdXN0b21IZWFwIH0gPSByZXF1aXJlKCdAZGF0YXN0cnVjdHVyZXMtanMvaGVhcCcpO1xuXG4vKipcbiAqIEBjbGFzcyBQcmlvcml0eVF1ZXVlXG4gKi9cbmNsYXNzIFByaW9yaXR5UXVldWUge1xuICAvKipcbiAgICogQ3JlYXRlcyBhIHByaW9yaXR5IHF1ZXVlXG4gICAqIEBwdWJsaWNcbiAgICogQHBhcmFtcyB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICovXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHsgcHJpb3JpdHksIGNvbXBhcmUgfSA9IG9wdGlvbnM7XG4gICAgaWYgKGNvbXBhcmUpIHtcbiAgICAgIGlmICh0eXBlb2YgY29tcGFyZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJy5jb25zdHJ1Y3RvciBleHBlY3RzIGEgdmFsaWQgY29tcGFyZSBmdW5jdGlvbicpO1xuICAgICAgfVxuICAgICAgdGhpcy5fY29tcGFyZSA9IGNvbXBhcmU7XG4gICAgICB0aGlzLl9oZWFwID0gbmV3IEN1c3RvbUhlYXAodGhpcy5fY29tcGFyZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcmlvcml0eSAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBwcmlvcml0eSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJy5jb25zdHJ1Y3RvciBleHBlY3RzIGEgdmFsaWQgcHJpb3JpdHkgZnVuY3Rpb24nKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fcHJpb3JpdHkgPSBwcmlvcml0eSB8fCAoKGVsKSA9PiArZWwpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxuICAgKi9cbiAgX2dldEVsZW1lbnRXaXRoUHJpb3JpdHkobm9kZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwcmlvcml0eTogbm9kZS5rZXksXG4gICAgICBlbGVtZW50OiBub2RlLnZhbHVlXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAqL1xuICBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLl9oZWFwLnNpemUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaXNFbXB0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5faGVhcC5pc0VtcHR5KCk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhbiBlbGVtZW50IHdpdGggaGlnaGVzdCBwcmlvcml0eSBpbiB0aGUgcXVldWVcbiAgICogQHB1YmxpY1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxuICAgKi9cbiAgZnJvbnQoKSB7XG4gICAgaWYgKHRoaXMuaXNFbXB0eSgpKSByZXR1cm4gbnVsbDtcblxuICAgIGlmICh0aGlzLl9jb21wYXJlKSB7XG4gICAgICByZXR1cm4gdGhpcy5faGVhcC5yb290KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX2dldEVsZW1lbnRXaXRoUHJpb3JpdHkodGhpcy5faGVhcC5yb290KCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYW4gZWxlbWVudCB3aXRoIGxvd2VzdCBwcmlvcml0eSBpbiB0aGUgcXVldWVcbiAgICogQHB1YmxpY1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxuICAgKi9cbiAgYmFjaygpIHtcbiAgICBpZiAodGhpcy5pc0VtcHR5KCkpIHJldHVybiBudWxsO1xuXG4gICAgaWYgKHRoaXMuX2NvbXBhcmUpIHtcbiAgICAgIHJldHVybiB0aGlzLl9oZWFwLmxlYWYoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fZ2V0RWxlbWVudFdpdGhQcmlvcml0eSh0aGlzLl9oZWFwLmxlYWYoKSk7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBhbiBlbGVtZW50IHRvIHRoZSBxdWV1ZVxuICAgKiBAcHVibGljXG4gICAqIEBwYXJhbSB7YW55fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwIC0gcHJpb3JpdHlcbiAgICogQHRocm93cyB7RXJyb3J9IGlmIHByaW9yaXR5IGlzIG5vdCBhIHZhbGlkIG51bWJlclxuICAgKi9cbiAgZW5xdWV1ZShlbGVtZW50LCBwKSB7XG4gICAgaWYgKHRoaXMuX2NvbXBhcmUpIHtcbiAgICAgIHRoaXMuX2hlYXAuaW5zZXJ0KGVsZW1lbnQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgaWYgKHAgJiYgTnVtYmVyLmlzTmFOKCtwKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCcuZW5xdWV1ZSBleHBlY3RzIGEgbnVtZXJpYyBwcmlvcml0eScpO1xuICAgIH1cblxuICAgIGlmIChOdW1iZXIuaXNOYU4oK3ApICYmIE51bWJlci5pc05hTih0aGlzLl9wcmlvcml0eShlbGVtZW50KSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJy5lbnF1ZXVlIGV4cGVjdHMgYSBudW1lcmljIHByaW9yaXR5ICdcbiAgICAgICAgKyAnb3IgYSBjb25zdHJ1Y3RvciBjYWxsYmFjayB0aGF0IHJldHVybnMgYSBudW1iZXInXG4gICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IHByaW9yaXR5ID0gIU51bWJlci5pc05hTigrcCkgPyBwIDogdGhpcy5fcHJpb3JpdHkoZWxlbWVudCk7XG4gICAgdGhpcy5faGVhcC5pbnNlcnQoK3ByaW9yaXR5LCBlbGVtZW50KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGFuZCByZXR1cm5zIGFuIGVsZW1lbnQgd2l0aCBoaWdoZXN0IHByaW9yaXR5IGluIHRoZSBxdWV1ZVxuICAgKiBAcHVibGljXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBkZXF1ZXVlKCkge1xuICAgIGlmICh0aGlzLmlzRW1wdHkoKSkgcmV0dXJuIG51bGw7XG5cbiAgICBpZiAodGhpcy5fY29tcGFyZSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2hlYXAuZXh0cmFjdFJvb3QoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fZ2V0RWxlbWVudFdpdGhQcmlvcml0eSh0aGlzLl9oZWFwLmV4dHJhY3RSb290KCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBzb3J0ZWQgbGlzdCBvZiBlbGVtZW50cyBmcm9tIGhpZ2hlc3QgdG8gbG93ZXN0IHByaW9yaXR5XG4gICAqIEBwdWJsaWNcbiAgICogQHJldHVybnMge2FycmF5fVxuICAgKi9cbiAgdG9BcnJheSgpIHtcbiAgICBpZiAodGhpcy5fY29tcGFyZSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2hlYXAuY2xvbmUoKS5zb3J0KCkucmV2ZXJzZSgpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl9oZWFwXG4gICAgICAuY2xvbmUoKVxuICAgICAgLnNvcnQoKVxuICAgICAgLm1hcCgobikgPT4gdGhpcy5fZ2V0RWxlbWVudFdpdGhQcmlvcml0eShuKSlcbiAgICAgIC5yZXZlcnNlKCk7XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXJzIHRoZSBxdWV1ZVxuICAgKiBAcHVibGljXG4gICAqL1xuICBjbGVhcigpIHtcbiAgICB0aGlzLl9oZWFwLmNsZWFyKCk7XG4gIH1cbn1cblxuZXhwb3J0cy5Qcmlvcml0eVF1ZXVlID0gUHJpb3JpdHlRdWV1ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25515\n")},50199:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Day15)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day15.vue?vue&type=template&id=c6b86140\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'Day\',{attrs:{"day":15,"year":2021,"solutions":_vm.solutions},on:{"input-changed":_vm.onInputChanged},scopedSlots:_vm._u([{key:"partOne",fn:function(){return [_c(\'div\',{staticClass:"canvas-holder-one"},[_c(\'canvas\',{ref:"partOne",staticClass:"canvas",attrs:{"width":"202","height":"100"}})])]},proxy:true},{key:"partTwo",fn:function(){return [_c(\'div\',{staticClass:"canvas-holder-two"},[_c(\'canvas\',{ref:"partTwo",staticClass:"canvas",attrs:{"width":"1002","height":"500"}})])]},proxy:true}])})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(86889);\n// EXTERNAL MODULE: ./src/util/color.js\nvar color = __webpack_require__(47695);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day15.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nconst {\n  PriorityQueue\n} = __webpack_require__(54082);\n/* harmony default export */ const Day15vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      neighbors: [[1, 0], [0, 1], [-1, 0], [0, -1]],\n      gridOne: null\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const nodesOne = this.parseInput(input, 1);\n      this.solutions.partOne = this.dijkstra(nodesOne, input[0].length - 1, input.length - 1);\n      this.$nextTick(() => this.print(this.$refs.partOne, nodesOne, this.getNodesOnPath(nodesOne, `${input[0].length - 1},${input.length - 1}`), input[0].length - 1, input.length - 1));\n      const nodesTwo = this.parseInput(input, 5);\n      this.solutions.partTwo = this.dijkstra(nodesTwo, input[0].length * 5 - 1, input.length * 5 - 1);\n      this.$nextTick(() => this.print(this.$refs.partTwo, nodesTwo, this.getNodesOnPath(nodesTwo, `${input[0].length * 5 - 1},${input.length * 5 - 1}`), input[0].length * 5 - 1, input.length * 5 - 1));\n    },\n    parseInput: function (input, repeat) {\n      const nodes = new Map();\n      const maxX = input[0].length;\n      const maxY = input.length;\n\n      // Parse the original grid\n      const grid = input.map(i => i.split(\'\').map(c => +c));\n\n      // For the larger dimensions\n      for (let y = 0; y < maxY * repeat; y++) {\n        for (let x = 0; x < maxX * repeat; x++) {\n          // Get the coordinates and the valid neighbors\n          const coords = `${x},${y}`;\n          const validNeighbors = this.neighbors.filter(n => x + n[0] >= 0 && x + n[0] < maxX * repeat && y + n[1] >= 0 && y + n[1] < maxY * repeat);\n\n          // Calculate the value of the repeated cell\n          let value = +grid[y % grid.length][x % grid[0].length] + Math.floor(y / maxY) + Math.floor(x / maxX);\n\n          // Fix issues with large values\n          if (value > 9) {\n            value -= 9;\n          }\n\n          // Add the node to the mapping\n          nodes.set(coords, {\n            x: x,\n            y: y,\n            value: value,\n            coords: coords,\n            cost: Number.POSITIVE_INFINITY,\n            neighbors: validNeighbors\n          });\n        }\n      }\n      return nodes;\n    },\n    dijkstra: function (nodes, maxX, maxY) {\n      const target = `${maxX},${maxY}`;\n\n      // Use a priority queue to keep track of the node with lowest cost\n      const queue = new PriorityQueue({\n        compare: (a, b) => a.cost - b.cost\n      });\n\n      // Add the start point\n      const start = nodes.get(\'0,0\');\n      start.cost = 0;\n      queue.enqueue(start);\n\n      // While there are still nodes on the queue, continue\n      while (queue.size() > 0) {\n        // Get the lowest-cost node\n        const current = queue.dequeue();\n\n        // Go through all neighbors\n        current.neighbors.forEach(n => {\n          // Get the actual object\n          const coords = `${current.x + n[0]},${current.y + n[1]}`;\n          const neighbor = nodes.get(coords);\n\n          // Check if it\'s on the queue\n          const onQueue = neighbor.cost !== Number.POSITIVE_INFINITY;\n          // Adjust the cost\n          neighbor.cost = Math.min(neighbor.cost, current.cost + neighbor.value);\n          if (!onQueue) {\n            // Add to queue\n            queue.enqueue(neighbor);\n          }\n        });\n\n        // If we found the target, we can stop\n        if (current.coords === target) {\n          break;\n        }\n      }\n      return nodes.get(target).cost;\n    },\n    print: function (canvas, nodes, path, maxX, maxY) {\n      const ctx = canvas.getContext(\'2d\');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const gradient = (0,color/* createColorGradient */.wH)(\'#006266\', \'#C4E538\', nodes.get(`${maxX},${maxY}`).cost + 1);\n      const gradientValue = (0,color/* createColorGradient */.wH)(\'#006266\', \'#C4E538\', 10);\n      nodes.forEach(n => {\n        ctx.fillStyle = gradientValue[n.value];\n        ctx.fillRect(n.x, n.y, 1, 1);\n        if (path.has(n.coords)) {\n          ctx.fillStyle = \'#181a1b\';\n          ctx.fillRect(n.x + maxX + 2, n.y, 1, 1);\n        } else {\n          ctx.fillStyle = gradient[n.cost];\n          ctx.fillRect(n.x + maxX + 2, n.y, 1, 1);\n        }\n      });\n    },\n    getNodesOnPath: function (nodes, target) {\n      // Keep track of the nodes on the path\n      const path = new Set();\n\n      // Start at the target\n      let current = target;\n      path.add(current);\n\n      // While we haven\'t reached the start yet\n      while (current !== \'0,0\') {\n        // Find the neighbor with the smallest cost\n        let minValue = Number.MAX_SAFE_INTEGER;\n        let min = null;\n        nodes.get(current).neighbors.forEach(n => {\n          const curr = current.split(\',\').map(c => +c);\n          const coords = `${curr[0] + n[0]},${curr[1] + n[1]}`;\n          const neighbor = nodes.get(coords);\n          if (neighbor.cost < minValue) {\n            minValue = neighbor.cost;\n            min = coords;\n          }\n        });\n\n        // Add that neighbor and continue with it\n        path.add(min);\n        current = min;\n      }\n\n      // Add the target\n      path.add(\'0,0\');\n      return path;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2021/Day15.vue?vue&type=script&lang=js\n /* harmony default export */ const _2021_Day15vue_type_script_lang_js = (Day15vue_type_script_lang_js); \n;// CONCATENATED MODULE: ./node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day15.vue?vue&type=style&index=0&id=c6b86140&prod&lang=css\n// extracted by mini-css-extract-plugin\n\n;// CONCATENATED MODULE: ./src/components/2021/Day15.vue?vue&type=style&index=0&id=c6b86140&prod&lang=css\n\n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2021/Day15.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2021_Day15vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day15 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///50199\n')},47695:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dZ: () => (/* binding */ VIRIDIS),\n/* harmony export */   fb: () => (/* binding */ createMultiColorGradient),\n/* harmony export */   wH: () => (/* binding */ createColorGradient)\n/* harmony export */ });\n/* unused harmony exports hexToRgb, rgbToHex */\nconst VIRIDIS = ['#440154', '#48186a', '#472d7b', '#424086', '#3b528b', '#33638d', '#2c728e', '#26828e', '#21918c', '#1fa088', '#28ae80', '#3fbc73', '#5ec962', '#84d44b', '#addc30', '#d8e219', '#fde725'];\n\n/**\n * Converts a HEX value into an RGB object\n * @param {String} hex The hex color\n */\nconst hexToRgb = hex => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\n/**\n * Converts the given R, G, B values into a HEX color\n * @param {Number} r The red color component\n * @param {Number} g The green color component\n * @param {Number} b The blue color component\n */\nconst rgbToHex = (r, g, b) => {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n};\n\n/**\n * Creates a linear gradient between the two given colors with the given number of steps\n * @param {String} one The first color in HEX\n * @param {String} two The second color in HEX\n * @param {Number} steps The number of steps between the two colors\n */\nconst createColorGradient = (one, two, steps) => {\n  const oneRgb = hexToRgb(one);\n  const twoRgb = hexToRgb(two);\n  if (steps < 2) {\n    return [one];\n  }\n  const result = [];\n  for (let i = 0; i < steps; i++) {\n    const iNorm = i / (steps - 1);\n    result.push(rgbToHex(Math.floor(oneRgb.r + iNorm * (twoRgb.r - oneRgb.r)), Math.floor(oneRgb.g + iNorm * (twoRgb.g - oneRgb.g)), Math.floor(oneRgb.b + iNorm * (twoRgb.b - oneRgb.b))));\n  }\n  return result;\n};\nconst createMultiColorGradient = (colors, steps) => {\n  if (colors.length > steps) {\n    return colors.slice(0, steps);\n  }\n  const sections = colors.length - 1;\n  let result = [];\n  for (let i = 0; i < sections - 1; i++) {\n    result = result.concat(createColorGradient(colors[i], colors[i + 1], Math.max(1, Math.floor(steps / sections))));\n  }\n  while (result.length < steps) {\n    result.push(colors[colors.length - 1]);\n  }\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFFSSxLQUFLLENBQUM7RUFDL0I7RUFFQSxNQUFNVyxRQUFRLEdBQUdGLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLENBQUM7RUFFbEMsSUFBSXRCLE1BQU0sR0FBRyxFQUFFO0VBRWYsS0FBSyxJQUFJZSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdRLFFBQVEsR0FBRyxDQUFDLEVBQUVSLENBQUMsRUFBRSxFQUFFO0lBQ3JDZixNQUFNLEdBQUdBLE1BQU0sQ0FBQ3dCLE1BQU0sQ0FBQ2YsbUJBQW1CLENBQUNZLE1BQU0sQ0FBQ04sQ0FBQyxDQUFDLEVBQUVNLE1BQU0sQ0FBQ04sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFRyxJQUFJLENBQUNPLEdBQUcsQ0FBQyxDQUFDLEVBQUVQLElBQUksQ0FBQ0MsS0FBSyxDQUFDUCxLQUFLLEdBQUdXLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNsSDtFQUVBLE9BQU92QixNQUFNLENBQUNzQixNQUFNLEdBQUdWLEtBQUssRUFBRTtJQUM1QlosTUFBTSxDQUFDaUIsSUFBSSxDQUFDSSxNQUFNLENBQUNBLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBQ3hDO0VBRUEsT0FBT3RCLE1BQU07QUFDZixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2ZW50LW9mLWNvZGUvLi9zcmMvdXRpbC9jb2xvci5qcz8zODVhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFZJUklESVMgPSBbJyM0NDAxNTQnLCAnIzQ4MTg2YScsICcjNDcyZDdiJywgJyM0MjQwODYnLCAnIzNiNTI4YicsICcjMzM2MzhkJywgJyMyYzcyOGUnLCAnIzI2ODI4ZScsICcjMjE5MThjJywgJyMxZmEwODgnLCAnIzI4YWU4MCcsICcjM2ZiYzczJywgJyM1ZWM5NjInLCAnIzg0ZDQ0YicsICcjYWRkYzMwJywgJyNkOGUyMTknLCAnI2ZkZTcyNSddXG5cbi8qKlxuICogQ29udmVydHMgYSBIRVggdmFsdWUgaW50byBhbiBSR0Igb2JqZWN0XG4gKiBAcGFyYW0ge1N0cmluZ30gaGV4IFRoZSBoZXggY29sb3JcbiAqL1xuY29uc3QgaGV4VG9SZ2IgPSAoaGV4KSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IC9eIz8oW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkkL2kuZXhlYyhoZXgpXG4gIHJldHVybiByZXN1bHRcbiAgICA/IHtcbiAgICAgIHI6IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpLFxuICAgICAgZzogcGFyc2VJbnQocmVzdWx0WzJdLCAxNiksXG4gICAgICBiOiBwYXJzZUludChyZXN1bHRbM10sIDE2KVxuICAgIH1cbiAgICA6IG51bGxcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyB0aGUgZ2l2ZW4gUiwgRywgQiB2YWx1ZXMgaW50byBhIEhFWCBjb2xvclxuICogQHBhcmFtIHtOdW1iZXJ9IHIgVGhlIHJlZCBjb2xvciBjb21wb25lbnRcbiAqIEBwYXJhbSB7TnVtYmVyfSBnIFRoZSBncmVlbiBjb2xvciBjb21wb25lbnRcbiAqIEBwYXJhbSB7TnVtYmVyfSBiIFRoZSBibHVlIGNvbG9yIGNvbXBvbmVudFxuICovXG5jb25zdCByZ2JUb0hleCA9IChyLCBnLCBiKSA9PiB7XG4gIHJldHVybiAnIycgKyAoKDEgPDwgMjQpICsgKHIgPDwgMTYpICsgKGcgPDwgOCkgKyBiKS50b1N0cmluZygxNikuc2xpY2UoMSlcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgbGluZWFyIGdyYWRpZW50IGJldHdlZW4gdGhlIHR3byBnaXZlbiBjb2xvcnMgd2l0aCB0aGUgZ2l2ZW4gbnVtYmVyIG9mIHN0ZXBzXG4gKiBAcGFyYW0ge1N0cmluZ30gb25lIFRoZSBmaXJzdCBjb2xvciBpbiBIRVhcbiAqIEBwYXJhbSB7U3RyaW5nfSB0d28gVGhlIHNlY29uZCBjb2xvciBpbiBIRVhcbiAqIEBwYXJhbSB7TnVtYmVyfSBzdGVwcyBUaGUgbnVtYmVyIG9mIHN0ZXBzIGJldHdlZW4gdGhlIHR3byBjb2xvcnNcbiAqL1xuY29uc3QgY3JlYXRlQ29sb3JHcmFkaWVudCA9IChvbmUsIHR3bywgc3RlcHMpID0+IHtcbiAgY29uc3Qgb25lUmdiID0gaGV4VG9SZ2Iob25lKVxuICBjb25zdCB0d29SZ2IgPSBoZXhUb1JnYih0d28pXG5cbiAgaWYgKHN0ZXBzIDwgMikge1xuICAgIHJldHVybiBbb25lXVxuICB9XG5cbiAgY29uc3QgcmVzdWx0ID0gW11cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGVwczsgaSsrKSB7XG4gICAgY29uc3QgaU5vcm0gPSAoaSAvIChzdGVwcyAtIDEpKVxuICAgIHJlc3VsdC5wdXNoKHJnYlRvSGV4KFxuICAgICAgTWF0aC5mbG9vcihvbmVSZ2IuciArIGlOb3JtICogKHR3b1JnYi5yIC0gb25lUmdiLnIpKSxcbiAgICAgIE1hdGguZmxvb3Iob25lUmdiLmcgKyBpTm9ybSAqICh0d29SZ2IuZyAtIG9uZVJnYi5nKSksXG4gICAgICBNYXRoLmZsb29yKG9uZVJnYi5iICsgaU5vcm0gKiAodHdvUmdiLmIgLSBvbmVSZ2IuYikpXG4gICAgKSlcbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG5cbmNvbnN0IGNyZWF0ZU11bHRpQ29sb3JHcmFkaWVudCA9IChjb2xvcnMsIHN0ZXBzKSA9PiB7XG4gIGlmIChjb2xvcnMubGVuZ3RoID4gc3RlcHMpIHtcbiAgICByZXR1cm4gY29sb3JzLnNsaWNlKDAsIHN0ZXBzKVxuICB9XG5cbiAgY29uc3Qgc2VjdGlvbnMgPSBjb2xvcnMubGVuZ3RoIC0gMVxuXG4gIGxldCByZXN1bHQgPSBbXVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2VjdGlvbnMgLSAxOyBpKyspIHtcbiAgICByZXN1bHQgPSByZXN1bHQuY29uY2F0KGNyZWF0ZUNvbG9yR3JhZGllbnQoY29sb3JzW2ldLCBjb2xvcnNbaSArIDFdLCBNYXRoLm1heCgxLCBNYXRoLmZsb29yKHN0ZXBzIC8gc2VjdGlvbnMpKSkpXG4gIH1cblxuICB3aGlsZSAocmVzdWx0Lmxlbmd0aCA8IHN0ZXBzKSB7XG4gICAgcmVzdWx0LnB1c2goY29sb3JzW2NvbG9ycy5sZW5ndGggLSAxXSlcbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0IHtcbiAgaGV4VG9SZ2IsXG4gIHJnYlRvSGV4LFxuICBjcmVhdGVDb2xvckdyYWRpZW50LFxuICBjcmVhdGVNdWx0aUNvbG9yR3JhZGllbnQsXG4gIFZJUklESVNcbn1cbiJdLCJuYW1lcyI6WyJWSVJJRElTIiwiaGV4VG9SZ2IiLCJoZXgiLCJyZXN1bHQiLCJleGVjIiwiciIsInBhcnNlSW50IiwiZyIsImIiLCJyZ2JUb0hleCIsInRvU3RyaW5nIiwic2xpY2UiLCJjcmVhdGVDb2xvckdyYWRpZW50Iiwib25lIiwidHdvIiwic3RlcHMiLCJvbmVSZ2IiLCJ0d29SZ2IiLCJpIiwiaU5vcm0iLCJwdXNoIiwiTWF0aCIsImZsb29yIiwiY3JlYXRlTXVsdGlDb2xvckdyYWRpZW50IiwiY29sb3JzIiwibGVuZ3RoIiwic2VjdGlvbnMiLCJjb25jYXQiLCJtYXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///47695\n")}}]);