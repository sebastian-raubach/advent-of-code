"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[4038],{79325:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day23)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2022/Day23.vue?vue&type=template&id=56327d77\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":23,\"year\":2022,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2022/Day23.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day23vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const elves = new Map();\n      const dirs = ['N', 'S', 'W', 'E'];\n      let dirIndex = 0;\n      const checkDir = {\n        N: curr => {\n          const canMove = [[0, -1], [-1, -1], [1, -1]].every(d => !elves.has(`${curr[0] + d[0]},${curr[1] + d[1]}`));\n          if (canMove) {\n            return [curr[0], curr[1] - 1];\n          } else {\n            return curr;\n          }\n        },\n        E: curr => {\n          const canMove = [[1, -1], [1, 0], [1, 1]].every(d => !elves.has(`${curr[0] + d[0]},${curr[1] + d[1]}`));\n          if (canMove) {\n            return [curr[0] + 1, curr[1]];\n          } else {\n            return curr;\n          }\n        },\n        S: curr => {\n          const canMove = [[0, 1], [-1, 1], [1, 1]].every(d => !elves.has(`${curr[0] + d[0]},${curr[1] + d[1]}`));\n          if (canMove) {\n            return [curr[0], curr[1] + 1];\n          } else {\n            return curr;\n          }\n        },\n        W: curr => {\n          const canMove = [[-1, -1], [-1, 0], [-1, 1]].every(d => !elves.has(`${curr[0] + d[0]},${curr[1] + d[1]}`));\n          if (canMove) {\n            return [curr[0] - 1, curr[1]];\n          } else {\n            return curr;\n          }\n        }\n      };\n      const noNeighbors = curr => [[-1, -1], [0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0]].every(d => !elves.has(`${curr[0] + d[0]},${curr[1] + d[1]}`));\n      input.forEach((i, y) => {\n        const row = i.split('');\n        row.forEach((j, x) => {\n          if (j === '#') {\n            elves.set(`${x},${y}`, null);\n          }\n        });\n      });\n      for (let round = 0; round < 10; round++) {\n        const proposed = new Map();\n        elves.forEach((value, key) => {\n          const position = key.split(',').map(c => +c);\n          if (noNeighbors(position)) {\n            return;\n          }\n          for (let d = 0; d < 4; d++) {\n            const dir = dirs[(dirIndex + d) % dirs.length];\n            const next = checkDir[dir](position);\n\n            // It can move this way\n            if (position[0] !== next[0] || position[1] !== next[1]) {\n              elves.set(key, next);\n              const nextString = next.join(',');\n              proposed.set(nextString, proposed.has(nextString) ? proposed.get(nextString) + 1 : 1);\n              break;\n            }\n          }\n        });\n        elves.forEach((value, key) => {\n          if (value && proposed.get(value.join(',')) === 1) {\n            elves.delete(key);\n            elves.set(value.join(','), null);\n          }\n        });\n        dirIndex = (dirIndex + 1) % dirs.length;\n        console.log(JSON.parse(JSON.stringify([...elves.keys()])));\n      }\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = -minX;\n      let maxY = -minY;\n      elves.forEach((value, key) => {\n        const [x, y] = key.split(',').map(c => +c);\n        minX = Math.min(minX, x);\n        minY = Math.min(minY, y);\n        maxX = Math.max(maxX, x);\n        maxY = Math.max(maxY, y);\n      });\n      console.log(minX, maxX, minY, maxY, elves.size);\n      this.solutions.partOne = (maxX - minX + 1) * (maxY - minY + 1) - elves.size;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2022/Day23.vue?vue&type=script&lang=js\n /* harmony default export */ const _2022_Day23vue_type_script_lang_js = (Day23vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2022/Day23.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2022_Day23vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day23 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///79325\n")}}]);