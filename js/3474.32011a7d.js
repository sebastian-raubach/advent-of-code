"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[3474],{29586:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day8)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day8.vue?vue&type=template&id=0c2d911a\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":8,\"year\":2020,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2020/Day8.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const Day8vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      operations: [],\n      operands: {\n        // Accumulators increase the acc and move to the next position\n        acc: (value, acc, pos) => {\n          return {\n            acc: acc + value,\n            pos: pos + 1\n          };\n        },\n        // No operations just move to the next position\n        nop: (value, acc, pos) => {\n          return {\n            acc: acc,\n            pos: pos + 1\n          };\n        },\n        // Jumps just move the current position to the value\n        jmp: (value, acc, pos) => {\n          return {\n            acc: acc,\n            pos: pos + value\n          };\n        }\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      this.operations = input.map(i => {\n        const parts = i.split(' ');\n        // Remember the operator and the value as a number\n        return {\n          op: parts[0],\n          value: +parts[1]\n        };\n      });\n      this.solvePartOne();\n      this.solvePartTwo();\n    },\n    calculateSolution: function (localOperations) {\n      let accumulator = 0;\n      let position = 0;\n      const visitedPositions = {};\n\n      // Loop while we haven't terminated yet\n      while (true) {\n        // If we've either hit an infinite loop (repeated index) or we reached the end, return\n        if (position === localOperations.length || visitedPositions[position]) {\n          return {\n            accumulator: accumulator,\n            position: position\n          };\n        }\n\n        // Get the current operator\n        const operator = localOperations[position];\n        // Mark the index as visited\n        visitedPositions[position] = true;\n        // Get the new configuration\n        const next = this.operands[operator.op](operator.value, accumulator, position);\n\n        // Adjust the configuration\n        position = next.pos;\n        accumulator = next.acc;\n      }\n    },\n    solvePartOne: function () {\n      this.solutions.partOne = this.calculateSolution(this.operations).accumulator;\n    },\n    solvePartTwo: function () {\n      // Loop through all positions\n      for (let index = 0; index < this.operations.length; index++) {\n        // Get the operation\n        const i = this.operations[index];\n\n        // If it's a nop or a jmp\n        if (i.op === 'nop' || i.op === 'jmp') {\n          // Copy the whole input\n          const tempInput = JSON.parse(JSON.stringify(this.operations));\n          // Then swap the current position\n          tempInput[index].op = i.op === 'nop' ? 'jmp' : 'nop';\n\n          // Calculate the result using part one\n          const result = this.calculateSolution(tempInput);\n\n          // If this configuration has reached the end, it's no longer an infinite loop\n          if (result.position === tempInput.length) {\n            // Set the result and terminate\n            this.solutions.partTwo = result.accumulator;\n            return;\n          }\n        }\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2020/Day8.vue?vue&type=script&lang=js\n /* harmony default export */ const _2020_Day8vue_type_script_lang_js = (Day8vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2020/Day8.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2020_Day8vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Day8 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk1ODYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMEJBQTBCLGFBQWEsMEJBQTBCLHdCQUF3QixpQkFBaUIsT0FBTyw4Q0FBOEMsS0FBSyxvQ0FBb0M7QUFDeE07Ozs7Ozs7Ozs7OztBQ0tBO0FBRUEsa0VBQWU7RUFDZkE7SUFDQUMsR0FBQUEsRUFBQUEsa0JBQUFBO0VBQ0E7RUFDQUM7SUFDQTtNQUNBQztRQUNBQztRQUNBQztNQUNBO01BQ0FDO01BQ0FDO1FBQ0E7UUFDQUM7VUFBQTtZQUFBQTtZQUFBQztVQUFBO1FBQUE7UUFDQTtRQUNBQztVQUFBO1lBQUFGO1lBQUFDO1VBQUE7UUFBQTtRQUNBO1FBQ0FFO1VBQUE7WUFBQUg7WUFBQUM7VUFBQTtRQUFBO01BQ0E7SUFDQTtFQUNBO0VBQ0FHO0lBQ0FDO01BQ0E7UUFDQTtRQUNBO1FBQ0E7VUFDQUM7VUFDQUM7UUFDQTtNQUNBO01BRUE7TUFDQTtJQUNBO0lBQ0FDO01BQ0E7TUFDQTtNQUNBOztNQUVBO01BQ0E7UUFDQTtRQUNBO1VBQ0E7WUFDQUM7WUFDQUM7VUFDQTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBQztRQUNBO1FBQ0E7O1FBRUE7UUFDQUQ7UUFDQUQ7TUFDQTtJQUNBO0lBQ0FHO01BQ0E7SUFDQTtJQUNBQztNQUNBO01BQ0E7UUFDQTtRQUNBOztRQUVBO1FBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQUM7O1VBRUE7VUFDQTs7VUFFQTtVQUNBO1lBQ0E7WUFDQTtZQUNBO1VBQ0E7UUFDQTtNQUNBO0lBQ0E7RUFDQTtBQUNBLENBQUMsRTs7QUNuRzBQLENBQUMsd0VBQWUsMkJBQUcsRUFBQyxDOzs7O0FDQTdMO0FBQzNCO0FBQ0w7OztBQUdsRDtBQUNBLENBQXNHO0FBQ3RHLGdCQUFnQixzQ0FBVTtBQUMxQixFQUFFLGlDQUFNO0FBQ1IsRUFBRSxNQUFNO0FBQ1IsRUFBRSxlQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2FkdmVudC1vZi1jb2RlLy4vc3JjL2NvbXBvbmVudHMvMjAyMC9EYXk4LnZ1ZT9kNzMxIiwid2VicGFjazovL2FkdmVudC1vZi1jb2RlL3NyYy9jb21wb25lbnRzLzIwMjAvRGF5OC52dWU/NjIxMCIsIndlYnBhY2s6Ly9hZHZlbnQtb2YtY29kZS8uL3NyYy9jb21wb25lbnRzLzIwMjAvRGF5OC52dWU/NjQ5NCIsIndlYnBhY2s6Ly9hZHZlbnQtb2YtY29kZS8uL3NyYy9jb21wb25lbnRzLzIwMjAvRGF5OC52dWU/ZDhmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnRGF5Jyx7YXR0cnM6e1wiZGF5XCI6OCxcInllYXJcIjoyMDIwLFwic29sdXRpb25zXCI6X3ZtLnNvbHV0aW9uc30sb246e1wiaW5wdXQtY2hhbmdlZFwiOl92bS5vbklucHV0Q2hhbmdlZH19KX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxuICA8RGF5IDpkYXk9XCI4XCIgOnllYXI9XCIyMDIwXCIgOnNvbHV0aW9ucz1cInNvbHV0aW9uc1wiIEBpbnB1dC1jaGFuZ2VkPVwib25JbnB1dENoYW5nZWRcIj5cbiAgPC9EYXk+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IERheSBmcm9tICdAL2NvbXBvbmVudHMvRGF5J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBEYXlcbiAgfSxcbiAgZGF0YTogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzb2x1dGlvbnM6IHtcbiAgICAgICAgcGFydE9uZTogbnVsbCxcbiAgICAgICAgcGFydFR3bzogbnVsbFxuICAgICAgfSxcbiAgICAgIG9wZXJhdGlvbnM6IFtdLFxuICAgICAgb3BlcmFuZHM6IHtcbiAgICAgICAgLy8gQWNjdW11bGF0b3JzIGluY3JlYXNlIHRoZSBhY2MgYW5kIG1vdmUgdG8gdGhlIG5leHQgcG9zaXRpb25cbiAgICAgICAgYWNjOiAodmFsdWUsIGFjYywgcG9zKSA9PiB7IHJldHVybiB7IGFjYzogYWNjICsgdmFsdWUsIHBvczogcG9zICsgMSB9IH0sXG4gICAgICAgIC8vIE5vIG9wZXJhdGlvbnMganVzdCBtb3ZlIHRvIHRoZSBuZXh0IHBvc2l0aW9uXG4gICAgICAgIG5vcDogKHZhbHVlLCBhY2MsIHBvcykgPT4geyByZXR1cm4geyBhY2M6IGFjYywgcG9zOiBwb3MgKyAxIH0gfSxcbiAgICAgICAgLy8gSnVtcHMganVzdCBtb3ZlIHRoZSBjdXJyZW50IHBvc2l0aW9uIHRvIHRoZSB2YWx1ZVxuICAgICAgICBqbXA6ICh2YWx1ZSwgYWNjLCBwb3MpID0+IHsgcmV0dXJuIHsgYWNjOiBhY2MsIHBvczogcG9zICsgdmFsdWUgfSB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb25JbnB1dENoYW5nZWQ6IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgdGhpcy5vcGVyYXRpb25zID0gaW5wdXQubWFwKGkgPT4ge1xuICAgICAgICBjb25zdCBwYXJ0cyA9IGkuc3BsaXQoJyAnKVxuICAgICAgICAvLyBSZW1lbWJlciB0aGUgb3BlcmF0b3IgYW5kIHRoZSB2YWx1ZSBhcyBhIG51bWJlclxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG9wOiBwYXJ0c1swXSxcbiAgICAgICAgICB2YWx1ZTogK3BhcnRzWzFdXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIHRoaXMuc29sdmVQYXJ0T25lKClcbiAgICAgIHRoaXMuc29sdmVQYXJ0VHdvKClcbiAgICB9LFxuICAgIGNhbGN1bGF0ZVNvbHV0aW9uOiBmdW5jdGlvbiAobG9jYWxPcGVyYXRpb25zKSB7XG4gICAgICBsZXQgYWNjdW11bGF0b3IgPSAwXG4gICAgICBsZXQgcG9zaXRpb24gPSAwXG4gICAgICBjb25zdCB2aXNpdGVkUG9zaXRpb25zID0ge31cblxuICAgICAgLy8gTG9vcCB3aGlsZSB3ZSBoYXZlbid0IHRlcm1pbmF0ZWQgeWV0XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAvLyBJZiB3ZSd2ZSBlaXRoZXIgaGl0IGFuIGluZmluaXRlIGxvb3AgKHJlcGVhdGVkIGluZGV4KSBvciB3ZSByZWFjaGVkIHRoZSBlbmQsIHJldHVyblxuICAgICAgICBpZiAocG9zaXRpb24gPT09IGxvY2FsT3BlcmF0aW9ucy5sZW5ndGggfHwgdmlzaXRlZFBvc2l0aW9uc1twb3NpdGlvbl0pIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWNjdW11bGF0b3I6IGFjY3VtdWxhdG9yLFxuICAgICAgICAgICAgcG9zaXRpb246IHBvc2l0aW9uXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gR2V0IHRoZSBjdXJyZW50IG9wZXJhdG9yXG4gICAgICAgIGNvbnN0IG9wZXJhdG9yID0gbG9jYWxPcGVyYXRpb25zW3Bvc2l0aW9uXVxuICAgICAgICAvLyBNYXJrIHRoZSBpbmRleCBhcyB2aXNpdGVkXG4gICAgICAgIHZpc2l0ZWRQb3NpdGlvbnNbcG9zaXRpb25dID0gdHJ1ZVxuICAgICAgICAvLyBHZXQgdGhlIG5ldyBjb25maWd1cmF0aW9uXG4gICAgICAgIGNvbnN0IG5leHQgPSB0aGlzLm9wZXJhbmRzW29wZXJhdG9yLm9wXShvcGVyYXRvci52YWx1ZSwgYWNjdW11bGF0b3IsIHBvc2l0aW9uKVxuXG4gICAgICAgIC8vIEFkanVzdCB0aGUgY29uZmlndXJhdGlvblxuICAgICAgICBwb3NpdGlvbiA9IG5leHQucG9zXG4gICAgICAgIGFjY3VtdWxhdG9yID0gbmV4dC5hY2NcbiAgICAgIH1cbiAgICB9LFxuICAgIHNvbHZlUGFydE9uZTogZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5zb2x1dGlvbnMucGFydE9uZSA9IHRoaXMuY2FsY3VsYXRlU29sdXRpb24odGhpcy5vcGVyYXRpb25zKS5hY2N1bXVsYXRvclxuICAgIH0sXG4gICAgc29sdmVQYXJ0VHdvOiBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBMb29wIHRocm91Z2ggYWxsIHBvc2l0aW9uc1xuICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMub3BlcmF0aW9ucy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgLy8gR2V0IHRoZSBvcGVyYXRpb25cbiAgICAgICAgY29uc3QgaSA9IHRoaXMub3BlcmF0aW9uc1tpbmRleF1cblxuICAgICAgICAvLyBJZiBpdCdzIGEgbm9wIG9yIGEgam1wXG4gICAgICAgIGlmIChpLm9wID09PSAnbm9wJyB8fCBpLm9wID09PSAnam1wJykge1xuICAgICAgICAgIC8vIENvcHkgdGhlIHdob2xlIGlucHV0XG4gICAgICAgICAgY29uc3QgdGVtcElucHV0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm9wZXJhdGlvbnMpKVxuICAgICAgICAgIC8vIFRoZW4gc3dhcCB0aGUgY3VycmVudCBwb3NpdGlvblxuICAgICAgICAgIHRlbXBJbnB1dFtpbmRleF0ub3AgPSBpLm9wID09PSAnbm9wJyA/ICdqbXAnIDogJ25vcCdcblxuICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgcmVzdWx0IHVzaW5nIHBhcnQgb25lXG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5jYWxjdWxhdGVTb2x1dGlvbih0ZW1wSW5wdXQpXG5cbiAgICAgICAgICAvLyBJZiB0aGlzIGNvbmZpZ3VyYXRpb24gaGFzIHJlYWNoZWQgdGhlIGVuZCwgaXQncyBubyBsb25nZXIgYW4gaW5maW5pdGUgbG9vcFxuICAgICAgICAgIGlmIChyZXN1bHQucG9zaXRpb24gPT09IHRlbXBJbnB1dC5sZW5ndGgpIHtcbiAgICAgICAgICAgIC8vIFNldCB0aGUgcmVzdWx0IGFuZCB0ZXJtaW5hdGVcbiAgICAgICAgICAgIHRoaXMuc29sdXRpb25zLnBhcnRUd28gPSByZXN1bHQuYWNjdW11bGF0b3JcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblxuPC9zdHlsZT5cbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3RocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P2Nsb25lZFJ1bGVTZXQtNDAudXNlWzFdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdnVlL3Z1ZS1sb2FkZXItdjE1L2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vRGF5OC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC00MC51c2VbMV0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B2dWUvdnVlLWxvYWRlci12MTUvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9EYXk4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9EYXk4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wYzJkOTExYVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0RheTgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL0RheTgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdnVlL3Z1ZS1sb2FkZXItdjE1L2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJuYW1lcyI6WyJjb21wb25lbnRzIiwiRGF5IiwiZGF0YSIsInNvbHV0aW9ucyIsInBhcnRPbmUiLCJwYXJ0VHdvIiwib3BlcmF0aW9ucyIsIm9wZXJhbmRzIiwiYWNjIiwicG9zIiwibm9wIiwiam1wIiwibWV0aG9kcyIsIm9uSW5wdXRDaGFuZ2VkIiwib3AiLCJ2YWx1ZSIsImNhbGN1bGF0ZVNvbHV0aW9uIiwiYWNjdW11bGF0b3IiLCJwb3NpdGlvbiIsInZpc2l0ZWRQb3NpdGlvbnMiLCJzb2x2ZVBhcnRPbmUiLCJzb2x2ZVBhcnRUd28iLCJ0ZW1wSW5wdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29586\n")}}]);