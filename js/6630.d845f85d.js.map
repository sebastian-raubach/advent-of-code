{"version":3,"file":"js/6630.d845f85d.js","mappings":"0KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,IAAM,GAAG,KAAO,KAAK,UAAYN,EAAIO,WAAWC,GAAG,CAAC,gBAAgBR,EAAIS,iBAAiB,EACtMC,EAAkB,G,WCOtB,GACAC,WAAAA,CACAC,IAAAA,EAAAA,GAEAC,KAAAA,WACA,OACAN,UAAAA,CACAO,QAAAA,KACAC,QAAAA,MAGA,EACAC,QAAAA,CACAP,eAAAA,SAAAA,GACA,WACA,KAEA,kGAEA,uBACA,oBACAQ,EAAAA,SAAAA,IACA,0BAEA,GAAAC,GAAAA,EAAAA,GAAAC,GAAAA,EAAAA,IACA,GAAAD,GAAAA,EAAAA,GAAAC,GAAAA,EAAAA,IAEA,sBAEAC,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACAA,EAAAA,EAAAA,EAEAC,EAAAA,KAAAA,GACAC,EAAAA,KAAAA,GAEAC,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GACAC,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAGA,YAEA,QACA,qBACA,iBACA,mEAGA,gBAAAP,IAAAC,KAAA,SACAO,IACA,KACA,CAGA,yBAEA,gBAEA,kBACA,UACA,MAEA,UACA,YACA,IACA,IAEA,SACA,wBACA,2BACA,4BAAAR,IAAAC,KAAA,SAEA,YADA,gCAIAQ,EAAAA,IAAAA,GAAAA,KAAAA,IACA,CAWA,GATAT,GAAAA,EACAC,GAAAA,EAEA,UACAS,GAAAA,GAEA,UACAC,GAAAA,GAEA,uBAEA,KAEA,CAiBA,CACA,EACAC,UAAAA,SAAAA,EAAAA,GACA,0CACA,ICxH6P,I,UCOzPC,GAAY,OACd,EACAhC,EACAW,GACA,EACA,KACA,KACA,MAIF,EAAeqB,EAAiB,O","sources":["webpack://advent-of-code/./src/components/2022/Day15.vue?a588","webpack://advent-of-code/src/components/2022/Day15.vue","webpack://advent-of-code/./src/components/2022/Day15.vue?4081","webpack://advent-of-code/./src/components/2022/Day15.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":15,\"year\":2022,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"15\" :year=\"2022\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const sensors = []\n      const beacons = []\n\n      const pattern = /Sensor at x=(?<sx>-?\\d+), y=(?<sy>-?\\d+): closest beacon is at x=(?<bx>-?\\d+), y=(?<by>-?\\d+)/\n\n      let minX = Number.MAX_VALUE\n      let maxX = -Number.MAX_VALUE\n      input.forEach(i => {\n        const g = i.match(pattern).groups\n\n        const s = { x: +g.sx, y: +g.sy }\n        const b = { x: +g.bx, y: +g.by }\n\n        const dist = this.manhattan(s, b)\n\n        b.s = s\n        s.b = b\n        s.r = dist\n\n        sensors.push(s)\n        beacons.push(b)\n\n        minX = Math.min(minX, s.x - dist)\n        maxX = Math.max(maxX, s.x + dist)\n      })\n\n      const y = 2000000\n\n      let counter = 0\n      for (let x = minX; x <= maxX; x++) {\n        for (const s of sensors) {\n          if (beacons.some(b => b.x === x && b.y === y) || sensors.some(s => s.x === x && s.y === y)) {\n            continue\n          }\n          if (this.manhattan({ x, y }, s) <= s.r) {\n            counter++\n            break\n          }\n        }\n      }\n      this.solutions.partOne = counter\n\n      const checked = new Set()\n\n      for (const s of sensors) {\n        const min = 0\n        const max = 4000000\n\n        let x = s.x\n        let y = s.y - s.r - 1\n        let dx = 1\n        let dy = 1\n\n        while (true) {\n          if (!checked.has(`${x},${y}`)) {\n            if (x >= min && x <= max && y >= min && y <= max) {\n              if (sensors.every(os => this.manhattan({ x, y }, os) > os.r)) {\n                this.solutions.partTwo = x * 4000000 + y\n                return\n              }\n            }\n            checked.add(`${x},${y}`)\n          }\n\n          x += dx\n          y += dy\n\n          if (x === s.x) {\n            dy = -dy\n          }\n          if (y === s.y) {\n            dx = -dx\n          }\n          if (x === s.x && y === s.y - s.r - 1) {\n            // We've reached the start again\n            break\n          }\n        }\n\n        // for (let x = Math.max(s.x - s.r - 1, min); x <= Math.min(s.x + s.r, max); x++) {\n        //   for (let y = Math.max(s.y - s.r - 1, min); y <= Math.min(s.y + s.r, max); y++) {\n        //     if (checked.has(`${x},${y}`)) {\n        //       continue\n        //     } else {\n        //       checked.add(`${x},${y}`)\n        //       if (this.manhattan({ x, y }, s) === s.r + 1) {\n        //         if (sensors.every(os => this.manhattan({ x, y }, os) > os.r)) {\n        //           this.solutions.partTwo = `${x},${y}`\n        //           return\n        //         }\n        //       }\n        //     }\n        //   }\n        // }\n      }\n    },\n    manhattan: function (a, b) {\n      return Math.abs(a.x - b.x) + Math.abs(a.y - b.y)\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Day15.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Day15.vue?vue&type=template&id=6abf6462\"\nimport script from \"./Day15.vue?vue&type=script&lang=js\"\nexport * from \"./Day15.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","methods","input","x","y","b","s","sensors","beacons","minX","maxX","counter","checked","dy","dx","manhattan","component"],"sourceRoot":""}