"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[2231],{61351:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Day14)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day14.vue?vue&type=template&id=1e0ef416&scoped=true\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":14,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./src/components/Day.vue + 5 modules\nvar Day = __webpack_require__(36100);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/2021/Day14.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n\n\n\n// Create a map that, for missing keys, sets them to a default value\nclass MapWithDefault extends Map {\n  get(key) {\n    if (!this.has(key)) {\n      this.set(key, this.default());\n    }\n    return super.get(key);\n  }\n  constructor(defaultFunction, entries) {\n    super(entries);\n    this.default = defaultFunction;\n  }\n}\n/* harmony default export */ const Day14vue_type_script_lang_js = ({\n  components: {\n    Day: Day/* default */.Z\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      }\n    };\n  },\n  methods: {\n    onInputChanged: function (input) {\n      // Get the original template\n      const template = input[0].split('');\n\n      // Get initial pair counts\n      let pairCount = new MapWithDefault(() => 0);\n      for (let i = 0; i < template.length - 1; i++) {\n        const pair = `${template[i]}${template[i + 1]}`;\n        pairCount.set(pair, pairCount.get(pair) + 1);\n      }\n\n      // Parse the rules\n      const rules = new Map();\n      for (let i = 2; i < input.length; i++) {\n        const [from, to] = input[i].split(' -> ');\n        rules.set(from, to);\n      }\n\n      // Do the steps\n      for (let i = 0; i < 40; i++) {\n        // Compute the new pair counts\n        const newPairCount = new MapWithDefault(() => 0);\n        pairCount.forEach((count, pair) => {\n          // Get the current rule\n          const rule = rules.get(pair);\n\n          // Generate the new pairs\n          let [l, r] = pair.split('');\n          l = l + rule;\n          r = rule + r;\n\n          // Increment each pair by the count (of the previous rule round)\n          newPairCount.set(l, newPairCount.get(l) + count);\n          newPairCount.set(r, newPairCount.get(r) + count);\n        });\n\n        // Keep new ones\n        pairCount = newPairCount;\n        if (i === 9) {\n          // On round 10, calculate part one\n          const letterCount = this.getLetterCount(pairCount, template);\n          const delta = this.getDelta(letterCount);\n          // Divide by 2 cause we're counting each letter twice\n          this.solutions.partOne = delta / 2;\n        } else if (i === 39) {\n          // On step 40, calculate part two\n          const letterCount = this.getLetterCount(pairCount, template);\n          const delta = this.getDelta(letterCount);\n          // Divide by 2 cause we're counting each letter twice\n          this.solutions.partTwo = delta / 2;\n        }\n      }\n    },\n    /**\n     * Calculates the delta between the max and the min of letter counts\n     */\n    getDelta: function (letterCount) {\n      let min = Number.MAX_SAFE_INTEGER;\n      let max = 0;\n      letterCount.forEach((count, _) => {\n        min = Math.min(min, count);\n        max = Math.max(max, count);\n      });\n      return max - min;\n    },\n    /**\n     * Calculates letter counts based on pair counts and the template\n     */\n    getLetterCount: function (pairCount, template) {\n      const letterCount = new MapWithDefault(() => 0);\n      pairCount.forEach((count, pair) => {\n        // Split the pair\n        const [a, b] = pair.split('');\n\n        // Increment by the pair count\n        letterCount.set(a, letterCount.get(a) + count);\n        letterCount.set(b, letterCount.get(b) + count);\n      });\n\n      // We need to increase the very first and the very last letter as they're missed out by the previous loop\n      letterCount.set(template[0], letterCount.get(template[0]) + 1);\n      letterCount.set(template[template.length - 1], letterCount.get(template[template.length - 1]) + 1);\n      return letterCount;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/2021/Day14.vue?vue&type=script&lang=js\n /* harmony default export */ const _2021_Day14vue_type_script_lang_js = (Day14vue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/components/2021/Day14.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  _2021_Day14vue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e0ef416\",\n  null\n  \n)\n\n/* harmony default export */ const Day14 = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///61351\n")}}]);