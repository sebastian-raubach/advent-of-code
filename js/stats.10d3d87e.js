"use strict";(self["webpackChunkadvent_of_code"]=self["webpackChunkadvent_of_code"]||[]).push([[6784],{40595:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ JsonStats)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/views/JsonStats.vue?vue&type=template&id=f6eddc08\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Statistics\")]),_c('h2',[_vm._v(\"Input\")]),_c('p',[_vm._v(\"Paste your private leaderboard API JSON into this text area to see some stats.\")]),_c('b-form',{on:{\"submit\":function($event){$event.preventDefault();}}},[_c('b-form-group',{attrs:{\"label\":\"JSON API input\",\"label-for\":\"json\",\"description\":\"The JSON API output of a leaderboard.\"}},[_c('b-form-textarea',{attrs:{\"rows\":\"5\",\"id\":\"json\"},model:{value:(_vm.input),callback:function ($$v) {_vm.input=$$v},expression:\"input\"}})],1)],1),(_vm.userTraces)?[_c('h2',[_vm._v(\"Points over time\")]),_c('div',{staticClass:\"my-3\",attrs:{\"id\":\"timeline-chart\"}})]:_vm._e(),(_vm.userTraces)?[_c('h2',[_vm._v(\"Points per day\")]),_c('div',{staticClass:\"my-3\",attrs:{\"id\":\"per-day-chart\"}})]:_vm._e(),(_vm.userRankingPerDay)?[_c('h2',[_vm._v(\"Ranking over time\")]),_c('div',{staticClass:\"my-3\",attrs:{\"id\":\"ranking-chart\"}})]:_vm._e(),(_vm.json)?[_c('h2',[_vm._v(\"Stats overview\")]),_c('p',[_vm._v(\"Hover over the stars to see the timestamps for part 1 and part 2 as well as the user's ranking for the day.\")]),_c('b-table',{attrs:{\"table-class\":\"star-table mt-3\",\"items\":_vm.json,\"fields\":_vm.fields,\"stacked\":\"sm\",\"sort-by\":\"local_score\",\"sort-desc\":true},scopedSlots:_vm._u([{key:\"cell(days)\",fn:function(data){return [_vm._l((_vm.tasks),function(day){return [(data.item.completion_day_level[day] && data.item.completion_day_level[day][2])?_c('span',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.body.html\",value:(_vm.getTooltip(day, data.item.completion_day_level[day])),expression:\"getTooltip(day, data.item.completion_day_level[day])\",modifiers:{\"body\":true,\"html\":true}}],key:((data.id) + \"-\" + day),staticClass:\"star star-gold\"},[_vm._v(\"★\")]):(data.item.completion_day_level[day] && data.item.completion_day_level[day][1])?_c('span',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.body.html\",value:(_vm.getTooltip(day, data.item.completion_day_level[day])),expression:\"getTooltip(day, data.item.completion_day_level[day])\",modifiers:{\"body\":true,\"html\":true}}],key:((data.id) + \"-\" + day),staticClass:\"star star-silver\"},[_vm._v(\"★\")]):_c('span',{key:((data.id) + \"-\" + day),staticClass:\"star star-none\"},[_vm._v(\"☆\")])]})]}}],null,false,2878569974)})]:_vm._e()],2)}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(20629);\n;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/views/JsonStats.vue?vue&type=script&lang=js\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const JsonStatsvue_type_script_lang_js = ({\n  data: function () {\n    return {\n      input: null,\n      tasks: Array.from(Array(25).keys()).map(i => i + 1),\n      fields: [{\n        key: 'name',\n        label: 'Name',\n        sortable: true\n      }, {\n        key: 'local_score',\n        label: 'Score',\n        sortable: true\n      }, {\n        key: 'stars',\n        label: 'Stars',\n        sortable: true\n      }, {\n        key: 'days',\n        label: 'Days',\n        class: 'stars'\n      }]\n    };\n  },\n  computed: {\n    ...(0,vuex_esm/* mapGetters */.Se)(['storeDarkMode']),\n    json: function () {\n      if (this.input) {\n        try {\n          const parsed = JSON.parse(this.input);\n          return Object.keys(parsed.members).map(m => parsed.members[m]).sort((a, b) => a.local_score - b.local_score);\n        } catch (err) {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    userRankingPerDay: function () {\n      if (this.json) {\n        const pointsPerDay = this.tasks.map(d => {\n          const dayPoints = this.json.map((u, i) => this.userTraces[i] && this.userTraces[i][d - 1] ? this.userTraces[i][d - 1].cumulative || 0 : 0);\n          dayPoints.sort((a, b) => a - b);\n          return dayPoints;\n        });\n        return this.json.map((u, i) => {\n          return this.tasks.map(d => {\n            const points = this.userTraces[i] && this.userTraces[i][d - 1] ? this.userTraces[i][d - 1].cumulative : null;\n            if (points !== undefined && points !== null) {\n              return pointsPerDay[d - 1].lastIndexOf(points);\n            } else {\n              return null;\n            }\n          });\n        });\n      } else {\n        return null;\n      }\n    },\n    userTraces: function () {\n      if (this.json) {\n        return this.json.map(user => {\n          let cumulative = 0;\n          const values = [];\n          for (let day = 0; day < this.tasks.length; day++) {\n            if (user.completion_day_level[day + 1]) {\n              const partOneTimestamp = user.completion_day_level[day + 1][1] ? +user.completion_day_level[day + 1][1].get_star_ts : null;\n              const partTwoTimestamp = user.completion_day_level[day + 1][2] ? +user.completion_day_level[day + 1][2].get_star_ts : null;\n              let points = 0;\n              if (partOneTimestamp) {\n                const partOneIndex = this.sortedUsersPerDay[day].partOne.indexOf(partOneTimestamp);\n                points += this.json.length - partOneIndex;\n              }\n              if (partTwoTimestamp) {\n                const partTwoIndex = this.sortedUsersPerDay[day].partTwo.indexOf(partTwoTimestamp);\n                points += this.json.length - partTwoIndex;\n              }\n              cumulative += points;\n              if (partOneTimestamp || partTwoTimestamp) {\n                values.push({\n                  cumulative: cumulative,\n                  individual: points\n                });\n              }\n            } else {\n              values.push(null);\n            }\n          }\n          return values;\n        });\n      } else {\n        return null;\n      }\n    },\n    sortedUsersPerDay: function () {\n      if (this.json) {\n        return this.tasks.map(d => {\n          const dailyTimesOne = this.json.map(p => {\n            if (p.completion_day_level[d] && p.completion_day_level[d][1]) {\n              return +p.completion_day_level[d][1].get_star_ts;\n            } else {\n              return null;\n            }\n          });\n          const dailyTimesTwo = this.json.map(p => {\n            if (p.completion_day_level[d] && p.completion_day_level[d][2]) {\n              return +p.completion_day_level[d][2].get_star_ts;\n            } else {\n              return null;\n            }\n          });\n          dailyTimesOne.sort();\n          dailyTimesTwo.sort();\n          return {\n            partOne: dailyTimesOne,\n            partTwo: dailyTimesTwo\n          };\n        });\n      } else {\n        return null;\n      }\n    }\n  },\n  watch: {\n    storeDarkMode: function () {\n      this.$nextTick(() => {\n        this.updatePointChart();\n        this.updatePointPerDayChart();\n        this.updateRankingChart();\n      });\n    },\n    userTraces: function () {\n      this.$nextTick(() => {\n        this.updatePointChart();\n        this.updatePointPerDayChart();\n      });\n    },\n    userRankingPerDay: function () {\n      this.$nextTick(() => this.updateRankingChart());\n    }\n  },\n  methods: {\n    updateRankingChart: function () {\n      this.$plotly.purge('ranking-chart');\n      const traces = this.userRankingPerDay.map((ut, ui) => {\n        return {\n          x: ut.map((v, i) => i + 1),\n          y: ut,\n          name: this.json[ui].name,\n          mode: 'lines+markers',\n          marker: {\n            size: 10\n          },\n          line: {\n            width: 3\n          }\n        };\n      });\n      this.$plotly.newPlot('ranking-chart', traces, {\n        hovermode: 'x',\n        height: Math.max(250, this.userTraces.length * 30 + 50),\n        margin: {\n          t: 10,\n          b: 20,\n          l: 50,\n          r: 0\n        },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          tickfont: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          title: {\n            text: 'Ranking',\n            font: {\n              color: this.storeDarkMode ? 'white' : 'black'\n            }\n          },\n          tickfont: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee',\n          tickmode: 'array',\n          tickvals: Array.from(Array(this.json.length).keys()),\n          ticktext: Array.from(Array(this.json.length).keys()).map(i => this.json.length - i)\n        },\n        legend: {\n          bgcolor: 'rgba(0,0,0,0)',\n          orientation: 'h',\n          traceorder: 'reversed',\n          font: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          }\n        }\n      }, {\n        responsive: true,\n        displaylogo: false\n      });\n    },\n    updatePointChart: function () {\n      this.$plotly.purge('timeline-chart');\n      const traces = this.userTraces.map((ut, ui) => {\n        return {\n          x: ut.map((v, i) => i + 1),\n          y: ut.map(i => i ? i.cumulative : null),\n          name: this.json[ui].name,\n          mode: 'lines+markers'\n        };\n      });\n      this.$plotly.newPlot('timeline-chart', traces, {\n        hovermode: 'x',\n        height: Math.max(250, this.userTraces.length * 15 + 50),\n        margin: {\n          t: 10,\n          b: 20,\n          l: 50,\n          r: 0\n        },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          tickfont: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          title: {\n            text: 'Points',\n            font: {\n              color: this.storeDarkMode ? 'white' : 'black'\n            }\n          },\n          tickfont: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        legend: {\n          bgcolor: 'rgba(0,0,0,0)',\n          orientation: 'h',\n          traceorder: 'reversed',\n          font: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          }\n        }\n      }, {\n        responsive: true,\n        displaylogo: false\n      });\n    },\n    updatePointPerDayChart: function () {\n      this.$plotly.purge('per-day-chart');\n      const traces = this.userTraces.map((ut, ui) => {\n        return {\n          x: ut.map((v, i) => i + 1),\n          y: ut.map(i => i ? i.individual : null),\n          name: this.json[ui].name,\n          mode: 'lines+markers'\n          // type: 'bar'\n        };\n      });\n\n      this.$plotly.newPlot('per-day-chart', traces, {\n        hovermode: 'x',\n        height: Math.max(250, this.userTraces.length * 10 + 50),\n        margin: {\n          t: 10,\n          b: 20,\n          l: 50,\n          r: 0\n        },\n        paper_bgcolor: 'transparent',\n        plot_bgcolor: 'transparent',\n        xaxis: {\n          tickfont: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        yaxis: {\n          title: {\n            text: 'Points',\n            font: {\n              color: this.storeDarkMode ? 'white' : 'black'\n            }\n          },\n          tickfont: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          },\n          gridcolor: this.storeDarkMode ? '#111111' : '#eeeeee'\n        },\n        legend: {\n          bgcolor: 'rgba(0,0,0,0)',\n          orientation: 'h',\n          traceorder: 'reversed',\n          font: {\n            color: this.storeDarkMode ? 'white' : 'black'\n          }\n        }\n        // barmode: 'relative'\n      }, {\n        responsive: true,\n        displaylogo: false\n      });\n    },\n    getTooltip: function (day, data) {\n      let result = `<p>Day ${day}</p>`;\n      if (data[1] && data[1].get_star_ts) {\n        result += `<p>Part 1: ${new Date(+data[1].get_star_ts * 1000).toLocaleString()} Position: ${this.sortedUsersPerDay[day - 1].partOne.indexOf(+data[1].get_star_ts) + 1}</p>`;\n      }\n      if (data[2] && data[2].get_star_ts) {\n        result += `<p>Part 2: ${new Date(+data[2].get_star_ts * 1000).toLocaleString()} Position: ${this.sortedUsersPerDay[day - 1].partTwo.indexOf(+data[2].get_star_ts) + 1}</p>`;\n      }\n      return result;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/JsonStats.vue?vue&type=script&lang=js\n /* harmony default export */ const views_JsonStatsvue_type_script_lang_js = (JsonStatsvue_type_script_lang_js); \n;// CONCATENATED MODULE: ./node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/views/JsonStats.vue?vue&type=style&index=0&id=f6eddc08&prod&lang=css\n// extracted by mini-css-extract-plugin\n\n;// CONCATENATED MODULE: ./src/views/JsonStats.vue?vue&type=style&index=0&id=f6eddc08&prod&lang=css\n\n// EXTERNAL MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1001);\n;// CONCATENATED MODULE: ./src/views/JsonStats.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  views_JsonStatsvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const JsonStats = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///40595\n")}}]);