{"version":3,"sources":["webpack:///./src/components/2021/Day23.vue?f867","webpack:///src/components/2021/Day23.vue","webpack:///./src/components/2021/Day23.vue?3363","webpack:///./src/components/2021/Day23.vue","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/core-js/internals/array-from.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.from.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/modules/es.array.includes.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","solutions","on","onInputChanged","staticRenderFns","components","Day","data","partOne","partTwo","moveCosts","A","B","C","D","rooms","1","10","100","1000","roomsTwo","hall","methods","includes","copy","y","x","amphipods","set","coords","isDone","type","solve","Object","keys","forEach","undefined","a","console","log","compare","queue","enqueue","costTotal","costApprox","getApproxCost","curMax","max","size","seenCosts","current","min","Math","Array","from","values","filter","every","amphipod","roomPositionY","k","key","newAmphipods","v","prevCost","stringified","possibleHallPositions","getFreeRoomPosition","has","amph","result","getHallPositions","push","cost","value","length","abs","target","manhattan","b","toString","sort","map","component","$","uncurryThis","notARegExp","requireObjectCoercible","correctIsRegExpLogic","stringIndexOf","indexOf","proto","forced","searchString","arguments","global","bind","call","toObject","callWithSafeIterationClosing","isArrayIteratorMethod","isConstructor","lengthOfArrayLike","createProperty","getIterator","getIteratorMethod","module","exports","arrayLike","O","IS_CONSTRUCTOR","argumentsLength","mapfn","mapping","step","iterator","next","iteratorMethod","index","done","isRegExp","TypeError","it","anObject","iteratorClose","fn","ENTRIES","error","IndexedObject","toIndexedObject","arrayMethodIsStrict","un$Join","join","ES3_STRINGS","STRICT_METHOD","separator","checkCorrectnessOfIteration","INCORRECT_ITERATION","iterable","stat","wellKnownSymbol","MATCH","METHOD_NAME","regexp","error1","error2","$includes","addToUnscopables","el"],"mappings":"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","file":"js/chunk-1bae98de.46aaf7c1.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Day',{attrs:{\"day\":23,\"year\":2021,\"solutions\":_vm.solutions},on:{\"input-changed\":_vm.onInputChanged}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Day :day=\"23\" :year=\"2021\" :solutions=\"solutions\" @input-changed=\"onInputChanged\">\n  </Day>\n</template>\n\n<script>\nimport Day from '@/components/Day'\n\nconst { PriorityQueue } = require('@datastructures-js/priority-queue')\n\nexport default {\n  components: {\n    Day\n  },\n  data: function () {\n    return {\n      solutions: {\n        partOne: null,\n        partTwo: null\n      },\n      moveCosts: {\n        A: 1,\n        B: 10,\n        C: 100,\n        D: 1000\n      },\n      rooms: {\n        1: [[3, 2], [3, 3]],\n        10: [[5, 2], [5, 3]],\n        100: [[7, 2], [7, 3]],\n        1000: [[9, 2], [9, 3]]\n      },\n      roomsTwo: {\n        1: [[3, 2], [3, 3], [3, 4], [3, 5]],\n        10: [[5, 2], [5, 3], [5, 4], [5, 5]],\n        100: [[7, 2], [7, 3], [7, 4], [7, 5]],\n        1000: [[9, 2], [9, 3], [9, 4], [9, 5]]\n      },\n      hall: [1, 2, 4, 6, 8, 10, 11]\n    }\n  },\n  methods: {\n    onInputChanged: function (input) {\n      const copy = input.concat()\n      const amphipods = new Map()\n      for (let y = 0; y < copy.length; y++) {\n        for (let x = 0; x < copy[y].length; x++) {\n          if (![' ', '#', '.'].includes(copy[y][x])) {\n            const coords = `${x},${y}`\n            amphipods.set(coords, {\n              isDone: false,\n              type: this.moveCosts[copy[y][x]]\n            })\n          }\n        }\n      }\n\n      this.solutions.partOne = this.solve(amphipods, this.rooms)\n\n      // copy.splice(3, 0, '  #D#C#B#A#', '  #D#B#A#C#')\n\n      // amphipods = new Map()\n      // for (let y = 0; y < copy.length; y++) {\n      //   for (let x = 0; x < copy[y].length; x++) {\n      //     if (![' ', '#', '.'].includes(copy[y][x])) {\n      //       const coords = `${x},${y}`\n      //       amphipods.set(coords, {\n      //         isDone: false,\n      //         type: this.moveCosts[copy[y][x]]\n      //       })\n      //     }\n      //   }\n      // }\n\n      // this.solutions.partTwo = this.solve(amphipods, this.roomsTwo)\n    },\n    solve: function (amphipods, rooms) {\n      Object.keys(rooms).forEach(type => {\n        const r = rooms[type]\n        for (let i = r.length - 1; i >= 0; i--) {\n          const a = amphipods.get(`${r[i][0]},${r[i][1]}`)\n\n          if (a === undefined || a.type !== (+type)) {\n            return\n          } else {\n            a.isDone = true\n          }\n        }\n      })\n\n      console.log(amphipods)\n\n      // Use a priority queue to keep track of the configurations with lowest cost\n      const queue = new PriorityQueue({\n        compare: (a, b) => a.costTotal - b.costTotal\n      })\n\n      queue.enqueue({\n        amphipods: amphipods,\n        costTotal: 0,\n        costApprox: this.getApproxCost(amphipods, rooms)\n      })\n\n      const seenCosts = new Map()\n\n      let min = Number.POSITIVE_INFINITY\n      let max = 0\n      while (queue.size() > 0) {\n        const current = queue.dequeue()\n\n        const curMax = Array.from(current.amphipods.values()).filter(a => a.isDone).length\n\n        if (curMax > max) {\n          console.log(queue.size(), seenCosts.size, curMax)\n          max = curMax\n        }\n\n        if (current.costTotal > min) {\n          break\n        }\n\n        max = Math.max(max, Array.from(current.amphipods.values()).filter(a => a.isDone).length)\n\n        if (Array.from(current.amphipods.values()).every(a => a.isDone)) {\n          min = Math.min(min, current.costTotal)\n        } else {\n          current.amphipods.forEach((amphipod, key) => {\n            if (!amphipod.isDone) {\n              const coords = key.split(',').map(c => +c)\n\n              if (coords[1] === 1) {\n                // We're in the hall\n                const roomPositionY = this.getFreeRoomPosition(coords, amphipod.type, current.amphipods, rooms)\n\n                if (roomPositionY !== null) {\n                  const newAmphipods = new Map()\n                  current.amphipods.forEach((v, k) => {\n                    if (k === key) {\n                      // This is our current one\n                      newAmphipods.set(`${rooms[amphipod.type][0][0]},${roomPositionY}`, {\n                        isDone: true,\n                        type: v.type\n                      })\n                    } else {\n                      newAmphipods.set(k, {\n                        isDone: v.isDone,\n                        type: v.type\n                      })\n                    }\n                  })\n\n                  const stringified = this.toString(newAmphipods)\n                  const prevCost = seenCosts.get(stringified)\n                  const costTotal = current.costTotal + this.manhattan(coords, [rooms[amphipod.type][0][0], roomPositionY]) * amphipod.type\n\n                  if (prevCost === undefined || prevCost > costTotal) {\n                    seenCosts.set(stringified, current.costTotal)\n\n                    queue.enqueue({\n                      amphipods: newAmphipods,\n                      costTotal: costTotal,\n                      costApprox: this.getApproxCost(newAmphipods, rooms)\n                    })\n                  }\n                }\n              } else {\n                // We're in a room and we're not done\n                const possibleHallPositions = this.getHallPositions(coords, current.amphipods)\n\n                possibleHallPositions.forEach(hx => {\n                  const newAmphipods = new Map()\n                  current.amphipods.forEach((v, k) => {\n                    if (k === key) {\n                      // This is our current one\n                      newAmphipods.set(`${hx},1`, {\n                        isDone: false,\n                        type: v.type\n                      })\n                    } else {\n                      newAmphipods.set(k, {\n                        isDone: v.isDone,\n                        type: v.type\n                      })\n                    }\n                  })\n\n                  const stringified = this.toString(newAmphipods)\n                  const prevCost = seenCosts.get(stringified)\n                  const costTotal = current.costTotal + this.manhattan(coords, [hx, 1]) * amphipod.type\n\n                  if (prevCost === undefined || prevCost > costTotal) {\n                    seenCosts.set(stringified, current.costTotal)\n\n                    queue.enqueue({\n                      amphipods: newAmphipods,\n                      costTotal: costTotal,\n                      costApprox: this.getApproxCost(newAmphipods, rooms)\n                    })\n                  }\n                })\n              }\n            }\n          })\n        }\n      }\n\n      return min\n    },\n    getFreeRoomPosition: function (current, type, amphipods, rooms) {\n      const room = rooms[type]\n\n      // Check the hall leading to the room\n      for (let x = Math.min(room[0][0], current[0]) + 1; x < Math.max(room[0][0], current[0]); x++) {\n        if (amphipods.has(`${x},${1}`)) {\n          return null\n        }\n      }\n\n      // const roomAmph = []\n\n      // for (let y = 2; y < room.length + 2; y++) {\n      //   const amph = amphipods.get(`${room[0][0]},${y}`)\n\n      //   roomAmph.push(amph ? amph.type : null)\n      // }\n\n      // // Room completely empty, move to bottom\n      // if (roomAmph.every(r => r === null)) {\n      //   return 1 + room.length\n      // }\n\n      // // Amphipod of wrong type in the room\n      // if (roomAmph.some(r => r !== null && r !== type)) {\n      //   return null\n      // }\n\n      // let result = null\n      // for (let y = room.length + 1; y >= 2; y--) {\n      //   const amph = amphipods.get(`${room[0][0]},${y}`)\n\n      //   if (amph === undefined) {\n      //     if (result === null) {\n      //       // Found a free spot\n      //       result = y\n      //     }\n      //   } else {\n      //     // If we found an empty one and then there's one that isn't empty, then don't move into the room, cause it's not properly filled from the bottom\n      //     if (result !== null) {\n      //       return null\n      //     }\n      //   }\n      // }\n\n      // return result\n\n      let result = null\n      for (let y = 2; y < room.length + 2; y++) {\n        const amph = amphipods.get(`${room[0][0]},${y}`)\n\n        if (amph === undefined) {\n          // Found a free spot\n          result = y\n        } else {\n          if (amph.type !== type) {\n            // There's an amphipod of the wrong type => we cannot go in\n            return null\n          } else {\n            // We found another amphipod of the right type => stop looking further down\n            break\n          }\n        }\n      }\n\n      return result\n    },\n    getHallPositions: function (current, amphipods) {\n      // Check the way out of the room\n      for (let y = current[1] - 1; y > 1; y--) {\n        if (amphipods.has(`${current[0]},${y}`)) {\n          // Someone is in the way, we can't reach the hall\n          return []\n        }\n      }\n\n      const possibleHallPositions = []\n      for (let x = current[0] - 1; x >= this.hall[0]; x--) {\n        if (this.hall.includes(x) && !amphipods.has(`${x},1`)) {\n          possibleHallPositions.push(x)\n        }\n      }\n      for (let x = current[0] + 1; x <= this.hall[this.hall.length - 1]; x++) {\n        if (this.hall.includes(x) && !amphipods.has(`${x},1`)) {\n          possibleHallPositions.push(x)\n        }\n      }\n\n      return possibleHallPositions\n    },\n    getApproxCost: function (amphipods, rooms) {\n      let cost = 0\n      amphipods.forEach((value, key) => {\n        const coords = key.split(',').map(c => +c)\n        const target = rooms[value.type][rooms[value.type].length - 1]\n        if (coords[1] === 1) {\n          cost += this.manhattan(coords, target) * value.type\n        } else {\n          cost += (rooms[value.type].length + Math.abs(coords[1] - 1) + Math.abs(coords[0] - target[0])) * value.type\n        }\n      })\n      return cost\n    },\n    manhattan: function (a, b) {\n      return Math.abs(a[0] - b[0]) + Math.abs(a[1] - b[1])\n    },\n    toString: function (amphipods) {\n      return Array.from(amphipods.keys()).sort().map(k => `${k},${amphipods.get(k).type}`).join('|')\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day23.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Day23.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Day23.vue?vue&type=template&id=8b2e0644&scoped=true&\"\nimport script from \"./Day23.vue?vue&type=script&lang=js&\"\nexport * from \"./Day23.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8b2e0644\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","'use strict';\nvar global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar isConstructor = require('../internals/is-constructor');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar Array = global.Array;\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var IS_CONSTRUCTOR = isConstructor(this);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod && !(this == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = getIterator(O, iteratorMethod);\n    next = iterator.next;\n    result = IS_CONSTRUCTOR ? new this() : [];\n    for (;!(step = call(next, iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = lengthOfArrayLike(O);\n    result = IS_CONSTRUCTOR ? new this(length) : Array(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var global = require('../internals/global');\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator, 'throw', error);\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar un$Join = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  // eslint-disable-next-line es/no-array-from -- required for testing\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"],"sourceRoot":""}